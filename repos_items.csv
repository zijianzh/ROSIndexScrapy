name,url,system list,package list,readme
agvs_common,http://rosindex.github.io/r/agvs_common/,indigo,"agvs_common,agvs_description,agvs_pad","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""agvs_common"">agvs_common</h1>\n\n<p>Agvs robot common packages. These packages are share by the simulated and real robot.</p>\n\n<h2 id=""agvs_description"">agvs_description</h2>\n\n<p>This package contains the robot model (urdf, meshes, ...).</p>\n\n<h2 id=""agvs_pad"">agvs_pad</h2>\n\n<p>This package is intended to control the robot by a pad or joystick.</p>\n</div>\n\n            \n          </div>'"
jsk_control,http://rosindex.github.io/r/jsk_control/,"hydro,groovy,indigo","contact_states_observer,eus_nlopt,eus_qp,eus_qpoases,joy_mouse,jsk_calibration,jsk_control,jsk_footstep_controller,jsk_footstep_planner,jsk_ik_server,jsk_teleop_joy","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_control"">jsk_control <a href=""https://travis-ci.org/jsk-ros-pkg/jsk_control""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_control.png?branch=master"" alt=""Build Status""></a>\n</h1>\n\n<p>jsk control ros packages</p>\n</div>\n\n            \n          </div>'"
iai_common_msgs,http://rosindex.github.io/r/iai_common_msgs/,"hydro,jade,groovy,indigo","attache_msgs,data_vis_msgs,designator_integration_msgs,grasp_stability_msgs,iai_common_msgs,iai_content_msgs,iai_control_msgs,iai_kinematics_msgs,iai_robosherlock_msgs,iai_urdf_msgs,iai_wsg_50_msgs,json_prolog_msgs,person_msgs,planning_msgs,saphari_msgs,scanning_table_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""iai_common_msgs"">iai_common_msgs</h1>\n\n<p>Holds various ROS message definitions used by the IAI group, Universit\xc3\xa4t Bremen.</p>\n</div>\n\n            \n          </div>'"
jsk_robot,http://rosindex.github.io/r/jsk_robot/,"hydro,electric,diamondback,indigo","baxtereus,jsk_baxter_desktop,jsk_baxter_startup,jsk_baxter_web,fetcheus,jsk_fetch_startup,jsk_201504_miraikan,jsk_nao_startup,jsk_pepper_startup,nao_jsk_teleop,naoeus,naoqieus,peppereus,jsk_pr2_accessories,jsk_pr2_calibration,jsk_pr2_desktop,jsk_pr2_startup,pr2_base_trajectory_action,jsk_robot,jsk_robot_startup,jsk_robot_utils,roseus_remote","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_robot"">jsk_robot <a href=""https://travis-ci.org/jsk-ros-pkg/jsk_robot""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_robot.png?branch=master"" alt=""Build Status""></a>\n</h1>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
agvs_sim,http://rosindex.github.io/r/agvs_sim/,indigo,"agvs_control,agvs_gazebo,agvs_robot_control,agvs_sim,agvs_sim_bringup","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""agvs_sim"">agvs_sim</h1>\n\n<p>Agvs robot sim packages</p>\n\n<h2 id=""agvs_control"">agvs_control</h2>\n\n<p>This package contains the configuration files for the Gazebo controllers used by the model.</p>\n\n<h2 id=""agvs_gazebo"">agvs_gazebo</h2>\n\n<p>This package contains the configuration files to launch the Gazebo environment along with the simulated robot.</p>\n\n<h2 id=""agvs_robot_control"">agvs_robot_control</h2>\n\n<p>This package contains the simulated controlled that interfaces with Gazebo controllers.</p>\n\n<h2 id=""agvs_sim_bringup"">agvs_sim_bringup</h2>\n\n<p>This package contains all the launch and config files to launch all the needed packages to load the simulated environment.</p>\n</div>\n\n            \n          </div>'"
motoman,http://rosindex.github.io/r/motoman/,"hydro,jade,groovy,indigo","motoman,motoman_driver,motoman_mh5_support,motoman_msgs,motoman_sda10f_moveit_config,motoman_sda10f_support,motoman_sia10d_support,motoman_sia10f_support,motoman_sia20d_moveit_config,motoman_sia20d_support,motoman_sia5d_support,motoman_config,mh5_mesh_arm_navigation,sia10d_mesh_arm_navigation,sia20d_mesh_arm_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""motoman"">Motoman</h1>\n\n<p><a href=""http://www.ros.org/wiki/Industrial"">ROS-Industrial</a> motoman meta-package.  See the <a href=""http://ros.org/wiki/motoman"">ROS wiki</a> page for more information.  </p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repo holds source code for all versions &gt; groovy. For those versions &lt;= groovy see: <a href=""https://code.google.com/p/swri-ros-pkg/source/browse"">SVN repo</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""motoman"">Motoman</h1>\n\n<p><a href=""http://build.ros.org/job/Idev__motoman__ubuntu_trusty_amd64""><img src=""http://build.ros.org/job/Idev__motoman__ubuntu_trusty_amd64/badge/icon"" alt=""Build Status""></a></p>\n\n<p><a href=""http://wiki.ros.org/Industrial"">ROS-Industrial</a> Motoman metapackage. See the <a href=""http://wiki.ros.org/motoman"">ROS wiki</a> page for more information.</p>\n\n<p>The <a href=""https://github.com/ros-industrial/motoman_experimental"">motoman_experimental</a> repository contains additional packages.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>Branch naming follows the ROS distribution they are compatible with. <code>-devel</code>\nbranches may be unstable. Releases are made from the distribution branches\n(<code>hydro</code>, <code>indigo</code>).</p>\n\n<p>Older releases may be found in the old ROS-Industrial <a href=""https://github.com/ros-industrial/swri-ros-pkg"">subversion repository</a>\narchive.</p>\n</div>\n\n            \n          </div>'"
industrial_metapackages,http://rosindex.github.io/r/industrial_metapackages/,"hydro,indigo",industrial_desktop,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""metapackages"">metapackages</h1>\n\n<p>Top level ROS-Industrial meta-packages. <a href=""http://wiki.ros.org/Industrial"">http://wiki.ros.org/Industrial</a></p>\n</div>\n\n            \n          </div>'"
kuka_experimental,http://rosindex.github.io/r/kuka_experimental/,"hydro,indigo","kuka_experimental,kuka_kr120_support,kuka_kr16_support,kuka_kr210_support,kuka_kr6_support,kuka_lbr_iiwa_support,kuka_resources,kuka_rsi_hw_interface,kuka_rsi_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kuka-experimental"">Kuka experimental</h1>\n\n<p><a href=""http://build.ros.org/job/Idev__kuka_experimental__ubuntu_trusty_amd64""><img src=""http://build.ros.org/job/Idev__kuka_experimental__ubuntu_trusty_amd64/badge/icon"" alt=""Build Status""></a></p>\n\n<p>Experimental packages for Kuka manipulators within <a href=""http://wiki.ros.org/Industrial"">ROS-Industrial</a>.\nSee the <a href=""http://wiki.ros.org/kuka_experimental"">ROS wiki</a> page for more information.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repository contains packages that will be migrated to the kuka (to be created)\nrepository after they have received sufficient testing. The contents of \nthese packages are subject to change, without prior notice. Any available \nAPIs are to be considered unstable and are not guaranteed to be complete \nand / or functional.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kuka-experimental"">Kuka experimental</h1>\n\n<p>Experimental packages for Kuka manipulators within <a href=""http://wiki.ros.org/Industrial"">ROS-Industrial</a>.\nSee the <a href=""http://wiki.ros.org/kuka_experimental"">ROS wiki</a> page for more information.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repository contains packages that will be migrated to the kuka (to be created)\nrepository after they have received sufficient testing. The contents of \nthese packages are subject to change, without prior notice. Any available \nAPIs are to be considered unstable and are not guaranteed to be complete \nand / or functional.</p>\n</div>\n\n            \n          </div>'"
vrpn,http://rosindex.github.io/r/vrpn/,"jade,indigo",,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">The initial release of VRPN (The Virtual Reality Peripheral Network) was placed into the public domain on 5/4/1998 by the copyright holder Russell M. Taylor II at the University of North Carolina at Chapel Hill.\n\nTo protect all VRPN contributors from liability without restricting the use of VRPN, as of July 22, 2010, future versions of VRPN (versions 7.27 and higher) are being released under the Boost Software License 1.0, which is as follows:\n\nBoost Software License 1.0 (BSL1.0)\n\nPermission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and accompanying documentation covered by this license (the ""Software"") to use, reproduce, display, distribute, execute, and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the Software is furnished to do so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including the above license grant, this restriction and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all derivative works of the Software, unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor.\n\nTHE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nAdditional requests follow:\n\n1. Please acknowledge this library in any publication, written, videotaped,\n    or otherwise produced, that results from making programs using it.\n    The acknowledgement will credit\n\n    CISMM Project\n    University of North Carolina at Chapel Hill,\n    Supported by the NIH/NCRR and the NIH/NIBIB.\n\n2. Please furnish us a copy of any publication, including videotape,\n    that you produce and disseminate outside your group using our\n    program.  These should be addressed to Professor R.M. Taylor\n    at taylorr@cs.unc.edu.\n\n3. Please send us derived classes and drivers for new devices that you\n    create for the library.  We will attempt to include them in\n    future releases of the library for you and others to use.  This\n    is the fastest way to get a working system for everyone.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
robotican,http://rosindex.github.io/r/robotican/,indigo,"ric_board,robotican,robotican_armadillo,robotican_common,robotican_controllers,robotican_demos,robotican_gui,robotican_h_manipulator,robotican_hardware_interface,robotican_komodo,robotican_lizi","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
razor_imu_9dof,http://rosindex.github.io/r/razor_imu_9dof/,"hydro,indigo",razor_imu_9dof,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""official-ros-documentation"">Official ROS Documentation</h2>\n\n<p>A much more extensive and standard ROS-style version of this documentation can be found on the ROS wiki at:</p>\n\n<p><a href=""http://wiki.ros.org/razor_imu_9dof"">http://wiki.ros.org/razor_imu_9dof</a></p>\n\n<h2 id=""install-and-configure-ros-package"">Install and Configure ROS Package</h2>\n\n<p>1) Install dependencies:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install python-visual\n</code></pre></div>\n<p>2) Download code:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_workspace/src\n$ git clone https://github.com/KristofRobot/razor_imu_9dof.git\n$ cd ..\n$ catkin_make\n</code></pre></div>\n<h2 id=""install-arduino-firmware"">Install Arduino firmware</h2>\n\n<p>1) Open <code>src/Razor_AHRS/Razor_AHRS.ino</code> in Arduino IDE. Note: this is a modified version\nof Peter Bartz\' original Arduino code (see <a href=""https://github.com/ptrbrtz/razor-9dof-ahrs"">https://github.com/ptrbrtz/razor-9dof-ahrs</a>). \nUse this version - it emits linear acceleration and angular velocity data required by the ROS Imu message</p>\n\n<p>2) Select your hardware here by uncommenting the right line in <code>src/Razor_AHRS/Razor_AHRS.ino</code>, e.g.</p>\n\n<pre>\n// HARDWARE OPTIONS\n/*****************************************************************/\n// Select your hardware here by uncommenting one line!\n//#define HW__VERSION_CODE 10125 // SparkFun ""9DOF Razor IMU"" version ""SEN-10125"" (HMC5843 magnetometer)\n//#define HW__VERSION_CODE 10736 // SparkFun ""9DOF Razor IMU"" version ""SEN-10736"" (HMC5883L magnetometer)\n//#define HW__VERSION_CODE 10183 // SparkFun ""9DOF Sensor Stick"" version ""SEN-10183"" (HMC5843 magnetometer)\n//#define HW__VERSION_CODE 10321 // SparkFun ""9DOF Sensor Stick"" version ""SEN-10321"" (HMC5843 magnetometer)\n#define HW__VERSION_CODE 10724 // SparkFun ""9DOF Sensor Stick"" version ""SEN-10724"" (HMC5883L magnetometer)\n</pre>\n\n<p>3) Upload Arduino sketch to the Sparkfun 9DOF Razor IMU board</p>\n\n<h2 id=""configure"">Configure</h2>\n\n<p>In its default configuration, <code>razor_imu_9dof</code> expects a yaml config file <code>my_razor.yaml</code> with:\n* USB port to use\n* Calibration parameters</p>\n\n<p>An example<code>razor.yaml</code> file is provided.\nCopy that file to <code>my_razor.yaml</code> as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roscd razor_imu_9dof/config\n$ cp razor.yaml my_razor.yaml\n</code></pre></div>\n<p>Then, edit <code>my_razor.yaml</code> as needed</p>\n\n<h2 id=""launch"">Launch</h2>\n\n<p>Publisher and 3D visualization:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch razor_imu_9dof razor-pub-and-display.launch\n</code></pre></div>\n<p>Publisher only:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch razor_imu_9dof razor-pub.launch\n</code></pre></div>\n<p>Publisher only with diagnostics:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch razor_imu_9dof razor-pub-diags.launch\n</code></pre></div>\n<p>3D visualization only:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch razor_imu_9dof razor-display.launch\n</code></pre></div>\n<h2 id=""calibrate"">Calibrate</h2>\n\n<p>For best accuracy, follow the tutorial to calibrate the sensors:</p>\n\n<p><a href=""http://wiki.ros.org/razor_imu_9dof"">http://wiki.ros.org/razor_imu_9dof</a></p>\n\n<p>A copy of Peter Bartz\'s magnetometer calibration scripts from <a href=""https://github.com/ptrbrtz/razor-9dof-ahrs"">https://github.com/ptrbrtz/razor-9dof-ahrs</a> is provided in the <code>magnetometer_calibration</code> directory.</p>\n\n<p>Update <code>my_razor.yaml</code> with the new calibration parameters.</p>\n\n<h2 id=""dynamic-reconfigure"">Dynamic Reconfigure</h2>\n\n<p>After having launched the publisher with one of the launch commands listed above, \nit is possible to dynamically reconfigure the yaw calibration.</p>\n\n<p>1) Run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun rqt_reconfigure rqt_reconfigure \n</code></pre></div>\n<p>2) Select <code>imu_node</code>. </p>\n\n<p>3) Change the slider to move the calibration +/- 10 degrees. \nIf you are running the 3D visualization you\'ll see the display jump when the new calibration takes effect.</p>\n\n<p>The intent of this feature is to let you tune the alignment of the AHRS to the direction of the robot driving direction, so that if you can determine that, for example, the AHRS reads 30 degrees when the robot is actually going at 35 degrees as shown by e.g. GPS, you can tune the calibration to make it read 35. It\'s the compass-equivalent of bore-sighting a camera.</p>\n</div>\n\n            \n          </div>'"
dji_onboardsdk_ros,http://rosindex.github.io/r/dji_onboardsdk_ros/,indigo,"dji_sdk,dji_sdk_demo,dji_sdk_dji2mav,dji_sdk_lib,dji_sdk_web_groundstation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""dji-onboard-sdk-ros-packages"">DJI Onboard SDK ROS Packages</h1>\n\n<h4 id=""please-refer-to-https-developer-dji-com-onboard-sdk-documentation-github-platform-docs-ros-readme-html-in-dji-developer-website"">Please refer to <a href=""https://developer.dji.com/onboard-sdk/documentation/github-platform-docs/ROS/README.html"">https://developer.dji.com/onboard-sdk/documentation/github-platform-docs/ROS/README.html</a> in DJI Developer Website.</h4>\n</div>\n\n            \n          </div>'"
bwi,http://rosindex.github.io/r/bwi/,"hydro,groovy,indigo","bwi_desktop,bwi_desktop_full,bwi_launch","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bwi"">bwi</h1>\n\n<p>This repository contains top-level ROS packages for the Building Wide\nIntelligence (BWI) project of the University of Texas at Austin\nComputer Science Department.</p>\n\n<h2 id=""bwi-repository-hierarchy"">BWI Repository Hierarchy</h2>\n\n<p>Packages contained in various released BWI repostories may depend on\nother packages at the same or lower levels.  Dependencies on packages\nfrom higher-level repositories are not permitted.</p>\n\n<p>From top to bottom, the released repositories are:</p>\n\n<ul>\n<li><a href=""http://wiki.ros.org/bwi"">bwi</a></li>\n<li><a href=""http://wiki.ros.org/segbot_simulator"">segbot_simulator</a></li>\n<li><a href=""http://wiki.ros.org/segbot_apps"">segbot_apps</a></li>\n<li><a href=""http://wiki.ros.org/segbot"">segbot</a></li>\n<li><a href=""http://wiki.ros.org/bwi_common"">bwi_common</a></li>\n</ul>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""from-source"">From Source</h3>\n\n<p>You can install all the BWI components normally built from source on\neither ROS Hydro or Indigo.</p>\n\n<p>First, <a href=""http://wiki.ros.org/hydro/Installation/Ubuntu"">install ROS Hydro</a>, \nor <a href=""http://wiki.ros.org/indigo/Installation/Ubuntu"">Indigo</a>.</p>\n\n<p>Then, make sure the ROS_DISTRO environment variable is set correctly:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">echo $ROS_DISTRO\n\n</code></pre></div>\n<p>It may already be.  If not, issue the appropriate one of these two\nshell commands:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ export ROS_DISTRO=hydro\n\n</code></pre></div>\n<p>or</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ export ROS_DISTRO=indigo\n\n</code></pre></div>\n<p>Next, clone the source repositories:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ source /opt/ros/$ROS_DISTRO/setup.bash\n$ mkdir -p ~/catkin_ws/src\n$ cd ~/catkin_ws\n$ wstool init src https://raw.githubusercontent.com/utexas-bwi/bwi/master/rosinstall/$ROS_DISTRO.rosinstall\n\n</code></pre></div>\n<p>Install all dependencies:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -y\n\n</code></pre></div>\n<p>Then, build everything:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ catkin_make\n$ source devel/setup.bash\n\n</code></pre></div>\n<h3 id=""from-binary-packages"">From Binary Packages</h3>\n\n<p>You may install the latest binary release, when available, from the\nROS package repository.  These may not always be the latest versions:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-$ROS_DISTRO-bwi-desktop-full\n\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bwi"">bwi</h1>\n\n<p>This repository contains top-level ROS packages for the Building Wide\nIntelligence (BWI) project of the University of Texas at Austin\nComputer Science Department.</p>\n\n<h2 id=""bwi-repository-hierarchy"">BWI Repository Hierarchy</h2>\n\n<p>Packages contained in various released BWI repostories may depend on\nother packages at the same or lower levels.  Dependencies on packages\nfrom higher-level repositories are not permitted.</p>\n\n<p>From top to bottom, the released repositories are:</p>\n\n<ul>\n<li><a href=""http://wiki.ros.org/bwi"">bwi</a></li>\n<li><a href=""http://wiki.ros.org/segbot"">segbot</a></li>\n<li><a href=""http://wiki.ros.org/bwi_common"">bwi_common</a></li>\n</ul>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""from-source"">From Source</h3>\n\n<p>You can install all the BWI components normally built from source on\neither ROS Hydro or Indigo.</p>\n\n<p>The Hydro version is now <em>deprecated</em>. It may work, but is no longer actively \nmaintained.</p>\n\n<p>First, <a href=""http://wiki.ros.org/hydro/Installation/Ubuntu"">install ROS Hydro</a>, \nor <a href=""http://wiki.ros.org/indigo/Installation/Ubuntu"">Indigo</a>.</p>\n\n<p>Then, make sure the ROS_DISTRO environment variable is set correctly:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">echo $ROS_DISTRO\n\n</code></pre></div>\n<p>It may already be.  If not, issue the appropriate one of these two\nshell commands:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ export ROS_DISTRO=hydro\n\n</code></pre></div>\n<p>or</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ export ROS_DISTRO=indigo\n\n</code></pre></div>\n<p>Next, clone the source repositories:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ source /opt/ros/$ROS_DISTRO/setup.bash\n$ mkdir -p ~/catkin_ws/src\n$ cd ~/catkin_ws\n$ wstool init src https://raw.githubusercontent.com/utexas-bwi/bwi/master/rosinstall/$ROS_DISTRO.rosinstall\n\n</code></pre></div>\n<p>Install all dependencies:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -y\n\n</code></pre></div>\n<p>Then, build everything:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ catkin_make\n$ source devel/setup.bash\n\n</code></pre></div>\n<h3 id=""for-version-3-robot"">For Version 3 Robot</h3>\n\n<p>To utilize the code base on the Version 3 Robot it is also required to add some enviroment variables to your bashrc file. \nThe steps for doing this and the specific environment variables are described on wiki.</p>\n\n<h3 id=""from-binary-packages"">From Binary Packages</h3>\n\n<p>You may install the latest binary release, when available, from the\nROS package repository.  These may not always be the latest versions:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-$ROS_DISTRO-bwi-desktop-full\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
velodyne,http://rosindex.github.io/r/velodyne/,"hydro,fuerte,electric,groovy,indigo","velodyne,velodyne_driver,velodyne_msgs,velodyne_pointcloud","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p><a href=""http://www.ros.org/wiki/velodyne"">Velodyne</a> is a collection of\n<a href=""http://www.ros.org"">ROS</a> packages supporting <a href=""http://www.velodynelidar.com/lidar/lidar.aspx"">Velodyne high definition\n3D LIDARs</a>.</p>\n\n<p><strong>Warning</strong>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">The master branch normally contains code being tested for the next\nROS release.  It will not always work with every previous release.\n</code></pre></div>\n<p>The current <code>master</code> branch works with ROS Kinetic, Jade, and Indigo. It\nmay work with Hydro and Groovy, but that has not been tested recently.\nTo build for Fuerte from source, check out the <code>rosbuild</code> branch instead\nof <code>master</code>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mavros,http://rosindex.github.io/r/mavros/,"hydro,jade,kinetic,indigo","libmavconn,mavros,mavros_extras,mavros_msgs,test_mavros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mavros"">MAVROS</h1>\n\n<p><a href=""https://gitter.im/mavlink/mavros?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge""><img src=""https://badges.gitter.im/Join%20Chat.svg"" alt=""Gitter""></a></p>\n\n<p>MAVLink extendable communication node for ROS.</p>\n\n<ul>\n<li>Since 2014-08-11 this repository contains several packages.</li>\n<li>Since 2014-11-02 hydro support splited from master to hydro-devel branch.</li>\n<li>Since 2015-03-04 all packages also dual licensed under terms of BSD license.</li>\n<li>Since 2015-08-10 all messages moved to mavros_msgs package</li>\n<li>Since 2016-02-05 (v0.17) frame conversion changed again</li>\n<li>Since 2016-06-22 (pre v0.18) Indigo and Jade separated from master to indigo-devel branch.</li>\n</ul>\n\n<h2 id=""mavros-package"">mavros package</h2>\n\n<p>It is the main package, please see it\'s <a href=""https://github.com/mavlink/mavros/blob/master/mavros/README.md"">README</a>.\nHere you may read <a href=""https://github.com/mavlink/mavros/blob/master/mavros/README.md#installation"">installation instructions</a>.</p>\n\n<h2 id=""mavros_extras-package"">mavros_extras package</h2>\n\n<p>This package contain some extra nodes and plugins for mavros, please see it\'s <a href=""https://github.com/mavlink/mavros/blob/master/mavros_extras/README.md"">README</a>.</p>\n\n<h2 id=""libmavconn-package"">libmavconn package</h2>\n\n<p>This package contain mavconn library, see it\'s <a href=""https://github.com/mavlink/mavros/blob/master/libmavconn/README.md"">README</a>.\nLibMAVConn may be used outside of ROS environment.</p>\n\n<h2 id=""test_mavros-package"">test_mavros package</h2>\n\n<p>This package contain hand-tests and <a href=""https://github.com/mavlink/mavros/blob/master/test_mavros/README.md"">manual page</a> for APM and PX4 SITL.\nPlease see <a href=""https://github.com/mavlink/mavros/blob/master/test_mavros/README.md"">README</a> first!</p>\n\n<h2 id=""mavros_msgs-package"">mavros_msgs package</h2>\n\n<p>This package contain messages and services used in mavros.</p>\n\n<h2 id=""support-forums-and-chats"">Support forums and chats</h2>\n\n<p>Please ask your questions not related to bugs/feauture requests on:</p>\n\n<ul>\n<li><a href=""https://groups.google.com/forum/#!forum/px4users"">px4users Google Group (Mailing List) </a></li>\n<li><a href=""https://gitter.im/mavlink/mavros"">Mavros on Gitter IM</a></li>\n<li><a href=""https://gitter.im/PX4/Firmware"">PX4/Firmware on Gitter IM</a></li>\n</ul>\n\n<p>We\'d like to keep the project bugtracker as free as possible, so please contact via the above methods. You can also PM us via Gitter.</p>\n\n<h2 id=""ci-statuses"">CI Statuses</h2>\n\n<ul>\n<li>ROS Indigo:  <a href=""http://build.ros.org/job/Idev__mavros__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__mavros__ubuntu_trusty_amd64"" alt=""Build Status""></a>\n</li>\n<li>ROS Jade:    <a href=""http://build.ros.org/job/Jdev__mavros__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Jdev__mavros__ubuntu_trusty_amd64"" alt=""Build Status""></a>\n</li>\n<li>ROS Kinetic: <a href=""http://build.ros.org/job/Kdev__mavros__ubuntu_xenial_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Kdev__mavros__ubuntu_xenial_amd64"" alt=""Build Status""></a>\n</li>\n<li>Travis master on Indigo &amp; Jade: <a href=""https://travis-ci.org/mavlink/mavros""><img src=""https://travis-ci.org/mavlink/mavros.svg?branch=master"" alt=""travis status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mavros"">MAVROS</h1>\n\n<p>MAVLink extendable communication node for ROS.</p>\n\n<p>Since 2014-08-11 this repository contains several packages.</p>\n\n<h2 id=""mavros-package"">mavros package</h2>\n\n<p>It is the main package, please see it\'s <a href=""https://github.com/mavlink/mavros/blob/master/mavros/README.md"">README</a>.</p>\n\n<h2 id=""mavros_extras-package"">mavros_extras package</h2>\n\n<p>This package contain some extra nodes and plugins for mavros, please see it\'s <a href=""https://github.com/mavlink/mavros/blob/master/mavros_extras/README.md"">README</a>.</p>\n\n<h2 id=""libmavconn-package"">libmavconn package</h2>\n\n<p>This package contain mavconn library, see it\'s <a href=""https://github.com/mavlink/mavros/blob/master/libmavconn/README.md"">README</a>.\nMAVConn may be used outside of ROS environment.</p>\n\n<h2 id=""ci-statuses"">CI Statuses</h2>\n\n<ul>\n<li>ROS Hydro: <a href=""http://jenkins.ros.org/job/devel-hydro-mavros/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-hydro-mavros"" alt=""Hydro build status""></a>\n</li>\n<li>ROS Indigo: <a href=""http://jenkins.ros.org/job/devel-indigo-mavros/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-mavros"" alt=""Indigo build status""></a>\n</li>\n<li>Travis Hydro (PX4): <a href=""https://travis-ci.org/mavlink/mavros""><img src=""https://travis-ci.org/mavlink/mavros.svg?branch=master"" alt=""Hydro px4 status""></a>\n</li>\n<li>Travis Hydro (Coverity Scan): <a href=""https://travis-ci.org/mavlink/mavros""><img src=""https://travis-ci.org/mavlink/mavros.svg?branch=coverity_scan"" alt=""Hydro scan status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
rosparam_shortcuts,http://rosindex.github.io/r/rosparam_shortcuts/,"jade,kinetic,indigo",rosparam_shortcuts,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-param-shortcuts"">ROS Param Shortcuts</h1>\n\n<p>Quickly load variables from rosparam with good command line error checking.</p>\n\n<p>This package enforces the philosophy that there should be no default parameters - everything must be defined by the user in yaml files (or launch files or where ever) otherwise your program should not run. This helps debug why something isn\'t working correctly - it will tell you exactly what rosparameters are missing.</p>\n\n<p>Features:\n - Outputs all loaded data into consule using ROS_DEBUG, so you won\'t see it unless you turn it on\n - Namespaces all output within the <code>parent_name</code>\n - Great for having each class have its own parameter namespace\n - Helpful error messages if parameter is missing, explaining where it expects to find it\n - Removes lots of repetitious code\n - Supports datatypes that rosparam does not by default, such as std::size_t, ros::Duration, Eigen::Affine3d\n - Supports loading std::vectors easily, and debugging that data\n - Supports loading an entire list of bool parameters</p>\n\n<p>Developed by <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/rosparam_shortcuts""><img src=""https://travis-ci.org/davetcoleman/rosparam_shortcuts.svg"" alt=""Build Status""></a> Travis - Continuous Integration</li>\n<li>\n<a href=""http://build.ros.org/view/Jsrc_uT/job/Jsrc_uT__rosparam_shortcuts__ubuntu_trusty__source/""><img src=""http://build.ros.org/buildStatus/icon?job=Jsrc_uT__rosparam_shortcuts__ubuntu_trusty__source"" alt=""Build Status""></a> ROS Buildfarm - Trusty Devel Source Build</li>\n<li>\n<a href=""http://build.ros.org/view/Jbin_uT64/job/Jbin_uT64__rosparam_shortcuts__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__rosparam_shortcuts__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a> ROS Buildfarm - AMD64 Trusty Debian Build</li>\n</ul>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-rosparam-shortcuts\n\n</code></pre></div>\n<h3 id=""build-from-source"">Build from Source</h3>\n\n<p>To build this package, <code>git clone</code> this repo into a <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and be sure to install necessary dependencies by running the following command in the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install -y --from-paths src --ignore-src --rosdistro indigo\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/rosparams_shortcuts/html/"">Class Reference</a></p>\n\n<h2 id=""usage-demo"">Usage / Demo</h2>\n\n<p>See the file <code>src/example.cpp</code> for example code. To run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch rosparam_shortcuts example.launch\n</code></pre></div>\n<p>Your yaml file would look something like the file <code>config/example.yaml</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">example:\n  control_rate: 100.0 # double\n  param1: 20 # int\n  param2: 30 # size_t\n  param3: 1 # ros::Duration\n  param4: [1, 1, 1, 3.14, 0, 0] # Eigen::Affine3d - x, y, z, roll, pitch, yaw\n  param5: [1.1, 2.2, 3.3, 4.4] # std::vector&lt;double&gt;\n\n</code></pre></div>\n<h3 id=""include-note"">Include Note</h3>\n\n<p>Possible dependency issues - I\'m not sure if this is always in issue or if there is an easy fix, but when\nincluding this package in another package you might need to add dependencies on Eigen throught that new package.\nThis requires:</p>\n\n<p>package.xml:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;build_depend&gt;eigen&lt;/build_depend&gt;\n&lt;run_depend&gt;eigen&lt;/run_depend&gt;\n\n</code></pre></div>\n<p>CMakeLists.txt:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">find_package(catkin REQUIRED COMPONENTS\n  cmake_modules\n  ...\n)\nfind_package(Eigen REQUIRED)\ncatkin_package(\n  DEPENDS\n    Eigen\n)\ninclude_directories(\n  ${EIGEN_INCLUDE_DIRS}\n)\n\n</code></pre></div>\n<p>If you have a fix for this, let me know!</p>\n\n<h2 id=""testing-and-linting"">Testing and Linting</h2>\n\n<p>To run <a href=""http://wiki.ros.org/roslint"">roslint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build --no-status --no-deps --this --make-args roslint\n</code></pre></div>\n<p>To run <a href=""https://pypi.python.org/pypi/catkin_lint"">catkin lint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin lint -W2\n</code></pre></div>\n<p>There are currently no unit or integration tests for this package. If there were you would use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin run_tests --no-deps --this -i\n</code></pre></div>\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please send PRs for new helper functions, fixes, etc!</p>\n</div>\n\n            \n          </div>'"
navigation,http://rosindex.github.io/r/navigation/,"hydro,fuerte,groovy,kinetic,jade,indigo","amcl,base_local_planner,carrot_planner,clear_costmap_recovery,costmap_2d,dwa_local_planner,fake_localization,global_planner,map_server,move_base,move_slow_and_clear,nav_core,navfn,navigation,robot_pose_ekf,rotate_recovery,voxel_grid,move_base_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-navigation-stack"">ROS Navigation Stack</h1>\n\n<p>A 2D navigation stack that takes in information from odometry, sensor\nstreams, and a goal pose and outputs safe velocity commands that are sent\nto a mobile base.</p>\n\n<ul>\n<li>Devel Job Status: <a href=""http://build.ros.org/view/Jdev/job/Jdev__navigation__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Jdev__navigation__ubuntu_trusty_amd64"" alt=""Devel Job Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://build.ros.org/view/Jbin_uT64/job/Jbin_uT64__navigation__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__navigation__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a>\n</li>\n</ul>\n\n<p>Related stacks:</p>\n\n<ul>\n<li>\n<a href=""http://github.com/ros-planning/navigation_msgs"">http://github.com/ros-planning/navigation_msgs</a> (new in Jade+)</li>\n<li><a href=""http://github.com/ros-planning/navigation_tutorials"">http://github.com/ros-planning/navigation_tutorials</a></li>\n<li><a href=""http://github.com/ros-planning/navigation_experimental"">http://github.com/ros-planning/navigation_experimental</a></li>\n</ul>\n\n<p>For discussion, please check out the\n<a href=""https://groups.google.com/group/ros-sig-navigation"">https://groups.google.com/group/ros-sig-navigation</a> mailing list.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-navigation-stack"">ROS Navigation Stack</h1>\n\n<p>A 2D navigation stack that takes in information from odometry, sensor\nstreams, and a goal pose and outputs safe velocity commands that are sent\nto a mobile base.</p>\n\n<ul>\n<li>Devel Job Status: <a href=""http://build.ros.org/view/Kdev/job/Kdev__navigation__ubuntu_xenial_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Kdev__navigation__ubuntu_xenial_amd64"" alt=""Devel Job Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://build.ros.org/view/Kbin_uX64/job/Kbin_uX64__navigation__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Kbin_uX64__navigation__ubuntu_xenial_amd64__binary"" alt=""Build Status""></a>\n</li>\n</ul>\n\n<p>Related stacks:</p>\n\n<ul>\n<li>\n<a href=""http://github.com/ros-planning/navigation_msgs"">http://github.com/ros-planning/navigation_msgs</a> (new in Jade+)</li>\n<li><a href=""http://github.com/ros-planning/navigation_tutorials"">http://github.com/ros-planning/navigation_tutorials</a></li>\n<li><a href=""http://github.com/ros-planning/navigation_experimental"">http://github.com/ros-planning/navigation_experimental</a></li>\n</ul>\n\n<p>For discussion, please check out the\n<a href=""https://groups.google.com/group/ros-sig-navigation"">https://groups.google.com/group/ros-sig-navigation</a> mailing list.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-navigation-stack"">ROS Navigation Stack</h1>\n\n<p>A 2D navigation stack that takes in information from odometry, sensor\nstreams, and a goal pose and outputs safe velocity commands that are\nsent to a mobile base.</p>\n\n<p>Related stacks:</p>\n\n<blockquote>\n<ul>\n<li>  <a href=""http://github.com/ros-planning/navigation_tutorials"">http://github.com/ros-planning/navigation_tutorials</a>\n</li>\n<li>  <a href=""http://github.com/ros-planning/navigation_experimental"">http://github.com/ros-planning/navigation_experimental</a>\n</li>\n</ul>\n</blockquote>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-navigation-stack"">ROS Navigation Stack</h1>\n\n<p>A 2D navigation stack that takes in information from odometry, sensor\nstreams, and a goal pose and outputs safe velocity commands that are sent\nto a mobile base.</p>\n\n<ul>\n<li>Devel Job Status: <a href=""http://jenkins.ros.org/job/devel-hydro-navigation/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-hydro-navigation"" alt=""Devel Job Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://jenkins.ros.org/job/ros-hydro-navigation_binarydeb_precise_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-hydro-navigation_binarydeb_precise_amd64"" alt=""Build Status""></a>\n</li>\n</ul>\n\n<p>Related stacks:</p>\n\n<ul>\n<li><a href=""http://github.com/ros-planning/navigation_tutorials"">http://github.com/ros-planning/navigation_tutorials</a></li>\n<li><a href=""http://github.com/ros-planning/navigation_experimental"">http://github.com/ros-planning/navigation_experimental</a></li>\n</ul>\n\n<p>For discussion of ROS ""hydro"" release development, please check out the \n<a href=""https://groups.google.com/group/ros-sig-navigation"">https://groups.google.com/group/ros-sig-navigation</a> mailing list and see\nthe SIG pages at <a href=""http://www.ros.org/wiki/sig/Navigation"">http://www.ros.org/wiki/sig/Navigation</a> and\n<a href=""http://www.ros.org/wiki/hydro/Planning/Navigation"">http://www.ros.org/wiki/hydro/Planning/Navigation</a>. </p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-navigation-stack"">ROS Navigation Stack</h1>\n\n<p>A 2D navigation stack that takes in information from odometry, sensor\nstreams, and a goal pose and outputs safe velocity commands that are sent\nto a mobile base.</p>\n\n<ul>\n<li>AMD64 Debian Job Status: <a href=""http://build.ros.org/view/Ibin_uT64/job/Ibin_uT64__navigation__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__navigation__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a>\n</li>\n</ul>\n\n<p>Related stacks:</p>\n\n<ul>\n<li><a href=""http://github.com/ros-planning/navigation_tutorials"">http://github.com/ros-planning/navigation_tutorials</a></li>\n<li><a href=""http://github.com/ros-planning/navigation_experimental"">http://github.com/ros-planning/navigation_experimental</a></li>\n</ul>\n\n<p>For discussion of ROS ""hydro"" release development, please check out the \n<a href=""https://groups.google.com/group/ros-sig-navigation"">https://groups.google.com/group/ros-sig-navigation</a> mailing list and see\nthe SIG pages at <a href=""http://www.ros.org/wiki/sig/Navigation"">http://www.ros.org/wiki/sig/Navigation</a> and\n<a href=""http://www.ros.org/wiki/hydro/Planning/Navigation"">http://www.ros.org/wiki/hydro/Planning/Navigation</a>. </p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hector_navigation,http://rosindex.github.io/r/hector_navigation/,"hydro,fuerte,electric,groovy,jade,indigo","hector_costmap,hector_driving_aid_markers,hector_elevation_mapping,hector_elevation_msgs,hector_elevation_visualization,hector_exploration_controller,hector_exploration_node,hector_exploration_planner,hector_path_follower","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""hector_navigation"">hector_navigation</h1>\n\n<p>hector_navigation provides packages related to navigation of unmanned vehicles.\nOriginally developed for use in Urban Search and Rescue (USAR) environments.</p>\n</div>\n\n            \n          </div>'"
rtmros_nextage,http://rosindex.github.io/r/rtmros_nextage/,"hydro,groovy,indigo","nextage_description,nextage_gazebo,nextage_ik_plugin,nextage_moveit_config,nextage_ros_bridge,rtmros_nextage","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
vrep_ros_bridge,http://rosindex.github.io/r/vrep_ros_bridge/,"hydro,jade,indigo","camera_handler,contact_handler,drawing_handler,force_sensor_handler,imu_handler,manipulator_handler,quadrotor_handler,quadrotor_tk_handler,rigid_body_handler,vrep_ros_bridge,vrep_ros_plugin","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""v-rep-ros-bridge"">V-Rep ROS Bridge</h1>\n\n<p>V-Rep ROS Bridge is a plugin for V-Rep developed by the Inria\n<a href=""http://www.irisa.fr/lagadic"" target=""_parent"">Lagadic</a> team located at <a href=""http://www.inria.fr/rennes"" target=""_parent"">Inria Rennes</a>.</p>\n\n<p>The main application of the plugin is to provide a communication interface between V-Rep and (ROS). The aim is to control the V-Rep simulation externally using ROS messages and ROS services.</p>\n\n<p>V-Rep is a General purpose 3D robot simulator with integrated development environment developed by <a href=""http://www.coppeliarobotics.com/"" target=""_parent"">Coppelia Robotics</a>. Sensors, mechanisms, robots and whole systems can be modelled and simulated in various ways.</p>\n\n<p>You will find the documentation <a href=""http://wiki.ros.org/vrep_ros_bridge?distro=hydro"" target=""_parent"">here</a>.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>Note: The Ubuntu version used is 13.04. It is tested also with 12.04 and 14.04 (with ROS Indigo).\n* <a href=""#ros"" target=""_parent""> Install ROS </a> \n* <a href=""#installation-v-rep"" target=""_parent""> Install V-Rep</a>\n* <a href=""#installation-plugin"" target=""_parent""> Install Plugin</a></p>\n\n<h3 id=""ros"">ROS</h3>\n\n<h4 id=""installation-ros-hydro"">Installation ROS Hydro</h4>\n\n<p>Follow instructions you find in this <a href=""http://wiki.ros.org/hydro/Installation/Ubuntu"" target=""_parent"">page</a>.</p>\n\n<ul>\n<li><p>Point 1.2 : choose instructions for your version of Ubuntu.</p></li>\n<li><p>Point 1.4 : Desktop-Full Install: (Recommended).</p></li>\n<li><p>When you configure the ROS Environment, choose catkin.</p></li>\n<li><p>Complete the tutorial <a href=""http://wiki.ros.org/ROS/Tutorials"" target=""_parent"">page</a>. It is mandatory to follow the tutorial number 1 ""Installing and Configuring Your ROS Environment"".</p></li>\n</ul>\n\n<p>Now we have installed ROS and we have created our workspace.</p>\n\n<h4 id=""installation-ros-indigo"">Installation ROS Indigo</h4>\n\n<p>As for Hydro, follow the instructions in this <a href=""http://wiki.ros.org/indigo/Installation/Ubuntu"" target=""_parent"">page</a>. </p>\n\n<h3 id=""installation-v-rep"">Installation V-Rep</h3>\n\n<ul>\n<li>Go in <a href=""http://www.coppeliarobotics.com/"" target=""_parent""></a><a href=""http://www.coppeliarobotics.com/"">http://www.coppeliarobotics.com/</a> .</li>\n<li>Check the <a href=""http://www.coppeliarobotics.com/helpFiles/en/licensing.htm"" target=""_parent"">licensing</a> page and download the suitable V-REP version for you.</li>\n<li>To run it go to the folder of V-rep via terminal and type\n<code>./vrep.sh</code>\n</li>\n<li>Follow <a href=""http://www.coppeliarobotics.com/helpFiles/en/rosTutorial.htm"" target=""_parent""> this </a> tutorial (Optional).\n</li>\n</ul>\n\n<h3 id=""installation-plugin"">Installation Plugin</h3>\n\n<ul>\n<li>Go in the src folder of your catkin workspace in catkin_ws/src via terminal</li>\n<li>\n<p>Download the plugin from GIT typing:</p>\n\n<p><code>git clone https://github.com/lagadic/vrep_ros_bridge.git</code></p>\n</li>\n<li><p>Use the branch <code>master</code> if you are using ROS Indigo or ROS Jade</p></li>\n<li>\n<p>If you are using Hydro:</p>\n\n<p><code>git checkout hydro-devel</code></p>\n</li>\n<li>\n<p>It is possible that you will not need all the sub-plugins provided by the vrep_ros_bridge. A common case is the one in which you do not need to use the TeleKyb framework (if you do not know what TeleKyb is, it is likely that you will not need it). To ignore this sub-plugin you need to add the file CATKIN_IGNORE in the sub-plugin folder that you do not need (as it is done in quadrotor_tk_handler). To do it go via terminal in the sub-plugin folder and execute: </p>\n\n<p><code>touch CATKIN_IGNORE</code></p>\n</li>\n<li>\n<p>Open the file bashrc:\n<code>gedit ~/.bashrc</code>\nin the end of the file add:</p>\n\n<p><code>export VREP_ROOT_DIR=/ChangeWithyourPathToVrep/</code></p>\n</li>\n</ul>\n\n<p>and, if you want to avoid to type the following command every time: </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">`export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:/path_to_catkin_ws/catkin_ws/src\nsource /opt/ros/indigo/setup.bash\nsource /path_to_catkin_ws/catkin_ws/devel/setup.bash`\n</code></pre></div>\n<ul>\n<li>\n<p>Go in your catkin_workspace and run:</p>\n\n<p><code>catkin_make</code></p>\n</li>\n<li>\n<p>Now build again the pkg using the next instruction:</p>\n\n<p><code>catkin_make --pkg vrep_ros_bridge --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo</code></p>\n</li>\n<li><p>In the folder catkin_ws/devel/lib/ you will find the main library (libv_repExtRosBridge.so) and the others libraries (libcamera_handler.so, libmanipulator_handler.so, libquadrotor_handler.so, librigid_body_handler.so ). </p></li>\n<li>\n<p>The file libv_repExtRosBridge.so has to be in the V-Rep installation folder in order to be loaded. What we will do is to create a symbolic link to it. Go via terminal to the installation folder of V-Rep and type:</p>\n\n<p><code>ln -s /YOUR_CATKIN_WS_PATH/devel/lib/libv_repExtRosBridge.so</code></p>\n</li>\n</ul>\n\n<p>where <code>/YOUR_CATKIN_WS_PATH</code> is your actual path to reach your workspace.</p>\n\n<ul>\n<li>\n<p>If you are using a new version of V-REP (V3_3_1_64_Linux) we need an additional step. We need to create a link pointing to the file compiledRosPlugins/libv_repExtRos.so in the V-REP root folder. Go via terminal to the installation folder of V-Rep and type:</p>\n\n<p><code>ln -s compiledRosPlugins/libv_repExtRos.so</code>    </p>\n</li>\n<li><p>In order to test if the installation was succesfull go  <a href=""http://wiki.ros.org/vrep_ros_bridge#Installation_test"" target=""_parent""> here </a> </p></li>\n</ul>\n\n<h4 id=""update-the-vrep_ros_bridge-according-to-a-new-v-rep-release"">Update the vrep_ros_bridge according to a new V-REP release</h4>\n\n<p>V-REP is a software undergoing through rapid development and there can be different releases in a short period of time. <br>\nIf the user wants to use the vrep_ros_bridge always with the latest version of V-REP he/she has just to follow the following steps:\n* Download the last version of V-REP <a href=""http://www.coppeliarobotics.com/downloads.html"" target=""_parent""> here </a>.\n</p>\n* Go back to the <a href=""#installation-plugin"" target=""_parent""> Install Plugin</a> section of this page and change the path to the one corresponding to the new version of V-REP.\n\n<p>Note: \n* The vrep_ros_bridge was tested up to the version 3.2.1 of V-REP released the May 4th 2015. \n* If you encounter some problems of speed in the your simulations of V-REP (e.g. jumps in the frames) you could try to change the following parameter. In V-REP version 3.2.1 there is a feature that was mistakenly disabled, which will actually accelerate visualization of your scene. If you go in Tools-&gt; User settings, under Adjust OpenGl settings, under VBO operation, make sure that default (recommended) is selected.</p>\n\n<h1 id=""how-to-use-the-plugin"">How to use the plugin</h1>\n\n<p>You will find a guide to use the plugin <a href=""http://wiki.ros.org/vrep_ros_bridge"" target=""_parent""> here </a> .</p>\n</div>\n\n            \n          </div>'"
cob_robots,http://rosindex.github.io/r/cob_robots/,"hydro,groovy,indigo","cob_bringup,cob_controller_configuration_gazebo,cob_default_robot_behavior,cob_default_robot_config,cob_hardware_config,cob_robots,cob_monitoring","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_robots""><img src=""https://travis-ci.org/ipa320/cob_robots.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
rotors_simulator,http://rosindex.github.io/r/rotors_simulator/,indigo,"rotors_comm,rotors_control,rotors_description,rotors_evaluation,rotors_gazebo,rotors_gazebo_plugins,rotors_joy_interface,rotors_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rotors"">RotorS</h1>\n\n<p>RotorS is a MAV gazebo simulator.\nIt provides some multirotor models such as the <a href=""http://www.asctec.de/en/uav-uas-drone-products/asctec-hummingbird/"">AscTec Hummingbird</a>, the <a href=""http://www.asctec.de/en/uav-uas-drone-products/asctec-pelican/"">AscTec Pelican</a>, or the <a href=""http://www.asctec.de/en/uav-uas-drone-products/asctec-firefly/"">AscTec Firefly</a>, but the simulator is not limited for the use with these multicopters.</p>\n\n<p>There are simulated sensors coming with the simulator such as an IMU, a generic odometry sensor, and the <a href=""http://wiki.ros.org/vi_sensor"">VI-Sensor</a>, which can be mounted on the multirotor.</p>\n\n<p>This package also contains some example controllers, basic worlds, a joystick interface, and example launch files.</p>\n\n<p>Below we provide the instructions necessary for getting started. See RotorS\' wiki for more instructions and examples (<a href=""https://github.com/ethz-asl/rotors_simulator/wiki"">https://github.com/ethz-asl/rotors_simulator/wiki</a>).</p>\n\n<p>If you are using this simulator within the research for your publication, please cite:</p>\n<div class=""highlight""><pre><code class=""language-bibtex"" data-lang=""bibtex"">@Inbook{Furrer2016,\nauthor=""Furrer, Fadri\nand Burri, Michael\nand Achtelik, Markus\nand Siegwart, Roland"",\neditor=""Koubaa, Anis"",\nchapter=""RotorS---A Modular Gazebo MAV Simulator Framework"",\ntitle=""Robot Operating System (ROS): The Complete Reference (Volume 1)"",\nyear=""2016"",\npublisher=""Springer International Publishing"",\naddress=""Cham"",\npages=""595--625"",\nisbn=""978-3-319-26054-9"",\ndoi=""10.1007/978-3-319-26054-9_23"",\nurl=""http://dx.doi.org/10.1007/978-3-319-26054-9_23""\n}\n\n</code></pre></div>\n<h2 id=""installation-instructions"">Installation Instructions</h2>\n\n<ol>\n<li>Install and initialize ROS indigo desktop full, additional ROS packages, catkin-tools, and wstool:</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""> $ sudo sh -c \'echo ""deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main"" &gt; /etc/apt/sources.list.d/ros-latest.list\'\n $ wget http://packages.ros.org/ros.key -O - | sudo apt-key add -\n $ sudo apt-get update\n $ sudo apt-get install ros-indigo-desktop-full ros-indigo-joy ros-indigo-octomap-ros python-wstool python-catkin-tools\n $ sudo rosdep init\n $ rosdep update\n $ source /opt/ros/indigo/setup.bash\n\n</code></pre></div>\n<ol>\n<li>If you don\'t have ROS workspace yet you can do so by</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""> $ mkdir -p ~/catkin_ws/src\n $ cd ~/catkin_ws/src\n $ catkin_init_workspace  # initialize your catkin workspace\n $ wstool init\n\n</code></pre></div>\n<blockquote>\n<p><strong>Note</strong> for setups with multiple workspaces please refer to the official documentation at <a href=""http://docs.ros.org/independent/api/rosinstall/html/"">http://docs.ros.org/independent/api/rosinstall/html/</a> by replacing <code>rosws</code> by <code>wstool</code>.\n 3. Get the simulator and additional dependencies</p>\n</blockquote>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""> $ cd ~/catkin_ws/src\n $ git clone git@github.com:ethz-asl/rotors_simulator.git\n $ git clone git@github.com:ethz-asl/mav_comm.git\n\n</code></pre></div>\n<blockquote>\n<p><strong>Note</strong> if you want to use <code>wstool</code> you can replace the above commands with</p>\n</blockquote>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    wstool set --git local_repo_name git@github.com:organization/repo_name.git\n\n</code></pre></div>\n<blockquote>\n<p><strong>Note</strong> if you want to build and use the <code>gazebo_mavlink_interface</code> plugin you have to get MAVROS as an additional dependency from link below. Follow the installation instructions provided there and build all of its packages prior to building the rest of your workspace. </p>\n</blockquote>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    https://github.com/mavlink/mavros\n\n</code></pre></div>\n<ol>\n<li>Build your workspace with <code>python_catkin_tools</code> (therefore you need <code>python_catkin_tools</code>)</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">   $ cd ~/catkin_ws/\n   $ catkin init  # If you haven\'t done this before.\n   $ catkin build\n\n</code></pre></div>\n<ol>\n<li>Add sourcing to your <code>.bashrc</code> file</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">   $ echo ""source ~/catkin_ws/devel/setup.bash"" &gt;&gt; ~/.bashrc\n   $ source ~/.bashrc\n\n</code></pre></div>\n<h2 id=""basic-usage"">Basic Usage</h2>\n\n<p>Launch the simulator with a hex-rotor helicopter model, in our case, the AscTec Firefly in a basic world.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch rotors_gazebo mav_empty_world.launch mav_name:=firefly world_name:=basic\n\n</code></pre></div>\n<blockquote>\n<p><strong>Note</strong> The first run of gazebo might take considerably long, as it will download some models from an online database.</p>\n</blockquote>\n\n<p>The simulator starts by default in paused mode. To start it you can either\n - use the Gazebo GUI and press the play button\n - or you can send the following service call.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">   $ rosservice call gazebo/unpause_physics\n\n</code></pre></div>\n<p>There are some basic launch files where you can load the different multicopters with additional sensors. They can all be found in <code>~/catkin_ws/src/rotors_simulator/rotors_gazebo/launch</code>.</p>\n\n<p>The <code>world_name</code> argument looks for a .world file with a corresponding name in <code>~/catkin_ws/src/rotors_simulator/rotors_gazebo/worlds</code>. By default, all launch files, with the exception of those that have the world name explicitly included in the file name, use the empty world described in <code>basic.world</code>.</p>\n\n<h3 id=""getting-the-multicopter-to-fly"">Getting the multicopter to fly</h3>\n\n<p>To let the multicopter fly you need to generate thrust with the rotors, this is achieved by sending commands to the multicopter, which make the rotors spin.\nThere are currently a few ways to send commands to the multicopter, we will show one of them here.\nThe rest is documented <a href=""../../wiki"">here</a> in our Wiki.\nWe will here also show how to write a stabilizing controller and how you can control the multicopter with a joystick.</p>\n\n<h4 id=""send-direct-motor-commands"">Send direct motor commands</h4>\n\n<p>We will for now just send some constant motor velocities to the multicopter.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic pub /firefly/command/motor_speed mav_msgs/Actuators \'{angular_velocities: [100, 100, 100, 100, 100, 100]}\'\n\n</code></pre></div>\n<blockquote>\n<p><strong>Note</strong> The size of the <code>motor_speed</code> array should be equal to the number of motors you have in your model of choice (e.g. 6 in the Firefly model).</p>\n</blockquote>\n\n<p>You should see (if you unpaused the simulator and you have a multicopter in it), that the rotors start spinning. The thrust generated by these motor velocities is not enough though to let the multicopter take off.</p>\n\n<blockquote>\n<p>You can play with the numbers and will realize that the Firefly will take off with motor speeds of about 545 on each rotor. The multicopter is unstable though, since there is no controller running, if you just set the motor speeds.</p>\n</blockquote>\n\n<h4 id=""let-the-helicopter-hover-with-ground-truth-odometry"">Let the helicopter hover with ground truth odometry</h4>\n\n<p>You can let the helicopter hover with ground truth odometry (perfect state estimation), by launching:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch rotors_gazebo mav_hovering_example.launch mav_name:=firefly world_name:=basic\n\n</code></pre></div>\n<h4 id=""create-an-attitude-controller"">Create an attitude controller</h4>\n\n<p><strong>TODO(ff):</strong> <code>Write something here.</code></p>\n\n<h4 id=""usage-with-a-joystick"">Usage with a joystick</h4>\n\n<p><strong>TODO(ff):</strong> <code>Write something here.</code></p>\n</div>\n\n            \n          </div>'"
rtmros_common,http://rosindex.github.io/r/rtmros_common/,"hydro,jade,groovy,indigo","hrpsys_ros_bridge,hrpsys_tools,openrtm_ros_bridge,openrtm_tools,rosnode_rtc,rtmbuild,rtmros_common","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>================================================================================================================================================================</p>\n\n<h1 id=""rtmros_common"">rtmros_common  <a href=""https://travis-ci.org/start-jsk/rtmros_common""><img src=""https://travis-ci.org/start-jsk/rtmros_common.png"" alt=""Build Status""></a>\n</h1>\n\n<p>A package suite that provides all the capabilities for the ROS users to connect to the robots that run on RT Middleware or RTM-based controllers.</p>\n\n<p>.. contents::</p>\n\n<h1 id=""install"">Install</h1>\n\n<p>This document explains how to use and how to contribute to rtm-ros-robotics softwares (<a href=""https://github.com/start-jsk/openrtm_aist_core"">openrtm_aist_core</a>, <a href=""https://github.com/start-jsk/openhrp3"">openhrp3</a>, <a href=""https://github.com/start-jsk/hrpsys"">hrpsys</a>, <a href=""https://github.com/start-jsk/rtshell_core"">rtshell_core</a>, <a href=""https://github.com/start-jsk/rtmros_common"">rtmros_common</a>, <a href=""https://github.com/start-jsk/rtmros_hironx"">rtmros_hironx</a>, <a href=""https://github.com/start-jsk/rtmros_turorial"">rtmros_tutorial</a>, <a href=""https://github.com/start-jsk/rtmros_gazebo"">rtmros_gazebo</a>). The instruction uses <code>rtmros_common</code> repository as an example, but also works for other rtm-ros-robotics repositories.</p>\n\n<ol>\n<li>Install software</li>\n</ol>\n\n<p>rtm-ros-robotics software is distributed as ros-debian packages, if you already uses ROS system, install the software as follows:\n - <code>sudo apt-get install ros-$ROS_DISTRO-rtmros-common</code></p>\n\n<p>If you did not installed ROS sysem, please follow <a href=""http://wiki.ros.org/hydro/Installation/Ubuntu"">this instruction</a>.\n - <code>sudo sh -c \'echo ""deb http://packages.ros.org/ros/ubuntu `lsb_release -a` main"" &gt; /etc/apt/sources.list.d/ros-latest.list\'</code>\n - <code>wget http://packages.ros.org/ros.key -O - | sudo apt-key add -</code>\n - <code>sudo apt-get update</code>\n - <code>sudo apt-get update ros-hydro-base</code> # you may use ros-groovy-base if you want\n - <code>sudo rosdep init</code>\n - <code>rosdep update</code>\n - <code>source /opt/ros/hydro/setup.bash</code> # it is better to source ROS environment everytime terminal starts (<code>echo ""source /opt/ros/hydro/setup.bash"" &gt;&gt; ~/.bashrc</code>)</p>\n\n<ol>\n<li>Compile from source code</li>\n</ol>\n\n<p>You may have two choice, one is to compile all rtm-ros-robotics source code, other is to compile target repository.\n First, create catkin workspace\n - <code>mkdir -p ~/catkin_ws/src</code>\n - <code>cd ~/catkin_ws/src</code>\n - <code>catkin_init_workspace</code>\n - <code>wstool init .</code></p>\n\n<p>If compile all source code\n - <code>wstool merge https://raw.github.com/start-jsk/rtmros_common/master/.rosinstall -y</code></p>\n\n<p>Else if compile only targe repository\n - <code>wstool set rtm-ros-robotics/rtmros_common https://github.com/start-jsk/rtmros_common --git -y</code></p>\n\n<p>Both methods needs following procedures.\n - <code>wstool update</code>\n - <code>cd ..</code>\n - <code>source /opt/ros/hydro/setup.bash</code>\n - <code>rosdep install -v -r --from-paths src --ignore-src --rosdistro hydro -y</code>\n - <code>catkin_make</code></p>\n\n<ol>\n<li>Contributes to rtm-ros-robotics projects.</li>\n</ol>\n\n<ul>\n<li>First fork the target repository on GitHub</li>\n<li>Move to the package direcotry</li>\n<li><code>source ~/catkin_ws/devel/setup.bash</code></li>\n<li><code>roscd rtmros_common</code></li>\n<li> create branch for your fix</li>\n<li><code>git checkout -b your_awesome_code_branch</code></li>\n<li> write awesome code and commit to local repo</li>\n<li>  ... wite code....</li>\n<li><code>git commit -m ""detailed description of what you did""</code></li>\n<li> Add your forked repository as upstream</li>\n<li><code>git remote add experimental https://github.com/&lt;your github user name&gt;/rtmros_common</code></li>\n<li><code>git push experimental your_awesome_code_branch</code></li>\n<li>Submit a pull request on GitHub to the repository</li>\n<li>Please check travic-ci status after sending your pull request.</li>\n</ul>\n\n<ol>\n<li>Uses other forked repository <em>before</em> merged into master.</li>\n</ol>\n\n<p>You don\'t need to wait for the maintainers to merge some pull requests by others\nbefore you use them.</p>\n\n<ul>\n<li>Adding other\'s remote repository to your git remote</li>\n<li><code>git remote add &lt;awesome-fork&gt; https://github.com/&lt;user&gt;/rtmros_common</code></li>\n<li>Fetch branches from the remote.</li>\n<li><code>git fetch &lt;awesome-fork&gt;</code></li>\n<li>Merge those remote branch into your current branch</li>\n<li><code>git merge &lt;awesome-fork&gt;/&lt;branch-name&gt;</code></li>\n</ul>\n\n<h1 id=""for-maintainers"">For maintainers</h1>\n\n<h2 id=""tweak-to-release-into-groovy"">Tweak to release into Groovy</h2>\n\n<p>While in current design the package depends on <code>pr2_controllers_msgs &lt;http://wiki.ros.org/pr2_controllers_msgs&gt;</code>_ that\'s catkinized from ROS hydro onward and not available in ROS groovy, some hacks allow the package not to separate <code>branches</code> (regardless it\'s good or not, doing so is the decision as of March 2014). This requires another hack during release process using <code>bloom</code> as follows:</p>\n\n<ol>\n<li>Run <code>bloom &lt;http://wiki.ros.org/bloom&gt;</code>_ as normal. E.g. <code>$ bloom-release --rosdistro groovy --track groovy rtmros_common</code>.</li>\n<li>Once <code>bloom</code> halts and its command prompt starts waiting on the same terminal (the output might look as following), edit <code>package.xml</code> to comment out lines for declaring build and run depend on <code>pr2-controllers</code>.</li>\n</ol>\n\n<p>::</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ bloom-release --rosdistro groovy --track groovy rtmros_common\n:\n&gt;&gt;&gt; Resolve any conflicts and when you have resolved this problem run \'git am --resolved\' and then exit the shell using \'exit 0\'. &lt;&lt;&lt;\n    To abort use \'exit 1\'\n(bloom)emacs package.xml \n</code></pre></div>\n<p>Modify <code>package.xml</code> as:</p>\n\n<p>::</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">:  \n&lt;!-- &lt;build_depend&gt;pr2_controllers&lt;/build_depend&gt; --&gt;\n:\n&lt;!-- &lt;run_depend&gt;pr2_controllers&lt;/run_depend&gt; --&gt;\n:\n</code></pre></div>\n<ol>\n<li>Run <code>git add</code>, <code>$ git am --skip</code>, <code>git commit</code> like below, and <code>exit 0</code> respectively. If all succeeds then <code>bloom</code> resumes.</li>\n</ol>\n\n<p>::</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">(bloom)git add package.xml\n(bloom)git am --skip\nResolve operation not in progress, we are not resuming.\n(bloom)git commit -m ""3rd trial commentout pr2 pkg"" -a\n[release/groovy/hrpsys_ros_bridge 1c05bbc] 3rd trial commentout pr2 pkg\n 1 file changed, 1 insertion(+), 1 deletion(-)\n(bloom)git status\n# On branch release/groovy/hrpsys_ros_bridge\n# Your branch is ahead of \'origin/release/groovy/hrpsys_ros_bridge\' by 8 commits.\n#\nnothing to commit (working directory clean)\n(bloom)exit 0\nexit\n [git-bloom-patch import]: User reports that conflicts have been resolved, continuing.\n [git-bloom-patch import]: Applied 2 patches\n:\n(bloom continues)\n</code></pre></div>\n</div>\n\n            \n          </div>'"
tf_keyboard_cal,http://rosindex.github.io/r/tf_keyboard_cal/,"jade,kinetic,indigo",tf_keyboard_cal,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""manual-tf-calibration-tools"">Manual TF Calibration Tools</h1>\n\n<p>Move /tf frames around using your keyboard or interactive markers - a simple calibration-by-eye tool!</p>\n\n<p>TF Keyboard Calibration developed by Andy McEvoy and <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder, TF Interactive Marker developed by <a href=""http://github.com/awesomebytes"">Sammy Pfeiffer</a> at PAL Robotics.</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/tf_keyboard_cal""><img src=""https://travis-ci.org/davetcoleman/tf_keyboard_cal.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-tf_keyboard_cal""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-tf_keyboard_cal"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-tf-keyboard-cal_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-tf-keyboard-cal_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/tf_keyboard_cal/kinetic-devel//resources/keyboard_screenshot.png"" alt=""""></p>\n\n<p>Screenshot of calibration using keyboard shortcuts</p>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/tf_keyboard_cal/kinetic-devel//resources/interactive_marker_screenshot.png"" alt=""""></p>\n\n<p>Screenshot of calibration using interactive markers and the mouse</p>\n\n<p><a href=""https://www.youtube.com/watch?v=C9BbFv-C9Zo"">Video example</a> of interactive marker tf calibration.</p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-tf-keyboard-cal\n</code></pre></div>\n<h3 id=""build-from-source"">Build from Source</h3>\n\n<p>To build this package, <code>git clone</code> this repo into a <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and be sure to install necessary dependencies by running the following command in the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install -y --from-paths src --ignore-src --rosdistro indigo\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/tf_keyboard_cal/html/"">Class Reference</a></p>\n\n<h2 id=""usage-of-tf-keyboard-cal"">Usage of TF Keyboard Cal:</h2>\n\n<p>To test, create a new <code>/thing</code> coordinate from the following demo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal tf_keyboard_world_to_thing.launch\n</code></pre></div>\n<p>Start Rviz and use the TF display to visualize its effect.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal rviz_demo.launch\n</code></pre></div>\n<p>You can now use the keyboard shorcuts below to move the frame around. <strong>NOTE:</strong> Be sure to have the little black window focused on to recieve keyboard input. Once the TF has been positioned, press <code>p</code> to save the settings to the config file. The TF will use these new settings when relaunched.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Manual alignment of camera to world CS:\n=======================================\nMOVE: X  Y  Z  R  P  YAW\n------------------------\nup    q  w  e  r  t  y\ndown  a  s  d  f  g  h\nFast: u\nMed:  i\nSlow: o\nSave: p\n</code></pre></div>\n<p>Create a launch file and configuration file similar to the demos in the package\'s <code>config/</code> and <code>launch/</code> folders.</p>\n\n<h2 id=""usage-of-tf-interactive-marker"">Usage of TF Interactive Marker</h2>\n\n<p>Interactive marker /tf calibration is implemented in an entirely seperate python node from the keyboard functionality and it is self contained. You can copy <code>tf_interactive_marker.py</code> and it will work in a standalone fashion. Use <code>-h</code> to get help on this node\'s various command line arguments.</p>\n\n<p>To test, first run Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal rviz_demo.launch\n</code></pre></div>\n<p>Next run the following demo to create a <code>/thing</code> tf:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal tf_im_world_to_thing.launch\n</code></pre></div>\n<p>Now you should be able to move the Interactive Marker and the TF transform will be published (can be stopped with right click menu of the IM) and you\'ll see an output in the terminal like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Static transform publisher command (with roll pitch yaw):\n  rosrun tf static_transform_publisher 1.0 0.0 1.0 0.0 -0.0 1.57 base_footprint new_frame 50\n\nStatic transform publisher command (with quaternion):\n  rosrun tf static_transform_publisher 1.0 0.0 1.0 0.0 0.7068 0.7074 0.0 base_footprint new_frame 50\n\nRoslaunch line of static transform publisher (rpy):\n  &lt;node name=""from_base_footprint_to_new_frame_static_tf"" pkg=""tf"" type=""static_transform_publisher"" args=""1.0 0.0 1.0 0.0 -0.0 1.57 base_footprint new_frame 50"" /&gt;\n\nURDF format:\n  &lt;origin xyz=""1.0 0.0 1.0"" rpy=""0.0 -0.0 1.57"" /&gt;\n\n</code></pre></div>\n<p>Which hopefully makes your life easier :-)</p>\n\n<h2 id=""demo-tf-listener"">Demo TF Listener</h2>\n\n<p>If you want to get the Eigen or ROS message formatted pose from the interactive marker or keyboard calibration, see the template code:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">src/demo_tf_listener.cpp1;2802;0c\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""manual-tf-calibration-tools"">Manual TF Calibration Tools</h1>\n\n<p>Move /tf frames around using your keyboard or interactive markers - a simple calibration-by-eye tool!</p>\n\n<p>TF Keyboard Calibration developed by Andy McEvoy and <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder, TF Interactive Marker developed by <a href=""http://github.com/awesomebytes"">Sammy Pfeiffer</a> at PAL Robotics.</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/tf_keyboard_cal""><img src=""https://travis-ci.org/davetcoleman/tf_keyboard_cal.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-tf_keyboard_cal""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-tf_keyboard_cal"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-tf-keyboard-cal_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-tf-keyboard-cal_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/tf_keyboard_cal/jade-devel//resources/keyboard_screenshot.png"" alt=""""></p>\n\n<p>Screenshot of calibration using keyboard shortcuts</p>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/tf_keyboard_cal/jade-devel//resources/interactive_marker_screenshot.png"" alt=""""></p>\n\n<p>Screenshot of calibration using interactive markers and the mouse</p>\n\n<p><a href=""https://www.youtube.com/watch?v=C9BbFv-C9Zo"">Video example</a> of interactive marker tf calibration.</p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-tf-keyboard-cal\n</code></pre></div>\n<h3 id=""build-from-source"">Build from Source</h3>\n\n<p>To build this package, <code>git clone</code> this repo into a <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and be sure to install necessary dependencies by running the following command in the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install -y --from-paths src --ignore-src --rosdistro indigo\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/tf_keyboard_cal/html/"">Class Reference</a></p>\n\n<h2 id=""usage-of-tf-keyboard-cal"">Usage of TF Keyboard Cal:</h2>\n\n<p>To test, create a new <code>/thing</code> coordinate from the following demo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal tf_keyboard_world_to_thing.launch\n</code></pre></div>\n<p>Start Rviz and use the TF display to visualize its effect.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal rviz_demo.launch\n</code></pre></div>\n<p>You can now use the keyboard shorcuts below to move the frame around. <strong>NOTE:</strong> Be sure to have the little black window focused on to recieve keyboard input. Once the TF has been positioned, press <code>p</code> to save the settings to the config file. The TF will use these new settings when relaunched.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Manual alignment of camera to world CS:\n=======================================\nMOVE: X  Y  Z  R  P  YAW\n------------------------\nup    q  w  e  r  t  y\ndown  a  s  d  f  g  h\nFast: u\nMed:  i\nSlow: o\nSave: p\n</code></pre></div>\n<p>Create a launch file and configuration file similar to the demos in the package\'s <code>config/</code> and <code>launch/</code> folders.</p>\n\n<h2 id=""usage-of-tf-interactive-marker"">Usage of TF Interactive Marker</h2>\n\n<p>Interactive marker /tf calibration is implemented in an entirely seperate python node from the keyboard functionality and it is self contained. You can copy <code>tf_interactive_marker.py</code> and it will work in a standalone fashion. Use <code>-h</code> to get help on this node\'s various command line arguments.</p>\n\n<p>To test, first run Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal rviz_demo.launch\n</code></pre></div>\n<p>Next run the following demo to create a <code>/thing</code> tf:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal tf_im_world_to_thing.launch\n</code></pre></div>\n<p>Now you should be able to move the Interactive Marker and the TF transform will be published (can be stopped with right click menu of the IM) and you\'ll see an output in the terminal like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Static transform publisher command (with roll pitch yaw):\n  rosrun tf static_transform_publisher 1.0 0.0 1.0 0.0 -0.0 1.57 base_footprint new_frame 50\n\nStatic transform publisher command (with quaternion):\n  rosrun tf static_transform_publisher 1.0 0.0 1.0 0.0 0.7068 0.7074 0.0 base_footprint new_frame 50\n\nRoslaunch line of static transform publisher (rpy):\n  &lt;node name=""from_base_footprint_to_new_frame_static_tf"" pkg=""tf"" type=""static_transform_publisher"" args=""1.0 0.0 1.0 0.0 -0.0 1.57 base_footprint new_frame 50"" /&gt;\n\nURDF format:\n  &lt;origin xyz=""1.0 0.0 1.0"" rpy=""0.0 -0.0 1.57"" /&gt;\n\n</code></pre></div>\n<p>Which hopefully makes your life easier :-)</p>\n\n<h2 id=""demo-tf-listener"">Demo TF Listener</h2>\n\n<p>If you want to get the Eigen or ROS message formatted pose from the interactive marker or keyboard calibration, see the template code:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">src/demo_tf_listener.cpp1;2802;0c\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""manual-tf-calibration-tools"">Manual TF Calibration Tools</h1>\n\n<p>Move /tf frames around using your keyboard or interactive markers - a simple calibration-by-eye tool!</p>\n\n<p>TF Keyboard Calibration developed by Andy McEvoy and <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder, TF Interactive Marker developed by <a href=""http://github.com/awesomebytes"">Sammy Pfeiffer</a> at PAL Robotics.</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/tf_keyboard_cal""><img src=""https://travis-ci.org/davetcoleman/tf_keyboard_cal.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-tf_keyboard_cal""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-tf_keyboard_cal"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-tf-keyboard-cal_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-tf-keyboard-cal_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/tf_keyboard_cal/indigo-devel//resources/keyboard_screenshot.png"" alt=""""></p>\n\n<p>Screenshot of calibration using keyboard shortcuts</p>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/tf_keyboard_cal/indigo-devel//resources/interactive_marker_screenshot.png"" alt=""""></p>\n\n<p>Screenshot of calibration using interactive markers and the mouse</p>\n\n<p><a href=""https://www.youtube.com/watch?v=C9BbFv-C9Zo"">Video example</a> of interactive marker tf calibration.</p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-tf-keyboard-cal\n</code></pre></div>\n<h3 id=""build-from-source"">Build from Source</h3>\n\n<p>To build this package, <code>git clone</code> this repo into a <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and be sure to install necessary dependencies by running the following command in the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install -y --from-paths src --ignore-src --rosdistro indigo\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/tf_keyboard_cal/html/"">Class Reference</a></p>\n\n<h2 id=""usage-of-tf-keyboard-cal"">Usage of TF Keyboard Cal:</h2>\n\n<p>To test, create a new <code>/thing</code> coordinate from the following demo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal tf_keyboard_world_to_thing.launch\n</code></pre></div>\n<p>Start Rviz and use the TF display to visualize its effect.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal rviz_demo.launch\n</code></pre></div>\n<p>You can now use the keyboard shorcuts below to move the frame around. <strong>NOTE:</strong> Be sure to have the little black window focused on to recieve keyboard input. Once the TF has been positioned, press <code>p</code> to save the settings to the config file. The TF will use these new settings when relaunched.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Manual alignment of camera to world CS:\n=======================================\nMOVE: X  Y  Z  R  P  YAW\n------------------------\nup    q  w  e  r  t  y\ndown  a  s  d  f  g  h\nFast: u\nMed:  i\nSlow: o\nSave: p\n</code></pre></div>\n<p>Create a launch file and configuration file similar to the demos in the package\'s <code>config/</code> and <code>launch/</code> folders.</p>\n\n<h2 id=""usage-of-tf-interactive-marker"">Usage of TF Interactive Marker</h2>\n\n<p>Interactive marker /tf calibration is implemented in an entirely seperate python node from the keyboard functionality and it is self contained. You can copy <code>tf_interactive_marker.py</code> and it will work in a standalone fashion. Use <code>-h</code> to get help on this node\'s various command line arguments.</p>\n\n<p>To test, first run Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal rviz_demo.launch\n</code></pre></div>\n<p>Next run the following demo to create a <code>/thing</code> tf:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch tf_keyboard_cal tf_im_world_to_thing.launch\n</code></pre></div>\n<p>Now you should be able to move the Interactive Marker and the TF transform will be published (can be stopped with right click menu of the IM) and you\'ll see an output in the terminal like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Static transform publisher command (with roll pitch yaw):\n  rosrun tf static_transform_publisher 1.0 0.0 1.0 0.0 -0.0 1.57 base_footprint new_frame 50\n\nStatic transform publisher command (with quaternion):\n  rosrun tf static_transform_publisher 1.0 0.0 1.0 0.0 0.7068 0.7074 0.0 base_footprint new_frame 50\n\nRoslaunch line of static transform publisher (rpy):\n  &lt;node name=""from_base_footprint_to_new_frame_static_tf"" pkg=""tf"" type=""static_transform_publisher"" args=""1.0 0.0 1.0 0.0 -0.0 1.57 base_footprint new_frame 50"" /&gt;\n\nURDF format:\n  &lt;origin xyz=""1.0 0.0 1.0"" rpy=""0.0 -0.0 1.57"" /&gt;\n\n</code></pre></div>\n<p>Which hopefully makes your life easier :-)</p>\n</div>\n\n            \n          </div>'"
ethzasl_xsens_driver,http://rosindex.github.io/r/ethzasl_xsens_driver/,"fuerte,electric,groovy,diamondback,indigo",xsens_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">ROS Driver for XSens MT/MTi/MTi-G devices.\n\nSee: http://ros.org/wiki/ethzasl_xsens_driver\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
mapviz,http://rosindex.github.io/r/mapviz/,"hydro,fuerte,groovy,kinetic,jade,indigo","mapviz,mapviz_plugins,multires_image,tile_map","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mapviz"">mapviz</h1>\n\n<p>Mapviz is a <a href=""http://www.ros.org/"">ROS</a> based visualization tool with a plug-in system similar to <a href=""http://wiki.ros.org/rviz"">RVIZ</a> focused on visualizing 2D data.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/mapviz.png"" alt=""""></p>\n\n<p>Mapviz currently depends on the <a href=""https://github.com/swri-robotics/marti_common"">marti_common</a> and <a href=""https://github.com/swri-robotics/marti_messages"">marti_messages</a> repositories for some utility functions and message definitions.</p>\n\n<p>Mapviz should be compatible with Ubuntu 12.04 through Ubuntu 14.04 and ROS Fuerte, Groovy, Hydro, and Indigo.  The <em>master</em> branch uses the <a href=""http://wiki.ros.org/rosbuild"">rosbuild</a> make system and the <em>catkin</em> branch uses <a href=""http://wiki.ros.org/catkin"">catkin</a>.</p>\n\n<p>Installing ROS <a href=""http://wiki.ros.org/fuerte/Installation/Ubuntu"">Fuerte</a>, <a href=""http://wiki.ros.org/groovy/Installation/Ubuntu"">Groovy</a>, <a href=""http://wiki.ros.org/hydro/Installation/Ubuntu"">Hydro</a>, or <a href=""http://wiki.ros.org/indigo/Installation/Ubuntu"">Indigo</a></p>\n\n<p>Additional Ubuntu dependencies beyond ROS base for mapviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-XXXX-tf ros-XXXX-common-msgs ros-XXXX-plugin-lib ros-XXXX-gps-umd \\\n    ros-XXXX-nodelet ros-XXXX-cv-bridge ros-XXXX-image-geometry ros-XXXX-angles \\\n    ros-XXXX-camera-calibration-parsers ros-XXXX-image-transport\n\n$ sudo apt-get install yaml-cpp libboost-random-dev libblas-dev liblapack-dev libproj-dev \\\n    libglew-dev freeglut3-dev libxmu-dev libgeos++-dev qt4-dev-tools\n</code></pre></div>\n<h2 id=""plug-ins"">Plug-ins</h2>\n\n<h3 id=""disparity"">Disparity</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/stereo_msgs/html/msg/DisparityImage.html"">sensor_msgs::DisparityImage</a> onto the display using the \'\'jet\'\' color map.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/disparity.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Topic: The disparity topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""gps"">GPS</h3>\n\n<p>Projects <a href=""http://docs.ros.org/hydro/api/gps_common/html/msg/GPSFix.html"">gps_common::GPSFix</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The GPS topic\n * Color: The color of the GPS data\n * Draw Style: (lines | points | arrows)\n * Position Tolerance: Distance threshold for adding new GPS points to visualization\n * Buffer Size: Size of circular buffer of GPS points</p>\n\n<h3 id=""grid"">Grid</h3>\n\n<p>Projects a 2D grid into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Frame: Coordinate frame of the grid\n * Color: Color of the grid\n * Alpha: Alpha transparency of the grid\n * X: X offset of the grid from the specified coordinate frame origin\n * Y: Y offset of the grid from the specified coordinate frame origin\n * Size: Size of each grid cell\n * Rows: Number of grid rows\n * Columns: Number of grid columns</p>\n\n<h3 id=""image"">Image</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/Image.html"">sensor_msgs::Image</a> onto the display.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The image topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""laserscan"">LaserScan</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/LaserScan.html"">sensor_msgs::LaserScan</a> message into the scene.</p>\n\n<ul>\n<li>Topic: The laser scan topic name</li>\n<li>Min Color: The color associated with minimum return intensity</li>\n<li>Max Color: The color associated with maximum return intensity</li>\n<li>Min Intesity: Minimum intensity value</li>\n<li>Max Intensity: Maximum intensity value</li>\n<li>Point Size: Display size of laser scan points in pixels</li>\n<li>Buffer Size: Size of circular buffer of laser scan messages points</li>\n</ul>\n\n<h3 id=""marker"">Marker</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/Marker.html"">visualization_msgs::Marker</a> or <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/MarkerArray.html"">visualization_msgs::MarkerArray</a> into the scene.</p>\n\n<p><a href=""http://wiki.ros.org/rviz/DisplayTypes/Marker"">Markers</a> are the most flexible display type and more or less mirror the <a href=""https://www.opengl.org/wiki/Primitive"">OpenGL primitives</a>.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The marker topic</p>\n\n<h3 id=""multi-res-image"">Multi-res Image</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  The concept is the same as the Google Maps style pan/zoom satellite imagery. </p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/multires2.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Geo File: Path to the geo-referenced map tiles.</p>\n\n<p>A custom format is currently used to store the map tiles and geo-reference. The geo-file has the following format:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">image_path: "".""        # The relative path to the map tiles\nimage_width: 29184     # The full pixel width of the map\nimage_height: 15872    # The full pixel height of the map\ntile_size: 512         # The pixel size of the individual tiles\n\ndatum: ""wgs84""         # Datum is currently ignored\nprojection: ""utm""      # (utm|wgs84)\n\n                       # At least 2 tie points are required for \n                       # scale, and 3 for orientation.\ntiepoints:             #   [pixel x, pixel y, geo x, geo y]\n - point: [4799, 209, 535674.5, 3258382.5]\n - point: [2336, 15596, 535329.5, 3256198.5]\n - point: [26925, 15457, 538837.5, 3256233.5]\n - point: [29133, 84, 539142.5, 3258416.5]\n</code></pre></div>\n<p>The map tiles are stored in directories for each resolution starting with layer0, the full resolution.  In subsequent layers the resolution is halved until the entire map fits within a single tile.  </p>\n\n<p>Tiles are named using the following format: </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">tile%05dx%05d.png % (row, column)\n</code></pre></div>\n<h3 id=""odometry"">Odometry</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Odometry.html"">nav_msgs::Odometry</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The odometry topic\n * Color: The color of the odometry data\n * Draw Style: (lines | points | arrows)\n * Show Covariance: Draw covariance ellipse around latest data\n * Position Tolerance: Distance threshold for adding new odometry points to visualization\n * Buffer Size: Size of circular buffer of odometry points</p>\n\n<h3 id=""path"">Path</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Path.html"">nav_msgs::Path</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The path topic</p>\n\n<h3 id=""robot-image"">Robot Image</h3>\n\n<p>Projects an image loaded from file into the scene to represent the robot platform.</p>\n\n<p><strong>Parameters</strong>\n * Image File:  Path to the image file\n * Frame: Frame to tie the image to\n * Width: The physical width represented by the image\n * Height: The physical height represented by the image</p>\n\n<h3 id=""textured-marker"">Textured Marker</h3>\n\n<p>Projects marti_visualization_msgs::TexturedMarker and marti_visualization_msgs::TexturedMarkerArray message data into the scene.</p>\n\n<p>Textured markers follow the same general approach as traditional markers, but can be used to texture dense image data onto a quad which is projected into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The textured marker topic</p>\n\n<h3 id=""tile-map"">Tile Map</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  Data is automatically streamed from <a href=""http://open.mapquest.com/"">OpenMapQuest</a> (satellite and roads) or <a href=""http://maps.stamen.com/"">Stamen Design</a> (terrain, watercolor, and toner).  Custom or local map servers can also be specified.  Map data is cached to disk which enables some limited use completely offline.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/satellite.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/roads.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/terrain.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/watercolor.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/toner.png"" width=""200"" height=""200""></p>\n\n<p><strong>Parameters</strong>\n * Source: The source of the tile data.</p>\n\n<h3 id=""tf-frame"">TF Frame</h3>\n\n<p>Projects <a href=""http://wiki.ros.org/tf"">Tf</a> data into the scene similar to the Odometry plug-in.</p>\n\n<p><strong>Parameters</strong>\n * Frame: The Tf frame\n * Color: The color of the Tf data\n * Draw Style: (lines | points | arrows)\n * Position Tolerance: Distance threshold for adding new Tf points to visualization\n * Buffer Size: Size of circular buffer of Tf points</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mapviz"">Mapviz</h1>\n\n<p>Mapviz is a <a href=""http://www.ros.org/"">ROS</a> based visualization tool with a plug-in system similar to <a href=""http://wiki.ros.org/rviz"">RVIZ</a> focused on visualizing 2D data.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/mapviz.png"" alt=""""></p>\n\n<h2 id=""installation-ros-indigo-jade"">Installation (ROS Indigo, Jade)</h2>\n\n<p>In ROS Indigo, you can install mapviz using apt-get from the ROS apt repository. This is the recommended installation method for ROS Indigo and Jade.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-$ROS_DISTRO-mapviz ros-$ROS_DISTRO-mapviz-plugins\n</code></pre></div>\n<h2 id=""ubuntu-build-status"">Ubuntu Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Indigo (Trusty)</th>\n<th>Jade (Trusty)</th>\n<th>Jade (Utopic)</th>\n<th>Jade (Vivid)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mapviz (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__mapviz__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__mapviz__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__mapviz__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__mapviz__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__mapviz__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__mapviz__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__mapviz__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__mapviz__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>mapviz (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__mapviz__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__mapviz__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__mapviz__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__mapviz__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__mapviz__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__mapviz__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__mapviz__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__mapviz__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>mapviz_plugins (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__mapviz_plugins__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__mapviz_plugins__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__mapviz_plugins__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__mapviz_plugins__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__mapviz_plugins__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__mapviz_plugins__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__mapviz_plugins__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__mapviz_plugins__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>mapviz_plugins (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__mapviz_plugins__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__mapviz_plugins__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__mapviz_plugins__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__mapviz_plugins__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__mapviz_plugins__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__mapviz_plugins__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__mapviz_plugins__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__mapviz_plugins__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>multires_image (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__multires_image__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__multires_image__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__multires_image__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__multires_image__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__multires_image__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__multires_image__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__multires_image__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__multires_image__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>multires_image (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__multires_image__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__multires_image__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__multires_image__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__multires_image__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__multires_image__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__multires_image__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__multires_image__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__multires_image__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>tile_map (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__tile_map__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__tile_map__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__tile_map__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__tile_map__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__tile_map__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__tile_map__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__tile_map__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__tile_map__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>tile_map (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__tile_map__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__tile_map__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__tile_map__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__tile_map__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__tile_map__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__tile_map__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__tile_map__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__tile_map__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""travis-ci-build-status"">Travis CI Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Indigo</th>\n<th>Jade</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=""https://travis-ci.org/swri-robotics/mapviz""><img src=""https://travis-ci.org/swri-robotics/mapviz.svg?branch=indigo-devel"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/swri-robotics/mapviz""><img src=""https://travis-ci.org/swri-robotics/mapviz.svg?branch=jade-devel"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""building-from-source-ros-indigo-jade"">Building From Source (ROS Indigo, Jade)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add these repositories to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">wstool set mapviz --git https://github.com/swri-robotics/mapviz.git -v $ROS_DISTRO-devel\nwstool set marti_common --git https://github.com/swri-robotics/marti_common.git -v $ROS_DISTRO-devel\nwstool set marti_messages --git https://github.com/swri-robotics/marti_messages.git -v indigo-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories directly with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/swri-robotics/mapviz.git --branch $ROS_DISTRO-devel\ngit clone https://github.com/swri-robotics/marti_common.git --branch $ROS_DISTRO-devel\ngit clone https://github.com/swri-robotics/marti_messages.git --branch indigo-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies using rosdep by running the following command from the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n<h2 id=""building-from-source-ros-groovy-hydro"">Building From Source (ROS Groovy, Hydro)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add these repositories to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">wstool set mapviz --git https://github.com/swri-robotics/mapviz.git -v $ROS_DISTRO-devel\nwstool set marti_common --git https://github.com/swri-robotics/marti_common.git -v $ROS_DISTRO-devel\nwstool set marti_messages --git https://github.com/swri-robotics/marti_messages.git -v $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/swri-robotics/mapviz.git --branch $ROS_DISTRO-devel\ngit clone https://github.com/swri-robotics/marti_common.git --branch $ROS_DISTRO-devel\ngit clone https://github.com/swri-robotics/marti_messages.git --branch $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies manually using these two commands:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-$ROS_DISTRO-tf ros-$ROS_DISTRO-common-msgs ros-$ROS_DISTRO-plugin-lib \\\n  ros-$ROS_DISTRO-gps-umd ros-$ROS_DISTRO-nodelet ros-$ROS_DISTRO-cv-bridge \\\n  ros-$ROS_DISTRO-image-geometry ros-$ROS_DISTRO-angles ros-$ROS_DISTRO-camera-calibration-parsers \\\n  ros-$ROS_DISTRO-image-transport\n\nsudo apt-get install yaml-cpp libboost-random-dev libblas-dev liblapack-dev libproj-dev \\\n  libglew-dev freeglut3-dev libxmu-dev libgeos++-dev qt4-dev-tools\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n<h2 id=""plug-ins"">Plug-ins</h2>\n\n<h3 id=""disparity"">Disparity</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/stereo_msgs/html/msg/DisparityImage.html"">sensor_msgs::DisparityImage</a> onto the display using the \'\'jet\'\' color map.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/disparity.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Topic: The disparity topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""gps"">GPS</h3>\n\n<p>Projects <a href=""http://docs.ros.org/hydro/api/gps_common/html/msg/GPSFix.html"">gps_common::GPSFix</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The GPS topic\n * Color: The color of the GPS data\n * Draw Style: (lines | points | arrows)\n * Position Tolerance: Distance threshold for adding new GPS points to visualization\n * Buffer Size: Size of circular buffer of GPS points</p>\n\n<h3 id=""grid"">Grid</h3>\n\n<p>Projects a 2D grid into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Frame: Coordinate frame of the grid\n * Color: Color of the grid\n * Alpha: Alpha transparency of the grid\n * X: X offset of the grid from the specified coordinate frame origin\n * Y: Y offset of the grid from the specified coordinate frame origin\n * Size: Size of each grid cell\n * Rows: Number of grid rows\n * Columns: Number of grid columns</p>\n\n<h3 id=""image"">Image</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/Image.html"">sensor_msgs::Image</a> onto the display.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The image topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""laserscan"">LaserScan</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/LaserScan.html"">sensor_msgs::LaserScan</a> message into the scene.</p>\n\n<ul>\n<li>Topic: The laser scan topic name</li>\n<li>Min Color: The color associated with minimum return intensity</li>\n<li>Max Color: The color associated with maximum return intensity</li>\n<li>Min Intesity: Minimum intensity value</li>\n<li>Max Intensity: Maximum intensity value</li>\n<li>Point Size: Display size of laser scan points in pixels</li>\n<li>Buffer Size: Size of circular buffer of laser scan messages points</li>\n</ul>\n\n<h3 id=""marker"">Marker</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/Marker.html"">visualization_msgs::Marker</a> or <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/MarkerArray.html"">visualization_msgs::MarkerArray</a> into the scene.</p>\n\n<p><a href=""http://wiki.ros.org/rviz/DisplayTypes/Marker"">Markers</a> are the most flexible display type and more or less mirror the <a href=""https://www.opengl.org/wiki/Primitive"">OpenGL primitives</a>.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The marker topic</p>\n\n<h3 id=""multi-res-image"">Multi-res Image</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  The concept is the same as the Google Maps style pan/zoom satellite imagery. </p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/multires2.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Geo File: Path to the geo-referenced map tiles.</p>\n\n<p>A custom format is currently used to store the map tiles and geo-reference. The geo-file has the following format:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">image_path: "".""        # The relative path to the map tiles\nimage_width: 29184     # The full pixel width of the map\nimage_height: 15872    # The full pixel height of the map\ntile_size: 512         # The pixel size of the individual tiles\n\ndatum: ""wgs84""         # Datum is currently ignored\nprojection: ""utm""      # (utm|wgs84)\n\n                       # At least 2 tie points are required for \n                       # scale, and 3 for orientation.\ntiepoints:             #   [pixel x, pixel y, geo x, geo y]\n - point: [4799, 209, 535674.5, 3258382.5]\n - point: [2336, 15596, 535329.5, 3256198.5]\n - point: [26925, 15457, 538837.5, 3256233.5]\n - point: [29133, 84, 539142.5, 3258416.5]\n</code></pre></div>\n<p>The map tiles are stored in directories for each resolution starting with layer0, the full resolution.  In subsequent layers the resolution is halved until the entire map fits within a single tile.  </p>\n\n<p>Tiles are named using the following format: </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">tile%05dx%05d.png % (row, column)\n</code></pre></div>\n<h3 id=""odometry"">Odometry</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Odometry.html"">nav_msgs::Odometry</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The odometry topic\n * Color: The color of the odometry data\n * Draw Style: (lines | points | arrows)\n * Show Covariance: Draw covariance ellipse around latest data\n * Position Tolerance: Distance threshold for adding new odometry points to visualization\n * Buffer Size: Size of circular buffer of odometry points</p>\n\n<h3 id=""path"">Path</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Path.html"">nav_msgs::Path</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The path topic</p>\n\n<h3 id=""point-click-publisher"">Point Click Publisher</h3>\n\n<p>Publishes a <a href=""http://docs.ros.org/api/geometry_msgs/html/msg/PointStamped.html"">geometry_msgs::PointStamped</a> message every time a user clicks on the map frame that corresponds to the clicked location.  </p>\n\n<p><strong>Parameters</strong>\n * Topic: The topic to publish the point to\n * Frame: The target frame to transform the point to before publishing it</p>\n\n<h3 id=""robot-image"">Robot Image</h3>\n\n<p>Projects an image loaded from file into the scene to represent the robot platform.</p>\n\n<p><strong>Parameters</strong>\n * Image File:  Path to the image file\n * Frame: Frame to tie the image to\n * Width: The physical width represented by the image\n * Height: The physical height represented by the image</p>\n\n<h3 id=""string"">String</h3>\n\n<p>Displays the most recent string from a std_msgs::String message at a fixed location on the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The string topic\n * Font: The font for rendering the string\n * Color: The color for drawing the string\n * Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n * Offset X: Horizontal offset from the anchor\n * Offset Y: Vertical offset from the anchor\n * Units: (pixels | percent of window)</p>\n\n<h3 id=""textured-marker"">Textured Marker</h3>\n\n<p>Projects marti_visualization_msgs::TexturedMarker and marti_visualization_msgs::TexturedMarkerArray message data into the scene.</p>\n\n<p>Textured markers follow the same general approach as traditional markers, but can be used to texture dense image data onto a quad which is projected into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The textured marker topic</p>\n\n<h3 id=""tile-map"">Tile Map</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  Data is automatically streamed from <a href=""http://open.mapquest.com/"">OpenMapQuest</a> (satellite and roads) or <a href=""http://maps.stamen.com/"">Stamen Design</a> (terrain, watercolor, and toner).  Custom or local map servers can also be specified.  Map data is cached to disk which enables some limited use completely offline.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/satellite.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/roads.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/terrain.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/watercolor.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/toner.png"" width=""200"" height=""200""></p>\n\n<p><strong>Parameters</strong>\n * Source: The source of the tile data.</p>\n\n<h3 id=""tf-frame"">TF Frame</h3>\n\n<p>Projects <a href=""http://wiki.ros.org/tf"">Tf</a> data into the scene similar to the Odometry plug-in.</p>\n\n<p><strong>Parameters</strong>\n * Frame: The Tf frame\n * Color: The color of the Tf data\n * Draw Style: (lines | points | arrows)\n * Position Tolerance: Distance threshold for adding new Tf points to visualization\n * Buffer Size: Size of circular buffer of Tf points</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mapviz"">mapviz</h1>\n\n<p>Mapviz is a <a href=""http://www.ros.org/"">ROS</a> based visualization tool with a plug-in system similar to <a href=""http://wiki.ros.org/rviz"">RVIZ</a> focused on visualizing 2D data.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/mapviz.png"" alt=""""></p>\n\n<p>Mapviz currently depends on the <a href=""https://github.com/swri-robotics/marti_common"">marti_common</a> and  <a href=""https://github.com/swri-robotics/marti_messages"">marti_messages</a> repositories for some utility functions and message definitions.</p>\n\n<p>Mapviz should be compatible with Ubuntu 12.04 through Ubuntu 14.04 and ROS Fuerte, Groovy, Hydro, and Indigo.  The <em>master</em> branch uses the <a href=""http://wiki.ros.org/rosbuild"">rosbuild</a> make system and the <em>catkin</em> branch uses <a href=""http://wiki.ros.org/catkin"">catkin</a>.</p>\n\n<p>Installing ROS <a href=""http://wiki.ros.org/fuerte/Installation/Ubuntu"">Fuerte</a>, <a href=""http://wiki.ros.org/groovy/Installation/Ubuntu"">Groovy</a>, <a href=""http://wiki.ros.org/hydro/Installation/Ubuntu"">Hydro</a>, or <a href=""http://wiki.ros.org/indigo/Installation/Ubuntu"">Indigo</a></p>\n\n<p>Additional Ubuntu dependencies beyond ROS base for mapviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-XXXX-tf ros-XXXX-common-msgs ros-XXXX-plugin-lib ros-XXXX-gps-umd \\\n    ros-XXXX-nodelet ros-XXXX-cv-bridge ros-XXXX-image-geometry ros-XXXX-angles \\\n    ros-XXXX-camera-calibration-parsers ros-XXXX-image-transport\n\n$ sudo apt-get install yaml-cpp libboost-random-dev libblas-dev liblapack-dev libproj-dev \\\n    libglew-dev freeglut3-dev libxmu-dev libgeos++-dev qt4-dev-tools\n</code></pre></div>\n<h2 id=""plug-ins"">Plug-ins</h2>\n\n<h3 id=""disparity"">Disparity</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/stereo_msgs/html/msg/DisparityImage.html"">sensor_msgs::DisparityImage</a> onto the display using the \'\'jet\'\' color map.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/disparity.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Topic: The disparity topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""gps"">GPS</h3>\n\n<p>Projects <a href=""http://docs.ros.org/hydro/api/gps_common/html/msg/GPSFix.html"">gps_common::GPSFix</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The GPS topic\n * Color: The color of the GPS data\n * Draw Style: (lines | points | arrows)\n * Position Tolerance: Distance threshold for adding new GPS points to visualization\n * Buffer Size: Size of circular buffer of GPS points</p>\n\n<h3 id=""grid"">Grid</h3>\n\n<p>Projects a 2D grid into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Frame: Coordinate frame of the grid\n * Color: Color of the grid\n * Alpha: Alpha transparency of the grid\n * X: X offset of the grid from the specified coordinate frame origin\n * Y: Y offset of the grid from the specified coordinate frame origin\n * Size: Size of each grid cell\n * Rows: Number of grid rows\n * Columns: Number of grid columns</p>\n\n<h3 id=""image"">Image</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/Image.html"">sensor_msgs::Image</a> onto the display.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The image topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""laserscan"">LaserScan</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/LaserScan.html"">sensor_msgs::LaserScan</a> message into the scene.</p>\n\n<ul>\n<li>Topic: The laser scan topic name</li>\n<li>Min Color: The color associated with minimum return intensity</li>\n<li>Max Color: The color associated with maximum return intensity</li>\n<li>Min Intesity: Minimum intensity value</li>\n<li>Max Intensity: Maximum intensity value</li>\n<li>Point Size: Display size of laser scan points in pixels</li>\n<li>Buffer Size: Size of circular buffer of laser scan messages points</li>\n</ul>\n\n<h3 id=""marker"">Marker</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/Marker.html"">visualization_msgs::Marker</a> or <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/MarkerArray.html"">visualization_msgs::MarkerArray</a> into the scene.</p>\n\n<p><a href=""http://wiki.ros.org/rviz/DisplayTypes/Marker"">Markers</a> are the most flexible display type and more or less mirror the <a href=""https://www.opengl.org/wiki/Primitive"">OpenGL primitives</a>.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The marker topic</p>\n\n<h3 id=""multi-res-image"">Multi-res Image</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  The concept is the same as the Google Maps style pan/zoom satellite imagery. </p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/multires2.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Geo File: Path to the geo-referenced map tiles.</p>\n\n<p>A custom format is currently used to store the map tiles and geo-reference. The geo-file has the following format:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">image_path: "".""        # The relative path to the map tiles\nimage_width: 29184     # The full pixel width of the map\nimage_height: 15872    # The full pixel height of the map\ntile_size: 512         # The pixel size of the individual tiles\n\ndatum: ""wgs84""         # Datum is currently ignored\nprojection: ""utm""      # (utm|wgs84)\n\n                       # At least 2 tie points are required for \n                       # scale, and 3 for orientation.\ntiepoints:             #   [pixel x, pixel y, geo x, geo y]\n - point: [4799, 209, 535674.5, 3258382.5]\n - point: [2336, 15596, 535329.5, 3256198.5]\n - point: [26925, 15457, 538837.5, 3256233.5]\n - point: [29133, 84, 539142.5, 3258416.5]\n</code></pre></div>\n<p>The map tiles are stored in directories for each resolution starting with layer0, the full resolution.  In subsequent layers the resolution is halved until the entire map fits within a single tile.  </p>\n\n<p>Tiles are named using the following format: </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">tile%05dx%05d.png % (row, column)\n</code></pre></div>\n<h3 id=""odometry"">Odometry</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Odometry.html"">nav_msgs::Odometry</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The odometry topic\n * Color: The color of the odometry data\n * Draw Style: (lines | points | arrows)\n * Show Covariance: Draw covariance ellipse around latest data\n * Position Tolerance: Distance threshold for adding new odometry points to visualization\n * Buffer Size: Size of circular buffer of odometry points</p>\n\n<h3 id=""path"">Path</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Path.html"">nav_msgs::Path</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The path topic</p>\n\n<h3 id=""robot-image"">Robot Image</h3>\n\n<p>Projects an image loaded from file into the scene to represent the robot platform.</p>\n\n<p><strong>Parameters</strong>\n * Image File:  Path to the image file\n * Frame: Frame to tie the image to\n * Width: The physical width represented by the image\n * Height: The physical height represented by the image</p>\n\n<h3 id=""textured-marker"">Textured Marker</h3>\n\n<p>Projects marti_visualization_msgs::TexturedMarker and marti_visualization_msgs::TexturedMarkerArray message data into the scene.</p>\n\n<p>Textured markers follow the same general approach as traditional markers, but can be used to texture dense image data onto a quad which is projected into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The textured marker topic</p>\n\n<h3 id=""tile-map"">Tile Map</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  Data is automatically streamed from <a href=""http://open.mapquest.com/"">OpenMapQuest</a> (satellite and roads) or <a href=""http://maps.stamen.com/"">Stamen Design</a> (terrain, watercolor, and toner).  Custom or local map servers can also be specified.  Map data is cached to disk which enables some limited use completely offline.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/satellite.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/roads.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/terrain.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/watercolor.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/toner.png"" width=""200"" height=""200""></p>\n\n<p><strong>Parameters</strong>\n * Source: The source of the tile data.</p>\n\n<h3 id=""tf-frame"">TF Frame</h3>\n\n<p>Projects <a href=""http://wiki.ros.org/tf"">Tf</a> data into the scene similar to the Odometry plug-in.</p>\n\n<p><strong>Parameters</strong>\n * Frame: The Tf frame\n * Color: The color of the Tf data\n * Draw Style: (lines | points | arrows)\n * Position Tolerance: Distance threshold for adding new Tf points to visualization\n * Buffer Size: Size of circular buffer of Tf points</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mapviz"">Mapviz</h1>\n\n<p><a href=""https://travis-ci.org/swri-robotics/mapviz""><img src=""https://travis-ci.org/swri-robotics/mapviz.svg?branch=kinetic-devel"" alt=""Build Status""></a></p>\n\n<p>Mapviz is a <a href=""http://www.ros.org/"">ROS</a> based visualization tool with a plug-in system similar to <a href=""http://wiki.ros.org/rviz"">RVIZ</a> focused on visualizing 2D data.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/mapviz.png"" alt=""""></p>\n\n<h2 id=""installation-ros-indigo-jade"">Installation (ROS Indigo, Jade)</h2>\n\n<p>In ROS Indigo, you can install mapviz using apt-get from the ROS apt repository. This is the recommended installation method for ROS Indigo and Jade.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-$ROS_DISTRO-mapviz ros-$ROS_DISTRO-mapviz-plugins\n</code></pre></div>\n<h2 id=""building-from-source-ros-indigo-jade-kinetic"">Building From Source (ROS Indigo, Jade, Kinetic)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add these repositories to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">wstool set mapviz --git https://github.com/swri-robotics/mapviz.git -v $ROS_DISTRO-devel\nwstool set marti_common --git https://github.com/swri-robotics/marti_common.git -v $ROS_DISTRO-devel\nwstool set marti_messages --git https://github.com/swri-robotics/marti_messages.git -v indigo-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/swri-robotics/mapviz.git --branch $ROS_DISTRO-devel\ngit clone https://github.com/swri-robotics/marti_common.git --branch $ROS_DISTRO-devel\ngit clone https://github.com/swri-robotics/marti_messages.git --branch indigo-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies using rosdep by running the following command from the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n<h2 id=""building-from-source-ros-groovy-hydro"">Building From Source (ROS Groovy, Hydro)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add this repository to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">wstool set mapviz --git https://github.com/swri-robotics/mapviz.git -v $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/swri-robotics/mapviz.git --branch $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies manually using these two commands:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-$ROS_DISTRO-tf ros-$ROS_DISTRO-common-msgs ros-$ROS_DISTRO-plugin-lib \\\n  ros-$ROS_DISTRO-gps-umd ros-$ROS_DISTRO-nodelet ros-$ROS_DISTRO-cv-bridge \\\n  ros-$ROS_DISTRO-image-geometry ros-$ROS_DISTRO-angles ros-$ROS_DISTRO-camera-calibration-parsers \\\n  ros-$ROS_DISTRO-image-transport\n\nsudo apt-get install yaml-cpp libboost-random-dev libblas-dev liblapack-dev libproj-dev \\\n  libglew-dev freeglut3-dev libxmu-dev libgeos++-dev qt4-dev-tools\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n<h2 id=""plug-ins"">Plug-ins</h2>\n\n<h3 id=""disparity"">Disparity</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/stereo_msgs/html/msg/DisparityImage.html"">sensor_msgs::DisparityImage</a> onto the display using the \'\'jet\'\' color map.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/disparity.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Topic: The disparity topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""navsat-gps"">NavSat (GPS)</h3>\n\n<p>Projects <a href=""http://http://docs.ros.org/jade/api/sensor_msgs/html/msg/NavSatFix.html"">sensor_msgs::NavSatFix</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The GPS topic\n * Color: The color of the GPS data\n * Draw Style: (lines | points)\n * Position Tolerance: Distance threshold for adding new GPS points to visualization\n * Buffer Size: Size of circular buffer of GPS points</p>\n\n<h3 id=""grid"">Grid</h3>\n\n<p>Projects a 2D grid into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Frame: Coordinate frame of the grid\n * Color: Color of the grid\n * Alpha: Alpha transparency of the grid\n * X: X offset of the grid from the specified coordinate frame origin\n * Y: Y offset of the grid from the specified coordinate frame origin\n * Size: Size of each grid cell\n * Rows: Number of grid rows\n * Columns: Number of grid columns</p>\n\n<h3 id=""image"">Image</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/Image.html"">sensor_msgs::Image</a> onto the display.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The image topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""laserscan"">LaserScan</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/LaserScan.html"">sensor_msgs::LaserScan</a> message into the scene.</p>\n\n<ul>\n<li>Topic: The laser scan topic name</li>\n<li>Min Color: The color associated with minimum return intensity</li>\n<li>Max Color: The color associated with maximum return intensity</li>\n<li>Min Intesity: Minimum intensity value</li>\n<li>Max Intensity: Maximum intensity value</li>\n<li>Point Size: Display size of laser scan points in pixels</li>\n<li>Buffer Size: Size of circular buffer of laser scan messages points</li>\n</ul>\n\n<h3 id=""marker"">Marker</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/Marker.html"">visualization_msgs::Marker</a> or <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/MarkerArray.html"">visualization_msgs::MarkerArray</a> into the scene.</p>\n\n<p><a href=""http://wiki.ros.org/rviz/DisplayTypes/Marker"">Markers</a> are the most flexible display type and more or less mirror the <a href=""https://www.opengl.org/wiki/Primitive"">OpenGL primitives</a>.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The marker topic</p>\n\n<h3 id=""multi-res-image"">Multi-res Image</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  The concept is the same as the Google Maps style pan/zoom satellite imagery. </p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/multires2.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Geo File: Path to the geo-referenced map tiles.</p>\n\n<p>A custom format is currently used to store the map tiles and geo-reference. The geo-file has the following format:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">image_path: "".""        # The relative path to the map tiles\nimage_width: 29184     # The full pixel width of the map\nimage_height: 15872    # The full pixel height of the map\ntile_size: 512         # The pixel size of the individual tiles\n\ndatum: ""wgs84""         # Datum is currently ignored\nprojection: ""utm""      # (utm|wgs84)\n\n                       # At least 2 tie points are required for \n                       # scale, and 3 for orientation.\ntiepoints:             #   [pixel x, pixel y, geo x, geo y]\n - point: [4799, 209, 535674.5, 3258382.5]\n - point: [2336, 15596, 535329.5, 3256198.5]\n - point: [26925, 15457, 538837.5, 3256233.5]\n - point: [29133, 84, 539142.5, 3258416.5]\n</code></pre></div>\n<p>The map tiles are stored in directories for each resolution starting with layer0, the full resolution.  In subsequent layers the resolution is halved until the entire map fits within a single tile.  </p>\n\n<p>Tiles are named using the following format: </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">tile%05dx%05d.png % (row, column)\n</code></pre></div>\n<h3 id=""odometry"">Odometry</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Odometry.html"">nav_msgs::Odometry</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The odometry topic\n * Color: The color of the odometry data\n * Draw Style: (lines | points | arrows)\n * Show Covariance: Draw covariance ellipse around latest data\n * Position Tolerance: Distance threshold for adding new odometry points to visualization\n * Buffer Size: Size of circular buffer of odometry points</p>\n\n<h3 id=""path"">Path</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Path.html"">nav_msgs::Path</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The path topic</p>\n\n<h3 id=""point-click-publisher"">Point Click Publisher</h3>\n\n<p>Publishes a <a href=""http://docs.ros.org/api/geometry_msgs/html/msg/PointStamped.html"">geometry_msgs::PointStamped</a> message every time a user clicks on the map frame that corresponds to the clicked location.  </p>\n\n<p><strong>Parameters</strong>\n * Topic: The topic to publish the point to\n * Frame: The target frame to transform the point to before publishing it</p>\n\n<h3 id=""robot-image"">Robot Image</h3>\n\n<p>Projects an image loaded from file into the scene to represent the robot platform.</p>\n\n<p><strong>Parameters</strong>\n * Image File:  Path to the image file\n * Frame: Frame to tie the image to\n * Width: The physical width represented by the image\n * Height: The physical height represented by the image</p>\n\n<h3 id=""string"">String</h3>\n\n<p>Displays the most recent string from a std_msgs::String message at a fixed location on the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The string topic\n * Font: The font for rendering the string\n * Color: The color for drawing the string\n * Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n * Offset X: Horizontal offset from the anchor\n * Offset Y: Vertical offset from the anchor\n * Units: (pixels | percent of window)</p>\n\n<h3 id=""textured-marker"">Textured Marker</h3>\n\n<p>Projects marti_visualization_msgs::TexturedMarker and marti_visualization_msgs::TexturedMarkerArray message data into the scene.</p>\n\n<p>Textured markers follow the same general approach as traditional markers, but can be used to texture dense image data onto a quad which is projected into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The textured marker topic</p>\n\n<h3 id=""tile-map"">Tile Map</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  Data is automatically streamed from <a href=""http://open.mapquest.com/"">OpenMapQuest</a> (satellite and roads) or <a href=""http://maps.stamen.com/"">Stamen Design</a> (terrain, watercolor, and toner).  Custom or local map servers can also be specified.  Map data is cached to disk which enables some limited use completely offline.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/satellite.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/roads.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/terrain.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/watercolor.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/toner.png"" width=""200"" height=""200""></p>\n\n<p><strong>Parameters</strong>\n * Source: The source of the tile data.</p>\n\n<h3 id=""tf-frame"">TF Frame</h3>\n\n<p>Projects <a href=""http://wiki.ros.org/tf"">Tf</a> data into the scene similar to the Odometry plug-in.</p>\n\n<p><strong>Parameters</strong>\n * Frame: The Tf frame\n * Color: The color of the Tf data\n * Draw Style: (lines | points | arrows)\n * Position Tolerance: Distance threshold for adding new Tf points to visualization\n * Buffer Size: Size of circular buffer of Tf points</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mapviz"">Mapviz</h1>\n\n<p>Mapviz is a <a href=""http://www.ros.org/"">ROS</a> based visualization tool with a plug-in system similar to <a href=""http://wiki.ros.org/rviz"">RVIZ</a> focused on visualizing 2D data.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/mapviz.png"" alt=""""></p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Indigo (Saucy)</th>\n<th>Indigo (Trusty)</th>\n<th>Jade (Trusty)</th>\n<th>Jade (Utopic)</th>\n<th>Jade (Vivid)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mapviz (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__mapviz__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__mapviz__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__mapviz__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__mapviz__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__mapviz__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__mapviz__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__mapviz__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__mapviz__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__mapviz__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__mapviz__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>mapviz (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__mapviz__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__mapviz__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__mapviz__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__mapviz__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__mapviz__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__mapviz__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__mapviz__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__mapviz__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__mapviz__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__mapviz__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>mapviz_plugins (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__mapviz_plugins__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__mapviz_plugins__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__mapviz_plugins__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__mapviz_plugins__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__mapviz_plugins__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__mapviz_plugins__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__mapviz_plugins__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__mapviz_plugins__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__mapviz_plugins__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__mapviz_plugins__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>mapviz_plugins (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__mapviz_plugins__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__mapviz_plugins__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__mapviz_plugins__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__mapviz_plugins__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__mapviz_plugins__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__mapviz_plugins__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__mapviz_plugins__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__mapviz_plugins__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__mapviz_plugins__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__mapviz_plugins__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>multires_image (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__multires_image__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__multires_image__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__multires_image__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__multires_image__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__multires_image__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__multires_image__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__multires_image__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__multires_image__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__multires_image__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__multires_image__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>multires_image (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__multires_image__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__multires_image__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__multires_image__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__multires_image__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__multires_image__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__multires_image__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__multires_image__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__multires_image__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__multires_image__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__multires_image__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>tile_map (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__tile_map__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__tile_map__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__tile_map__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__tile_map__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__tile_map__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__tile_map__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__tile_map__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__tile_map__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__tile_map__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__tile_map__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>tile_map (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__tile_map__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__tile_map__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__tile_map__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__tile_map__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__tile_map__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__tile_map__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__tile_map__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__tile_map__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__tile_map__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__tile_map__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""travis-ci-build-status"">Travis CI Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Indigo</th>\n<th>Jade</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=""https://travis-ci.org/swri-robotics/mapviz""><img src=""https://travis-ci.org/swri-robotics/mapviz.svg?branch=indigo-devel"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/swri-robotics/mapviz""><img src=""https://travis-ci.org/swri-robotics/mapviz.svg?branch=jade-devel"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""installation-ros-indigo-jade"">Installation (ROS Indigo, Jade)</h2>\n\n<p>In ROS Indigo, you can install mapviz using apt-get from the ROS apt repository. This is the recommended installation method for ROS Indigo and Jade.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-$ROS_DISTRO-mapviz ros-$ROS_DISTRO-mapviz-plugins\n</code></pre></div>\n<h2 id=""building-from-source-ros-indigo-jade"">Building From Source (ROS Indigo, Jade)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add these repositories to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">wstool set mapviz --git https://github.com/swri-robotics/mapviz.git -v $ROS_DISTRO-devel\nwstool set marti_common --git https://github.com/swri-robotics/marti_common.git -v $ROS_DISTRO-devel\nwstool set marti_messages --git https://github.com/swri-robotics/marti_messages.git -v indigo-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/swri-robotics/mapviz.git --branch $ROS_DISTRO-devel\ngit clone https://github.com/swri-robotics/marti_common.git --branch $ROS_DISTRO-devel\ngit clone https://github.com/swri-robotics/marti_messages.git --branch indigo-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies using rosdep by running the following command from the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n<h2 id=""building-from-source-ros-groovy-hydro"">Building From Source (ROS Groovy, Hydro)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add this repository to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">wstool set mapviz --git https://github.com/swri-robotics/mapviz.git -v $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/swri-robotics/mapviz.git --branch $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies manually using these two commands:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-$ROS_DISTRO-tf ros-$ROS_DISTRO-common-msgs ros-$ROS_DISTRO-plugin-lib \\\n  ros-$ROS_DISTRO-gps-umd ros-$ROS_DISTRO-nodelet ros-$ROS_DISTRO-cv-bridge \\\n  ros-$ROS_DISTRO-image-geometry ros-$ROS_DISTRO-angles ros-$ROS_DISTRO-camera-calibration-parsers \\\n  ros-$ROS_DISTRO-image-transport\n\nsudo apt-get install yaml-cpp libboost-random-dev libblas-dev liblapack-dev libproj-dev \\\n  libglew-dev freeglut3-dev libxmu-dev libgeos++-dev qt4-dev-tools\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n<h2 id=""plug-ins"">Plug-ins</h2>\n\n<h3 id=""disparity"">Disparity</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/stereo_msgs/html/msg/DisparityImage.html"">sensor_msgs::DisparityImage</a> onto the display using the \'\'jet\'\' color map.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/disparity.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Topic: The disparity topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""navsat-gps"">NavSat (GPS)</h3>\n\n<p>Projects <a href=""http://http://docs.ros.org/jade/api/sensor_msgs/html/msg/NavSatFix.html"">sensor_msgs::NavSatFix</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The GPS topic\n * Color: The color of the GPS data\n * Draw Style: (lines | points)\n * Position Tolerance: Distance threshold for adding new GPS points to visualization\n * Buffer Size: Size of circular buffer of GPS points</p>\n\n<h3 id=""grid"">Grid</h3>\n\n<p>Projects a 2D grid into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Frame: Coordinate frame of the grid\n * Color: Color of the grid\n * Alpha: Alpha transparency of the grid\n * X: X offset of the grid from the specified coordinate frame origin\n * Y: Y offset of the grid from the specified coordinate frame origin\n * Size: Size of each grid cell\n * Rows: Number of grid rows\n * Columns: Number of grid columns</p>\n\n<h3 id=""image"">Image</h3>\n\n<p>Overlays a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/Image.html"">sensor_msgs::Image</a> onto the display.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The image topic name\n* Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n* Offset X: Display offset from the left\n* Offset Y: Display offset from the top\n* Width: Display width\n* Height: Display height\n* Units: (pixels | percent of window)</p>\n\n<h3 id=""laserscan"">LaserScan</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/LaserScan.html"">sensor_msgs::LaserScan</a> message into the scene.</p>\n\n<ul>\n<li>Topic: The laser scan topic name</li>\n<li>Min Color: The color associated with minimum return intensity</li>\n<li>Max Color: The color associated with maximum return intensity</li>\n<li>Min Intesity: Minimum intensity value</li>\n<li>Max Intensity: Maximum intensity value</li>\n<li>Point Size: Display size of laser scan points in pixels</li>\n<li>Buffer Size: Size of circular buffer of laser scan messages points</li>\n</ul>\n\n<h3 id=""marker"">Marker</h3>\n\n<p>Projects a <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/Marker.html"">visualization_msgs::Marker</a> or <a href=""http://docs.ros.org/api/visualization_msgs/html/msg/MarkerArray.html"">visualization_msgs::MarkerArray</a> into the scene.</p>\n\n<p><a href=""http://wiki.ros.org/rviz/DisplayTypes/Marker"">Markers</a> are the most flexible display type and more or less mirror the <a href=""https://www.opengl.org/wiki/Primitive"">OpenGL primitives</a>.</p>\n\n<p><strong>Parameters</strong>\n* Topic: The marker topic</p>\n\n<h3 id=""multi-res-image"">Multi-res Image</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  The concept is the same as the Google Maps style pan/zoom satellite imagery. </p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/multires2.png"" alt=""""></p>\n\n<p><strong>Parameters</strong>\n* Geo File: Path to the geo-referenced map tiles.</p>\n\n<p>A custom format is currently used to store the map tiles and geo-reference. The geo-file has the following format:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">image_path: "".""        # The relative path to the map tiles\nimage_width: 29184     # The full pixel width of the map\nimage_height: 15872    # The full pixel height of the map\ntile_size: 512         # The pixel size of the individual tiles\n\ndatum: ""wgs84""         # Datum is currently ignored\nprojection: ""utm""      # (utm|wgs84)\n\n                       # At least 2 tie points are required for \n                       # scale, and 3 for orientation.\ntiepoints:             #   [pixel x, pixel y, geo x, geo y]\n - point: [4799, 209, 535674.5, 3258382.5]\n - point: [2336, 15596, 535329.5, 3256198.5]\n - point: [26925, 15457, 538837.5, 3256233.5]\n - point: [29133, 84, 539142.5, 3258416.5]\n</code></pre></div>\n<p>The map tiles are stored in directories for each resolution starting with layer0, the full resolution.  In subsequent layers the resolution is halved until the entire map fits within a single tile.  </p>\n\n<p>Tiles are named using the following format: </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">tile%05dx%05d.png % (row, column)\n</code></pre></div>\n<h3 id=""odometry"">Odometry</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Odometry.html"">nav_msgs::Odometry</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The odometry topic\n * Color: The color of the odometry data\n * Draw Style: (lines | points | arrows)\n * Show Covariance: Draw covariance ellipse around latest data\n * Position Tolerance: Distance threshold for adding new odometry points to visualization\n * Buffer Size: Size of circular buffer of odometry points</p>\n\n<h3 id=""path"">Path</h3>\n\n<p>Projects <a href=""http://docs.ros.org/api/nav_msgs/html/msg/Path.html"">nav_msgs::Path</a> message data into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The path topic</p>\n\n<h3 id=""point-click-publisher"">Point Click Publisher</h3>\n\n<p>Publishes a <a href=""http://docs.ros.org/api/geometry_msgs/html/msg/PointStamped.html"">geometry_msgs::PointStamped</a> message every time a user clicks on the map frame that corresponds to the clicked location.  </p>\n\n<p><strong>Parameters</strong>\n * Topic: The topic to publish the point to\n * Frame: The target frame to transform the point to before publishing it</p>\n\n<h3 id=""robot-image"">Robot Image</h3>\n\n<p>Projects an image loaded from file into the scene to represent the robot platform.</p>\n\n<p><strong>Parameters</strong>\n * Image File:  Path to the image file\n * Frame: Frame to tie the image to\n * Width: The physical width represented by the image\n * Height: The physical height represented by the image</p>\n\n<h3 id=""string"">String</h3>\n\n<p>Displays the most recent string from a std_msgs::String message at a fixed location on the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The string topic\n * Font: The font for rendering the string\n * Color: The color for drawing the string\n * Anchor: (top left | top center | top right | center left | center | center right | bottom left | bottom center | bottom right)\n * Offset X: Horizontal offset from the anchor\n * Offset Y: Vertical offset from the anchor\n * Units: (pixels | percent of window)</p>\n\n<h3 id=""textured-marker"">Textured Marker</h3>\n\n<p>Projects marti_visualization_msgs::TexturedMarker and marti_visualization_msgs::TexturedMarkerArray message data into the scene.</p>\n\n<p>Textured markers follow the same general approach as traditional markers, but can be used to texture dense image data onto a quad which is projected into the scene.</p>\n\n<p><strong>Parameters</strong>\n * Topic: The textured marker topic</p>\n\n<h3 id=""tile-map"">Tile Map</h3>\n\n<p>Projects a geo-referenced multi-resolution image tile map into the scene.  Data is automatically streamed from <a href=""http://open.mapquest.com/"">OpenMapQuest</a> (satellite and roads) or <a href=""http://maps.stamen.com/"">Stamen Design</a> (terrain, watercolor, and toner).  Custom or local map servers can also be specified.  Map data is cached to disk which enables some limited use completely offline.</p>\n\n<p><img src=""https://github.com/swri-robotics/mapviz/wiki/satellite.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/roads.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/terrain.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/watercolor.png"" width=""200"" height=""200"">\n<img src=""https://github.com/swri-robotics/mapviz/wiki/toner.png"" width=""200"" height=""200""></p>\n\n<p><strong>Parameters</strong>\n * Source: The source of the tile data.</p>\n\n<h3 id=""tf-frame"">TF Frame</h3>\n\n<p>Projects <a href=""http://wiki.ros.org/tf"">Tf</a> data into the scene similar to the Odometry plug-in.</p>\n\n<p><strong>Parameters</strong>\n * Frame: The Tf frame\n * Color: The color of the Tf data\n * Draw Style: (lines | points | arrows)\n * Position Tolerance: Distance threshold for adding new Tf points to visualization\n * Buffer Size: Size of circular buffer of Tf points</p>\n</div>\n\n            \n          </div>'"
moveit_docs,http://rosindex.github.io/r/moveit_docs/,"hydro,groovy,kinetic,jade,indigo",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
moveit_planners,http://rosindex.github.io/r/moveit_planners/,"hydro,fuerte,groovy,kinetic,jade,indigo","chomp_motion_planner,chomp_interface_ros,moveit_planners,moveit_planners_ompl,sbpl_interface,sbpl_interface_ros,ompl_interface,ompl_interface_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit_planners"">moveit_planners</h1>\n\n<p>Interfaces for the motion planning libraries used in MoveIt</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/ros-planning/moveit_planners""><img src=""https://travis-ci.org/ros-planning/moveit_planners.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit_planners"">moveit_planners</h1>\n\n<p>Interfaces for the motion planning libraries used in MoveIt</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tuw_visual_marker,http://rosindex.github.io/r/tuw_visual_marker/,kinetic,"tuw_artoolkitplus,tuw_ellipses,tuw_marker_detection","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""tuw_visual_marker"">tuw_visual_marker</h1>\n\n<p>This is a ros package collection to detect visual markers.\nIt contains a node to detect artags, ellipses and a camera library optimized for Logitech cameras.</p>\n\n<h1 id=""tuw_uvc"">tuw_uvc</h1>\n\n<h2 id=""dependencies"">Dependencies</h2>\n\n<p>sudo apt-get install libv4l-dev\nsudo apt-get install libsdl1.2-dev</p>\n</div>\n\n            \n          </div>'"
sick_tim,http://rosindex.github.io/r/sick_tim/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo",sick_tim,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
marti_common,http://rosindex.github.io/r/marti_common/,"hydro,fuerte,groovy,kinetic,jade,indigo","marti_data_structures,swri_console_util,swri_geometry_util,swri_image_util,swri_math_util,swri_nodelet,swri_opencv_util,swri_prefix_tools,swri_roscpp,swri_route_util,swri_serial_util,swri_string_util,swri_system_util,swri_transform_util,swri_yaml_util,swri_rospy,console_util,geometry_util,image_util,math_util,opencv_util,prefix_tools,serial_util,string_util,system_util,transform_util,yaml_util,build_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""marti_common"">marti_common</h1>\n\n<p>This repository provides various utility functions for MARTI.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""marti_common"">marti_common</h1>\n\n<p><a href=""https://travis-ci.org/swri-robotics/marti_common""><img src=""https://travis-ci.org/swri-robotics/marti_common.svg?branch=kinetic-devel"" alt=""Build Status""></a></p>\n\n<p>This repository provides various utility packages created at <a href=""http://www.swri.org"">Southwest Reseach Institute</a>\'s <a href=""http://www.swri.org/4org/d10/isd/ivs/default.htm"">Intelligent Vehicle Systems</a> section for working with <a href=""http://www.ros.org"">Robot Operating System(ROS)</a>.</p>\n\n<h2 id=""installation-ros-indigo-jade"">Installation (ROS Indigo, Jade)</h2>\n\n<p>If you have installed ROS Indigo or Jade, you can install any of the packages in this repository with apt-get:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-$ROS_DISTRO-&lt;package&gt;\n</code></pre></div>\n<h2 id=""building-from-source-ros-indigo-jade-kinetic"">Building From Source (ROS Indigo, Jade, Kinetic)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add this repository to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace $ROS_DISTRO with indigo, jade, or kinetic as appropriate\nwstool set marti_common --git https://github.com/swri-robotics/marti_common.git -v $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace $ROS_DISTRO with indigo, jade, or kinetic as appropriate\ngit clone https://github.com/swri-robotics/marti_common.git --branch $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies using rosdep by running the following command from the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""marti_common"">marti_common</h1>\n\n<p><a href=""https://travis-ci.org/swri-robotics/marti_common""><img src=""https://travis-ci.org/swri-robotics/marti_common.svg?branch=indigo-devel"" alt=""Build Status""></a></p>\n\n<p>This repository provides various utility packages created at <a href=""http://www.swri.org"">Southwest Reseach Institute</a>\'s <a href=""http://www.swri.org/4org/d10/isd/ivs/default.htm"">Intelligent Vehicle Systems</a> section for working with <a href=""http://www.ros.org"">Robot Operating System(ROS)</a>.</p>\n\n<h2 id=""installation-ros-indigo-jade"">Installation (ROS Indigo, Jade)</h2>\n\n<p>If you have installed ROS Indigo or Jade, you can install any of the packages in this repository with apt-get:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-&lt;distro&gt;-&lt;package&gt;\n</code></pre></div>\n<h2 id=""building-from-source-ros-indigo-jade"">Building From Source (ROS Indigo, Jade)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add this repository to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace $ROS_DISTRO with indigo or jade as appropriate\nwstool set mapviz --git https://github.com/swri-robotics/marti_common.git -v $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace $ROS_DISTRO with indigo or jade as appropriate\ngit clone https://github.com/swri-robotics/marti_common.git --branch $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies using rosdep by running the following command from the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""marti_common"">marti_common</h1>\n\n<p><a href=""https://travis-ci.org/swri-robotics/marti_common""><img src=""https://travis-ci.org/swri-robotics/marti_common.svg?branch=jade-devel"" alt=""Build Status""></a></p>\n\n<p>This repository provides various utility packages created at <a href=""http://www.swri.org"">Southwest Reseach Institute</a>\'s <a href=""http://www.swri.org/4org/d10/isd/ivs/default.htm"">Intelligent Vehicle Systems</a> section for working with <a href=""http://www.ros.org"">Robot Operating System(ROS)</a>.</p>\n\n<h2 id=""installation-ros-indigo-jade"">Installation (ROS Indigo, Jade)</h2>\n\n<p>If you have installed ROS Indigo or Jade, you can install any of the packages in this repository with apt-get:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-&lt;distro&gt;-&lt;package&gt;\n</code></pre></div>\n<h2 id=""building-from-source-ros-indigo-jade"">Building From Source (ROS Indigo, Jade)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add this repository to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace $ROS_DISTRO with indigo or jade as appropriate\nwstool set mapviz --git https://github.com/swri-robotics/marti_common.git -v $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace $ROS_DISTRO with indigo or jade as appropriate\ngit clone https://github.com/swri-robotics/marti_common.git --branch $ROS_DISTRO-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies using rosdep by running the following command from the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n</div>\n\n            \n          </div>'"
parrot_arsdk,http://rosindex.github.io/r/parrot_arsdk/,indigo,parrot_arsdk,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""parrot_arsdk"">parrot_arsdk</h1>\n\n<p>This is a <a href=""http://wiki.ros.org/catkin"">catkin</a> wrapper for the <a href=""https://github.com/Parrot-Developers/arsdk_manifests"">official Parrot ARSDK3</a>.</p>\n\n<h2 id=""build-status"">Build status</h2>\n\n<p><a href=""https://travis-ci.org/AutonomyLab/parrot_arsdk""><img src=""https://travis-ci.org/AutonomyLab/parrot_arsdk.svg?branch=indigo-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
bwi_common,http://rosindex.github.io/r/bwi_common/,"hydro,indigo","bwi_common,bwi_gazebo_entities,bwi_interruptable_action_server,bwi_joystick_teleop,bwi_kr_execution,bwi_logging,bwi_mapper,bwi_msgs,bwi_planning_common,bwi_rqt_plugins,bwi_scavenger,bwi_tasks,bwi_tools,multi_level_map_msgs,multi_level_map_server,multi_level_map_utils,stop_base,utexas_gdc,bwi_web","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bwi_common"">bwi_common</h1>\n\n<p>Common packages and data for BWI projects.</p>\n\n<p><a href=""https://travis-ci.org/utexas-bwi/bwi_common""><img src=""https://travis-ci.org/utexas-bwi/bwi_common.svg?branch=master"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bwi_common"">bwi_common</h1>\n\n<p>Common packages and data for BWI projects</p>\n</div>\n\n            \n          </div>'"
bebop_autonomy,http://rosindex.github.io/r/bebop_autonomy/,"jade,kinetic,indigo","bebop_autonomy,bebop_description,bebop_driver,bebop_msgs,bebop_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bebop_autonomy"">bebop_autonomy</h1>\n\n<p><a href=""http://ros.org"">ROS</a> driver for <a href=""http://www.parrot.com/ca/products/bebop-drone/"">Parrot Bebop</a> drone (quadrocopter).</p>\n\n<ul>\n<li>Documentation: <a href=""http://bebop-autonomy.readthedocs.org/"">http://bebop-autonomy.readthedocs.org/</a>\n</li>\n<li>ROS wiki page: <a href=""http://wiki.ros.org/bebop_autonomy"">http://wiki.ros.org/bebop_autonomy</a>\n</li>\n<li>Support: <a href=""http://answers.ros.org/questions/scope:all/sort:activity-desc/tags:bebop_autonomy/page:1/"">ROS Q&amp;A (tag: bebop_autonomy)</a>\n</li>\n<li>Developer Forum: <a href=""https://trello.com/b/C6rNl8Ux"">https://trello.com/b/C6rNl8Ux</a>\n</li>\n<li>Code API: <a href=""http://docs.ros.org/indigo/api/bebop_autonomy/html"">http://docs.ros.org/indigo/api/bebop_autonomy/html</a>\n</li>\n<li>Author: <a href=""http://mani.im"">Mani Monajjemi</a> (<a href=""http://autonomylab.org"">Autonomy Lab</a>, <a href=""http://www.sfu.ca"">Simon Fraser University</a>)</li>\n</ul>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<ul>\n<li>SemaphoreCI (<code>indigo-devel</code>, Ubuntu <em>Trusty</em>, ROS <em>Indigo</em> and <em>Jade</em>): <a href=""https://semaphoreci.com/mani_monaj/bebop_autonomy""><img src=""https://semaphoreci.com/api/v1/projects/11786233-d505-4d79-b27c-80c2742243a4/537552/badge.svg"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
create_autonomy,http://rosindex.github.io/r/create_autonomy/,"jade,indigo","ca_description,ca_driver,ca_msgs,ca_tools,create_autonomy","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""create_autonomy"">create_autonomy</h1>\n\n<p><a href=""http://ros.org"">ROS</a> driver for iRobot <a href=""http://www.irobot.com/About-iRobot/STEM/Create-2.aspx"">Create 1 and 2</a>.\nThis package wraps the C++ library <a href=""https://github.com/AutonomyLab/libcreate"">libcreate</a>, which uses iRobot\'s <a href=""https://www.adafruit.com/datasheets/create_2_Open_Interface_Spec.pdf"">Open Interface Specification</a>.</p>\n\n<p><a href=""*%20Documentation:%20TODO""></a>\n* ROS wiki page: <a href=""http://wiki.ros.org/create_autonomy"">http://wiki.ros.org/create_autonomy</a>\n* Support: <a href=""http://answers.ros.org/questions/scope:all/sort:activity-desc/tags:create_autonomy/page:1/"">ROS Answers (tag: create_autonomy)</a>\n* Author: <a href=""http://jacobperron.ca"">Jacob Perron</a> (<a href=""http://autonomylab.org"">Autonomy Lab</a>, <a href=""http://www.sfu.ca"">Simon Fraser University</a>)</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>TravisCI (Ubuntu <em>Trusty</em>, ROS <em>Indigo</em> and <em>Jade</em>)<br>\n<img src=""https://api.travis-ci.org/AutonomyLab/create_autonomy.svg?branch=indigo-devel"" alt=""Build Status""></p>\n\n<h2 id=""supported-robots"">Supported Robots</h2>\n\n<table>\n<thead>\n<tr>\n<th>Model</th>\n<th>Support</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Create 1</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Create 2  <em>(firmware &gt;= 3.2.6)</em>\n</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Roomba Original Series</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Roomba 400 Series</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Roomba 500 Series</td>\n<td>Yes *</td>\n</tr>\n<tr>\n<td>Roomba 600 Series</td>\n<td>Yes *</td>\n</tr>\n<tr>\n<td>Roomba 700 Series</td>\n<td>Yes +</td>\n</tr>\n<tr>\n<td>Roomba 800 Series</td>\n<td>Yes +</td>\n</tr>\n<tr>\n<td>Roomba 900 Series</td>\n<td>No *</td>\n</tr>\n</tbody>\n</table>\n\n<p><em>+ Verified by third-party.</em><br>\n<em>* Not verified. Anyone who is able to verify that this driver works or not is encouraged to contact <a href=""https://jacobperron.ca"">Jacob</a> with their findings or open an issue.</em></p>\n\n<h2 id=""features"">Features</h2>\n\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Odometry</td>\n<td>Available</td>\n</tr>\n<tr>\n<td>Safe mode</td>\n<td>Planned <a href=""https://github.com/AutonomyLab/create_autonomy/issues/13"">#13</a>\n</td>\n</tr>\n<tr>\n<td>Clean demo</td>\n<td>Planned <a href=""https://github.com/AutonomyLab/create_autonomy/issues/14"">#14</a>\n</td>\n</tr>\n<tr>\n<td>Dock demo</td>\n<td>Available</td>\n</tr>\n<tr>\n<td>Drive wheels</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Drive (v,w)</td>\n<td>Available</td>\n</tr>\n<tr>\n<td>Brush motors</td>\n<td>Planned <a href=""https://github.com/AutonomyLab/create_autonomy/issues/15"">#15</a>\n</td>\n</tr>\n<tr>\n<td>LEDs</td>\n<td>Available</td>\n</tr>\n<tr>\n<td>Digit LEDs</td>\n<td>Available</td>\n</tr>\n<tr>\n<td>Sound</td>\n<td>Planned <a href=""https://github.com/AutonomyLab/create_autonomy/issues/5"">#5</a>\n</td>\n</tr>\n<tr>\n<td>Wheeldrop</td>\n<td>Available</td>\n</tr>\n<tr>\n<td>Bumpers</td>\n<td>Available</td>\n</tr>\n<tr>\n<td>Cliff sensor</td>\n<td>Planned <a href=""https://github.com/AutonomyLab/create_autonomy/issues/22"">#22</a>\n</td>\n</tr>\n<tr>\n<td>Dirt detect</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Omni IR sensor</td>\n<td>Available</td>\n</tr>\n<tr>\n<td>Left IR sensor</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Right IR sensor</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Battery info</td>\n<td>Available</td>\n</tr>\n<tr>\n<td>Light sensors</td>\n<td>Available</td>\n</tr>\n<tr>\n<td><strong><em>Diagnostics</em></strong></td>\n<td></td>\n</tr>\n<tr>\n<td>Corrupt packets</td>\n<td>Planned</td>\n</tr>\n<tr>\n<td>Physical tests</td>\n<td>Planned</td>\n</tr>\n<tr>\n<td>Overcurrent info</td>\n<td>Planned</td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""install"">Install</h2>\n\n<h4 id=""prerequisites"">Prerequisites</h4>\n\n<ul>\n<li>Internet connection</li>\n<li>\n<a href=""http://wiki.ros.org/ROS/Installation"">ROS</a> <em>Indigo</em> or <em>Jade</em>\n</li>\n<li>Ubuntu packages: <code>python-rosdep</code>, <code>python-catkin-tools</code>\n</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo apt-get install python-rosdep python-catkin-tools\n\n</code></pre></div>\n<h4 id=""compiling"">Compiling</h4>\n\n<ol>\n<li>Create a catkin workspace<br>\n</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">    <span class=""nv"">$ </span>mkdir -p create_ws/src  \n    <span class=""nv"">$ </span><span class=""nb"">cd </span>create_ws  \n    <span class=""nv"">$ </span>catkin init  \n\n</code></pre></div>\n<ol>\n<li>Clone this repo<br>\n</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">    <span class=""nv"">$ </span>git clone https://github.com/AutonomyLab/create_autonomy.git  \n\n</code></pre></div>\n<ol>\n<li>Install dependencies<br>\n</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">    <span class=""nv"">$ </span>rosdep update  \n    <span class=""nv"">$ </span>rosdep install --from-paths src -i  \n\n</code></pre></div>\n<ol>\n<li>Build<br>\n</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">    <span class=""nv"">$ </span>catkin build\n\n</code></pre></div>\n<h4 id=""usb-permissions"">USB Permissions</h4>\n\n<ol>\n<li>In order to connect to Create over USB, ensure your user is in the dialout group</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">    <span class=""nv"">$ </span>sudo usermod -a -G dialout <span class=""nv"">$USER</span>\n\n</code></pre></div>\n<ol>\n<li>Logout and login for permission to take effect</li>\n</ol>\n\n<h2 id=""running-the-driver"">Running the driver</h2>\n\n<h3 id=""setup"">Setup</h3>\n\n<ol>\n<li>After compiling from source, don\'t forget to source your workspace:<br>\n</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">    <span class=""nv"">$ </span><span class=""nb"">source</span> ~/create_ws/devel/setup.bash\n\n</code></pre></div>\n<ol>\n<li>\n<p>Connect computer to Create\'s 7-pin serial port</p>\n\n<ul>\n<li>If using Create 1, ensure that nothing is connected to Create\'s DB-25 port</li>\n</ul>\n</li>\n<li><p>Launch one of the existing launch files or adapt them to create your own.</p></li>\n</ol>\n\n<h3 id=""launch-files"">Launch files</h3>\n\n<p>For Create 2 (Roomba 600 series):</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roslaunch ca_driver create_2.launch <span class=""o"">[</span>desc:<span class=""o"">=</span><span class=""nb"">true</span><span class=""o"">]</span> <span class=""o"">[</span>publish_tf:<span class=""o"">=</span><span class=""nb"">true</span><span class=""o"">]</span>\n\n</code></pre></div>\n<p>For Create 1 (Roomba 400 series):</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roslaunch ca_driver create_1.launch <span class=""o"">[</span>publish_tf:<span class=""o"">=</span><span class=""nb"">true</span><span class=""o"">]</span>\n\n</code></pre></div>\n<p><code>desc</code> determines if the robot description (URDF model and TF tree) is launched.<br>\n<code>publish_tf</code> detemines if the transform between the odometry frame (<code>odom</code>) and base frame (<code>base_footprint</code>) is published.</p>\n\n<h3 id=""parameters"">Parameters</h3>\n\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>loop_hz</code></td>\n<td>Frequency of internal update loop</td>\n<td><code>10.0</code></td>\n</tr>\n<tr>\n<td><code>dev</code></td>\n<td>Serial port</td>\n<td><code>/dev/ttyUSB0</code></td>\n</tr>\n<tr>\n<td><code>publish_tf</code></td>\n<td>Publish the transform between <code>odom</code> and <code>base_footprint</code> frames</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>create_1</code></td>\n<td>Is robot model Create 1 (Roomba 400 series)?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>latch_cmd_duration</code></td>\n<td>If this many seconds passes without receiving a velocity command the robot stops</td>\n<td><code>0.2</code></td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""publishers"">Publishers</h3>\n\n<table>\n<thead>\n<tr>\n<th>Topic</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>battery/capacity</code></td>\n<td>The estimated charge capacity of the robot\'s battery (Ah)</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Float32.html"">std_msgs/Float32</a></td>\n</tr>\n<tr>\n<td><code>battery/charge</code></td>\n<td>The current charge of the robot\'s battery (Ah)</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Float32.html"">std_msgs/Float32</a></td>\n</tr>\n<tr>\n<td><code>battery/charge_ratio</code></td>\n<td>Charge / capacity</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Float32.html"">std_msgs/Float32</a></td>\n</tr>\n<tr>\n<td><code>battery/charging_state</code></td>\n<td>The chargins state of the battery</td>\n<td><a href=""https://github.com/AutonomyLab/create_autonomy/blob/indigo-devel/ca_msgs/msg/ChargingState.msg"">ca_msgs/ChargingState</a></td>\n</tr>\n<tr>\n<td><code>battery/current</code></td>\n<td>Current flowing through the robot\'s battery (A). Positive current implies charging</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Float32.html"">std_msgs/Float32</a></td>\n</tr>\n<tr>\n<td><code>battery/temperature</code></td>\n<td>The temperature of the robot\'s battery (degrees Celsius)</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Int16.html"">std_msgs/Int16</a></td>\n</tr>\n<tr>\n<td><code>battery/voltage</code></td>\n<td>Voltage of the robot\'s battery (V)</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Float32.html"">std_msgs/Float32</a></td>\n</tr>\n<tr>\n<td><code>bumper</code></td>\n<td>Bumper state message (including light sensors on bumpers)</td>\n<td><a href=""https://github.com/AutonomyLab/create_autonomy/blob/indigo-devel/ca_msgs/msg/Bumper.msg"">ca_msgs/Bumper</a></td>\n</tr>\n<tr>\n<td><code>clean_button</code></td>\n<td>\'clean\' button is pressed (\'play\' button for Create 1)</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Empty.html"">std_msgs/Empty</a></td>\n</tr>\n<tr>\n<td><code>day_button</code></td>\n<td>\'day\' button is pressed</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Empty.html"">std_msgs/Empty</a></td>\n</tr>\n<tr>\n<td><code>hour_button</code></td>\n<td>\'hour\' button is pressed</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Empty.html"">std_msgs/Empty</a></td>\n</tr>\n<tr>\n<td><code>minute_button</code></td>\n<td>\'minute\' button is pressed</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Empty.html"">std_msgs/Empty</a></td>\n</tr>\n<tr>\n<td><code>dock_button</code></td>\n<td>\'dock\' button is pressed (\'advance\' button for Create 1)</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Empty.html"">std_msgs/Empty</a></td>\n</tr>\n<tr>\n<td><code>spot_button</code></td>\n<td>\'spot\' button is pressed</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Empty.html"">std_msgs/Empty</a></td>\n</tr>\n<tr>\n<td><code>ir_omni</code></td>\n<td>The IR character currently being read by the omnidirectional receiver. Value 0 means no character is being received</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/UInt16.html"">std_msgs/UInt16</a></td>\n</tr>\n<tr>\n<td><code>joint_states</code></td>\n<td>The states (position, velocity) of the drive wheel joints</td>\n<td><a href=""http://docs.ros.org/api/sensor_msgs/html/msg/JointState.html"">sensor_msgs/JointState</a></td>\n</tr>\n<tr>\n<td><code>mode</code></td>\n<td>The current mode of the robot (See <a href=""https://www.adafruit.com/datasheets/create_2_Open_Interface_Spec.pdf"">OI Spec</a> for details)</td>\n<td><a href=""https://github.com/AutonomyLab/create_autonomy/blob/indigo-devel/ca_msgs/msg/Mode.msg"">ca_msgs/Mode</a></td>\n</tr>\n<tr>\n<td><code>odom</code></td>\n<td>Robot odometry according to wheel encoders</td>\n<td><a href=""http://docs.ros.org/api/nav_msgs/html/msg/Odometry.html"">nav_msgs/Odometry</a></td>\n</tr>\n<tr>\n<td><code>wheeldrop</code></td>\n<td>At least one of the drive wheels has dropped</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Empty.html"">std_msgs/Empty</a></td>\n</tr>\n<tr>\n<td><code>/tf</code></td>\n<td>The transform from the <code>odom</code> frame to <code>base_footprint</code>. Only if the parameter <code>publish_tf</code> is <code>true</code>\n</td>\n<td><a href=""http://docs.ros.org/jade/api/tf2_msgs/html/msg/TFMessage.html"">tf2_msgs/TFMessage</a></td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""subscribers"">Subscribers</h3>\n\n<table>\n<thead>\n<tr>\n<th>Topic</th>\n<th>Description</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cmd_vel</code></td>\n<td>Drives the robot\'s wheels according to a forward and angular velocity</td>\n<td><a href=""http://docs.ros.org/api/geometry_msgs/html/msg/Twist.html"">geometry_msgs/Twist</a></td>\n</tr>\n<tr>\n<td><code>debris_led</code></td>\n<td>Enable / disable the blue \'debris\' LED</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Bool.html"">std_msgs/Bool</a></td>\n</tr>\n<tr>\n<td><code>spot_led</code></td>\n<td>Enable / disable the \'spot\' LED</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Bool.html"">std_msgs/Bool</a></td>\n</tr>\n<tr>\n<td><code>dock_led</code></td>\n<td>Enable / disable the \'dock\' LED</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Bool.html"">std_msgs/Bool</a></td>\n</tr>\n<tr>\n<td><code>check_led</code></td>\n<td>Enable / disable the \'check robot` LED</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Bool.html"">std_msgs/Bool</a></td>\n</tr>\n<tr>\n<td><code>power_led</code></td>\n<td>Set the \'power\' LED color and intensity. Accepts 1 or 2 bytes, the first represents the color between green (0) and red (255) and the second (optional) represents the intensity with brightest setting as default (255)</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/UInt8MultiArray.html"">std_msgs/UInt8MultiArray</a></td>\n</tr>\n<tr>\n<td><code>set_ascii</code></td>\n<td>Sets the 4 digit LEDs. Accepts 1 to 4 bytes, each representing an ASCII character to be displayed from left to right</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/UInt8MultiArray.html"">std_msgs/UInt8MultiArray</a></td>\n</tr>\n<tr>\n<td><code>dock</code></td>\n<td>Activates the demo docking behaviour. Robot enters <em>Passive</em> mode meaning the user loses control (See <a href=""https://www.adafruit.com/datasheets/create_2_Open_Interface_Spec.pdf"">OI Spec</a>)</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Empty.html"">std_msgs/Empty</a></td>\n</tr>\n<tr>\n<td><code>undock</code></td>\n<td>Switches robot to <em>Full</em> mode giving control back to the user</td>\n<td><a href=""http://docs.ros.org/api/std_msgs/html/msg/Empty.html"">std_msgs/Empty</a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""commanding-your-create"">Commanding your Create</h2>\n\n<p>You can move the robot around by sending <a href=""http://docs.ros.org/api/geometry_msgs/html/msg/Twist.html"">geometry_msgs/Twist</a> messages to the topic <code>cmd_vel</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">linear.x  (+)     Move forward (m/s)\n          (-)     Move backward (m/s)\nangular.z (+)     Rotate counter-clockwise (rad/s)\n          (-)     Rotate clockwise (rad/s)\n\n</code></pre></div>\n<h4 id=""velocity-limits"">Velocity limits</h4>\n\n<p><code>-0.5 &lt;= linear.x &lt;= 0.5</code> and <code>-4.25 &lt;= angular.z &lt;= 4.25</code></p>\n\n<h3 id=""teleoperation"">Teleoperation</h3>\n\n<p><code>ca_tools</code> comes with a launch file for teleoperating Create with a joystick.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roslaunch ca_tools joy_teleop.launch <span class=""o"">[</span>joy_config:<span class=""o"">=</span>xbox360]\n\n</code></pre></div>\n<p>There exists configuration files for the <a href=""https://www.amazon.ca/Microsoft-Xbox-360-Wired-Controller/dp/B003ZSN600"">Xbox 360 wired controller</a> and the <a href=""http://gaming.logitech.com/en-ca/product/f710-wireless-gamepad"">Logitech F710 controller</a>. You can adapt these files for your preferred joystick configuration.</p>\n\n<h2 id=""contributions"">Contributions</h2>\n\n<p>Contributing to the development and maintenance of <em>create_autonomy</em> is encouraged. Feel free to open issues or create pull requests on <a href=""https://github.com/AutonomyLab/create_autonomy"">GitHub</a>.</p>\n\n<h3 id=""contributors"">Contributors</h3>\n\n<ul>\n<li>\n<a href=""http://brownem.engineer/"">Michael Browne</a>\n\n<ul>\n<li>Confirms driver works with Roomba 700 and 800 series.</li>\n</ul>\n</li>\n<li>\n<a href=""https://github.com/lopsided98"">Ben Wolsieffer</a> \n\n<ul>\n<li>Added JointState publisher for wheels (<a href=""https://github.com/AutonomyLab/create_autonomy/pull/26"">#26</a>).</li>\n<li>Added Create 1 description (<a href=""https://github.com/AutonomyLab/create_autonomy/pull/27"">#27</a>).</li>\n</ul>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
jsk_recognition,http://rosindex.github.io/r/jsk_recognition/,"hydro,electric,groovy,diamondback,jade,indigo","checkerboard_detector,imagesift,jsk_pcl_ros,jsk_pcl_ros_utils,jsk_perception,jsk_recognition,jsk_recognition_msgs,jsk_recognition_utils,resized_image_transport,posedetectiondb","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_recognition"">jsk_recognition</h1>\n\n<p><a href=""https://badge.fury.io/gh/jsk-ros-pkg%2Fjsk_recognition""><img src=""https://badge.fury.io/gh/jsk-ros-pkg%2Fjsk_recognition.svg"" alt=""GitHub version""></a>\n<a href=""https://travis-ci.org/jsk-ros-pkg/jsk_recognition""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_recognition.svg"" alt=""Build Status""></a>\n<a href=""http://jsk-docs.readthedocs.org/en/latest/jsk_recognition/doc/index.html""><img src=""https://readthedocs.org/projects/jsk-docs/badge/?version=latest"" alt=""Read the Docs""></a></p>\n\n<h2 id=""deb-build-status"">Deb Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Indigo (Saucy)</th>\n<th>Indigo (Trusty)</th>\n<th>Jade (Trusty)</th>\n<th>Jade (Vivid)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>jsk_recognition (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__jsk_recognition__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uS32__jsk_recognition__ubuntu_saucy_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__jsk_recognition__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uT32__jsk_recognition__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__jsk_recognition__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uT32__jsk_recognition__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__jsk_recognition__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uV32__jsk_recognition__ubuntu_vivid_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>jsk_recognition (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__jsk_recognition__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uS64__jsk_recognition__ubuntu_saucy_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__jsk_recognition__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uT64__jsk_recognition__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__jsk_recognition__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uT64__jsk_recognition__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__jsk_recognition__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uV64__jsk_recognition__ubuntu_vivid_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""documentation-for-jsk_recognition"">Documentation for jsk_recognition</h2>\n\n<p>You will find documentation about nodes and types of jsk_recognition at <a href=""https://jsk-recognition.readthedocs.org"">the Read the Docs site</a>.</p>\n\n<p>jsk_recognition is a stack for the perception packages which are used in JSK lab.</p>\n\n<h2 id=""ros-packages"">ROS packages</h2>\n\n<h3 id=""checkerboard_detector""><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/checkerboard_detector"">checkerboard_detector</a></h3>\n\n<p>ROS nodes to detect checkerboard. It supports chessboard pattern, circledots pattern and asymmetric\ncircledots pattern.</p>\n\n<h3 id=""imagesift""><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/imagesift"">imagesift</a></h3>\n\n<p>ROS nodes to compute local features of 2-D images. It supports SIFT, SURF, STAR, BRISK.</p>\n\n<h3 id=""jsk_recognition_msgs""><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/jsk_recognition_msgs"">jsk_recognition_msgs</a></h3>\n\n<p>ROS messages for jsk_pcl_ros and jsk_perception.</p>\n\n<h3 id=""jsk_recognition_utils""><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/jsk_recognition_utils"">jsk_recognition_utils</a></h3>\n\n<p>C++ library about sensor model, geometrical modeling and perception.</p>\n\n<h3 id=""jsk_pcl_ros""><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/jsk_pcl_ros"">jsk_pcl_ros</a></h3>\n\n<p>ROS nodelets for pointcloud perception.</p>\n\n<h3 id=""jsk_perception""><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/jsk_perception"">jsk_perception</a></h3>\n\n<p>ROS nodes and nodelets for 2-D image perception.</p>\n\n<h3 id=""posedetectiondb""><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/posedetectiondb"">posedetectiondb</a></h3>\n\n<p>ROS node to compute 3-D pose of 2-D texture based on local features.</p>\n\n<h3 id=""resized_image_transport""><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/resized_image_transport"">resized_image_transport</a></h3>\n\n<p>ROS nodes to publish resized images.</p>\n\n<h2 id=""deprecated-packages"">Deprecated packages</h2>\n\n<ul>\n<li><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/cr_calibration"">cr_calibration</a></li>\n<li><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/cr_capture"">cr_capture</a></li>\n<li><a href=""https://github.com/jsk-ros-pkg/jsk_recognition/tree/master/orbit_pantilt"">orbit_pantilt</a></li>\n</ul>\n</div>\n\n            \n          </div>'"
hector_models,http://rosindex.github.io/r/hector_models/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","hector_components_description,hector_models,hector_sensors_description,hector_xacro_tools,hector_sensors_gazebo","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""hector_models"">hector_models</h1>\n\n<p>hector_models contains (urdf) models and xacro macros of sensors and robot components.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mrpt_navigation,http://rosindex.github.io/r/mrpt_navigation/,"jade,kinetic,indigo","mrpt_bridge,mrpt_local_obstacles,mrpt_localization,mrpt_map,mrpt_msgs,mrpt_navigation,mrpt_rawlog,mrpt_reactivenav2d,mrpt_tutorials","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><a href=""https://travis-ci.org/mrpt-ros-pkg/mrpt_navigation""><img src=""https://travis-ci.org/mrpt-ros-pkg/mrpt_navigation.svg?branch=master"" alt=""Build Status""></a></p>\n\n<h1 id=""mrpt_navigation"">mrpt_navigation</h1>\n\n<p>This repository provides packages and tools related to the Mobile Robot Programming Toolkit (<a href=""http://www.mrpt.org/"">MRPT</a>). </p>\n\n<ul>\n<li>ROS wiki: <a href=""http://wiki.ros.org/mrpt_navigation"">http://wiki.ros.org/mrpt_navigation</a>\n</li>\n<li>Compiling instructions: <a href=""http://wiki.ros.org/mrpt_navigation/Tutorials/Installing"">http://wiki.ros.org/mrpt_navigation/Tutorials/Installing</a>\n</li>\n<li>Usage examples and tutorials: <a href=""http://wiki.ros.org/mrpt_navigation/Tutorials"">http://wiki.ros.org/mrpt_navigation/Tutorials</a>\n</li>\n</ul>\n\n<h2 id=""demo-videos"">Demo videos</h2>\n\n<ul>\n<li>Localization with particle filters:</li>\n</ul>\n\n<p><a href=""http://youtu.be/b5glQhT2Zac""><img src=""http://img.youtube.com/vi/b5glQhT2Zac/0.jpg"" alt=""ScreenShot""></a></p>\n</div>\n\n            \n          </div>'"
moveit_ros,http://rosindex.github.io/r/moveit_ros/,"hydro,fuerte,groovy,jade,indigo","moveit_ros_benchmarks,moveit_ros_benchmarks_gui,moveit_ros_manipulation,moveit_ros_move_group,moveit_ros,moveit_ros_perception,moveit_ros_planning,moveit_ros_planning_interface,moveit_ros_robot_interaction,moveit_ros_visualization,moveit_ros_warehouse,moveit_benchmarks,grasp_place_evaluation,moveit_household_objects_database,moveit_manipulation_msgs,moveit_manipulation_testing,moveit_manipulation_visualization,moveit_tabletop_object_detector,pick_place_planner,occupancy_map_monitor,robot_self_filter,collision_distance_field_ros,kdl_kinematics_plugin,kinematics_cache_ros,kinematics_planner_ros,kinematics_plugin_loader,kinematics_reachability,move_group,moveit_controller_manager,moveit_sensor_manager,plan_execution,planning_models_loader,planning_pipeline,planning_request_adapter_plugins,planning_scene_monitor,planning_scene_monitor_tools,robot_model_loader,trajectory_execution_manager,move_group_interface,moveit_commander,planning_scene_interface,py_bindings_tools,robot_interaction,moveit_rviz_plugin,moveit_visualization_ros,moveit_warehouse","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-ros"">MoveIt ROS</h1>\n\n<p>This repository includes components of MoveIt that use ROS. This is where much of the functionality MoveIt provides it put together. Libraries from MoveIt Core and various plugins are used to provide that functionality.\n- planning\n- planning interfaces\n- benchmarking\n- manipulation\n- visualization</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-ros"">MoveIt ROS</h1>\n\n<p>This repository includes components of MoveIt that use ROS. This is where much of the functionality MoveIt provides it put together. Libraries from MoveIt Core and various plugins are used to provide that functionality.\n- planning\n- planning interfaces\n- benchmarking\n- manipulation\n- visualization</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<ul>\n<li>Devel Job Status: <a href=""http://jenkins.ros.org/job/devel-indigo-moveit_ros""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-moveit_ros"" alt=""Devel Job Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://jenkins.ros.org/job/ros-indigo-moveit-ros_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-moveit-ros_binarydeb_trusty_amd64"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-ros"">MoveIt ROS</h1>\n\n<p>This repository includes components of MoveIt that use ROS. This is where much of the functionality MoveIt provides it put together. Libraries from MoveIt Core and various plugins are used to provide that functionality.\n- planning\n- planning interfaces\n- benchmarking\n- manipulation\n- visualization</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/ros-planning/moveit_ros""><img src=""https://travis-ci.org/ros-planning/moveit_ros.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-ros"">MoveIt ROS</h1>\n\n<p>This repository includes components of MoveIt that use ROS. This is where much of the functionality MoveIt provides is put together. Libraries from MoveIt Core and various plugins are used to provide that functionality.\n- planning\n- planning interfaces\n- benchmarking\n- manipulation\n- visualization</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<ul>\n<li>Job Status: <a href=""https://travis-ci.org/ros-planning/moveit_ros/builds""><img src=""https://travis-ci.org/ros-planning/moveit_ros.svg?branch=jade-devel"" alt=""Devel Job Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ridgeback,http://rosindex.github.io/r/ridgeback/,indigo,"ridgeback_control,ridgeback_description,ridgeback_msgs,ridgeback_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ridgeback"">ridgeback</h1>\n\n<p>Common packages for Ridgeback, including messages and robot description. These are packages relevant\nto all Ridgeback workspaces, whether simulation, desktop, or on the robot\'s own headless PC.</p>\n</div>\n\n            \n          </div>'"
ros_control_boilerplate,http://rosindex.github.io/r/ros_control_boilerplate/,"jade,kinetic,indigo",ros_control_boilerplate,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-control-boilerplate"">ROS Control Boilerplate</h1>\n\n<p>Simple simulation interface and template for setting up a hardware interface for ros_control. The idea is you take this as a starting point for creating your hardware interfaces, and it is needed because <a href=""http://wiki.ros.org/ros_control"">ros_control documentation</a> is sparse. This boilerplate demonstrates:</p>\n\n<ul>\n<li>Creating a hardware_interface for multiple joints for use with ros_control</li>\n<li>Position Trajectory Controller</li>\n<li>Control of 2 joints of the simple robot ""RRBot"" pictured below</li>\n<li>Loading configurations with roslaunch and yaml files</li>\n<li>Generating a random trajectory and sending it over an actionlib interface</li>\n<li>Partial support of joint mode switching (needs to be improved)</li>\n<li>Joint limits</li>\n<li>Pass-through non-physics based robot simulator</li>\n<li>Visualization in Rviz</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/ros_control_boilerplate""><img src=""https://travis-ci.org/davetcoleman/ros_control_boilerplate.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-ros_control_boilerplate""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-ros_control_boilerplate"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-ros-control-boilerplate_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-ros-control-boilerplate_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com/davetcoleman/ros_control_boilerplate/jade-devel/resources/screenshot.png""></p>\n\n<h2 id=""video-demo"">Video Demo</h2>\n\n<p>See <a href=""https://www.youtube.com/watch?v=Tpj2tx9uZ-o"">YouTube</a> for a very modest video demo.</p>\n\n<h2 id=""install"">Install</h2>\n\n<p>This package depends on <a href=""https://github.com/ros-simulation/gazebo_ros_demos"">gazebo_ros_demos</a> for its <code>rrbot_description</code> package, but you must add it to your catkin workspace by source:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/ros-simulation/gazebo_ros_demos.git\n</code></pre></div>\n<p>Then, either install this package from source so you can develop off of it, or install from debian:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-ros-control-boilerplate\n</code></pre></div>\n<h2 id=""run-simulation-demo"">Run Simulation Demo</h2>\n\n<p>This package is setup to run the ""RRBot"" two joint revolute-revolute robot demo. This ""template package"" is located in the ros_control_boilerplate as a subfolder that you can easily rename and reuse. To run its ros_control non-physics-based simulated hardware interface, run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ros_control_boilerplate rrbot_simulaton.launch\n</code></pre></div>\n<p>To visualize its published <code>/tf</code> coordinate transforms in Rviz run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ros_control_boilerplate rrbot_visualize.launch\n</code></pre></div>\n<p>To send a random, dummy trajectory to execute, run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ros_control_boilerplate rrbot_test_trajectory.launch\n</code></pre></div>\n<h2 id=""customize"">Customize</h2>\n\n<p>To test this as a simulation interface for your robot, you can quickly rename the subfolder package into the name of your robot using the following commands:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">function findreplace() {\n    grep -lr -e ""$1"" * | xargs sed -i ""s/$1/$2/g"" ;\n}\n\nfunction findreplacefilename() {\n    find . -depth -name ""*$1*"" -exec bash -c \'for f; do base=${f##*/}; mv -- ""$f"" ""${f%/*}/${base//\'$1\'/\'$2\'}""; done\' _ {} +\n}\n\nfindreplacefilename rrbot myrobot\nfindreplace rrbot myrobot\nfindreplace RRBot MyRobot\nfindreplace RRBOT MYROBOT\n\n</code></pre></div>\n<p>Then add the necessary code to communicate with your robot via USB/serial/ethernet/etc in the file <code>myrobot_hw_interface.cpp</code>.</p>\n\n<h2 id=""setting-an-initial-position-using-with-moveit"">Setting an Initial Position, Using with MoveIt!</h2>\n\n<p>If you need your robot to startup at a particular position in simulation, or you would like to use this funcitonality to simulate your robot with MoveIt!, see the downstream package (it depends on this package) <a href=""https://github.com/davetcoleman/moveit_sim_controller"">moveit_sim_controller</a></p>\n\n<h2 id=""other-helper-tools"">Other Helper Tools</h2>\n\n<h3 id=""recording-to-csv"">Recording to CSV</h3>\n\n<p>Write the commands from a trajectory controller to csv file</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ros_control_boilerplate controller_to_csv SAVE_TO_FILE_PATH CONTROLLER_STATE_TOPIC TIME_TO_RECORD\n</code></pre></div>\n<h3 id=""commanding-from-csv"">Commanding from CSV</h3>\n\n<p>Read from csv file and execute on robot</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ros_control_boilerplate csv_to_controller READ_FROM_FILE_PATH CONTROLLER_STATE_TOPIC TIME_TO_RECORD\n</code></pre></div>\n<h3 id=""commanding-from-keyboard"">Commanding from Keyboard</h3>\n\n<p>Joint-level teleop from a keyboard (TODO: remove had coded topic names)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ros_control_boilerplate keyboard_teleop\n</code></pre></div>\n<h2 id=""limitations"">Limitations</h2>\n\n<ul>\n<li>Does not implement estops, transmissions, or other fancy new features of ros_contorl</li>\n<li>Does not have any hard realtime code, this depends largely on your platform, kernel, OS, etc</li>\n<li>Only position control is fully implemented, though some code is in place for velocity control</li>\n</ul>\n\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please add features, make corrections, and address the limitations above, thanks!</p>\n</div>\n\n            \n          </div>'"
moveit_visual_tools,http://rosindex.github.io/r/moveit_visual_tools/,"hydro,jade,kinetic,indigo",moveit_visual_tools,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-visual-tools"">MoveIt! Visual Tools</h1>\n\n<p>Helper functions for displaying and debugging MoveIt! data in Rviz via published markers, trajectories, and MoveIt! collision objects. It is sometimes hard to understand everything that is going on internally with MoveIt!, but using these quick convenience functions allows one to easily visualize their code.</p>\n\n<p>This package helps you visualize:</p>\n\n<ul>\n<li>Basic Rviz geometric shapes</li>\n<li>MoveIt! collision objects</li>\n<li>MoveIt! and ROS trajectories</li>\n<li>Robot states</li>\n<li>End effectors</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee"">Dave Coleman</a> at the Correll Robotics Lab, University of Colorado Boulder with outside contributors.</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/moveit_visual_tools""><img src=""https://travis-ci.org/davetcoleman/moveit_visual_tools.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://build.ros.org/view/Jsrc_uT/job/Jsrc_uT__moveit_visual_tools__ubuntu_trusty__source/""><img src=""http://build.ros.org/buildStatus/icon?job=Jsrc_uT__moveit_visual_tools__ubuntu_trusty__source"" alt=""Build Status""></a> ROS Buildfarm - Trusty Devel Source Build</li>\n<li>\n<a href=""http://build.ros.org/view/Jbin_uT64/job/Jbin_uT64__moveit_visual_tools__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__moveit_visual_tools__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a> ROS Buildfarm - AMD64 Trusty Debian Build</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/moveit_visual_tools/kinetic-devel//resources/screenshot.png"" alt=""""></p>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/moveit_visual_tools/kinetic-devel//resources/demo.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-moveit-visual-tools\n\n</code></pre></div>\n<h3 id=""install-from-source"">Install From Source</h3>\n\n<p>Clone this repository into a catkin workspace, then use the rosdep install tool to automatically download its dependencies. Depending on your current version of ROS, use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro indigo\n\n</code></pre></div>\n<h2 id=""quick-start-demo"">Quick Start Demo</h2>\n\n<p>First launch Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_visual_tools demo_rviz.launch\n</code></pre></div>\n<p>Then run some demos displaying robot states and collision objects:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_visual_tools demo.launch\n</code></pre></div>\n<p>This package is built in top of <code>rviz_visual_tools</code> and all those features are included. Try running the rviz demo documented on <a href=""https://github.com/davetcoleman/rviz_visual_tools"">this README</a>.</p>\n\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/moveit_visual_tools/html/classmoveit__visual__tools_1_1MoveItVisualTools.html"">VisualTools Class Reference</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>We\'ll assume you will be using these helper functions within a class.</p>\n\n<h3 id=""initialize"">Initialize</h3>\n\n<p>Add to your includes:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;moveit_visual_tools/visual_tools.h&gt;\n\n</code></pre></div>\n<p>Add to your class\'s member variables:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// For visualizing things in rviz\nmoveit_visual_tools::VisualToolsPtr visual_tools_;\n\n</code></pre></div>\n<p>In your class\' constructor add:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_.reset(new moveit_visual_tools::VisualTools(""base_frame"",""/moveit_visual_markers""));\n\n</code></pre></div>\n<h3 id=""collision-object-functions"">Collision Object Functions</h3>\n\n<p>Helpers for adding and removing objects from the MoveIt! planning scene. CO stands for Collision Object and ACO stands for Active Collision Object.</p>\n\n<ul>\n<li>cleanupCO</li>\n<li>cleanupACO</li>\n<li>attachCO</li>\n<li>publishCollisionBlock</li>\n<li>publishCollisionCylinder</li>\n<li>publishCollisionTree</li>\n<li>publishCollisionTable</li>\n<li>publishCollisionWall</li>\n</ul>\n\n<p>And more...</p>\n\n<h3 id=""animate-trajectories"">Animate Trajectories</h3>\n\n<p>Higher level robot and trajectory functions</p>\n\n<ul>\n<li>publishTrajectoryPath</li>\n<li>publishTrajectoryPoint</li>\n<li>publishRobotState</li>\n<li>publishAnimatedGrasps</li>\n<li>publishIKSolutions</li>\n</ul>\n\n<h2 id=""show-parts-of-a-robot"">Show parts of a robot</h2>\n\n<p>These functions are a little more complicated TODO document more</p>\n\n<ul>\n<li>publishEEMarkers</li>\n</ul>\n\n<h2 id=""parent-class"">Parent Class</h2>\n\n<p>This class is built on top of <a href=""https://github.com/davetcoleman/rviz_visual_tools"">rviz_visual_tools</a> so all features and documentation for that package apply here as well.</p>\n\n<h2 id=""developers-notes"">Developers Notes</h2>\n\n<p>Useful notes for anyone wanting to dig in deeper:</p>\n\n<ul>\n<li> All poses are published with respect to the world frame e.g. /world, /odom, or maybe /base</li>\n<li> All publish() ROS topics should be followed by a <code>ros::spinOnce();</code> but no sleep</li>\n<li> Do not want to load any features/publishers until they are actually needed since this library contains so many components</li>\n</ul>\n\n<h2 id=""testing-and-linting"">Testing and Linting</h2>\n\n<p>To run <a href=""http://wiki.ros.org/roslint"">roslint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build --no-status --no-deps --this --make-args roslint\n</code></pre></div>\n<p>To run <a href=""https://pypi.python.org/pypi/catkin_lint"">catkin lint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin lint -W2\n</code></pre></div>\n<p>Use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a> to run the small amount of available tests:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin run_tests --no-deps --this -i\n</code></pre></div>\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please send PRs for new helper functions, fixes, etc!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-visual-tools"">MoveIt! Visual Tools</h1>\n\n<p>Helper functions for displaying and debugging MoveIt! data in Rviz via published markers, trajectories, and MoveIt! collision objects. It is sometimes hard to understand everything that is going on internally with MoveIt!, but using these quick convenience functions allows one to easily visualize their code.</p>\n\n<p>This package includes:</p>\n\n<ul>\n<li>Basic geometric markers for Rviz</li>\n<li>MoveIt! collision object tools</li>\n<li>Trajectory visualization tools</li>\n<li>Robot state tools</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee"">Dave Coleman</a> at the Correll Robotics Lab, University of Colorado Boulder with outside contributors.</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/moveit_visual_tools""><img src=""https://travis-ci.org/davetcoleman/moveit_visual_tools.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://build.ros.org/view/Jsrc_uT/job/Jsrc_uT__moveit_visual_tools__ubuntu_trusty__source/""><img src=""http://build.ros.org/buildStatus/icon?job=Jsrc_uT__moveit_visual_tools__ubuntu_trusty__source"" alt=""Build Status""></a> ROS Buildfarm - Trusty Devel Source Build</li>\n<li>\n<a href=""http://build.ros.org/view/Jbin_uT64/job/Jbin_uT64__moveit_visual_tools__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__moveit_visual_tools__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a> ROS Buildfarm - AMD64 Trusty Debian Build</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/moveit_visual_tools/indigo-devel//resources/demo.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-moveit-visual-tools\n\n</code></pre></div>\n<h3 id=""install-from-source"">Install From Source</h3>\n\n<p>Clone this repository into a catkin workspace, then use the rosdep install tool to automatically download its dependencies. Depending on your current version of ROS, use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro indigo\n\n</code></pre></div>\n<h2 id=""quick-start-demo"">Quick Start Demo</h2>\n\n<p>To see random shapes generated in Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_visual_tools visual_tools_demo.launch\n</code></pre></div>\n<p>You should see something like:</p>\n\n<p><img align=""right"" src=""https://raw.github.com/davetcoleman/moveit_visual_tools/indigo-devel/resources/screenshot.png""></p>\n\n<p>You can also demo the collision objects generation TODO: THIS IS CURRENTLY BROKEN :(</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_visual_tools collision_objects_demo_rviz.launch\nroslaunch moveit_visual_tools collision_objects_demo.launch\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/moveit_visual_tools/html/classmoveit__visual__tools_1_1MoveItVisualTools.html"">VisualTools Class Reference</a></p>\n\n<h2 id=""upgrade-notes-from-indigo"">Upgrade Notes From Indigo</h2>\n\n<p>We recently did a major refactor of <code>moveit_visual_tools</code> in Indigo that caused some API breaking changes. If you do not want to bother, you can still build the old version from source using the branch <code>indigo-devel-old-api</code>.</p>\n\n<p>To upgrade, do the following (or use the upgrade script further down):</p>\n\n<table>\n<thead>\n<tr>\n<th>Orignal API</th>\n<th>New API</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>#include &lt;moveit_visual_tools/visual_tools.h&gt;</td>\n<td>#include &lt;moveit_visual_tools/moveit_visual_tools.h&gt;</td>\n</tr>\n<tr>\n<td>moveit_visual_tools::VisualTools</td>\n<td>moveit_visual_tools::MoveItVisualTools</td>\n</tr>\n<tr>\n<td>moveit_visual_tools::VisualToolsPtr</td>\n<td>moveit_visual_tools::MoveItVisualToolsPtr</td>\n</tr>\n<tr>\n<td>moveit_visual_tools::rviz_colors</td>\n<td>rviz_visual_tools::colors</td>\n</tr>\n<tr>\n<td>moveit_visual_tools::rviz_scales</td>\n<td>rviz_visual_tools::scales</td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""auto-upgrade-script"">Auto Upgrade Script</h3>\n\n<p>Run each line in order in the <code>/src</code> of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">findreplace() { grep -lr -e ""$1"" * | xargs sed -i ""s/$1/$2/g"" ;}\nfindreplace \'&lt;moveit_visual_tools\\/visual_tools.h&gt;\' \'&lt;moveit_visual_tools\\/moveit_visual_tools.h&gt;\'\nfindreplace moveit_visual_tools::VisualTools moveit_visual_tools::MoveItVisualTools\nfindreplace \'moveit_visual_tools::\' \'rviz_visual_tools::\'\nfindreplace \'rviz_visual_tools::MoveItVisualTools\' \'moveit_visual_tools::MoveItVisualTools\'\n\n</code></pre></div>\n<h2 id=""usage"">Usage</h2>\n\n<p>We\'ll assume you will be using these helper functions within a class.</p>\n\n<h3 id=""initialize"">Initialize</h3>\n\n<p>Add to your includes:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;moveit_visual_tools/visual_tools.h&gt;\n\n</code></pre></div>\n<p>Add to your class\'s member variables:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// For visualizing things in rviz\nmoveit_visual_tools::VisualToolsPtr visual_tools_;\n\n</code></pre></div>\n<p>In your class\' constructor add:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_.reset(new moveit_visual_tools::VisualTools(""base_frame"",""/moveit_visual_markers""));\n\n</code></pre></div>\n<p>Change the first parameter to the name of your robot\'s base frame, and the second parameter to whatever name you\'d like to use for the corresponding Rviz marker ROS topic.</p>\n\n<p>There are several other settings you can adjust, which I might get around to documenting in the future:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_-&gt;setMuted(false);\nvisual_tools_-&gt;setLifetime(20.0);\nvisual_tools_-&gt;setEEGroupName(grasp_data_.ee_group_);\nvisual_tools_-&gt;setPlanningGroupName(planning_group_name_);\nvisual_tools_-&gt;setFloorToBaseHeight(floor_to_base_height);\nvisual_tools_-&gt;setGraspPoseToEEFPose(grasp_pose_to_eef_pose);\nvisual_tools_-&gt;setAlpha(alpha);\nvisual_tools_-&gt;setGlobalScale(scale);\nvisual_tools_-&gt;setBaseFrame(frame_name);\n\n</code></pre></div>\n<h3 id=""tools"">Tools</h3>\n\n<p>Now in your code you can easily debug your MoveIt! code using visual markers in Rviz</p>\n\n<p>Start rviz and create a new marker using the \'Add\' button at the bottom right. Choose the marker topic to be the same as the topic you specified in the constructor.</p>\n\n<h3 id=""example-code"">Example Code</h3>\n\n<p>In the following snippet we create a pose at xyz (0.1, 0.1, 0.1) and rotate the pose down 45 degrees along the Y axis. Then we publish the pose as a arrow for visualziation in Rviz. Make sure your Rviz fixed frame is the same as the one chosen in the code.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Create pose\nEigen::Affine3d pose;\npose = Eigen::AngleAxisd(M_PI/4, Eigen::Vector3d::UnitY()); // rotate along X axis by 45 degrees\npose.translation() = Eigen::Vector3d( 0.1, 0.1, 0.1 ); // translate x,y,z\n\n// Publish arrow vector of pose\nROS_INFO_STREAM_NAMED(""test"",""Publishing Arrow"");\nvisual_tools_-&gt;publishArrow(pose, moveit_visual_tools::RED, moveit_visual_tools::LARGE);\n</code></pre></div>\n<h3 id=""basic-publishing-functions"">Basic Publishing Functions</h3>\n\n<p>See <code>visual_tools.h</code> for more details and documentation on the following functions:</p>\n\n<ul>\n<li>publishSphere</li>\n<li>publishArrow</li>\n<li>publishCuboid</li>\n<li>publishLine</li>\n<li>publishBlock</li>\n<li>publishText</li>\n<li>publishTest</li>\n</ul>\n\n<p>And more...</p>\n\n<h3 id=""collision-object-functions"">Collision Object Functions</h3>\n\n<p>Helpers for adding and removing objects from the MoveIt! planning scene. CO stands for Collision Object and ACO stands for Active Collision Object.</p>\n\n<ul>\n<li>cleanupCO</li>\n<li>cleanupACO</li>\n<li>attachCO</li>\n<li>publishCollisionBlock</li>\n<li>publishCollisionCylinder</li>\n<li>publishCollisionTree</li>\n<li>publishCollisionTable</li>\n<li>publishCollisionWall</li>\n</ul>\n\n<p>And more...</p>\n\n<h3 id=""animate-trajectories"">Animate Trajectories</h3>\n\n<p>Higher level robot and trajectory functions</p>\n\n<ul>\n<li>publishTrajectoryPath</li>\n<li>publishTrajectoryPoint</li>\n<li>publishRobotState</li>\n<li>publishAnimatedGrasps</li>\n<li>publishIKSolutions</li>\n</ul>\n\n<h2 id=""show-parts-of-a-robot"">Show parts of a robot</h2>\n\n<p>These functions are a little more complicated TODO document more</p>\n\n<ul>\n<li>publishEEMarkers</li>\n</ul>\n\n<h3 id=""helper-functions"">Helper Functions</h3>\n\n<p>Reset function</p>\n\n<ul>\n<li>\n<code>deleteAllMarkers</code> - tells Rviz to clear out all current markers from being displayed. Only withs in ROS Indigo and newer.</li>\n</ul>\n\n<p>Conversion functions</p>\n\n<ul>\n<li>convertPose</li>\n<li>convertPoint32ToPose</li>\n<li>convertPoseToPoint</li>\n<li>convertPoint</li>\n<li>convertPoint32</li>\n</ul>\n\n<p>Convenience functions</p>\n\n<ul>\n<li>generateRandomPose</li>\n<li>dRand</li>\n<li>fRand</li>\n<li>iRand</li>\n<li>getCenterPoint</li>\n<li>getVectorBetweenPoints</li>\n</ul>\n\n<h3 id=""available-colors"">Available Colors</h3>\n\n<p>This package helps you quickly choose colors - feel free to send PRs with more colors as needed</p>\n\n<ul>\n<li>moveit_visual_tools::RED</li>\n<li>moveit_visual_tools::GREEN</li>\n<li>moveit_visual_tools::BLUE</li>\n<li>moveit_visual_tools::GREY</li>\n<li>moveit_visual_tools::WHITE</li>\n<li>moveit_visual_tools::ORANGE</li>\n<li>moveit_visual_tools::BLACK</li>\n<li>moveit_visual_tools::YELLOW</li>\n</ul>\n\n<h3 id=""available-marker-sizes"">Available Marker Sizes</h3>\n\n<ul>\n<li>moveit_visual_tools::XXSMALL</li>\n<li>moveit_visual_tools::XSMALL</li>\n<li>moveit_visual_tools::SMALL</li>\n<li>moveit_visual_tools::REGULAR</li>\n<li>moveit_visual_tools::LARGE</li>\n<li>moveit_visual_tools::XLARGE</li>\n</ul>\n\n<h3 id=""lifetime"">Lifetime</h3>\n\n<p>All markers will persist for the duration set by <code>setLifetime</code>, defaulting to 30 seconds. You can reset this earlier by calling</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">resetMarkerCounts();\n\n</code></pre></div>\n<p>This will cause all new markers to overwrite older ones.</p>\n\n<p>You can also delete all markers (new in ROS Indigo) by calling</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">deleteAllMarkers();\n\n</code></pre></div>\n<h2 id=""developers-notes"">Developers Notes</h2>\n\n<p>Useful notes for anyone wanting to dig in deeper:</p>\n\n<ul>\n<li> All poses are published with respect to the world frame e.g. /world, /odom, or maybe /base</li>\n<li> All publish() ROS topics should be followed by a <code>ros::spinOnce();</code> but no sleep</li>\n<li> Do not want to load any features/publishers until they are actually needed since this library contains so many components</li>\n</ul>\n\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Feel free to send PRs for new helper functions, fixes, etc. - I\'ll happily discuss and merge them. I do not, however, want to send much time helping people use this because I am a busy grad student. Use at your own risk.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-visual-tools"">MoveIt! Visual Tools</h1>\n\n<p>Helper functions for displaying and debugging MoveIt! data in Rviz via published markers, trajectories, and MoveIt! collision objects. It is sometimes hard to understand everything that is going on internally with MoveIt!, but using these quick convenience functions allows one to easily visualize their code.</p>\n\n<p>This package helps you visualize:</p>\n\n<ul>\n<li>Basic Rviz geometric shapes</li>\n<li>MoveIt! collision objects</li>\n<li>MoveIt! and ROS trajectories</li>\n<li>Robot states</li>\n<li>End effectors</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee"">Dave Coleman</a> at the Correll Robotics Lab, University of Colorado Boulder with outside contributors.</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/moveit_visual_tools""><img src=""https://travis-ci.org/davetcoleman/moveit_visual_tools.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://build.ros.org/view/Jsrc_uT/job/Jsrc_uT__moveit_visual_tools__ubuntu_trusty__source/""><img src=""http://build.ros.org/buildStatus/icon?job=Jsrc_uT__moveit_visual_tools__ubuntu_trusty__source"" alt=""Build Status""></a> ROS Buildfarm - Trusty Devel Source Build</li>\n<li>\n<a href=""http://build.ros.org/view/Jbin_uT64/job/Jbin_uT64__moveit_visual_tools__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__moveit_visual_tools__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a> ROS Buildfarm - AMD64 Trusty Debian Build</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/moveit_visual_tools/jade-devel//resources/screenshot.png"" alt=""""></p>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/moveit_visual_tools/jade-devel//resources/demo.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-moveit-visual-tools\n\n</code></pre></div>\n<h3 id=""install-from-source"">Install From Source</h3>\n\n<p>Clone this repository into a catkin workspace, then use the rosdep install tool to automatically download its dependencies. Depending on your current version of ROS, use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro indigo\n\n</code></pre></div>\n<h2 id=""quick-start-demo"">Quick Start Demo</h2>\n\n<p>First launch Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_visual_tools demo_rviz.launch\n</code></pre></div>\n<p>Then run some demos displaying robot states and collision objects:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_visual_tools demo.launch\n</code></pre></div>\n<p>This package is built in top of <code>rviz_visual_tools</code> and all those features are included. Try running the rviz demo documented on <a href=""https://github.com/davetcoleman/rviz_visual_tools"">this README</a>.</p>\n\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/moveit_visual_tools/html/classmoveit__visual__tools_1_1MoveItVisualTools.html"">VisualTools Class Reference</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>We\'ll assume you will be using these helper functions within a class.</p>\n\n<h3 id=""initialize"">Initialize</h3>\n\n<p>Add to your includes:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;moveit_visual_tools/visual_tools.h&gt;\n\n</code></pre></div>\n<p>Add to your class\'s member variables:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// For visualizing things in rviz\nmoveit_visual_tools::VisualToolsPtr visual_tools_;\n\n</code></pre></div>\n<p>In your class\' constructor add:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_.reset(new moveit_visual_tools::VisualTools(""base_frame"",""/moveit_visual_markers""));\n\n</code></pre></div>\n<h3 id=""collision-object-functions"">Collision Object Functions</h3>\n\n<p>Helpers for adding and removing objects from the MoveIt! planning scene. CO stands for Collision Object and ACO stands for Active Collision Object.</p>\n\n<ul>\n<li>cleanupCO</li>\n<li>cleanupACO</li>\n<li>attachCO</li>\n<li>publishCollisionBlock</li>\n<li>publishCollisionCylinder</li>\n<li>publishCollisionTree</li>\n<li>publishCollisionTable</li>\n<li>publishCollisionWall</li>\n</ul>\n\n<p>And more...</p>\n\n<h3 id=""animate-trajectories"">Animate Trajectories</h3>\n\n<p>Higher level robot and trajectory functions</p>\n\n<ul>\n<li>publishTrajectoryPath</li>\n<li>publishTrajectoryPoint</li>\n<li>publishRobotState</li>\n<li>publishAnimatedGrasps</li>\n<li>publishIKSolutions</li>\n</ul>\n\n<h2 id=""show-parts-of-a-robot"">Show parts of a robot</h2>\n\n<p>These functions are a little more complicated TODO document more</p>\n\n<ul>\n<li>publishEEMarkers</li>\n</ul>\n\n<h2 id=""parent-class"">Parent Class</h2>\n\n<p>This class is built on top of <a href=""https://github.com/davetcoleman/rviz_visual_tools"">rviz_visual_tools</a> so all features and documentation for that package apply here as well.</p>\n\n<h2 id=""developers-notes"">Developers Notes</h2>\n\n<p>Useful notes for anyone wanting to dig in deeper:</p>\n\n<ul>\n<li> All poses are published with respect to the world frame e.g. /world, /odom, or maybe /base</li>\n<li> All publish() ROS topics should be followed by a <code>ros::spinOnce();</code> but no sleep</li>\n<li> Do not want to load any features/publishers until they are actually needed since this library contains so many components</li>\n</ul>\n\n<h2 id=""testing-and-linting"">Testing and Linting</h2>\n\n<p>To run <a href=""http://wiki.ros.org/roslint"">roslint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build --no-status --no-deps --this --make-args roslint\n</code></pre></div>\n<p>To run <a href=""https://pypi.python.org/pypi/catkin_lint"">catkin lint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin lint -W2\n</code></pre></div>\n<p>Use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a> to run the small amount of available tests:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin run_tests --no-deps --this -i\n</code></pre></div>\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please send PRs for new helper functions, fixes, etc!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-visual-tools"">MoveIt! Visual Tools</h1>\n\n<p>Helper functions for displaying and debugging MoveIt! data in Rviz via published markers, trajectories, and MoveIt! collision objects. It is sometimes hard to understand everything that is going on internally with MoveIt!, but using these quick convenience functions allows one to easily visualize their code.</p>\n\n<p>This package includes:</p>\n\n<ul>\n<li>Basic geometric markers for Rviz</li>\n<li>MoveIt! collision object tools</li>\n<li>Trajectory visualization tools</li>\n<li>Robot state tools</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee"">Dave Coleman</a> at the Correll Robotics Lab, University of Colorado Boulder with outside contributors.</p>\n\n<p><img align=""right"" src=""https://raw.github.com/davetcoleman/moveit_visual_tools/hydro-devel/resources/demo.png""></p>\n\n<h3 id=""build-status"">Build Status</h3>\n\n<p><a href=""https://travis-ci.org/davetcoleman/moveit_visual_tools""><img src=""https://travis-ci.org/davetcoleman/moveit_visual_tools.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-hydro-moveit-visual-tools\nsudo apt-get install ros-indigo-moveit-visual-tools\n\n</code></pre></div>\n<h3 id=""install-from-source"">Install From Source</h3>\n\n<p>Clone this repository into a catkin workspace, then use the rosdep install tool to automatically download its dependencies. Depending on your current version of ROS, use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro indigo\n\n</code></pre></div>\n<h2 id=""usage"">Usage</h2>\n\n<p>We\'ll assume you will be using these helper functions within a class.</p>\n\n<h3 id=""initialize"">Initialize</h3>\n\n<p>Add to your includes:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;moveit_visual_tools/visual_tools.h&gt;\n\n</code></pre></div>\n<p>Add to your class\'s member variables:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// For visualizing things in rviz\nmoveit_visual_tools::VisualToolsPtr visual_tools_;\n\n</code></pre></div>\n<p>In your class\' constructor add:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_.reset(new moveit_visual_tools::VisualTools(""base_frame"",""/moveit_visual_markers""));\n\n</code></pre></div>\n<p>Change the first parameter to the name of your robot\'s base frame, and the second parameter to whatever name you\'d like to use for the corresponding Rviz marker ROS topic.</p>\n\n<p>There are several other settings you can adjust, which I might get around to documenting in the future:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_-&gt;setMuted(false);\nvisual_tools_-&gt;setLifetime(20.0);\nvisual_tools_-&gt;setEEGroupName(grasp_data_.ee_group_);\nvisual_tools_-&gt;setPlanningGroupName(planning_group_name_);\nvisual_tools_-&gt;setFloorToBaseHeight(floor_to_base_height);\nvisual_tools_-&gt;setGraspPoseToEEFPose(grasp_pose_to_eef_pose);\nvisual_tools_-&gt;setAlpha(alpha);\nvisual_tools_-&gt;setGlobalScale(scale);\nvisual_tools_-&gt;setBaseFrame(frame_name);\n\n</code></pre></div>\n<h3 id=""tools"">Tools</h3>\n\n<p>Now in your code you can easily debug your MoveIt! code using visual markers in Rviz</p>\n\n<p>Start rviz and create a new marker using the \'Add\' button at the bottom right. Choose the marker topic to be the same as the topic you specified in the constructor.</p>\n\n<h3 id=""example-code"">Example Code</h3>\n\n<p>In the following snippet we create a pose at xyz (0.1, 0.1, 0.1) and rotate the pose down 45 degrees along the Y axis. Then we publish the pose as a arrow for visualziation in Rviz. Make sure your Rviz fixed frame is the same as the one chosen in the code.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Create pose\nEigen::Affine3d pose;\npose = Eigen::AngleAxisd(M_PI/4, Eigen::Vector3d::UnitY()); // rotate along X axis by 45 degrees\npose.translation() = Eigen::Vector3d( 0.1, 0.1, 0.1 ); // translate x,y,z\n\n// Publish arrow vector of pose\nROS_INFO_STREAM_NAMED(""test"",""Publishing Arrow"");\nvisual_tools_-&gt;publishArrow(pose, moveit_visual_tools::RED, moveit_visual_tools::LARGE);\n</code></pre></div>\n<h3 id=""basic-publishing-functions"">Basic Publishing Functions</h3>\n\n<p>See <code>visual_tools.h</code> for more details and documentation on the following functions:</p>\n\n<ul>\n<li>publishSphere</li>\n<li>publishArrow</li>\n<li>publishRectangle</li>\n<li>publishLine</li>\n<li>publishBlock</li>\n<li>publishText</li>\n<li>publishTest</li>\n</ul>\n\n<p>And more...</p>\n\n<h3 id=""collision-object-functions"">Collision Object Functions</h3>\n\n<p>To</p>\n\n<p>Helpers for adding and removing objects from the MoveIt! planning scene. CO stands for Collision Object and ACO stands for Active Collision Object.</p>\n\n<p>DEVELOPER TODO: make it so that to use these functions, you must first instanciate a planning scene monitor outside of moveit_visual_tools. Remove publish collision message</p>\n\n<ul>\n<li>cleanupCO</li>\n<li>cleanupACO</li>\n<li>attachCO</li>\n<li>publishCollisionBlock</li>\n<li>publishCollisionCylinder</li>\n<li>publishCollisionTree</li>\n<li>publishCollisionTable</li>\n<li>publishCollisionWall</li>\n</ul>\n\n<p>And more...</p>\n\n<h3 id=""animate-trajectories"">Animate Trajectories</h3>\n\n<p>Higher level robot and trajectory functions</p>\n\n<ul>\n<li>publishTrajectoryPath</li>\n<li>publishTrajectoryPoint</li>\n<li>publishRobotState</li>\n<li>publishAnimatedGrasps</li>\n<li>publishIKSolutions</li>\n</ul>\n\n<h2 id=""show-parts-of-a-robot"">Show parts of a robot</h2>\n\n<p>These functions are a little more complicated TODO document more</p>\n\n<ul>\n<li>publishEEMarkers</li>\n</ul>\n\n<h3 id=""helper-functions"">Helper Functions</h3>\n\n<p>Reset function</p>\n\n<ul>\n<li>\n<code>deleteAllMarkers</code> - tells Rviz to clear out all current markers from being displayed. Only withs in ROS Indigo and newer.</li>\n</ul>\n\n<p>Conversion functions</p>\n\n<ul>\n<li>convertPose</li>\n<li>convertPoint32ToPose</li>\n<li>convertPoseToPoint</li>\n<li>convertPoint</li>\n<li>convertPoint32</li>\n</ul>\n\n<p>Convenience functions</p>\n\n<ul>\n<li>generateRandomPose</li>\n<li>dRand</li>\n<li>fRand</li>\n<li>iRand</li>\n<li>getCenterPoint</li>\n<li>getVectorBetweenPoints</li>\n</ul>\n\n<h3 id=""available-colors"">Available Colors</h3>\n\n<p>This package helps you quickly choose colors - feel free to send PRs with more colors as needed</p>\n\n<ul>\n<li>moveit_visual_tools::RED</li>\n<li>moveit_visual_tools::GREEN</li>\n<li>moveit_visual_tools::BLUE</li>\n<li>moveit_visual_tools::GREY</li>\n<li>moveit_visual_tools::WHITE</li>\n<li>moveit_visual_tools::ORANGE</li>\n<li>moveit_visual_tools::BLACK</li>\n<li>moveit_visual_tools::YELLOW</li>\n</ul>\n\n<h3 id=""available-marker-sizes"">Available Marker Sizes</h3>\n\n<ul>\n<li>moveit_visual_tools::XXSMALL</li>\n<li>moveit_visual_tools::XSMALL</li>\n<li>moveit_visual_tools::SMALL</li>\n<li>moveit_visual_tools::REGULAR</li>\n<li>moveit_visual_tools::LARGE</li>\n<li>moveit_visual_tools::XLARGE</li>\n</ul>\n\n<h3 id=""lifetime"">Lifetime</h3>\n\n<p>All markers will persist for the duration set by <code>setLifetime</code>, defaulting to 30 seconds. You can reset this earlier by calling</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">resetMarkerCounts();\n\n</code></pre></div>\n<p>This will cause all new markers to overwrite older ones.</p>\n\n<p>You can also delete all markers (new in ROS Indigo) by calling</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">deleteAllMarkers();\n\n</code></pre></div>\n<h2 id=""developers-notes"">Developers Notes</h2>\n\n<p>Useful notes for anyone wanting to dig in deeper:</p>\n\n<ul>\n<li> All poses are published with respect to the world frame e.g. /world, /odom, or maybe /base</li>\n<li> All publish() ROS topics should be followed by a <code>ros::spinOnce();</code> but no sleep</li>\n<li> Do not want to load any features/publishers until they are actually needed since this library contains so many components</li>\n</ul>\n\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Feel free to send PRs for new helper functions, fixes, etc. - I\'ll happily discuss and merge them. I do not, however, want to send much time helping people use this because I am a busy grad student. Use at your own risk.</p>\n</div>\n\n            \n          </div>'"
rospilot,http://rosindex.github.io/r/rospilot/,"jade,indigo",rospilot,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rospilot"">rospilot</h1>\n\n<ol>\n<li>Install the dependencies: <code>rosdep install rospilot</code>\n</li>\n<li>Compile: <code>catkin_make</code>\n</li>\n<li>Configure PostGIS, mapping server, and other services: <code>rosrun rospilot first_time_setup.sh</code>\n</li>\n<li>Start rospilot: <code>roslaunch rospilot rospilot.launch</code>\n</li>\n<li>The UI will now be running at <a href=""http://localhost:8085"">http://localhost:8085</a>\n</li>\n</ol>\n\n<p>I am providing code in this repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not from my employer (Facebook).</p>\n\n<h1 id=""running-linter"">Running linter</h1>\n\n<p><code>catkin_make roslint_rospilot</code></p>\n\n<h1 id=""running-tests"">Running tests</h1>\n\n<p><code>catkin_make test</code></p>\n</div>\n\n            \n          </div>'"
rviz_visual_tools,http://rosindex.github.io/r/rviz_visual_tools/,"jade,kinetic,indigo",rviz_visual_tools,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rviz-visual-tools"">Rviz Visual Tools</h1>\n\n<p>C++ API wrapper for displaying shapes and meshes in Rviz via helper functions that publish markers. Useful for displaying and debugging data. For more advanced robot visualization features, see the <a href=""https://github.com/davetcoleman/moveit_visual_tools"">moveit_visual_tools</a> which builds on this class, or <a href=""https://github.com/davetcoleman/ompl_visual_tools/"">ompl_visual_tools</a> if you are an OMPL ROS user.</p>\n\n<p>This package includes:</p>\n\n<ul>\n<li>Easy to use helper functions for visualizing in Rviz fast</li>\n<li>Basic geometric markers for Rviz</li>\n<li>More complex geometric shapes such as coordinate frames, framed boxes, planes, paths, graphs</li>\n<li>Ability to quickly choose standard colors and sizes</li>\n<li>Tools to ensure proper connection to Rviz before publishing visualizations</li>\n<li>Shortcuts to convert between different types of points and poses - ROS msgs, Eigen, tf, etc</li>\n<li>Batch publishing capabilities to reduce over throttling ROS messages</li>\n<li>A tf publishing helper class</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee"">Dave Coleman</a> at the Correll Robotics Lab, University of Colorado Boulder with help from Andy McEvoy and many others.</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/rviz_visual_tools""><img src=""https://travis-ci.org/davetcoleman/rviz_visual_tools.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://build.ros.org/view/Jsrc_uT/job/Jsrc_uT__rviz_visual_tools__ubuntu_trusty__source/""><img src=""http://build.ros.org/buildStatus/icon?job=Jsrc_uT__rviz_visual_tools__ubuntu_trusty__source"" alt=""Build Status""></a> ROS Buildfarm - Trusty Devel Source Build</li>\n<li>\n<a href=""http://build.ros.org/view/Jbin_uT64/job/Jbin_uT64__rviz_visual_tools__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__rviz_visual_tools__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a> ROS Buildfarm - AMD64 Trusty Debian Build</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/rviz_visual_tools/kinetic-devel//resources/screenshot1.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-kinetic-rviz-visual-tools\n\n</code></pre></div>\n<h3 id=""build-from-source"">Build from Source</h3>\n\n<p>Clone this repository into a catkin workspace, then use the rosdep install tool to automatically download its dependencies. Depending on your current version of ROS, use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro kinetic\n\n</code></pre></div>\n<h2 id=""quick-start-demo"">Quick Start Demo</h2>\n\n<p>To see random shapes generated in Rviz, first launch Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch rviz_visual_tools demo_rviz.launch\n</code></pre></div>\n<p>Then start demo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch rviz_visual_tools demo.launch\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/kinetic/api/rviz_visual_tools/html/annotated.html"">the Doxygen documentation</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>We\'ll assume you will be using these helper functions within a class. Almost all of the functions assume you are publishing transforms in the world frame (whatever you call that e.g. /odom).</p>\n\n<h3 id=""initialize"">Initialize</h3>\n\n<p>Add to your includes:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;rviz_visual_tools/rviz_visual_tools.h&gt;\n\n</code></pre></div>\n<p>Add to your class\'s member variables:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// For visualizing things in rviz\nrviz_visual_tools::RvizVisualToolsPtr visual_tools_;\n\n</code></pre></div>\n<p>In your class\' constructor add:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_.reset(new rviz_visual_tools::RvizVisualTools(""base_frame"",""/rviz_visual_markers""));\n\n</code></pre></div>\n<p>Change the first parameter to the name of your robot\'s base frame, and the second parameter to whatever name you\'d like to use for the corresponding Rviz marker ROS topic.</p>\n\n<h3 id=""tools"">Tools</h3>\n\n<p>Now in your code you can easily debug your code using visual markers in Rviz</p>\n\n<p>Start rviz and create a new marker using the \'Add\' button at the bottom right. Choose the marker topic to be the same as the topic you specified in the constructor.</p>\n\n<h3 id=""example-code"">Example Code</h3>\n\n<p>In the following snippet we create a pose at xyz (0.1, 0.1, 0.1) and rotate the pose down 45 degrees along the Y axis. Then we publish the pose as a arrow for visualziation in Rviz. Make sure your Rviz fixed frame is the same as the one chosen in the code.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Create pose\nEigen::Affine3d pose;\npose = Eigen::AngleAxisd(M_PI/4, Eigen::Vector3d::UnitY()); // rotate along X axis by 45 degrees\npose.translation() = Eigen::Vector3d( 0.1, 0.1, 0.1 ); // translate x,y,z\n\n// Publish arrow vector of pose\nROS_INFO_STREAM_NAMED(""test"",""Publishing Arrow"");\nvisual_tools_-&gt;publishArrow(pose, rviz_visual_tools::RED, rviz_visual_tools::LARGE);\n</code></pre></div>\n<h3 id=""basic-publishing-functions"">Basic Publishing Functions</h3>\n\n<p>See <code>visual_tools.h</code> for more details and documentation on the following functions:</p>\n\n<ul>\n<li>publishSphere</li>\n<li>publishSpheres</li>\n<li>publishArrow/publishXArrow</li>\n<li>publishYArrow</li>\n<li>publishZArrow</li>\n<li>publishCuboid</li>\n<li>publishCone</li>\n<li>publishXYPlane</li>\n<li>publishXZPlane</li>\n<li>publishYZPlane</li>\n<li>publishLine</li>\n<li>publishPath</li>\n<li>publishPolygon</li>\n<li>publishBlock</li>\n<li>publishWireframeCuboid</li>\n<li>publishWireframeRectangle</li>\n<li>publishAxis</li>\n<li>publishAxisLabeled</li>\n<li>publishCylinder</li>\n<li>publishMesh</li>\n<li>publishMesh</li>\n<li>publishText</li>\n<li>publishTest</li>\n</ul>\n\n<p>And more...</p>\n\n<h3 id=""helper-functions"">Helper Functions</h3>\n\n<p>Reset function</p>\n\n<ul>\n<li>\n<code>deleteAllMarkers</code> - tells Rviz to clear out all current markers from being displayed.</li>\n</ul>\n\n<p>Batch publish - useful for when many markers need to be published at once to prevent buffer overflow of ROS messages.</p>\n\n<ul>\n<li>enableBatchPublishing()</li>\n<li>triggerBatchPublish()</li>\n<li>triggerBatchPublishAndDisable()</li>\n</ul>\n\n<p>Conversion functions</p>\n\n<ul>\n<li>convertPose</li>\n<li>convertPoint32ToPose</li>\n<li>convertPoseToPoint</li>\n<li>convertPoint</li>\n<li>convertPoint32</li>\n<li>convertFromXYZRPY</li>\n<li>convertToXYZRPY</li>\n</ul>\n\n<p>Convenience functions</p>\n\n<ul>\n<li>generateRandomPose</li>\n<li>generateEmptyPose</li>\n<li>dRand</li>\n<li>fRand</li>\n<li>iRand</li>\n<li>getCenterPoint</li>\n<li>getVectorBetweenPoints</li>\n</ul>\n\n<h3 id=""available-colors"">Available Colors</h3>\n\n<p>This package helps you quickly choose colors - feel free to send PRs with more colors as needed</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">BLACK,\nBLUE,\nBROWN,\nCYAN,\nDARK_GREY,\nGREEN,\nGREY,\nLIME_GREEN,\nMAGENTA,\nORANGE,\nPINK,\nPURPLE,\nRED,\nWHITE,\nYELLOW,\nTRANSLUCENT_LIGHT,\nTRANSLUCENT,\nTRANSLUCENT_DARK,\nRAND,\nCLEAR,\nDEFAULT // i.e. \'do not change default color\'\n</code></pre></div>\n<h3 id=""available-marker-sizes"">Available Marker Sizes</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">XXSMALL,\nXSMALL,\nSMALL,\nREGULAR,\nLARGE,\nxLARGE,\nxxLARGE,\nxxxLARGE,\nXLARGE,\nXXLARGE\n</code></pre></div>\n<h2 id=""batch-publishing"">Batch Publishing</h2>\n\n<p>There is a new feature that allows markers to be saved up in an array until a trigger is recieved to send all markers to Rviz for visualization. This is useful when many markers need to be published at once that can overflow the Rviz message buffers. To enable, use <code>enableBatchPublishing(true)</code> and to trigger use `<code>triggerBatchPublish()</code>.</p>\n\n<h2 id=""tf-visual-tools"">TF Visual Tools</h2>\n\n<p>This tool lets you easily debug Eigen transforms in Rviz. Demo use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rviz_visual_tools::TFVisualTools tf_visualizer;\nEigen::Affine3d world_to_shelf_transform = Eigen::Affine3d::Identity(); // or whatever value\ntf_visualizer.publishTransform(world_to_shelf_transform, ""world"", ""shelf"");\n</code></pre></div>\n<h2 id=""testing-and-linting"">Testing and Linting</h2>\n\n<p>To run <a href=""http://wiki.ros.org/roslint"">roslint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build --no-status --no-deps --this --make-args roslint\n</code></pre></div>\n<p>To run <a href=""https://pypi.python.org/pypi/catkin_lint"">catkin lint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin lint -W2\n</code></pre></div>\n<p>Use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a> to run the small amount of available tests:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin run_tests --no-deps --this -i\n</code></pre></div>\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please send PRs for new helper functions, fixes, etc!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rviz-visual-tools"">Rviz Visual Tools</h1>\n\n<p>C++ API wrapper for displaying shapes and meshes in Rviz via helper functions that publish markers. Useful for displaying and debugging data. For more advanced robot visualization features, see the <a href=""https://github.com/davetcoleman/moveit_visual_tools"">moveit_visual_tools</a> which builds on this class, or <a href=""https://github.com/davetcoleman/ompl_visual_tools/"">ompl_visual_tools</a> if you are an OMPL ROS user.</p>\n\n<p>This package includes:</p>\n\n<ul>\n<li>Easy to use helper functions for visualizing in Rviz fast</li>\n<li>Basic geometric markers for Rviz</li>\n<li>More complex geometric shapes such as coordinate frames, framed boxes, planes, paths, graphs</li>\n<li>Ability to quickly choose standard colors and sizes</li>\n<li>Tools to ensure proper connection to Rviz before publishing visualizations</li>\n<li>Shortcuts to convert between different types of points and poses - ROS msgs, Eigen, tf, etc</li>\n<li>Batch publishing capabilities to reduce over throttling ROS messages</li>\n<li>A tf publishing helper class</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee"">Dave Coleman</a> at the Correll Robotics Lab, University of Colorado Boulder with help from Andy McEvoy and many others.</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/rviz_visual_tools""><img src=""https://travis-ci.org/davetcoleman/rviz_visual_tools.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://build.ros.org/view/Jsrc_uT/job/Jsrc_uT__rviz_visual_tools__ubuntu_trusty__source/""><img src=""http://build.ros.org/buildStatus/icon?job=Jsrc_uT__rviz_visual_tools__ubuntu_trusty__source"" alt=""Build Status""></a> ROS Buildfarm - Trusty Devel Source Build</li>\n<li>\n<a href=""http://build.ros.org/view/Jbin_uT64/job/Jbin_uT64__rviz_visual_tools__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__rviz_visual_tools__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a> ROS Buildfarm - AMD64 Trusty Debian Build</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/rviz_visual_tools/jade-devel//resources/screenshot1.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-jade-rviz-visual-tools\n\n</code></pre></div>\n<h3 id=""build-from-source"">Build from Source</h3>\n\n<p>Clone this repository into a catkin workspace, then use the rosdep install tool to automatically download its dependencies. Depending on your current version of ROS, use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro jade\n\n</code></pre></div>\n<h2 id=""quick-start-demo"">Quick Start Demo</h2>\n\n<p>To see random shapes generated in Rviz, first launch Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch rviz_visual_tools demo_rviz.launch\n</code></pre></div>\n<p>Then start demo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch rviz_visual_tools demo.launch\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/jade/api/rviz_visual_tools/html/annotated.html"">the Doxygen documentation</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>We\'ll assume you will be using these helper functions within a class. Almost all of the functions assume you are publishing transforms in the world frame (whatever you call that e.g. /odom).</p>\n\n<h3 id=""initialize"">Initialize</h3>\n\n<p>Add to your includes:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;rviz_visual_tools/rviz_visual_tools.h&gt;\n\n</code></pre></div>\n<p>Add to your class\'s member variables:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// For visualizing things in rviz\nrviz_visual_tools::RvizVisualToolsPtr visual_tools_;\n\n</code></pre></div>\n<p>In your class\' constructor add:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_.reset(new rviz_visual_tools::RvizVisualTools(""base_frame"",""/rviz_visual_markers""));\n\n</code></pre></div>\n<p>Change the first parameter to the name of your robot\'s base frame, and the second parameter to whatever name you\'d like to use for the corresponding Rviz marker ROS topic.</p>\n\n<h3 id=""tools"">Tools</h3>\n\n<p>Now in your code you can easily debug your code using visual markers in Rviz</p>\n\n<p>Start rviz and create a new marker using the \'Add\' button at the bottom right. Choose the marker topic to be the same as the topic you specified in the constructor.</p>\n\n<h3 id=""example-code"">Example Code</h3>\n\n<p>In the following snippet we create a pose at xyz (0.1, 0.1, 0.1) and rotate the pose down 45 degrees along the Y axis. Then we publish the pose as a arrow for visualziation in Rviz. Make sure your Rviz fixed frame is the same as the one chosen in the code.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Create pose\nEigen::Affine3d pose;\npose = Eigen::AngleAxisd(M_PI/4, Eigen::Vector3d::UnitY()); // rotate along X axis by 45 degrees\npose.translation() = Eigen::Vector3d( 0.1, 0.1, 0.1 ); // translate x,y,z\n\n// Publish arrow vector of pose\nROS_INFO_STREAM_NAMED(""test"",""Publishing Arrow"");\nvisual_tools_-&gt;publishArrow(pose, rviz_visual_tools::RED, rviz_visual_tools::LARGE);\n</code></pre></div>\n<h3 id=""basic-publishing-functions"">Basic Publishing Functions</h3>\n\n<p>See <code>visual_tools.h</code> for more details and documentation on the following functions:</p>\n\n<ul>\n<li>publishSphere</li>\n<li>publishSpheres</li>\n<li>publishArrow/publishXArrow</li>\n<li>publishYArrow</li>\n<li>publishZArrow</li>\n<li>publishCuboid</li>\n<li>publishCone</li>\n<li>publishXYPlane</li>\n<li>publishXZPlane</li>\n<li>publishYZPlane</li>\n<li>publishLine</li>\n<li>publishPath</li>\n<li>publishPolygon</li>\n<li>publishBlock</li>\n<li>publishWireframeCuboid</li>\n<li>publishWireframeRectangle</li>\n<li>publishAxis</li>\n<li>publishAxisLabeled</li>\n<li>publishCylinder</li>\n<li>publishMesh</li>\n<li>publishMesh</li>\n<li>publishText</li>\n<li>publishTest</li>\n</ul>\n\n<p>And more...</p>\n\n<h3 id=""helper-functions"">Helper Functions</h3>\n\n<p>Reset function</p>\n\n<ul>\n<li>\n<code>deleteAllMarkers</code> - tells Rviz to clear out all current markers from being displayed.</li>\n</ul>\n\n<p>Batch publish - useful for when many markers need to be published at once to prevent buffer overflow of ROS messages.</p>\n\n<ul>\n<li>enableBatchPublishing()</li>\n<li>triggerBatchPublish()</li>\n<li>triggerBatchPublishAndDisable()</li>\n</ul>\n\n<p>Conversion functions</p>\n\n<ul>\n<li>convertPose</li>\n<li>convertPoint32ToPose</li>\n<li>convertPoseToPoint</li>\n<li>convertPoint</li>\n<li>convertPoint32</li>\n<li>convertFromXYZRPY</li>\n<li>convertToXYZRPY</li>\n</ul>\n\n<p>Convenience functions</p>\n\n<ul>\n<li>generateRandomPose</li>\n<li>generateEmptyPose</li>\n<li>dRand</li>\n<li>fRand</li>\n<li>iRand</li>\n<li>getCenterPoint</li>\n<li>getVectorBetweenPoints</li>\n</ul>\n\n<h3 id=""available-colors"">Available Colors</h3>\n\n<p>This package helps you quickly choose colors - feel free to send PRs with more colors as needed</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">BLACK,\nBLUE,\nBROWN,\nCYAN,\nDARK_GREY,\nGREEN,\nGREY,\nLIME_GREEN,\nMAGENTA,\nORANGE,\nPINK,\nPURPLE,\nRED,\nWHITE,\nYELLOW,\nTRANSLUCENT_LIGHT,\nTRANSLUCENT,\nTRANSLUCENT_DARK,\nRAND,\nCLEAR,\nDEFAULT // i.e. \'do not change default color\'\n</code></pre></div>\n<h3 id=""available-marker-sizes"">Available Marker Sizes</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">XXSMALL,\nXSMALL,\nSMALL,\nREGULAR,\nLARGE,\nxLARGE,\nxxLARGE,\nxxxLARGE,\nXLARGE,\nXXLARGE\n</code></pre></div>\n<h2 id=""batch-publishing"">Batch Publishing</h2>\n\n<p>There is a new feature that allows markers to be saved up in an array until a trigger is recieved to send all markers to Rviz for visualization. This is useful when many markers need to be published at once that can overflow the Rviz message buffers. To enable, use <code>enableBatchPublishing(true)</code> and to trigger use `<code>triggerBatchPublish()</code>.</p>\n\n<h2 id=""tf-visual-tools"">TF Visual Tools</h2>\n\n<p>This tool lets you easily debug Eigen transforms in Rviz. Demo use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rviz_visual_tools::TFVisualTools tf_visualizer;\nEigen::Affine3d world_to_shelf_transform = Eigen::Affine3d::Identity(); // or whatever value\ntf_visualizer.publishTransform(world_to_shelf_transform, ""world"", ""shelf"");\n</code></pre></div>\n<h2 id=""testing-and-linting"">Testing and Linting</h2>\n\n<p>To run <a href=""http://wiki.ros.org/roslint"">roslint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build --no-status --no-deps --this --make-args roslint\n</code></pre></div>\n<p>To run <a href=""https://pypi.python.org/pypi/catkin_lint"">catkin lint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin lint -W2\n</code></pre></div>\n<p>Use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a> to run the small amount of available tests:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin run_tests --no-deps --this -i\n</code></pre></div>\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please send PRs for new helper functions, fixes, etc!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rviz-visual-tools"">Rviz Visual Tools</h1>\n\n<p>Helper functions for displaying and debugging data in Rviz via published markers.</p>\n\n<p>This package includes:</p>\n\n<ul>\n<li>Basic geometric markers for Rviz</li>\n<li>A tf publishing helper class</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee"">Dave Coleman</a> at the Correll Robotics Lab, University of Colorado Boulder with help from Andy McEvoy and others.</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/rviz_visual_tools""><img src=""https://travis-ci.org/davetcoleman/rviz_visual_tools.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://build.ros.org/view/Jsrc_uT/job/Jsrc_uT__rviz_visual_tools__ubuntu_trusty__source/""><img src=""http://build.ros.org/buildStatus/icon?job=Jsrc_uT__rviz_visual_tools__ubuntu_trusty__source"" alt=""Build Status""></a> ROS Buildfarm - Trusty Devel Source Build</li>\n<li>\n<a href=""http://build.ros.org/view/Jbin_uT64/job/Jbin_uT64__rviz_visual_tools__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__rviz_visual_tools__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a> ROS Buildfarm - AMD64 Trusty Debian Build</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/rviz_visual_tools/indigo-devel//resources/screenshot1.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-rviz-visual-tools\n\n</code></pre></div>\n<h3 id=""build-from-source"">Build from Source</h3>\n\n<p>Clone this repository into a catkin workspace, then use the rosdep install tool to automatically download its dependencies. Depending on your current version of ROS, use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro indigo\n\n</code></pre></div>\n<h2 id=""quick-start-demo"">Quick Start Demo</h2>\n\n<p>To see random shapes generated in Rviz, first launch Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch rviz_visual_tools demo_rviz.launch\n</code></pre></div>\n<p>Then start demo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch rviz_visual_tools demo.launch\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/rviz_visual_tools/html/classrviz__visual__tools_1_1VisualTools.html"">VisualTools Class Reference</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>We\'ll assume you will be using these helper functions within a class. Almost all of the functions assume you are publishing transforms in the world frame (whatever you call that e.g. /odom).</p>\n\n<h3 id=""initialize"">Initialize</h3>\n\n<p>Add to your includes:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;rviz_visual_tools/visual_tools.h&gt;\n\n</code></pre></div>\n<p>Add to your class\'s member variables:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// For visualizing things in rviz\nrviz_visual_tools::VisualToolsPtr visual_tools_;\n\n</code></pre></div>\n<p>In your class\' constructor add:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_.reset(new rviz_visual_tools::VisualTools(""base_frame"",""/rviz_visual_markers""));\n\n</code></pre></div>\n<p>Change the first parameter to the name of your robot\'s base frame, and the second parameter to whatever name you\'d like to use for the corresponding Rviz marker ROS topic.</p>\n\n<h3 id=""tools"">Tools</h3>\n\n<p>Now in your code you can easily debug your code using visual markers in Rviz</p>\n\n<p>Start rviz and create a new marker using the \'Add\' button at the bottom right. Choose the marker topic to be the same as the topic you specified in the constructor.</p>\n\n<h3 id=""example-code"">Example Code</h3>\n\n<p>In the following snippet we create a pose at xyz (0.1, 0.1, 0.1) and rotate the pose down 45 degrees along the Y axis. Then we publish the pose as a arrow for visualziation in Rviz. Make sure your Rviz fixed frame is the same as the one chosen in the code.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Create pose\nEigen::Affine3d pose;\npose = Eigen::AngleAxisd(M_PI/4, Eigen::Vector3d::UnitY()); // rotate along X axis by 45 degrees\npose.translation() = Eigen::Vector3d( 0.1, 0.1, 0.1 ); // translate x,y,z\n\n// Publish arrow vector of pose\nROS_INFO_STREAM_NAMED(""test"",""Publishing Arrow"");\nvisual_tools_-&gt;publishArrow(pose, rviz_visual_tools::RED, rviz_visual_tools::LARGE);\n</code></pre></div>\n<h3 id=""basic-publishing-functions"">Basic Publishing Functions</h3>\n\n<p>See <code>visual_tools.h</code> for more details and documentation on the following functions:</p>\n\n<ul>\n<li>publishSphere</li>\n<li>publishSpheres</li>\n<li>publishArrow/publishXArrow</li>\n<li>publishYArrow</li>\n<li>publishZArrow</li>\n<li>publishCuboid</li>\n<li>publishCone</li>\n<li>publishXYPlane</li>\n<li>publishXZPlane</li>\n<li>publishYZPlane</li>\n<li>publishLine</li>\n<li>publishPath</li>\n<li>publishPolygon</li>\n<li>publishBlock</li>\n<li>publishWireframeCuboid</li>\n<li>publishWireframeRectangle</li>\n<li>publishAxis</li>\n<li>publishAxisLabeled</li>\n<li>publishCylinder</li>\n<li>publishMesh</li>\n<li>publishMesh</li>\n<li>publishText</li>\n<li>publishTest</li>\n</ul>\n\n<p>And more...</p>\n\n<h3 id=""helper-functions"">Helper Functions</h3>\n\n<p>Reset function</p>\n\n<ul>\n<li>\n<code>deleteAllMarkers</code> - tells Rviz to clear out all current markers from being displayed.</li>\n</ul>\n\n<p>Batch publish - useful for when many markers need to be published at once to prevent buffer overflow of ROS messages.</p>\n\n<ul>\n<li>enableBatchPublishing()</li>\n<li>triggerBatchPublish()</li>\n<li>triggerBatchPublishAndDisable()</li>\n</ul>\n\n<p>Conversion functions</p>\n\n<ul>\n<li>convertPose</li>\n<li>convertPoint32ToPose</li>\n<li>convertPoseToPoint</li>\n<li>convertPoint</li>\n<li>convertPoint32</li>\n<li>convertFromXYZRPY</li>\n<li>convertToXYZRPY</li>\n</ul>\n\n<p>Convenience functions</p>\n\n<ul>\n<li>generateRandomPose</li>\n<li>generateEmptyPose</li>\n<li>dRand</li>\n<li>fRand</li>\n<li>iRand</li>\n<li>getCenterPoint</li>\n<li>getVectorBetweenPoints</li>\n</ul>\n\n<h3 id=""available-colors"">Available Colors</h3>\n\n<p>This package helps you quickly choose colors - feel free to send PRs with more colors as needed</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">BLACK,\nBLUE,\nBROWN,\nCYAN,\nDARK_GREY,\nGREEN,\nGREY,\nLIME_GREEN,\nMAGENTA,\nORANGE,\nPINK,\nPURPLE,\nRED,\nWHITE,\nYELLOW,\nTRANSLUCENT_LIGHT,\nTRANSLUCENT,\nTRANSLUCENT_DARK,\nRAND,\nCLEAR,\nDEFAULT // i.e. \'do not change default color\'\n</code></pre></div>\n<h3 id=""available-marker-sizes"">Available Marker Sizes</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">XXSMALL,\nXSMALL,\nSMALL,\nREGULAR,\nLARGE,\nxLARGE,\nxxLARGE,\nxxxLARGE,\nXLARGE,\nXXLARGE\n</code></pre></div>\n<h2 id=""batch-publishing"">Batch Publishing</h2>\n\n<p>There is a new feature that allows markers to be saved up in an array until a trigger is recieved to send all markers to Rviz for visualization. This is useful when many markers need to be published at once that can overflow the Rviz message buffers. To enable, use <code>enableBatchPublishing(true)</code> and to trigger use `<code>triggerBatchPublish()</code>.</p>\n\n<h2 id=""tf-visual-tools"">TF Visual Tools</h2>\n\n<p>This tool lets you easily debug Eigen transforms in Rviz. Demo use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rviz_visual_tools::TFVisualTools tf_visualizer;\nEigen::Affine3d world_to_shelf_transform = Eigen::Affine3d::Identity(); // or whatever value\ntf_visualizer.publishTransform(world_to_shelf_transform, ""world"", ""shelf"");\n</code></pre></div>\n<h2 id=""testing-and-linting"">Testing and Linting</h2>\n\n<p>To run <a href=""http://wiki.ros.org/roslint"">roslint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build --no-status --no-deps --this --make-args roslint\n</code></pre></div>\n<p>To run <a href=""https://pypi.python.org/pypi/catkin_lint"">catkin lint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin lint -W2\n</code></pre></div>\n<p>Use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a> to run the small amount of available tests:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin run_tests --no-deps --this -i\n</code></pre></div>\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please send PRs for new helper functions, fixes, etc!</p>\n</div>\n\n            \n          </div>'"
shadow_robot,http://rosindex.github.io/r/shadow_robot/,"hydro,fuerte,electric,groovy,indigo","shadow_robot,sr_description,sr_example,sr_gazebo_plugins,sr_hand,sr_hardware_interface,sr_kinematics,sr_mechanism_controllers,sr_mechanism_model,sr_moveit_config,sr_movements,sr_robot_msgs,sr_self_test,sr_standalone,sr_tactile_sensors,sr_utilities,sr_move_arm","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>A ROS interface for Shadow Robot\'s hand.</p>\n\n<p><a href=""http://wiki.ros.org/shadow_robot"">http://wiki.ros.org/shadow_robot</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<table>\n<thead>\n<tr>\n<th>Service</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Documentation</td>\n<td><a href=""http://shadow-robot.readthedocs.org/""><img src=""https://readthedocs.org/projects/shadow-robot/badge"" alt=""Documentation Status""></a></td>\n</tr>\n<tr>\n<td>Code style checks</td>\n<td><a href=""https://circleci.com/gh/shadow-robot/sr-ros-interface""><img src=""https://circleci.com/gh/shadow-robot/sr-ros-interface.svg?style=shield"" alt=""Circle CI""></a></td>\n</tr>\n<tr>\n<td>Unit tests</td>\n<td><a href=""https://travis-ci.org/shadow-robot/sr-ros-interface""><img src=""https://travis-ci.org/shadow-robot/sr-ros-interface.svg?branch=indigo-devel"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Install tests</td>\n<td><a href=""https://semaphoreci.com/andriy/sr-ros-interface""><img src=""https://semaphoreci.com/api/v1/projects/11755ff7-a716-4ac2-a7fb-5edb3c7a87b5/518634/shields_badge.svg"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Code Coverage</td>\n<td><a href=""http://codecov.io/github/shadow-robot/sr-ros-interface?branch=indigo-devel""><img src=""https://img.shields.io/codecov/c/github/shadow-robot/sr-ros-interface/indigo-devel.svg"" alt=""codecov.io""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=""shadow-robot"">Shadow Robot</h1>\n\n<p>You will find our documentation on <a href=""shadow-robot.readthedocs.org"">readthedocs</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nFirst of all, don\'t forget to edit your ROS_PACKAGE_PATH variable. To do this,\nedit your ~/.bashrc and AFTER the source /path/to/ros/setup.sh add: \n\nexport ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:/path/to/shadow_robot\n\nwhere /path/to/shadow_robot is the complete path to the shadow_robot directory you \ngot from the bazaar repository.\n\nTo start using this ROS interface, the best way to go is to generate the doc:\n\n$ cd doc\n$ ./generate_doc.sh\n\nThen fire up your favourite browser and open the generated rosdoc/index.html.\nYou can start by reading the sr_hand documentation.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
cob_environments,http://rosindex.github.io/r/cob_environments/,"hydro,groovy,indigo","cob_default_env_config,cob_environments,cob_gazebo_objects,cob_gazebo_worlds","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_environments""><img src=""https://travis-ci.org/ipa320/cob_environments.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
turtlebot_apps,http://rosindex.github.io/r/turtlebot_apps/,"hydro,fuerte,electric,groovy,indigo","turtlebot_actions,turtlebot_apps,turtlebot_calibration,turtlebot_follower,turtlebot_navigation,turtlebot_rapps,pano_core,pano_py,pano_ros,turtlebot_core_apps,turtlebot_panorama,turtlebot_teleop,turtlebot_sounds","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot_apps"">turtlebot_apps</h1>\n\n<p>A group of simple demos and examples to run on your TurtleBot to help you get started and having fun with ROS and TurtleBot.</p>\n</div>\n\n            \n          </div>'"
shadow_robot_ethercat,http://rosindex.github.io/r/shadow_robot_ethercat/,"hydro,fuerte,electric,groovy,indigo","shadow_robot_ethercat,sr_edc_controller_configuration,sr_edc_ethercat_drivers,sr_edc_launch,sr_edc_muscle_tools,sr_external_dependencies,sr_robot_lib,sr_tactile_sensor_controller","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<table>\n<thead>\n<tr>\n<th>Service</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Documentation</td>\n<td><a href=""http://shadow-robot-ethercat-driver.readthedocs.org""><img src=""https://readthedocs.org/projects/shadow-robot-ethercat-driver/badge/?version=latest"" alt=""Documentation Status""></a></td>\n</tr>\n<tr>\n<td>Code style checks</td>\n<td><a href=""https://circleci.com/gh/shadow-robot/sr-ros-interface-ethercat""><img src=""https://circleci.com/gh/shadow-robot/sr-ros-interface-ethercat.svg?style=shield"" alt=""Circle CI""></a></td>\n</tr>\n<tr>\n<td>Unit tests</td>\n<td><a href=""https://travis-ci.org/shadow-robot/sr-ros-interface-ethercat""><img src=""https://travis-ci.org/shadow-robot/sr-ros-interface-ethercat.svg"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Install tests</td>\n<td><a href=""https://semaphoreci.com/shadow-robot/sr-ros-interface-ethercat""><img src=""https://semaphoreci.com/api/v1/projects/8797e7d4-058b-4f0f-bc34-9a1f8c23e31d/539067/shields_badge.svg"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Code Coverage</td>\n<td><a href=""http://codecov.io/github/shadow-robot/sr-ros-interface-ethercat?branch=indigo-devel""><img src=""https://img.shields.io/codecov/c/github/shadow-robot/sr-ros-interface-ethercat/indigo-devel.svg"" alt=""codecov.io""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=""shadow-robot-ethercat-driver"">Shadow Robot - EtherCAT driver</h1>\n\n<p>This stack focuses on the drivers for our <a href=""http://www.shadowrobot.com/products/"">etherCAT hand</a>.</p>\n\n<p><strong>Warning: be careful when starting the hand. Make sure you\'re using the proper config files or you might damage the hardware. If in doubt contact us!</strong></p>\n\n<h2 id=""launching-the-hand-driver"">Launching the Hand Driver</h2>\n\n<ul>\n<li><p><code>sr_edc.launch</code> Launches a single hand</p></li>\n<li><p><code>sr_edc_bimanual.launch</code> Launches 2 hands (as part of the same bimanual robot)</p></li>\n</ul>\n\n<h3 id=""use"">Use</h3>\n\n<h4 id=""direct-use"">Direct use</h4>\n\n<p>For a single hand, with default parameters:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">roslaunch sr_edc_launch sr_edc.launch\n\n</code></pre></div>\n<p>For a bimanual system you will need to specify at least the serial numbers for the right and left hand:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">roslaunch sr_edc_launch sr_edc_bimanual.launch rh_serial:<span class=""o"">=</span>1234 lh_serial:<span class=""o"">=</span>1235\n\n</code></pre></div>\n<h4 id=""use-from-another-launchfile"">Use from another launchfile</h4>\n\n<p>E.g. for a bimanual system:</p>\n<div class=""highlight""><pre><code class=""language-xml"" data-lang=""xml""><span class=""nt"">&lt;launch&gt;</span>\n  <span class=""nt"">&lt;include</span> <span class=""na"">file=</span><span class=""s"">""$(find sr_edc_launch)/sr_edc_bimanual.launch""</span> <span class=""nt"">&gt;</span>\n    <span class=""nt"">&lt;arg</span> <span class=""na"">name=</span><span class=""s"">""rh_serial""</span> <span class=""na"">value=</span><span class=""s"">""1234""</span> <span class=""nt"">/&gt;</span>\n    <span class=""nt"">&lt;arg</span> <span class=""na"">name=</span><span class=""s"">""lh_serial""</span> <span class=""na"">value=</span><span class=""s"">""1235""</span> <span class=""nt"">/&gt;</span>\n    <span class=""nt"">&lt;arg</span> <span class=""na"">name=</span><span class=""s"">""eth_port""</span> <span class=""na"">value=</span><span class=""s"">""eth0_eth1""</span> <span class=""nt"">/&gt;</span>\n    <span class=""nt"">&lt;arg</span> <span class=""na"">name=</span><span class=""s"">""robot_description""</span> <span class=""na"">value=</span><span class=""s"">""$(find sr_description)/robots/bimanual_shadowhand_motor.urdf.xacro""</span> <span class=""nt"">/&gt;</span>\n  <span class=""nt"">&lt;/include&gt;</span>\n<span class=""nt"">&lt;/launch&gt;</span>\n\n</code></pre></div>\n<p>E.g. for a single hand system:</p>\n<div class=""highlight""><pre><code class=""language-xml"" data-lang=""xml""><span class=""nt"">&lt;launch&gt;</span>\n  <span class=""nt"">&lt;include</span> <span class=""na"">file=</span><span class=""s"">""$(find sr_edc_launch)/sr_edc.launch""</span> <span class=""nt"">&gt;</span>\n    <span class=""nt"">&lt;arg</span> <span class=""na"">name=</span><span class=""s"">""eth_port""</span> <span class=""na"">value=</span><span class=""s"">""eth1""</span> <span class=""nt"">/&gt;</span>\n    <span class=""nt"">&lt;arg</span> <span class=""na"">name=</span><span class=""s"">""robot_description""</span> <span class=""na"">value=</span><span class=""s"">""$(find sr_description)/robots/shadowhand_motor_biotac.urdf.xacro""</span> <span class=""nt"">/&gt;</span>\n  <span class=""nt"">&lt;/include&gt;</span>\n<span class=""nt"">&lt;/launch&gt;</span>\n\n</code></pre></div>\n<h4 id=""available-arguments-for-sr_edc_bimanual-launch"">Available arguments for sr_edc_bimanual.launch</h4>\n\n<ul>\n<li>\n<code>eth_port</code>: The ethernet port/s that will be used to search for etherCAT devices (shadow hands or other devices like RoNeX). More than one port can be provided in this argument, using underscore as a separator.</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch sr_edc_launch sr_edc_bimanual.launch rh_serial:=1234 lh_serial:=1235 eth_port:=eth0_eth1\n\n</code></pre></div>\n<ul>\n<li>\n<code>debug</code>: Set to true for debugging</li>\n<li>\n<code>calibration_controllers</code>: Set to 0 if we don\'t want to run calibration controllers (e.g. for the muscle hand)</li>\n<li>\n<code>robot_description</code>: Xacro file containing the robot description we want to load</li>\n<li>\n<code>pwm_control</code>: The control mode PWM (true) or torque (false)</li>\n<li>\n<code>rh_serial</code>: The ethercat serial number for the right hand</li>\n<li>\n<code>rh_id</code>: The id for the right hand. It needs to be the same (but without trailing underscore) as the prefix used in the hand model.</li>\n<li>\n<code>lh_serial</code>: The ethercat serial number for the left hand</li>\n<li>\n<code>lh_id</code>: The id for the left hand. It needs to be the same (but without trailing underscore) as the prefix used in the hand model.</li>\n</ul>\n\n<h4 id=""available-arguments-for-sr_edc-launch"">Available arguments for sr_edc.launch</h4>\n\n<ul>\n<li>\n<code>eth_port</code>: The ethernet port/s that will be used to search for etherCAT devices (shadow hands or other devices like RoNeX). More than one port can be provided in this argument, using underscore as a separator.</li>\n<li>\n<code>debug</code>: Set to true for debugging</li>\n<li>\n<code>calibration_controllers</code>: Set to 0 if we don\'t want to run calibration controllers (e.g. for the muscle hand)</li>\n<li>\n<code>robot_description</code>: Xacro file containing the robot description we want to load</li>\n<li>\n<code>pwm_control</code>: The control mode PWM (true) or torque (false)</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
control_toolbox,http://rosindex.github.io/r/control_toolbox/,"hydro,jade,kinetic,indigo",control_toolbox,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""control_toolbox"">control_toolbox</h1>\n\n<p>See <a href=""http://ros.org/wiki/ros_control"">ros_control documentation</a> on ros.org</p>\n\n<h3 id=""build-status"">Build Status</h3>\n\n<p><a href=""https://travis-ci.org/ros-controls/control_toolbox""><img src=""https://travis-ci.org/ros-controls/control_toolbox.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
graspit_tools,http://rosindex.github.io/r/graspit_tools/,indigo,"grasp_planning_graspit,grasp_planning_graspit_msgs,grasp_planning_graspit_ros,graspit_tools,jaco_graspit_sample,urdf2graspit","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""graspit-pkgs"">graspit-pkgs</h1>\n\n<p>Collection of packages related to GraspIt!</p>\n\n<p>Please also see <a href=""https://github.com/JenniferBuehler/graspit-pkgs/wiki"">the wiki page</a> for more details.</p>\n</div>\n\n            \n          </div>'"
jsk_apc,http://rosindex.github.io/r/jsk_apc/,indigo,"jsk_2015_05_baxter_apc,jsk_2016_01_baxter_apc,jsk_apc,jsk_apc2015_common,jsk_apc2016_common","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_apc"">jsk_apc</h1>\n\n<p><img src=""https://raw.githubusercontent.com//start-jsk/jsk_apc/master//images/icon_white.png"" align=""right"" width=""192px""></p>\n\n<p><a href=""https://badge.fury.io/gh/start-jsk%2Fjsk_apc""><img src=""https://badge.fury.io/gh/start-jsk%2Fjsk_apc.svg"" alt=""GitHub version""></a>\n<a href=""https://travis-ci.org/start-jsk/jsk_apc""><img src=""https://travis-ci.org/start-jsk/jsk_apc.svg"" alt=""""></a>\n<a href=""https://gitter.im/start-jsk/jsk_apc?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge""><img src=""https://badges.gitter.im/start-jsk/jsk_apc.svg"" alt=""Gitter""></a>\n<a href=""https://jsk-robotics.slack.com/messages/jsk_apc/""><img src=""https://img.shields.io/badge/slack-%23jsk__apc-e100e1.svg"" alt=""Slack""></a>\n<a href=""http://jsk-apc.readthedocs.org/en/latest/?badge=latest""><img src=""https://readthedocs.org/projects/jsk-apc/badge/?version=latest"" alt=""Documentation Status""></a></p>\n\n<p><strong>jsk_apc</strong> is a stack of ROS packages for <a href=""http://amazonpickingchallenge.org"">Amazon Picking Challenge</a> mainly developed by JSK lab.<br>\nThe documentation is available at <a href=""http://jsk-apc.readthedocs.org"">here</a>.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Indigo (Trusty)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>jsk_apc (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__jsk_apc__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uT32__jsk_apc__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>jsk_apc (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__jsk_apc__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uT64__jsk_apc__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>See <a href=""http://jsk-apc.readthedocs.org/en/latest/jsk_2015_05_baxter_apc/index.html"">jsk_2015_05_baxter_apc</a>.</p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""required"">Required</h3>\n\n<ol>\n<li>Install the ROS. <a href=""http://wiki.ros.org/indigo/Installation/Ubuntu"">Instructions for ROS indigo on Ubuntu 14.04</a>.</li>\n<li>\n<a href=""http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment"">Setup your ROS environment</a>.</li>\n<li>Build catkin workspace for <a href=""https://github.com/start-jsk/jsk_apc"">jsk_apc</a>:</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""gp"">$ </span>mkdir -p ~/ros/ws_jsk_apc/src <span class=""o"">&amp;&amp;</span> <span class=""nb"">cd</span> ~/ros/ws_jsk_apc/src\n<span class=""gp"">$ </span>wstool init . https://raw.githubusercontent.com/start-jsk/jsk_apc/master/fc.rosinstall\n<span class=""gp"">$ </span><span class=""nb"">cd</span> ..\n<span class=""gp"">$ </span>rosdep install -y -r --from-paths .\n<span class=""gp"">$ </span>sudo apt-get install python-catkin-tools ros-indigo-jsk-tools\n<span class=""gp"">$ </span>catkin build\n<span class=""gp"">$ </span><span class=""nb"">source </span>devel/setup.bash\n\n</code></pre></div>\n<ul>\n<li>Edit <code>/etc/hosts</code>:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">133.11.216.214 baxter 011310P0014.local\n\n</code></pre></div>\n<ul>\n<li>Add below in your <code>~/.bashrc</code>:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rossetmaster baxter.jsk.imi.i.u-tokyo.ac.jp\n$ rossetip\n\n$ # we recommend below setup (see http://jsk-docs.readthedocs.org/en/latest/jsk_common/doc/jsk_tools/cltools/setup_env_for_ros.html)\n$ echo """"""\nrossetip\nrosdefault\n"""""" &gt;&gt; ~/.bashrc\n$ rossetdefault baxter  # set ROS_MASTER_URI as http://baxter:11311\n\n</code></pre></div>\n<h3 id=""optional"">Optional</h3>\n\n<p><strong>Setup Kinect2</strong></p>\n\n<p>Please follow <a href=""https://github.com/code-iai/iai_kinect2#install"">Instructions at code-iai/iai_kinect2</a>,\nhowever, maybe you have error with the master branch. In that case, please use\n<a href=""https://github.com/start-jsk/jsk_apc/blob/master/kinect2.rosinstall"">this rosinstall</a>.</p>\n\n<p><strong>Setup rosserial + vacuum gripper</strong></p>\n\n<p>Write below in <code>/etc/udev/rules.d/90-rosserial.rules</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># ATTR{product}==""rosserial""\nSUBSYSTEM==""tty"", MODE=""0666""\n\n</code></pre></div>\n<p><strong>Setup SSH</strong></p>\n\n<p>Write below in <code>~/.ssh/config</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Host baxter\n  HostName baxter.jsk.imi.i.u-tokyo.ac.jp\n  User ruser  # password: rethink\n\n</code></pre></div>\n<p><strong>Setup Softkinetic Camera</strong></p>\n\n<p>See <a href=""http://jsk-recognition.readthedocs.org/en/latest/install_softkinetic_camera.html"">here</a> for almost all install process,\nbut for installing ROS package please do like below:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">git clone https://github.com/knorth55/softkinetic.git -b jsk_apc\n<span class=""nb"">cd </span>softkinetic/softkinetic_camera\ncatkin bt -iv\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
moveit_core,http://rosindex.github.io/r/moveit_core/,"hydro,fuerte,groovy,kinetic,jade,indigo","moveit_core,collision_detection,collision_detection_fcl,collision_distance_field,constraint_samplers,distance_field,dynamics_solver,geometric_shapes,kinematic_constraints,kinematics_base,kinematics_cache,kinematics_constraint_aware,kinematics_metrics,kinematics_planner,planning_interface,planning_models,planning_request_adapter,planning_scene,trajectory_processing","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-core"">MoveIt Core</h1>\n\n<p>This repository includes core libraries used by MoveIt:\n - representation of kinematic models\n - collision detection interfaces and implementations\n - interfaces for kinematic solver plugins\n - interfaces for motion planning plugins\n - interfaces for controllers and sensors</p>\n\n<p>These libraries do not depend on ROS and can be used independently.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-core"">MoveIt Core</h1>\n\n<p>This repository includes core libraries used by MoveIt:\n - representation of kinematic models\n - collision detection interfaces and implementations\n - interfaces for kinematic solver plugins\n - interfaces for motion planning plugins\n - interfaces for controllers and sensors</p>\n\n<p>These libraries do not depend on ROS and can be used independently.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/ros-planning/moveit_core""><img src=""https://travis-ci.org/ros-planning/moveit_core.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-core"">MoveIt Core</h1>\n\n<p>This repository includes core libraries used by MoveIt:\n - representation of kinematic models\n - collision detection interfaces and implementations\n - interfaces for kinematic solver plugins\n - interfaces for motion planning plugins\n - interfaces for controllers and sensors</p>\n\n<p>These libraries do not depend on ROS and can be used independently.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<ul>\n<li>Devel Job Status: <a href=""http://jenkins.ros.org/job/devel-indigo-moveit_core""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-moveit_core"" alt=""Devel Job Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://jenkins.ros.org/job/ros-indigo-moveit-core_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-moveit-core_binarydeb_trusty_amd64"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
p2os,http://rosindex.github.io/r/p2os/,"hydro,groovy,kinetic,jade,indigo","p2os_doc,p2os_driver,p2os_launch,p2os_msgs,p2os_teleop,p2os_urdf","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""p2os"">p2os</h1>\n\n<p>P2OS driver for the Pioneer robots. This driver was originally written for Player/Stage by\nBrian Gerkey and is now maintained for ROS.</p>\n\n<h2 id=""p2os_driver"">p2os_driver</h2>\n\n<p>Essential to P2OS is the driver. This controls the interface for the P2OS controller. </p>\n\n<p>Jade Build:</p>\n\n<p><a href=""http://build.ros.org/job/Jbin_uT32__p2os_driver__ubuntu_trusty_i386__binary/1/""><img src=""http://build.ros.org/job/Jbin_uT32__p2os_driver__ubuntu_trusty_i386__binary/1/badge/icon"" alt=""Build Status""></a></p>\n\n<p>Kinetic Build:</p>\n\n<p><a href=""http://build.ros.org/job/Ksrc_uX__p2os_driver__ubuntu_xenial__source/""><img src=""http://build.ros.org/job/Ksrc_uX__p2os_driver__ubuntu_xenial__source/badge/icon"" alt=""Build Status""></a></p>\n\n<h2 id=""p2os_launch"">p2os_launch</h2>\n\n<p>Relevant ROS launch files for the Robot. </p>\n\n<p>Jade Build:</p>\n\n<p><a href=""http://build.ros.org/job/Jbin_uT32__p2os_launch__ubuntu_trusty_i386__binary/1/""><img src=""http://build.ros.org/job/Jbin_uT32__p2os_launch__ubuntu_trusty_i386__binary/1/badge/icon"" alt=""Build Status""></a></p>\n\n<p>Kinetic Build:</p>\n\n<p><a href=""http://build.ros.org/job/Ksrc_uX__p2os_launch__ubuntu_xenial__source/""><img src=""http://build.ros.org/job/Ksrc_uX__p2os_launch__ubuntu_xenial__source/badge/icon"" alt=""Build Status""></a></p>\n\n<h2 id=""p2os_teleop"">p2os_teleop</h2>\n\n<p>Control the robot with a joystick or keyboard. </p>\n\n<p>Jade Build:</p>\n\n<p><a href=""http://build.ros.org/job/Jbin_uT32__p2os_teleop__ubuntu_trusty_i386__binary/1/""><img src=""http://build.ros.org/job/Jbin_uT32__p2os_teleop__ubuntu_trusty_i386__binary/1//badge/icon"" alt=""Build Status""></a></p>\n\n<p>Kinetic Build:</p>\n\n<p><a href=""http://build.ros.org/job/Ksrc_uX__p2os_teleop__ubuntu_xenial__source/""><img src=""http://build.ros.org/job/Ksrc_uX__p2os_teleop__ubuntu_xenial__source/badge/icon"" alt=""Build Status""></a></p>\n\n<h2 id=""p2os_urdf"">p2os_urdf</h2>\n\n<p>Allows you to see the robot within RVIZ for navigation purposes. </p>\n\n<p>Jade Build:</p>\n\n<p><a href=""http://build.ros.org/job/Jsrc_uT__p2os_urdf__ubuntu_trusty__source/2/""><img src=""http://build.ros.org/job/Jsrc_uT__p2os_urdf__ubuntu_trusty__source/2/badge/icon"" alt=""Build Status""></a></p>\n\n<p>Kinetic Build:</p>\n\n<p><a href=""http://build.ros.org/job/Ksrc_uX__p2os_urdf__ubuntu_xenial__source""><img src=""http://build.ros.org/job/Ksrc_uX__p2os_urdf__ubuntu_xenial__source/badge/icon"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
orocos_kinematics_dynamics,http://rosindex.github.io/r/orocos_kinematics_dynamics/,"hydro,electric,groovy,kinetic,jade,indigo","orocos_kdl,orocos_kinematics_dynamics,python_orocos_kdl,kdl","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
moveit_ikfast,http://rosindex.github.io/r/moveit_ikfast/,"hydro,jade,kinetic,indigo",moveit_ikfast,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-ikfast"">MoveIt! IKFast</h1>\n\n<ul>\n<li>Author: Dave Coleman, CU Boulder; Jeremy Zoss, SwRI; David Butterworth, KAIST, Mathias L\xc3\xbcdtke, Fraunhofer IPA</li>\n<li>Date: 5/24/2013</li>\n<li>Version: 3.0.1</li>\n</ul>\n\n<p>Generates a IKFast kinematics plugin for MoveIt using OpenRave generated cpp files. </p>\n\n<p>Tested on ROS Groovy with Catkin using OpenRave 0.8 with a 6dof and 7dof robot arm manipulator. Does not work with &gt;7dof. </p>\n\n<p><a href=""http://docs.ros.org/hydro/api/moveit_ikfast/html/doc/ikfast_tutorial.html"">Documentation on docs.ros.org</a></p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>master branch: <a href=""https://travis-ci.org/ros-planning/moveit_ikfast""><img src=""https://travis-ci.org/ros-planning/moveit_ikfast.png?branch=master"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-ikfast"">MoveIt! IKFast</h1>\n\n<ul>\n<li>Authors: Dave Coleman, CU Boulder; Jeremy Zoss, SwRI; David Butterworth, KAIST, Mathias L\xc3\xbcdtke, Fraunhofer IPA</li>\n<li>Date: 5/24/2013</li>\n</ul>\n\n<p>Generates a IKFast kinematics plugin for MoveIt using <a href=""http://openrave.org/"">OpenRave</a> generated cpp files.</p>\n\n<p>Tested on ROS Hydro and greater with Catkin using OpenRave 0.8 with a 6dof and 7dof robot arm manipulator. Does not work with greater than 7dof.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/moveit_ikfast/html/doc/ikfast_tutorial.html"">Documentation on docs.ros.org</a></p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>indigo-devel branch: <a href=""https://travis-ci.org/ros-planning/moveit_ikfast""><img src=""https://travis-ci.org/ros-planning/moveit_ikfast.png?branch=indigo-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
pepper_moveit_config,http://rosindex.github.io/r/pepper_moveit_config/,"jade,indigo",pepper_moveit_config,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>pepper_moveit_config ===================</p>\n\n<p>This is a MoveIt! config package generated by the MoveIt! wizard. It\nrequires a Pepper model which you can get from here:</p>\n\n<p><a href=""https://github.com/ros-naoqi/pepper_robot/tree/master/pepper_description"">https://github.com/ros-naoqi/pepper_robot/tree/master/pepper_description</a>\nor from the binary package : ros-indigo-pepper-description</p>\n\n<p>The moveit package must be run on a remote computer and not directly on\nyour robot.</p>\n\n<h1 id=""1-compile-the-package"">1 Compile the package</h1>\n\n<p>pepper_moveit_config package doesn\'t need any compilation so running\nrospack profile should be enough.</p>\n\n<p>And your ready to play with your Pepper</p>\n\n<h1 id=""2-run-moveit"">2 Run MoveIt</h1>\n\n<h2 id=""without-robot"">Without robot</h2>\n\n<p>You can run this moveit package either unconnected to any robot or\nattached to a robot (real or simulated): For a standalone execution :</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch pepper_moveit_config demo.launch\n\n</code></pre></div>\n<p>Once launching the demo, you should see Pepper in MoveIt! GUI like this:</p>\n\n<p><img src=""https://raw.githubusercontent.com//ros-naoqi/pepper_moveit_config/master//tuto/moveit_launch.png"" alt=""image"">{width=""100%""}</p>\n\n<p>Check the box Allow Approximate IK Solutions (and optionally, choose the\nPlanning library), and you are ready to control the robot.</p>\n\n<h1 id=""3-use-moveit"">3 Use Moveit:</h1>\n\n<p>RVIZ has been open: you can see that a MotionPlanning plugin has been\nlaunched. First check the box ""Allow approximate IK Solutions"" on the\nbottom of the left column. Then click on the Planning tab.</p>\n\n<p>Select which part of the robot you want to move: In the plugin list on\nthe upper part of the left column, you can select a group under\nMotionPlanning/Planning Request/Planning Group.</p>\n\n<p>Now you can define your motion by drag and dropping the interactive\nmarkers. You can compute a trajectory by clicking the \'planning\' button\nOnce the motion is satisfying you can try it on your real robot using\n\'execute\' or \'plan and execute\'.</p>\n\n<p>NOTE: The start state is not updated automatically, you have to go to\n\'Select Start State\' select \'Current\' and click \'Update\'.</p>\n</div>\n\n            \n          </div>'"
ompl_visual_tools,http://rosindex.github.io/r/ompl_visual_tools/,"hydro,jade,kinetic,indigo",ompl_visual_tools,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ompl-visual-tools"">OMPL Visual Tools</h1>\n\n<p>The OMPL Visual Tools is a library for visualizing and debugging <a href=""http://ompl.kavrakilab.org/"">Open Motion Planning Library</a> algorithms in Rviz.</p>\n\n<p>Formally named ompl_rviz_viewer until August 2014, this project spun out of an internship at Willow Garage. <a href=""https://www.youtube.com/watch?v=RcGvi4Svd4k"">Video</a></p>\n\n<p>The ompl_visual_tools was originally develped for testing cost-based algorithms in a two dimensional space with a third dimension displayed as cost.\nThe space is specified as a grey scale cost map image that can be passed in to the program.\nThe lighter (closer to white) each pixel of the image is, the ""higher the cost"" is considered to be. Black is considered no cost.\nAdditionally, absolute obstacles can be specified by defining a max limit to the cost, such that any value above that threshold is considered an obstacle.</p>\n\n<p>This little program is similar to the OMPL.app that is distributed with OMPL, but instead uses RViz for visualization and is more\nstreamlined for considering costs and experience-based planning.</p>\n\n<p>Developed by <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder and Willow Garage</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/ompl_visual_tools""><img src=""https://travis-ci.org/davetcoleman/ompl_visual_tools.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-ompl_visual_tools""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-ompl_visual_tools"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-ompl-visual-tools_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-ompl-visual-tools_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/ompl_visual_tools/jade-devel//screenshots/ompl_visual_tools.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-ompl-visual-tools\n</code></pre></div>\n<h3 id=""build-from-source"">Build from Source</h3>\n\n<p>To build this package, <code>git clone</code> this repo into a <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and be sure to install necessary dependencies by running the following command in the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install -y --from-paths src --ignore-src --rosdistro indigo\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/my_package/html/"">Class Reference</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>This library can be integrated into your project to easily view a 2D, 3D or robot planning environment in Rviz.</p>\n\n<p>First, load the visualizer:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // The visual tools for interfacing with Rviz\n    ompl_visual_tools::OmplVisualToolsPtr visual_tools_;\n\n    // Load the tool for displaying in Rviz\n    visual_tools_.reset(new ompl_visual_tools::OmplVisualTools(BASE_FRAME));\n    visual_tools_-&gt;setSpaceInformation(si_);\n    visual_tools_-&gt;setGlobalScale(100);\n\n    // Clear current rviz makers\n    visual_tools_-&gt;deleteAllMarkers();\n\n</code></pre></div>\n<h3 id=""two-dimensions-with-optional-cost-map"">Two Dimensions with optional cost map</h3>\n\n<p>To test with a 2D environment with a cost map:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // Cost in 2D\n    ompl::base::CostMap2DOptimizationObjectivePtr cost_map_;\n    cost_map_-&gt;max_cost_threshold_percent_ = max_cost_threshold_percent;\n    cost_map_-&gt;loadImage(image_path);\n\n    // Pass cost to visualizer\n    visual_tools_-&gt;setCostMap(cost_map_-&gt;cost_);\n\n</code></pre></div>\n<p>To view the cost map in Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    visual_tools_-&gt;publishCostMap(cost_map_-&gt;image_);\n\n</code></pre></div>\n<p>To view the start and goal location:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    visual_tools_-&gt;publishState(start, rviz_visual_tools::GREEN,  rviz_visual_tools::XLARGE, ""plan_start_goal"");\n    visual_tools_-&gt;publishState(goal,  rviz_visual_tools::ORANGE, rviz_visual_tools::XLARGE, ""plan_start_goal"");\n\n</code></pre></div>\n<p>To view the solution path:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">      // Interpolate solution\n      simple_setup_-&gt;getSolutionPath().interpolate();\n\n      // Show path\n      visual_tools_-&gt;publishPath( simple_setup_-&gt;getSolutionPath(), rviz_visual_tools::GREEN, 1.0, ""final_solution"");\n\n</code></pre></div>\n<p>And to see more of what the planner was doing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">      // Visualize the explored space\n      visual_tools_-&gt;publishGraph(planner_data, rviz_visual_tools::ORANGE, 0.2, ""tree"");\n\n      // Visualize the sample locations\n      visual_tools_-&gt;publishSamples(planner_data);\n\n</code></pre></div>\n<h3 id=""moveit-robot-planning"">MoveIt! Robot Planning</h3>\n\n<p>See moveit_visual_tools for more information about tools this class can use with MoveIt!. For OMPL-specific features:</p>\n\n<p>First, set the state space that MoveIt! has chosen for your robot in OMPL:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // Create a state space describing our robot\'s planning group\n    ompl_interface::ModelBasedStateSpaceSpecification model_ss_spec(moveit_robot_model, joint_model_group);\n    const ompl_interface::JointModelStateSpaceFactory factory;\n    ompl_interface::ModelBasedStateSpacePtr model_state_space = factory.getNewStateSpace(model_ss_spec);\n\n    // Setup the state space\n    model_state_space-&gt;setup();\n\n    visual_tools_-&gt;setStateSpace(model_state_space);\n\n</code></pre></div>\n<p>Then you can publish the paths of various tips on a robot, as planned in OMPL:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    std::vector&lt;ompl::base::PlannerDataPtr&gt; paths;\n    simple_setup.getAllPlannerDatas(paths);\n\n    // Get tip links for this setup\n    std::vector&lt;const robot_model::LinkModel*&gt; tips;\n    joint_model_group_-&gt;getEndEffectorTips(tips);\n\n    bool show_trajectory_animated = true;\n    visual_tools_-&gt;publishRobotPath(paths[0], joint_model_group, tips, show_trajectory_animated);\n\n</code></pre></div>\n<h2 id=""view-in-rviz"">View in Rviz</h2>\n\n<p>Start Rviz using the included launch file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ompl_visual_tools ompl_rviz.launch\n\n</code></pre></div>\n<h3 id=""demo-planner-with-standard-rrt"">Demo planner with standard RRT:</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ompl_visual_tools rrt_demo\n\n</code></pre></div>\n<p>To see optional parameters, pass in <code>--help</code> argument. There are many options.</p>\n\n<p><strong>Note:</strong> <em>To change the algorithm being used, manually edit the code</em></p>\n\n<h2 id=""cost-map-usage"">Cost Map Usage</h2>\n\n<p>A default cost map image will be used, located in the resources/ folder, for running the algorithm.\nOptionally one can pass in their own cost map image through a command line argument, as shown in the following example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ompl_visual_tools rrt_demo cost_map.ppm\n\n</code></pre></div>\n<p>The image must be in the PPM ""Netpbm color image"" format. To convert a jpg, png or any other image into this format on Linux simply use the ""convert"" command, as shown in the following example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install convert\nconvert cost_map.png cost_map.ppm\n\n</code></pre></div>\n<p>In general, a 100x100 pixel image is a decent space size, and larger dimensions will require much more computational resources or may hang your computer. GIMP is a good editor for scaling images down.</p>\n\n<h2 id=""todo"">TODO</h2>\n\n<ul>\n<li>Remove PPM library and instead depend on OMPL\'s version</li>\n</ul>\n\n<h2 id=""develop"">Develop</h2>\n\n<p>You are encouraged to fork this package on GitHub and test your own cost-based planning algorithms using this visualizer!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ompl-visual-tools"">OMPL Visual Tools</h1>\n\n<p>The OMPL Visual Tools is a library for visualizing and debugging <a href=""http://ompl.kavrakilab.org/"">Open Motion Planning Library</a> algorithms in Rviz.</p>\n\n<p>Formally named ompl_rviz_viewer until August 2014, this project spun out of an internship at Willow Garage. <a href=""https://www.youtube.com/watch?v=RcGvi4Svd4k"">Video</a></p>\n\n<p>The ompl_visual_tools was originally develped for testing cost-based algorithms in a two dimensional space with a third dimension displayed as cost.\nThe space is specified as a grey scale cost map image that can be passed in to the program.\nThe lighter (closer to white) each pixel of the image is, the ""higher the cost"" is considered to be. Black is considered no cost.\nAdditionally, absolute obstacles can be specified by defining a max limit to the cost, such that any value above that threshold is considered an obstacle.</p>\n\n<p>This little program is similar to the OMPL.app that is distributed with OMPL, but instead uses RViz for visualization and is more\nstreamlined for considering costs and experience-based planning.</p>\n\n<p>Developed by <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder and Willow Garage</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/ompl_visual_tools""><img src=""https://travis-ci.org/davetcoleman/ompl_visual_tools.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-ompl_visual_tools""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-ompl_visual_tools"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-ompl-visual-tools_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-ompl-visual-tools_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/ompl_visual_tools/kinetic-devel//screenshots/ompl_visual_tools.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-ompl-visual-tools\n</code></pre></div>\n<h3 id=""build-from-source"">Build from Source</h3>\n\n<p>To build this package, <code>git clone</code> this repo into a <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and be sure to install necessary dependencies by running the following command in the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install -y --from-paths src --ignore-src --rosdistro indigo\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/my_package/html/"">Class Reference</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>This library can be integrated into your project to easily view a 2D, 3D or robot planning environment in Rviz.</p>\n\n<p>First, load the visualizer:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // The visual tools for interfacing with Rviz\n    ompl_visual_tools::OmplVisualToolsPtr visual_tools_;\n\n    // Load the tool for displaying in Rviz\n    visual_tools_.reset(new ompl_visual_tools::OmplVisualTools(BASE_FRAME));\n    visual_tools_-&gt;setSpaceInformation(si_);\n    visual_tools_-&gt;setGlobalScale(100);\n\n    // Clear current rviz makers\n    visual_tools_-&gt;deleteAllMarkers();\n\n</code></pre></div>\n<h3 id=""two-dimensions-with-optional-cost-map"">Two Dimensions with optional cost map</h3>\n\n<p>To test with a 2D environment with a cost map:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // Cost in 2D\n    ompl::base::CostMap2DOptimizationObjectivePtr cost_map_;\n    cost_map_-&gt;max_cost_threshold_percent_ = max_cost_threshold_percent;\n    cost_map_-&gt;loadImage(image_path);\n\n    // Pass cost to visualizer\n    visual_tools_-&gt;setCostMap(cost_map_-&gt;cost_);\n\n</code></pre></div>\n<p>To view the cost map in Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    visual_tools_-&gt;publishCostMap(cost_map_-&gt;image_);\n\n</code></pre></div>\n<p>To view the start and goal location:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    visual_tools_-&gt;publishState(start, rviz_visual_tools::GREEN,  rviz_visual_tools::XLARGE, ""plan_start_goal"");\n    visual_tools_-&gt;publishState(goal,  rviz_visual_tools::ORANGE, rviz_visual_tools::XLARGE, ""plan_start_goal"");\n\n</code></pre></div>\n<p>To view the solution path:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">      // Interpolate solution\n      simple_setup_-&gt;getSolutionPath().interpolate();\n\n      // Show path\n      visual_tools_-&gt;publishPath( simple_setup_-&gt;getSolutionPath(), rviz_visual_tools::GREEN, 1.0, ""final_solution"");\n\n</code></pre></div>\n<p>And to see more of what the planner was doing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">      // Visualize the explored space\n      visual_tools_-&gt;publishGraph(planner_data, rviz_visual_tools::ORANGE, 0.2, ""tree"");\n\n      // Visualize the sample locations\n      visual_tools_-&gt;publishSamples(planner_data);\n\n</code></pre></div>\n<h3 id=""moveit-robot-planning"">MoveIt! Robot Planning</h3>\n\n<p>See moveit_visual_tools for more information about tools this class can use with MoveIt!. For OMPL-specific features:</p>\n\n<p>First, set the state space that MoveIt! has chosen for your robot in OMPL:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // Create a state space describing our robot\'s planning group\n    ompl_interface::ModelBasedStateSpaceSpecification model_ss_spec(moveit_robot_model, joint_model_group);\n    const ompl_interface::JointModelStateSpaceFactory factory;\n    ompl_interface::ModelBasedStateSpacePtr model_state_space = factory.getNewStateSpace(model_ss_spec);\n\n    // Setup the state space\n    model_state_space-&gt;setup();\n\n    visual_tools_-&gt;setStateSpace(model_state_space);\n\n</code></pre></div>\n<p>Then you can publish the paths of various tips on a robot, as planned in OMPL:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    std::vector&lt;ompl::base::PlannerDataPtr&gt; paths;\n    simple_setup.getAllPlannerDatas(paths);\n\n    // Get tip links for this setup\n    std::vector&lt;const robot_model::LinkModel*&gt; tips;\n    joint_model_group_-&gt;getEndEffectorTips(tips);\n\n    bool show_trajectory_animated = true;\n    visual_tools_-&gt;publishRobotPath(paths[0], joint_model_group, tips, show_trajectory_animated);\n\n</code></pre></div>\n<h2 id=""view-in-rviz"">View in Rviz</h2>\n\n<p>Start Rviz using the included launch file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ompl_visual_tools ompl_rviz.launch\n\n</code></pre></div>\n<h3 id=""demo-planner-with-standard-rrt"">Demo planner with standard RRT:</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ompl_visual_tools rrt_demo\n\n</code></pre></div>\n<p>To see optional parameters, pass in <code>--help</code> argument. There are many options.</p>\n\n<p><strong>Note:</strong> <em>To change the algorithm being used, manually edit the code</em></p>\n\n<h2 id=""cost-map-usage"">Cost Map Usage</h2>\n\n<p>A default cost map image will be used, located in the resources/ folder, for running the algorithm.\nOptionally one can pass in their own cost map image through a command line argument, as shown in the following example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ompl_visual_tools rrt_demo cost_map.ppm\n\n</code></pre></div>\n<p>The image must be in the PPM ""Netpbm color image"" format. To convert a jpg, png or any other image into this format on Linux simply use the ""convert"" command, as shown in the following example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install imagemagick\nconvert cost_map.png cost_map.ppm\n\n</code></pre></div>\n<p>In general, a 100x100 pixel image is a decent space size, and larger dimensions will require much more computational resources or may hang your computer. GIMP is a good editor for scaling images down.</p>\n\n<h2 id=""todo"">TODO</h2>\n\n<ul>\n<li>Remove PPM library and instead depend on OMPL\'s version</li>\n</ul>\n\n<h2 id=""develop"">Develop</h2>\n\n<p>You are encouraged to fork this package on GitHub and test your own cost-based planning algorithms using this visualizer!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ompl-visual-tools"">OMPL Visual Tools</h1>\n\n<p>The OMPL Visual Tools is a library for visualizing and debugging <a href=""http://ompl.kavrakilab.org/"">Open Motion Planning Library</a> algorithms in Rviz.</p>\n\n<p>Formally named ompl_rviz_viewer until August 2014, this project spun out of an internship at Willow Garage. <a href=""https://www.youtube.com/watch?v=RcGvi4Svd4k"">Video</a></p>\n\n<p>The ompl_visual_tools was originally develped for testing cost-based algorithms in a two dimensional space with a third dimension displayed as cost.\nThe space is specified as a grey scale cost map image that can be passed in to the program.\nThe lighter (closer to white) each pixel of the image is, the ""higher the cost"" is considered to be. Black is considered no cost.\nAdditionally, absolute obstacles can be specified by defining a max limit to the cost, such that any value above that threshold is considered an obstacle.</p>\n\n<p>This little program is similar to the OMPL.app that is distributed with OMPL, but instead uses RViz for visualization and is more\nstreamlined for considering costs and experience-based planning.</p>\n\n<p>Developed by <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder and Willow Garage</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/ompl_visual_tools""><img src=""https://travis-ci.org/davetcoleman/ompl_visual_tools.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-ompl_visual_tools""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-ompl_visual_tools"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-ompl-visual-tools_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-ompl-visual-tools_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/ompl_visual_tools/indigo-devel//screenshots/ompl_visual_tools.png"" alt=""""></p>\n\n<h2 id=""how-to-build"">How to Build</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-ompl-visual-tools\n\n</code></pre></div>\n<h2 id=""usage"">Usage</h2>\n\n<p>This library can be integrated into your project to easily view a 2D, 3D or robot planning environment in Rviz.</p>\n\n<p>First, load the visualizer:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // The visual tools for interfacing with Rviz\n    ompl_visual_tools::OmplVisualToolsPtr visual_tools_;\n\n    // Load the tool for displaying in Rviz\n    visual_tools_.reset(new ompl_visual_tools::OmplVisualTools(BASE_FRAME));\n    visual_tools_-&gt;setSpaceInformation(si_);\n    visual_tools_-&gt;setGlobalScale(100);\n\n    // Clear current rviz makers\n    visual_tools_-&gt;deleteAllMarkers();\n\n</code></pre></div>\n<h3 id=""two-dimensions-with-optional-cost-map"">Two Dimensions with optional cost map</h3>\n\n<p>To test with a 2D environment with a cost map:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // Cost in 2D\n    ompl::base::CostMap2DOptimizationObjectivePtr cost_map_;\n    cost_map_-&gt;max_cost_threshold_percent_ = max_cost_threshold_percent;\n    cost_map_-&gt;loadImage(image_path);\n\n    // Pass cost to visualizer\n    visual_tools_-&gt;setCostMap(cost_map_-&gt;cost_);\n\n</code></pre></div>\n<p>To view the cost map in Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    visual_tools_-&gt;publishCostMap(cost_map_-&gt;image_);\n\n</code></pre></div>\n<p>To view the start and goal location:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    visual_tools_-&gt;publishState(start, rviz_visual_tools::GREEN,  rviz_visual_tools::XLARGE, ""plan_start_goal"");\n    visual_tools_-&gt;publishState(goal,  rviz_visual_tools::ORANGE, rviz_visual_tools::XLARGE, ""plan_start_goal"");\n\n</code></pre></div>\n<p>To view the solution path:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">      // Interpolate solution\n      simple_setup_-&gt;getSolutionPath().interpolate();\n\n      // Show path\n      visual_tools_-&gt;publishPath( simple_setup_-&gt;getSolutionPath(), rviz_visual_tools::GREEN, 1.0, ""final_solution"");\n\n</code></pre></div>\n<p>And to see more of what the planner was doing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">      // Visualize the explored space\n      visual_tools_-&gt;publishGraph(planner_data, rviz_visual_tools::ORANGE, 0.2, ""tree"");\n\n      // Visualize the sample locations\n      visual_tools_-&gt;publishSamples(planner_data);\n\n</code></pre></div>\n<h3 id=""moveit-robot-planning"">MoveIt! Robot Planning</h3>\n\n<p>See moveit_visual_tools for more information about tools this class can use with MoveIt!. For OMPL-specific features:</p>\n\n<p>First, set the state space that MoveIt! has chosen for your robot in OMPL:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // Create a state space describing our robot\'s planning group\n    ompl_interface::ModelBasedStateSpaceSpecification model_ss_spec(moveit_robot_model, joint_model_group);\n    const ompl_interface::JointModelStateSpaceFactory factory;\n    ompl_interface::ModelBasedStateSpacePtr model_state_space = factory.getNewStateSpace(model_ss_spec);\n\n    // Setup the state space\n    model_state_space-&gt;setup();\n\n    visual_tools_-&gt;setStateSpace(model_state_space);\n\n</code></pre></div>\n<p>Then you can publish the paths of various tips on a robot, as planned in OMPL:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    std::vector&lt;ompl::base::PlannerDataPtr&gt; paths;\n    simple_setup.getAllPlannerDatas(paths);\n\n    // Get tip links for this setup\n    std::vector&lt;const robot_model::LinkModel*&gt; tips;\n    joint_model_group_-&gt;getEndEffectorTips(tips);\n\n    bool show_trajectory_animated = true;\n    visual_tools_-&gt;publishRobotPath(paths[0], joint_model_group, tips, show_trajectory_animated);\n\n</code></pre></div>\n<h2 id=""view-in-rviz"">View in Rviz</h2>\n\n<p>Start Rviz using the included launch file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ompl_visual_tools ompl_rviz.launch\n\n</code></pre></div>\n<h3 id=""demo-planner-with-standard-rrt"">Demo planner with standard RRT:</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ompl_visual_tools rrt_demo\n\n</code></pre></div>\n<p>To see optional parameters, pass in <code>--help</code> argument. There are many options.</p>\n\n<p><strong>Note:</strong> <em>To change the algorithm being used, manually edit the code</em></p>\n\n<h2 id=""cost-map-usage"">Cost Map Usage</h2>\n\n<p>A default cost map image will be used, located in the resources/ folder, for running the algorithm.\nOptionally one can pass in their own cost map image through a command line argument, as shown in the following example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ompl_visual_tools rrt_demo cost_map.ppm\n\n</code></pre></div>\n<p>The image must be in the PPM ""Netpbm color image"" format. To convert a jpg, png or any other image into this format on Linux simply use the ""convert"" command, as shown in the following example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install convert\nconvert cost_map.png cost_map.ppm\n\n</code></pre></div>\n<p>In general, a 100x100 pixel image is a decent space size, and larger dimensions will require much more computational resources or may hang your computer. GIMP is a good editor for scaling images down.</p>\n\n<h2 id=""todo"">TODO</h2>\n\n<ul>\n<li>Remove PPM library and instead depend on OMPL\'s version</li>\n</ul>\n\n<h2 id=""develop"">Develop</h2>\n\n<p>You are encouraged to fork this package on GitHub and test your own cost-based planning algorithms using this visualizer!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ompl-visual-tools"">OMPL Visual Tools</h1>\n\n<p>The OMPL Visual Tools is a library for visualizing and debugging <a href=""http://ompl.kavrakilab.org/"">Open Motion Planning Library</a> algorithms in Rviz. </p>\n\n<p>Formally named ompl_rviz_viewer until August 2014, this project spun out of an internship at Willow Garage. <a href=""https://www.youtube.com/watch?v=RcGvi4Svd4k"">Video</a></p>\n\n<p>The ompl_visual_tools was originally develped for testing cost-based algorithms in a two dimensional space with a third dimension displayed as cost. \nThe space is specified as a grey scale cost map image that can be passed in to the program. \nThe lighter (closer to white) each pixel of the image is, the ""higher the cost"" is considered to be. Black is considered no cost. \nAdditionally, absolute obstacles can be specified by defining a max limit to the cost, such that any value above that threshold is considered an obstacle.</p>\n\n<p>This little program is similar to the OMPL.app that is distributed with OMPL, but instead uses RViz for visualization and is more \nstreamlined for considering costs and experience-based planning.</p>\n\n<p><img align=""right"" src=""https://raw.githubusercontent.com/davetcoleman/ompl_visual_tools/hydro-devel/screenshots/ompl_visual_tools.png"">\n.\n.</p>\n\n<h2 id=""how-to-build"">How to Build</h2>\n\n<p><strong>Indigo</strong></p>\n\n<p>Coming soon</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-ompl-visual-tools\n\n</code></pre></div>\n<p><strong>Hydro</strong></p>\n\n<p>Clone into your <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and rebuild.</p>\n\n<p>Note: this repo currently requires <code>OMPL 0.14.0</code> or newer, which is not available in debian for ROS Hydro. Please install OMPL from source.</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>This library can be integrated into your project to easily view a 2D, 3D or robot planning environment in Rviz.</p>\n\n<p>First, load the visualizer:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // The visual tools for interfacing with Rviz\n    ompl_visual_tools::OmplVisualToolsPtr visual_tools_;\n\n    // Load the tool for displaying in Rviz\n    visual_tools_.reset(new ompl_visual_tools::OmplVisualTools(BASE_FRAME));\n    visual_tools_-&gt;setSpaceInformation(si_);\n    visual_tools_-&gt;setGlobalScale(100);\n\n    // Clear current rviz makers\n    visual_tools_-&gt;deleteAllMarkers();\n\n</code></pre></div>\n<h3 id=""two-dimensions-with-optional-cost-map"">Two Dimensions with optional cost map</h3>\n\n<p>To test with a 2D environment with a cost map:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // Cost in 2D\n    ompl::base::CostMap2DOptimizationObjectivePtr cost_map_;\n    cost_map_-&gt;max_cost_threshold_percent_ = max_cost_threshold_percent;\n    cost_map_-&gt;loadImage(image_path);\n\n    // Pass cost to visualizer\n    visual_tools_-&gt;setCostMap(cost_map_-&gt;cost_);\n\n</code></pre></div>\n<p>To view the cost map in Rviz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    visual_tools_-&gt;publishCostMap(cost_map_-&gt;image_);\n\n</code></pre></div>\n<p>To view the start and goal location:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    visual_tools_-&gt;publishState(start, moveit_visual_tools::GREEN,  moveit_visual_tools::XLARGE, ""plan_start_goal"");\n    visual_tools_-&gt;publishState(goal,  moveit_visual_tools::ORANGE, moveit_visual_tools::XLARGE, ""plan_start_goal"");\n\n</code></pre></div>\n<p>To view the solution path:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">      // Interpolate solution\n      simple_setup_-&gt;getSolutionPath().interpolate();\n\n      // Show path\n      visual_tools_-&gt;publishPath( simple_setup_-&gt;getSolutionPath(), moveit_visual_tools::GREEN, 1.0, ""final_solution"");\n\n</code></pre></div>\n<p>And to see more of what the planner was doing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">      // Visualize the explored space\n      visual_tools_-&gt;publishGraph(planner_data, moveit_visual_tools::ORANGE, 0.2, ""tree"");\n\n      // Visualize the sample locations\n      visual_tools_-&gt;publishSamples(planner_data);\n\n</code></pre></div>\n<h3 id=""moveit-robot-planning"">MoveIt! Robot Planning</h3>\n\n<p>See moveit_visual_tools for more information about tools this class can use with MoveIt!. For OMPL-specific features:</p>\n\n<p>First, set the state space that MoveIt! has chosen for your robot in OMPL:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    // Create a state space describing our robot\'s planning group\n    ompl_interface::ModelBasedStateSpaceSpecification model_ss_spec(moveit_robot_model, joint_model_group);\n    const ompl_interface::JointModelStateSpaceFactory factory;\n    ompl_interface::ModelBasedStateSpacePtr model_state_space = factory.getNewStateSpace(model_ss_spec);\n\n    // Setup the state space\n    model_state_space-&gt;setup();\n\n    visual_tools_-&gt;setStateSpace(model_state_space);\n\n</code></pre></div>\n<p>Then you can publish the paths of various tips on a robot, as planned in OMPL:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    std::vector&lt;ompl::base::PlannerDataPtr&gt; paths;\n    simple_setup.getAllPaths(paths);\n\n    // Get tip links for this setup\n    std::vector&lt;const robot_model::LinkModel*&gt; tips;\n    joint_model_group_-&gt;getEndEffectorTips(tips);\n\n    bool show_trajectory_animated = true;\n    visual_tools_-&gt;publishRobotPath(paths[0], joint_model_group, tips, show_trajectory_animated);\n\n</code></pre></div>\n<h2 id=""view-in-rviz"">View in Rviz</h2>\n\n<p>Start Rviz using the included launch file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ompl_visual_tools ompl_rviz.launch\n\n</code></pre></div>\n<h3 id=""demo-planner-with-standard-rrt"">Demo planner with standard RRT:</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ompl_visual_tools rrt_demo\n\n</code></pre></div>\n<p>To see optional parameters, pass in <code>--help</code> argument. There are many options.</p>\n\n<p><strong>Note:</strong> <em>To change the algorithm being used, manually edit the code</em></p>\n\n<h2 id=""cost-map-usage"">Cost Map Usage</h2>\n\n<p>A default cost map image will be used, located in the resources/ folder, for running the algorithm. \nOptionally one can pass in their own cost map image through a command line argument, as shown in the following example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ompl_visual_tools rrt_demo cost_map.ppm\n\n</code></pre></div>\n<p>The image must be in the PPM ""Netpbm color image"" format. To convert a jpg, png or any other image into this format on Linux simply use the ""convert"" command, as shown in the following example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install convert\nconvert cost_map.png cost_map.ppm\n\n</code></pre></div>\n<p>In general, a 100x100 pixel image is a decent space size, and larger dimensions will require much more computational resources or may hang your computer. GIMP is a good editor for scaling images down.</p>\n\n<h2 id=""todo"">TODO</h2>\n\n<ul>\n<li>Remove PPM library and instead depend on OMPL\'s version</li>\n</ul>\n\n<h2 id=""develop"">Develop</h2>\n\n<p>You are encouraged to fork this package on GitHub and test your own cost-based planning algorithms using this visualizer!</p>\n</div>\n\n            \n          </div>'"
multi_level_map,http://rosindex.github.io/r/multi_level_map/,"hydro,groovy,indigo","multi_level_map,multi_level_map_msgs,multi_level_map_server,multi_level_map_utils","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""multi_level_map"">multi_level_map</h1>\n\n<p>Multi Level Map Server ROS Stack - A map server allowing multiple\nfloors (suitable for an entire building).</p>\n\n<p>This repository is now <em>deprecated</em>.  Active development is moving to\n<a href=""https://github.com/utexas-bwi/bwi_common"">utexas-bwi/bwi_common</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""multi_level_map"">multi_level_map</h1>\n\n<p>Multi Level Map Server ROS Stack - A map server allowing multiple floors (suitable for an entire building)</p>\n</div>\n\n            \n          </div>'"
robotiq,http://rosindex.github.io/r/robotiq/,"hydro,jade,groovy,indigo","robotiq,robotiq_action_server,robotiq_c2_model_visualization,robotiq_c_model_control,robotiq_ethercat,robotiq_force_torque_sensor,robotiq_joint_state_publisher,robotiq_modbus_rtu,robotiq_modbus_tcp,robotiq_s_model_control,robotiq_s_model_visualization,robotiq_s_model_articulated_gazebo,robotiq_s_model_articulated_gazebo_plugins,robotiq_s_model_articulated_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robotiq"">Robotiq</h1>\n\n<p><a href=""http://www.ros.org/wiki/Industrial"">ROS-Industrial</a> robotiq meta-package.  See the <a href=""http://ros.org/wiki/robotiq"">ROS wiki</a> page for more information.  </p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repo holds source code for all versions &gt; groovy. For those versions &lt;= groovy see: <a href=""https://code.google.com/p/swri-ros-pkg/source/browse"">SVN repo</a></p>\n</div>\n\n            \n          </div>'"
turtlebot,http://rosindex.github.io/r/turtlebot/,"hydro,fuerte,electric,groovy,kinetic,indigo","turtlebot,turtlebot_bringup,turtlebot_capabilities,turtlebot_description,turtlebot_teleop,linux_hardware,turtlebot_app_manager,pointcloud_to_laserscan,turtlebot_driver,turtlebot_node","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot"">turtlebot</h1>\n\n<p>The turtlebot stack provides all the basic drivers for running and using a <a href=""http://turtlebot.com"">TurtleBot</a> with <a href=""http://www.ros.org"">ROS</a>.</p>\n\n<p>ROS Wiki : (<a href=""http://www.ros.org/wiki/Robots/TurtleBot"">http://www.ros.org/wiki/Robots/TurtleBot</a>)</p>\n\n<p><img src=""http://www.turtlebot.com/assets/images/turtlebot_logo.png"" alt=""TurtleBot Logo""></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot"">turtlebot</h1>\n\n<p>The turtlebot stack provides all the basic drivers for running and using a <a href=""http://turtlebot.com"">TurtleBot</a> with <a href=""http://www.ros.org"">ROS</a>.</p>\n\n<p><img src=""http://www.turtlebot.com/assets/templates/turtlebot/img/turtlebot_logo.png"" alt=""TurtleBot Logo""></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot"">turtlebot</h1>\n\n<p>The turtlebot stack provides all the basic drivers for running and using a <a href=""http://turtlebot.com"">TurtleBot</a> with <a href=""http://www.ros.org"">ROS</a>.</p>\n\n<p>ROS Wiki : (<a href=""http://www.ros.org/wiki/Robots/TurtleBot"">http://www.ros.org/wiki/Robots/TurtleBot</a>)</p>\n\n<p><img src=""http://www.turtlebot.com/assets/templates/turtlebot/img/turtlebot_logo.png"" alt=""TurtleBot Logo""></p>\n</div>\n\n            \n          </div>'"
crazyflie,http://rosindex.github.io/r/crazyflie/,"jade,indigo","crazyflie,crazyflie_controller,crazyflie_cpp,crazyflie_demo,crazyflie_description,crazyflie_driver,crazyflie_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""crazyflie_ros"">crazyflie_ros</h1>\n\n<p>ROS stack for Bitcraze Crazyflie (<a href=""http://www.bitcraze.se/"">http://www.bitcraze.se/</a>), with the following features:</p>\n\n<ul>\n<li>Support for Crazyflie 1.0 and Crazyflie 2.0 (using stock firmware)</li>\n<li>Publishes on-board sensors in ROS standard message formats</li>\n<li>Supports ROS parameters to reconfigure crazyflie parameters</li>\n<li>Support for using multiple Crazyflies with a single Crazyradio</li>\n<li>Includes external controller for waypoint navigation (if motion capture system is available)</li>\n<li>No dependency to the Bitcraze SDK (Driver and Controller written in C++)</li>\n</ul>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>Clone the package into your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/whoenig/crazyflie_ros.git\n\n</code></pre></div>\n<p>If you want to use joystick teleoperation, you should setup the hector_quadrotor package (<a href=""http://wiki.ros.org/hector_quadrotor"">http://wiki.ros.org/hector_quadrotor</a>).</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>There are six packages included: crazyflie_cpp, crazyflie_driver, crazyflie_tools, crazyflie_description, crazyflie_controller, and crazyflie_demo.</p>\n\n<h3 id=""crazyflie_cpp"">Crazyflie_Cpp</h3>\n\n<p>This package contains a cpp library for the Crazyradio and Crazyflie. It can be used independently of ROS.</p>\n\n<h3 id=""crazyflie_driver"">Crazyflie_driver</h3>\n\n<p>This package contains the driver. In order to support multiple Crazyflies with a single Crazyradio, there is crazyflie_server (communicating with all Crazyflies) and crazyflie_add to dynamically add Crazyflies.\nThe server does not communicate to any Crazyflie initially, hence crazyflie_add needs to be used.</p>\n\n<h3 id=""crazyflie_tools"">Crazyflie_tools</h3>\n\n<p>This package contains tools which are helpful, but not required for normal operation. So far, it just support one tool for scanning for a Crazyflie.</p>\n\n<p>You can find connected Crazyflies using:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun crazyflie_tools scan\n\n</code></pre></div>\n<h3 id=""crazyflie_description"">Crazyflie_description</h3>\n\n<p>This package contains a 3D model of the Crazyflie (1.0). This is for visualization purposes in rviz.</p>\n\n<h3 id=""crazyflie_controller"">Crazyflie_controller</h3>\n\n<p>This package contains a simple PID controller for hovering or waypoint navigation.\nIt can be used with external motion capture systems, such as VICON.</p>\n\n<h3 id=""crazyflie_demo"">Crazyflie_demo</h3>\n\n<p>This package contains a rich set of examples to get quickly started with the Crazyflie.</p>\n\n<p>For teleoperation using a joystick, use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch crazyflie_demo teleop_xbox360.launch uri:=radio://0/100/2M\n\n</code></pre></div>\n<p>where the uri specifies the uri of your Crazyflie. You can find valid uris using the scan command in the crazyflie_tools package.</p>\n\n<p>For hovering at (0,0,1) using VICON, use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch crazyflie_demo hover_vicon.launch uri:=radio://0/100/2M frame:=/vicon/crazyflie/crazyflie x:=0 y:=0 z:=1\n\n</code></pre></div>\n<p>where the uri specifies the uri of your Crazyflie and frame the tf-frame. The launch file runs vicon_bridge automatically.</p>\n\n<p>For multiple Crazyflies make sure that all Crazyflies have a different address.\nCrazyflies which share a dongle should use the same channel and datarate for best performance.\nThe performance degrades with the number of Crazyflies per dongle due to bandwidth limitations, however it was tested successfully to use 3 CFs per Crazyradio.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch crazyflie_demo multi_teleop_xbox360.launch uri1:=radio://0/100/2M/E7E7E7E7E7 uri2:=radio://0/100/2M/E7E7E7E705\n\n</code></pre></div>\n<p>Please check the launch files in the crazyflie_demo package for other examples, including simple waypoint navigation.</p>\n\n<h2 id=""ros-features"">ROS Features</h2>\n\n<h3 id=""parameters"">Parameters</h3>\n\n<p>The launch file supports the following arguments:\n* uri: Specifier for the crazyflie, e.g. radio://0/80/2M\n* tf_prefix: tf prefix for the crazyflie frame(s)\n* roll_trim: Trim in degrees, e.g. negative if flie drifts to the left\n* pitch_trim: Trim in degrees, e.g. negative if flie drifts forward</p>\n\n<p>See <a href=""http://wiki.bitcraze.se/projects:crazyflie:userguide:tips_and_tricks"">http://wiki.bitcraze.se/projects:crazyflie:userguide:tips_and_tricks</a> for details on how to obtain good trim values.</p>\n\n<h3 id=""subscribers"">Subscribers</h3>\n\n<h4 id=""cmd_vel"">cmd_vel</h4>\n\n<p>Similar to the hector_quadrotor, package the fields are used as following:\n* linear.y: roll [e.g. -30 to 30 degrees]\n* linear.x: pitch [e.g. -30 to 30 degrees]\n* angular.z: yawrate [e.g. -200 to 200 degrees/second]\n* linear.z: thrust [10000 to 60000 (mapped to PWM output)]</p>\n\n<h3 id=""publishers"">Publishers</h3>\n\n<h4 id=""imu"">imu</h4>\n\n<ul>\n<li>sensor_msgs/IMU</li>\n<li>contains the sensor readings of gyroscope and accelerometer</li>\n<li>The covariance matrices are set to unknown</li>\n<li>orientation is not set (this could be done by the magnetometer readings in the future.)</li>\n<li>update: 10ms (time between crazyflie and ROS not synchronized!)</li>\n<li>can be viewed in rviz</li>\n</ul>\n\n<h4 id=""temperature"">temperature</h4>\n\n<ul>\n<li>sensor_msgs/Temperature</li>\n<li>From Barometer (10DOF version only) in degree Celcius (Sensor readings might be higher than expected because the PCB warms up; see <a href=""http://www.bitcraze.se/2014/02/logging-and-parameter-frameworks-turtorial/"">http://www.bitcraze.se/2014/02/logging-and-parameter-frameworks-turtorial/</a>)</li>\n<li>update: 100ms (time between crazyflie and ROS not synchronized!)</li>\n</ul>\n\n<h4 id=""magnetic_field"">magnetic_field</h4>\n\n<ul>\n<li>sensor_msgs/MagneticField</li>\n<li>update: 100ms (time between crazyflie and ROS not synchronized!)</li>\n</ul>\n\n<h4 id=""pressure"">pressure</h4>\n\n<ul>\n<li>Float32</li>\n<li>hPa (or mbar)</li>\n<li>update: 100ms (time between crazyflie and ROS not synchronized!)</li>\n</ul>\n\n<h4 id=""battery"">battery</h4>\n\n<ul>\n<li>Float32</li>\n<li>Volts</li>\n<li>update: 100ms (time between crazyflie and ROS not synchronized!)</li>\n</ul>\n\n<h2 id=""citing-this-work"">Citing This Work</h2>\n\n<p>This project is published under the very permissive MIT License. However,\nif you use the package we appreciate if you credit this project accordingly.</p>\n\n<p>For academic publications, you can cite the paper which introduced the package using the following bibtex entry:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">@conference{HoenigMixedReality2015,\n  Address = {Hamburg, Germany},\n  Author = {Wolfgang Hoenig and Christina Milanes and Lisa Scaria and Thai Phan and Mark Bolas and Nora Ayanian},\n  Booktitle = {IEEE/RSJ Intl Conf. Intelligent Robots and Systems},\n  Month = {Sept},\n  Pages = {5382 - 5387},\n  Title = {Mixed Reality for Robotics},\n  Year = {2015}}\n\n</code></pre></div>\n<p>For any other mentioning please include my affiliation (ACTLab at University of Southern California or USC in short; The link to our webpage is <a href=""http://act.usc.edu/"">http://act.usc.edu/</a>) as this work was partially done as part of my research at USC.</p>\n\n<h2 id=""similar-projects"">Similar Projects</h2>\n\n<ul>\n<li>\n<a href=""https://github.com/gtagency/crazyflie-ros"">https://github.com/gtagency/crazyflie-ros</a>\n\n<ul>\n<li>no documentation</li>\n<li>no teleop</li>\n</ul>\n</li>\n<li>\n<a href=""https://github.com/omwdunkley/crazyflieROS"">https://github.com/omwdunkley/crazyflieROS</a>\n\n<ul>\n<li>coupled with GUI</li>\n<li>based on custom firmware</li>\n</ul>\n</li>\n<li>\n<a href=""https://github.com/mbeards/crazyflie-ros"">https://github.com/mbeards/crazyflie-ros</a>\n\n<ul>\n<li>incomplete</li>\n</ul>\n</li>\n<li>\n<a href=""https://github.com/utexas-air-fri/crazyflie_fly"">https://github.com/utexas-air-fri/crazyflie_fly</a>\n\n<ul>\n<li>not based on official SDK</li>\n<li>no support for logging</li>\n</ul>\n</li>\n<li>\n<a href=""https://github.com/mchenryc/crazyflie"">https://github.com/mchenryc/crazyflie</a>\n\n<ul>\n<li>no documentation</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""notes"">Notes</h2>\n\n<ul>\n<li>The dynamic_reconfigure package (<a href=""http://wiki.ros.org/dynamic_reconfigure/"">http://wiki.ros.org/dynamic_reconfigure/</a>) seems like a good fit to map the parameters, however it has severe limitations:\n\n<ul>\n<li>Changed-Callback does not include which parameter(s) were changed. There is only a notion of a level which is a simple bitmask. This would cause that on any parameter change we would need to update all parameters on the Crazyflie.</li>\n<li>Parameters are statically generated. There are hacks to add parameters at runtime, however those might not work with future versions of dynamic_reconfigure.</li>\n<li>Groups not fully supported (<a href=""https://github.com/ros-visualization/rqt_common_plugins/issues/162"">https://github.com/ros-visualization/rqt_common_plugins/issues/162</a>; This seems to be closed now, however the Indigo binary packages did not pick up the fixes yet).</li>\n</ul>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
romeo_robot,http://rosindex.github.io/r/romeo_robot/,"hydro,jade,kinetic,indigo","romeo_bringup,romeo_dcm_bringup,romeo_dcm_control,romeo_dcm_driver,romeo_dcm_msgs,romeo_description,romeo_robot,romeo_sensors_py","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""romeo_robot"">romeo_robot</h1>\n\n<p>ROS stack for Aldebaran\'s Romeo robot</p>\n</div>\n\n            \n          </div>'"
descartes,http://rosindex.github.io/r/descartes/,"hydro,indigo","descartes,descartes_core,descartes_moveit,descartes_planner,descartes_trajectory,descartes_utilities","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""descartes"">Descartes</h1>\n\n<p>ROS-Industrial Special Project: Cartesian Path Planner</p>\n\n<p><a href=""http://en.wikipedia.org/wiki/Ren%C3%A9_Descartes"">Ren\xc3\xa9 Descartes</a> <em>Ren\xc3\xa9 Descartes (French: [\xca\x81\xc9\x99ne deka\xca\x81t]; Latinized: Renatus Cartesius; adjectival form: ""Cartesian""; 31 March 1596 \xe2\x80\x93 11 February 1650) was a French philosopher, mathematician and writer who spent most of his life in the Dutch Republic. He has been dubbed The Father of Modern Philosophy, and much subsequent Western philosophy is a response to his writings, which are studied closely to this day.</em> </p>\n\n<p>Further information on the Decartes project can be found on the ROS <a href=""http://wiki.ros.org/descartes"">wiki</a>.  Those who are interested in contributing should look at the open <a href=""https://github.com/ros-industrial-consortium/descartes/issues"">issues</a> and then email the <a href=""mailto:swri-ros-pkg-dev@googlegroups.com"">ROS-Industrial developer group</a> before performing any work.</p>\n</div>\n\n            \n          </div>'"
genpy,http://rosindex.github.io/r/genpy/,"hydro,fuerte,groovy,kinetic,jade,indigo",genpy,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">./scripts/genmsg_py.py -p std_msgs -Istd_msgs:`rospack find std_msgs`/msg -o gen `rospack find std_msgs`/msg/String.msg\n./scripts/genmsg_py.py -p geometry_msgs -Istd_msgs:`rospack find std_msgs`/msg -Igeometry_msgs:`rospack find geometry_msgs`/msg -o gen `rospack find geometry_msgs`/msg/PoseStamped.msg\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
hector_localization,http://rosindex.github.io/r/hector_localization/,"hydro,fuerte,electric,groovy,jade,indigo","hector_localization,hector_pose_estimation,hector_pose_estimation_core,message_to_tf,rtt_hector_pose_estimation,world_magnetic_model","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""hector_localization"">hector_localization</h1>\n\n<p>The hector_localization stack is a collection of packages, that provide the full 6DOF pose of a robot or platform.</p>\n\n<p>Team Hector Darmstadt uses the stack to estimate the full 6D pose of the robot within the real-time loop of the Hector quadrotor and even for estimating the position, velocity and attitude of a small airplane as part of our flight mechanics lab.</p>\n\n<p>The design goals have been similar to what Chad Rockey described in his answer. </p>\n\n<p>The core package currently provides a system model for generic 6DOF rigid body pose estimation based on pure IMU inputs (rates and accelerations), which can be specialized depending on the robot and for additional input values. As measurement models the package currently provides direct and barometric height measurements, GPS postion and velocity, magnetic field sensors as heading reference and a generic pose and twist measurement to fuse nav_msgs/Odometry messages from arbitrary sources (e.g. wheel odometry or SLAM).</p>\n\n<p>The stack consists of a core library without dependencies to ROS beside message types and additional packages providing a node, nodelet or Orocos Real-Time Toolkit TaskContext interface. The system and measurement models could also be implemented and loaded as plugins with some minor modifications. In the background an Extended Kalman Filter based on the Bayesian Filter Library is responsible for fusing all information into a consistent state estimate and additionally keeps track which state variables are observable and which are not.</p>\n\n<h1 id=""how-to-run-the-code"">How to run the code</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd catkin_ws\ngit clone git@github.com:tu-darmstadt-ros-pkg/hector_localization.git\ncatkin_make --source hector_localization\nroslaunch hector_pose_estimation hector_pose_estimation.launch \n</code></pre></div>\n<h1 id=""rosbag-for-test"">rosbag for test</h1>\n\n<ol>\n<li>\n<p>download the rosbag</p>\n\n<p><a href=""https://drive.google.com/folderview?id=0B4hFvojO5r3scWJRVWdhSmdLd0k&amp;usp=sharing"">https://drive.google.com/folderview?id=0B4hFvojO5r3scWJRVWdhSmdLd0k&amp;usp=sharing</a></p>\n</li>\n<li>\n<p>replay the rosbag</p>\n\n<p>rosbag play 2016-03-09-22-11-07.bag</p>\n</li>\n</ol>\n\n<p><img src=""https://cloud.githubusercontent.com/assets/3192355/14065311/5b968b2c-f457-11e5-862a-2f42720035b8.png"" alt=""hector_pose_estimation""></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
gencpp,http://rosindex.github.io/r/gencpp/,"hydro,fuerte,groovy,kinetic,jade,indigo",gencpp,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
grasp-synergy,http://rosindex.github.io/r/grasp-synergy/,indigo,grasp_synergy,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""grasp-synergy-ros-package"">Grasp Synergy ROS package</h1>\n\n<p><a href=""https://travis-ci.org/felixduvallet/grasp-synergy""><img src=""https://travis-ci.org/felixduvallet/grasp-synergy.svg?branch=master"" alt=""Build Status""></a></p>\n\n<p>This package implements grasp synergies (aka eigengrasps): low-dimensional\nrepresentation of hand configurations.</p>\n\n<p>Very basically, grasp synergies are computed by doing PCA on a bunch of hand\nconfigurations (joint angles) to infer a low-dimensional representation.</p>\n\n<p>Points in this low-dimensional space can then be reprojected to the full\nconfiguration space to control the hand.</p>\n\n<p>This ROS package is independent of any hand configuration.\nIt consists of two components:\n - the GraspSynergy class: compute &amp; store synergies from high-dimensional grasp\n   configurations, and compute grasps from low-dimensional input.\n - the synergy_node: ROS magic to provide nice interfaces for controlling grasp\n   synergies.</p>\n\n<h2 id=""grasp_synergy"">grasp_synergy</h2>\n\n<p>Grasp Synergies (aka eigengrasps) are just low-dimensional representations of\nthe grasp learned using PCA.</p>\n\n<p>The GraspSynergy class is just a convenience class for computing, storing, and\ncommanding grasp synergies. It is hand-agnostic.</p>\n\n<p>Grasping data can be of any form:\n - A numpy matrix of joint values (N by D)\n - A list of sensor_msgs/JointState messages\n - A filepath to a rosbag file.</p>\n\n<p>Here N are the number of collected grasps and D is the full dimensionality of\nthe hand. We extract all D principal components (synergies), but in practice we\nwill only use a smaller number.</p>\n\n<p>To compute a grasp (in the original space), simply pass in a B-dimensional\nvector of coefficients to <code>compute_grasp</code>. (Nominally, B &lt; D.) The method will\nautomatically figure out how many components to use, and return the\ncorresponding grasp configuration in the original D-dimensional space.</p>\n\n<h2 id=""synergy_node"">synergy_node</h2>\n\n<p>The synergy node enables you to load a grasp synergy space, create subscribers\nfor the synergy space, and publish desired joint state messages to control the\nhand.\nIt creates one top-level subscriber for fully-specified coefficient vector and\nmany per-component subscribers for each component (each for a single value).</p>\n\n<p>Each time the node receives a new low-dimensional (synergy-space) point, it\ncomputes the hand configuration and publishes a message with the desired joint\nstates.</p>\n\n<p><strong>Subscribers:</strong>\nThe node can create a variable number of subscribers: one for the\nfully-specified coefficient vector, and one per component (with singleton\nvalues).\nBy default, the node is trained using a bag file of hand configuration data.</p>\n\n<p>So for example, you might have the following subscribers for 5 synergies:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""> * /grasp_synergy [std_msgs/Float32MultiArray]\n * /grasp_synergy/syn_0 [std_msgs/Float32]\n * /grasp_synergy/syn_1 [std_msgs/Float32]\n * /grasp_synergy/syn_2 [std_msgs/Float32]\n * /grasp_synergy/syn_3 [std_msgs/Float32]\n\n</code></pre></div>\n<p>This enables you to use tools like <code>rqt_ez_publisher</code>\n(<a href=""http://wiki.ros.org/rqt_ez_publisher"">http://wiki.ros.org/rqt_ez_publisher</a>) to provide a nice slider GUI interface to\nthe synergy space:</p>\n\n<p><img src=""https://cloud.githubusercontent.com/assets/6153835/14283454/c8cb284a-fb43-11e5-995e-452cfa981145.png"" alt=""rqt_grasp""></p>\n\n<p>NOTE: Due to a small <a href=""https://github.com/OTL/rqt_ez_publisher/issues/17"">bug</a> in\nrqt_ez_publisher, if you want to use the sliders to control the individual\nsynergies (/grasp_synergy/syn_N) you need to use the latest rqt_ez_publisher\n(checkout directly from github into your workspace and run the local copy).</p>\n\n<p><strong>Publisher:</strong>\nThe desired joint state topic must be given.</p>\n</div>\n\n            \n          </div>'"
hector_quadrotor,http://rosindex.github.io/r/hector_quadrotor/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","hector_quadrotor,hector_quadrotor_controller,hector_quadrotor_controller_gazebo,hector_quadrotor_demo,hector_quadrotor_description,hector_quadrotor_gazebo,hector_quadrotor_gazebo_plugins,hector_quadrotor_model,hector_quadrotor_pose_estimation,hector_quadrotor_teleop,hector_uav_msgs,hector_quadrotor_urdf","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rail_manipulation_msgs,http://rosindex.github.io/r/rail_manipulation_msgs/,"jade,indigo",rail_manipulation_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rail_manipulation_msgs"">rail_manipulation_msgs <a href=""https://travis-ci.org/GT-RAIL/rail_manipulation_msgs""><img src=""https://api.travis-ci.org/GT-RAIL/rail_manipulation_msgs.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""common-manipulation-messages-and-services-used-in-rail-manipulation-packages"">Common Manipulation Messages and Services Used in RAIL Manipulation Packages</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rail_manipulation_msgs"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>rail_manipulation_msgs is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
naoqi_bridge,http://rosindex.github.io/r/naoqi_bridge/,"hydro,jade,kinetic,indigo","naoqi_apps,naoqi_bridge,naoqi_driver_py,naoqi_pose,naoqi_sensors_py,naoqi_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>THIS PACKAGE IS BASED ON FORMER NAO_ROBOT PACKAGE</p>\n\n<h1 id=""naoqi_bridge"">naoqi_bridge</h1>\n\n<p>ROS stack to interact with Aldebaran\'s NAOqi, see <a href=""http://wiki.ros.org/nao"">http://wiki.ros.org/nao</a></p>\n</div>\n\n            \n          </div>'"
robot_upstart,http://rosindex.github.io/r/robot_upstart/,"hydro,jade,indigo",robot_upstart,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_upstart"">robot_upstart</h1>\n\n<p>Clearpath Robotics presents a suite of scripts to assist with launching background ROS processes on Ubuntu Linux PCs.</p>\n\n<h2 id=""motivation"">Motivation</h2>\n\n<p>The intention is to standardize the upstart portion which has traditionally been included in <robot>_bringup packages. Functionality includes:</robot></p>\n\n<ul>\n<li>Install an upstart job to run upon the availability of a network interface.</li>\n<li>Copy launch files from package to /etc/ros/<distro>/<job>.d/</job></distro>\n</li>\n<li>Upon job start, coalesce launch files (mklaunch) and launch them together.</li>\n</ul>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>To install a job from the command line, it can be as simple as:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun robot_upstart install turtlebot_bringup/launch/minimal.launch --interface wlan0\n</code></pre></div>\n<p>This will create a job called turtlebot, which comes up with the wireless. Alternatively, you can manually start and stop the job like so:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo service turtlebot start\nsudo service turtlebot stop\n</code></pre></div>\n<p>For robots with many components, the job can also glob a whole directory of launch files into a single roslaunch instance. For example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun robot_upstart install husky_bringup/launch/core\n</code></pre></div>\n<p>This copies all the launch files from the folder into /etc/ros/hydro/husky.d. At launch time, a /tmp/husky.launch file will be created which <include>s the launch files from this folder.</include></p>\n\n<p>For debugging reasons, you can also foreground launch it by running the start script directly:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo husky-start\n</code></pre></div>\n<p>This will show the console output, any errors, and the result of the final roslaunch.</p>\n\n<h2 id=""for-platform-maintainers"">For Platform Maintainers</h2>\n\n<p>If you maintain the ROS software for a common platform, you can take advantage of upstart and still provide a seamless installation process for users. For example, in your myplatform_bringup package, maintain a directory of launch files which represent the platform\'s set of bootstrap ROS nodes, and then in a scripts directory, add an install file which calls through to robot_upstart, eg:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""c"">#!/bin/bash</span>\nrosrun robot_upstart install myplatform_bringup/launch\n<span class=""c""># Other platform setup (udev rules, network config, etc)</span>\n</code></pre></div>\n<p>Now a user can add the platform software packages and it\'s a one-liner to be fully set up:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun myplatform_bringup install\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_upstart"">robot_upstart</h1>\n\n<p>Clearpath Robotics presents a suite of scripts to assist with launching background ROS processes on Ubuntu Linux PCs. Please see the <a href=""http://docs.ros.org/api/robot_upstart/html/"">generated documentation</a> and <a href=""http://wiki.ros.org/robot_upstart"">ROS Wiki</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_upstart"">robot_upstart</h1>\n\n<p>Clearpath Robotics presents a suite of scripts to assist with launching background ROS processes on Ubuntu Linux PCs. Please see the <a href=""http://docs.ros.org/latest-available/api/robot_upstart/html/"">generated documentation</a> and <a href=""http://wiki.ros.org/robot_upstart"">ROS Wiki</a>.</p>\n</div>\n\n            \n          </div>'"
moveit_plugins,http://rosindex.github.io/r/moveit_plugins/,"hydro,jade,groovy,indigo","moveit_controller_manager_example,moveit_fake_controller_manager,moveit_plugins,moveit_ros_control_interface,moveit_simple_controller_manager","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-plugins"">MoveIt Plugins</h1>\n\n<p>This is a collection of plugins for MoveIt:\n - moveit_simple_controller_manager - A very basic controller manager plugin. Can connect to FollowJointTrajectoryAction and GripperCommandAction servers.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/ros-planning/moveit_plugins""><img src=""https://travis-ci.org/ros-planning/moveit_plugins.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-plugins"">MoveIt Plugins</h1>\n\n<p>This is a collection of plugins for MoveIt:\n - moveit_simple_controller_manager - A very basic controller manager plugin. Can connect to FollowJointTrajectoryAction and GripperCommandAction servers.</p>\n</div>\n\n            \n          </div>'"
industrial_moveit,http://rosindex.github.io/r/industrial_moveit/,"groovy,indigo","constrained_ik,industrial_collision_detection,industrial_moveit,industrial_moveit_benchmarking,moveit_experimental,stomp_core,stomp_moveit,stomp_test_kr210_moveit_config,stomp_test_support","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""industrial-moveit"">Industrial MoveIt</h1>\n\n<p><a href=""http://www.ros.org/wiki/Industrial"">ROS-Industrial</a> move it meta-package.  See the <a href=""http://ros.org/wiki/industrial_moveit"">ROS wiki</a> page for more information.  </p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""industrial-moveit"">Industrial MoveIt</h1>\n\n<h4 id=""stomp-core"">Stomp Core</h4>\n\n<ul>\n<li>Build the workspace:\n\n<ul>\n<li>Cd into the catkin workspace directory and type the following command:</li>\n</ul>\n</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make --jobs=4\n\n</code></pre></div>\n<ul>\n<li>Run Unit Test:\n\n<ul>\n<li>Cd into the catkin workspace directory and type the following command:</li>\n</ul>\n</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make run_tests_stomp_core_gtest\n\n</code></pre></div>\n<ul>\n<li>Inspect the Unit test\n\n<ul>\n<li>\n<em>roscd</em> into the <strong>stomp_core</strong> package and go locate the ""stomp_3dof.cpp"" file inside the <strong>test</strong> directory.</li>\n</ul>\n</li>\n</ul>\n\n<h4 id=""stomp-moveit-demo"">Stomp Moveit Demo</h4>\n\n<ul>\n<li>Run the demo\n\n<ul>\n<li>Run the demo.launch file</li>\n</ul>\n</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  roslaunch stomp_test_kr210_moveit_config demo.launch\n\n</code></pre></div>\n<ul>\n<li>In the Rviz Motion Planning planel, select <strong>rail_start_pose</strong> from the dropdwown menu under ""Select Start State"" and click <strong>Update</strong>\n</li>\n<li>In Rviz, select <strong>rail_end_pose</strong> from the dropdwown menu under ""Select Goal State"" and click <strong>Update</strong><br>\n</li>\n<li>\n<p>Click <strong>Plan</strong> in order to generate a motion plan.</p>\n\n<ul>\n<li>Locate the the stomp planner configuration file</li>\n</ul>\n</li>\n<li><p><strong>roscd</strong> into the <strong>stomp_test_kr210_moveit_config</strong> package and locate the ""stomp_config.yaml"" file under the config directory</p></li>\n</ul>\n\n<p>==============================================================================================\n<a href=""http://www.ros.org/wiki/Industrial"">ROS-Industrial</a> move it meta-package.  See the <a href=""http://ros.org/wiki/industrial_moveit"">ROS wiki</a> page for more information.  </p>\n</div>\n\n            \n          </div>'"
ros_comm,http://rosindex.github.io/r/ros_comm/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","roscpp,rospy,ros_comm,test_rosbag,test_rosbag_storage,test_roscpp,test_rosgraph,test_roslaunch,test_roslib_comm,test_rosmaster,test_rosparam,test_rospy,test_rosservice,test_rostopic,rosbag,rosbag_storage,rosconsole,rosgraph,roslaunch,rosmaster,rosmsg,rosnode,rosout,rosparam,rosservice,rostest,rostopic,topic_tools,message_filters,roslz4,roswtf,xmlrpcpp,rosgraph_msgs,std_srvs,roslisp,perf_roscpp,test_crosspackage,test_ros,test_roscpp_serialization,test_roscpp_serialization_perf,test_rostime,roscpp_serialization,roscpp_traits,std_msgs,roscore_migration_rules,test_rosmsg,test_rosnode,test_rostest,test_roswtf,test_topic_tools,rosbagmigration,cpp_common,rostime","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros,http://rosindex.github.io/r/ros/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","mk,rosbuild,roslang,roslib,ros,rosbash,rosboost_cfg,rosclean,roscreate,rosmake,rosunit,test_roscreate,test_rosdep,test_roslib,test_rosmake,test_rospack,rosdep,rosemacs,rospack","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Robot Operating System (ROS)\n===============================================================================\n\nROS is a meta-operating system for your robot.  It provides\nlanguage-independent and network-transparent communication for a\ndistributed robot control system.\n\nInstallation Notes\n------------------\n\nFor full installation instructions, including system prerequisites and\nplatform-specific help, see:\n\n  http://ros.org/wiki/ROS/Installation\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
roscpp_core,http://rosindex.github.io/r/roscpp_core/,"hydro,fuerte,groovy,kinetic,jade,indigo","cpp_common,roscpp_core,roscpp_serialization,roscpp_traits,rostime","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosbridge_suite,http://rosindex.github.io/r/rosbridge_suite/,"hydro,fuerte,groovy,jade,indigo","rosapi,rosbridge_library,rosbridge_server,rosbridge_suite,rosbridge_launch,rosbridge_test,roswww,tf_smart_throttle","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is the rosbridge stack.  It contains a number of packages\n\nA brief overview of the packages is as follows:\n\nrosbridge_library contains the API that receives JSON-formatted strings as input and controls ROS publishers/subscribers/service calls according to the content of the JSON strings.\n\nrosbridge_server contains a simple websockets server implementation that exposes the rosbridge_library.\n\nrosbridge_clients contains reference implementation client libraries for a variety of languages\n|-  js contanis javascript reference implementation clients.  Three clients are provided:\n |- ros.js - a basic client library providing an API for the various ros functions\n |- ros.js, but wrapped in the AMD spec\n |- ros_compatible.js - mirrors the API provided by the rosbridge v1.0 ros.js\n\nrosbridge_test contains some tests for rosbridge\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosbridge_suite"">rosbridge_suite <a href=""https://travis-ci.org/RobotWebTools/rosbridge_suite""><img src=""https://api.travis-ci.org/RobotWebTools/rosbridge_suite.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""server-implementations-of-the-rosbridge-v2-protocol"">Server Implementations of the rosbridge v2 Protocol</h4>\n\n<p>rosbridge provides a JSON interface to ROS, allowing any client to send JSON to publish or subscribe to ROS topics, call ROS services, and more. rosbridge supports a variety of transport layers, including WebSockets and TCP. For information on the protocol itself, see the <a href=""ROSBRIDGE_PROTOCOL.md"">rosbridge protocol specification</a>.</p>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rosbridge_suite"">the ROS wiki</a>.</p>\n\n<p>This project is released as part of the <a href=""http://robotwebtools.org/"">Robot Web Tools</a> effort.</p>\n\n<h3 id=""packages"">Packages</h3>\n\n<ul>\n<li><p><a href=""rosbridge_suite"">rosbridge_suite</a> is a <a href=""http://www.ros.org/wiki/catkin/conceptual_overview#Metapackages_and_the_Elimination_of_Stacks"">ROS meta-package</a> including all the rosbridge packages.</p></li>\n<li><p><a href=""rosbridge_library"">rosbridge_library</a> contains the Python API that receives JSON-formatted strings as input and controls ROS publishers/subscribers/service calls according to the content of the JSON strings.</p></li>\n<li><p><a href=""rosbridge_server"">rosbridge_server</a> contains a WebSocket server implementation that exposes the rosbridge_library.</p></li>\n<li><p><a href=""rosapi"">rosapi</a> provides service calls for getting meta-information related to ROS like topic lists as well as interacting with the Parameter Server.</p></li>\n</ul>\n\n<h3 id=""clients"">Clients</h3>\n\n<p>A rosbridge client is a program that communicates with rosbridge using its JSON API. rosbridge clients include:</p>\n\n<ul>\n<li>\n<a href=""https://github.com/RobotWebTools/roslibjs"">roslibjs</a> - A JavaScript API, which communicates with rosbridge over WebSockets.</li>\n<li>\n<a href=""https://github.com/WPI-RAIL/jrosbridge"">jrosbridge</a> - A Java API, which communicates with rosbridge over WebSockets.</li>\n</ul>\n\n<h3 id=""license"">License</h3>\n\n<p>rosbridge_suite is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
rospack,http://rosindex.github.io/r/rospack/,"hydro,fuerte,groovy,kinetic,jade,indigo",rospack,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rqt_common_plugins,http://rosindex.github.io/r/rqt_common_plugins/,"hydro,groovy,kinetic,jade,indigo","rqt_action,rqt_bag,rqt_bag_plugins,rqt_common_plugins,rqt_console,rqt_dep,rqt_graph,rqt_image_view,rqt_launch,rqt_logger_level,rqt_msg,rqt_plot,rqt_publisher,rqt_py_common,rqt_py_console,rqt_reconfigure,rqt_service_caller,rqt_shell,rqt_srv,rqt_top,rqt_topic,rqt_web","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wpi_jaco,http://rosindex.github.io/r/wpi_jaco/,indigo,"jaco_description,jaco_interaction,jaco_moveit_config,jaco_sdk,jaco_teleop,mico_description,mico_moveit_config,wpi_jaco,wpi_jaco_msgs,wpi_jaco_wrapper","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""wpi_jaco"">wpi_jaco  <a href=""https://travis-ci.org/RIVeR-Lab/wpi_jaco""><img src=""https://api.travis-ci.org/RIVeR-Lab/wpi_jaco.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""ros-packages-for-the-jaco-jaco2-and-mico-arms-developed-at-wpi"">ROS Packages for the JACO, JACO2, and MICO Arms Developed at WPI</h4>\n\n<p>For full documentation, see <a href=""http://wiki.ros.org/wpi_jaco"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/wpi_jaco/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<p>This package servers as an alternative to <a href=""https://github.com/Kinovarobotics/jaco-ros"">jaco-arm</a>.</p>\n\n<h3 id=""notes-about-the-jaco2"">Notes about the JACO2</h3>\n\n<p>This package now supports the JACO2 as well as the JACO and the MICO.  Simply change the arm name in the wpi_jaco_wrapper arm.launch file from ""jaco"" to ""jaco2"", and the correct parameters will be loaded.  Presently there is no description package for the jaco2 (see <a href=""jaco_description"">jaco_description</a> or <a href=""jaco_description"">mico_description</a> as examples for Kinova\'s other arms), and no MoveIt! configuration yet, but the other functionality should work with the new model of the arm.  More details on the <a href=""http://wiki.ros.org/wpi_jaco"">wpi_jaco ROS wiki page</a>...</p>\n\n<h3 id=""contributing"">Contributing</h3>\n\n<p><a href=""jaco_description"">jaco_description</a> includes both minified versions of the 3D Collada models as well as pre-compiled URDF files. To properly contribute, do the following:</p>\n\n<ol>\n<li>Re-minify any modified Collada files\n\n<ul>\n<li><code>cd /path/to/wpi_jaco/jaco_description/meshes</code></li>\n<li><code>xmllint --noblanks my_modified_mesh.dae &gt; my_modified_mesh.min.dae</code></li>\n</ul>\n</li>\n<li>Re-compile the modified URDF\n\n<ul>\n<li><code>cd /path/to/wpi_jaco</code></li>\n<li><code>rosrun xacro xacro jaco_description/robots/standalone_arm.urdf.xacro &gt; jaco_description/robots/standalone_arm.urdf</code></li>\n</ul>\n</li>\n</ol>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
fcl,http://rosindex.github.io/r/fcl/,"hydro,jade,groovy,indigo",fcl,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""fcl-the-flexible-collision-library"">FCL -- The Flexible Collision Library</h2>\n\n<p>Linux / OS X <a href=""https://travis-ci.org/flexible-collision-library/fcl""><img src=""https://travis-ci.org/flexible-collision-library/fcl.svg"" alt=""Build Status""></a>\nWindows <a href=""https://ci.appveyor.com/project/mamoll/fcl""><img src=""https://ci.appveyor.com/api/projects/status/rrmxadnj1empitqq?svg=true"" alt=""Build status""></a>\nCoverage <a href=""https://coveralls.io/github/flexible-collision-library/fcl?branch=master""><img src=""https://coveralls.io/repos/github/flexible-collision-library/fcl/badge.svg?branch=master"" alt=""Coverage Status""></a></p>\n\n<p>FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles. \n - Collision detection: detecting whether the two models overlap, and optionally, all of the triangles that overlap.\n - Distance computation: computing the minimum distance between a pair of models, i.e., the distance between the closest pair of points.\n - Tolerance verification: determining whether two models are closer or farther than a tolerance distance.\n - Continuous collision detection: detecting whether the two moving models overlap during the movement, and optionally, the time of contact.\n - Contact information: for collision detection and continuous collision detection, the contact information (including contact normals and contact points) can be returned optionally.</p>\n\n<p>FCL has the following features\n - C++ interface\n - Compilable for either linux or win32 (both makefiles and Microsoft Visual projects can be generated using cmake)\n - No special topological constraints or adjacency information required for input models \xe2\x80\x93 all that is necessary is a list of the model\'s triangles\n - Supported different object shapes:\n  + box\n  + sphere\n  + ellipsoid\n  + capsule\n  + cone\n  + cylinder\n  + convex\n  + half-space\n  + plane\n  + mesh\n  + octree (optional, octrees are represented using the octomap library <a href=""http://octomap.github.com"">http://octomap.github.com</a>)</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>Before compiling FCL, please make libccd (for collision checking between convex objects and is available here <a href=""https://github.com/danfis/libccd"">https://github.com/danfis/libccd</a>) is installed. For libccd, make sure to compile from github version instead of the zip file from the webpage, because one bug fixing is not included in the zipped version. To compile\nthe unit tests, Boost also needs to be to installed.</p>\n\n<p>Some optional libraries need to be installed for some optional capability of FCL. For octree collision, please install the octomap library from <a href=""http://octomap.github.com"">http://octomap.github.com</a>.</p>\n\n<p>CMakeLists.txt is used to generate makefiles in Linux or Visual studio projects in windows. In command line, run</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake"">mkdir build\ncd build\ncmake ..\n\n</code></pre></div>\n<p>Next, in linux, use make to compile the code. </p>\n\n<p>In windows, there will generate a visual studio project and then you can compile the code.</p>\n\n<h2 id=""interfaces"">Interfaces</h2>\n\n<p>Before starting the proximity computation, we need first to set the geometry and transform for the objects involving in computation. The geometry of an object is represented as a mesh soup, which can be set as follows:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""c1"">// set mesh triangles and vertice indices\n</span><span class=""n"">std</span><span class=""o"">::</span><span class=""n"">vector</span><span class=""o"">&lt;</span><span class=""n"">Vec3f</span><span class=""o"">&gt;</span> <span class=""n"">vertices</span><span class=""p"">;</span>\n<span class=""n"">std</span><span class=""o"">::</span><span class=""n"">vector</span><span class=""o"">&lt;</span><span class=""n"">Triangle</span><span class=""o"">&gt;</span> <span class=""n"">triangles</span><span class=""p"">;</span>\n<span class=""c1"">// code to set the vertices and triangles\n</span><span class=""p"">...</span>\n<span class=""c1"">// BVHModel is a template class for mesh geometry, for default OBBRSS template is used\n</span><span class=""k"">typedef</span> <span class=""n"">BVHModel</span><span class=""o"">&lt;</span><span class=""n"">OBBRSS</span><span class=""o"">&gt;</span> <span class=""n"">Model</span><span class=""p"">;</span>\n<span class=""n"">Model</span><span class=""o"">*</span> <span class=""n"">model</span> <span class=""o"">=</span> <span class=""k"">new</span> <span class=""n"">Model</span><span class=""p"">();</span>\n<span class=""c1"">// add the mesh data into the BVHModel structure\n</span><span class=""n"">model</span><span class=""o"">-&gt;</span><span class=""n"">beginModel</span><span class=""p"">();</span>\n<span class=""n"">model</span><span class=""o"">-&gt;</span><span class=""n"">addSubModel</span><span class=""p"">(</span><span class=""n"">vertices</span><span class=""p"">,</span> <span class=""n"">triangles</span><span class=""p"">);</span>\n<span class=""n"">model</span><span class=""o"">-&gt;</span><span class=""n"">endModel</span><span class=""p"">();</span>\n\n</code></pre></div>\n<p>The transform of an object includes the rotation and translation:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""c1"">// R and T are the rotation matrix and translation vector\n</span><span class=""n"">Matrix3f</span> <span class=""n"">R</span><span class=""p"">;</span>\n<span class=""n"">Vec3f</span> <span class=""n"">T</span><span class=""p"">;</span>\n<span class=""c1"">// code for setting R and T\n</span><span class=""p"">...</span>\n<span class=""c1"">// transform is configured according to R and T\n</span><span class=""n"">Transform3f</span> <span class=""n"">pose</span><span class=""p"">(</span><span class=""n"">R</span><span class=""p"">,</span> <span class=""n"">T</span><span class=""p"">);</span>\n\n</code></pre></div>\n<p>Given the geometry and the transform, we can also combine them together to obtain a collision object instance and here is an example:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""c1"">//geom and tf are the geometry and the transform of the object\n</span><span class=""n"">BVHModel</span><span class=""o"">&lt;</span><span class=""n"">OBBRSS</span><span class=""o"">&gt;*</span> <span class=""n"">geom</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""n"">Transform3f</span> <span class=""n"">tf</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""c1"">//Combine them together\n</span><span class=""n"">CollisionObject</span><span class=""o"">*</span> <span class=""n"">obj</span> <span class=""o"">=</span> <span class=""k"">new</span> <span class=""n"">CollisionObject</span><span class=""p"">(</span><span class=""n"">geom</span><span class=""p"">,</span> <span class=""n"">tf</span><span class=""p"">);</span>\n\n</code></pre></div>\n<p>Once the objects are set, we can perform the proximity computation between them. All the proximity queries in FCL follow a common pipeline: first, set the query request data structure and then run the query function by using request as the input. The result is returned in a query result data structure. For example, for collision checking, we first set the CollisionRequest data structure, and then run the collision function:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""c1"">// Given two objects o1 and o2\n</span><span class=""n"">CollisionObject</span><span class=""o"">*</span> <span class=""n"">o1</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""n"">CollisionObject</span><span class=""o"">*</span> <span class=""n"">o2</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""c1"">// set the collision request structure, here we just use the default setting\n</span><span class=""n"">CollisionRequest</span> <span class=""n"">request</span><span class=""p"">;</span>\n<span class=""c1"">// result will be returned via the collision result structure\n</span><span class=""n"">CollisionResult</span> <span class=""n"">result</span><span class=""p"">;</span>\n<span class=""c1"">// perform collision test\n</span><span class=""n"">collide</span><span class=""p"">(</span><span class=""n"">o1</span><span class=""p"">,</span> <span class=""n"">o2</span><span class=""p"">,</span> <span class=""n"">request</span><span class=""p"">,</span> <span class=""n"">result</span><span class=""p"">);</span>\n\n</code></pre></div>\n<p>By setting the collision request, the user can easily choose whether to return contact information (which is slower) or just return binary collision results (which is faster). </p>\n\n<p>For distance computation, the pipeline is almost the same:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""c1"">// Given two objects o1 and o2\n</span><span class=""n"">CollisionObject</span><span class=""o"">*</span> <span class=""n"">o1</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""n"">CollisionObject</span><span class=""o"">*</span> <span class=""n"">o2</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""c1"">// set the distance request structure, here we just use the default setting\n</span><span class=""n"">DistanceRequest</span> <span class=""n"">request</span><span class=""p"">;</span>\n<span class=""c1"">// result will be returned via the collision result structure\n</span><span class=""n"">DistanceResult</span> <span class=""n"">result</span><span class=""p"">;</span>\n<span class=""c1"">// perform distance test\n</span><span class=""n"">distance</span><span class=""p"">(</span><span class=""n"">o1</span><span class=""p"">,</span> <span class=""n"">o2</span><span class=""p"">,</span> <span class=""n"">request</span><span class=""p"">,</span> <span class=""n"">result</span><span class=""p"">);</span>\n\n</code></pre></div>\n<p>For continuous collision, FCL requires the goal transform to be provided (the initial transform is included in the collision object data structure). Beside that, the pipeline is almost the same as distance/collision:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""c1"">// Given two objects o1 and o2\n</span><span class=""n"">CollisionObject</span><span class=""o"">*</span> <span class=""n"">o1</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""n"">CollisionObject</span><span class=""o"">*</span> <span class=""n"">o2</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""c1"">// The goal transforms for o1 and o2\n</span><span class=""n"">Transform3f</span> <span class=""n"">tf_goal_o1</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""n"">Transform3f</span> <span class=""n"">tf_goal_o2</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""c1"">// set the continuous collision request structure, here we just use the default setting\n</span><span class=""n"">ContinuousCollisionRequest</span> <span class=""n"">request</span><span class=""p"">;</span>\n<span class=""c1"">// result will be returned via the continuous collision result structure\n</span><span class=""n"">ContinuousCollisionResult</span> <span class=""n"">result</span><span class=""p"">;</span>\n<span class=""c1"">// perform continuous collision test\n</span><span class=""n"">continuousCollide</span><span class=""p"">(</span><span class=""n"">o1</span><span class=""p"">,</span> <span class=""n"">tf_goal_o1</span><span class=""p"">,</span> <span class=""n"">o2</span><span class=""p"">,</span> <span class=""n"">tf_goal_o2</span><span class=""p"">,</span> <span class=""n"">request</span><span class=""p"">,</span> <span class=""n"">result</span><span class=""p"">);</span>\n\n</code></pre></div>\n<p>FCL supports broadphase collision/distance between two groups of objects and can avoid the n square complexity. For collision, broadphase algorithm can return all the collision pairs. For distance, it can return the pair with the minimum distance. FCL uses a CollisionManager structure to manage all the objects involving the collision or distance operations.</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""c1"">// Initialize the collision manager for the first group of objects. \n// FCL provides various different implementations of CollisionManager.\n// Generally, the DynamicAABBTreeCollisionManager would provide the best performance.\n</span><span class=""n"">BroadPhaseCollisionManager</span><span class=""o"">*</span> <span class=""n"">manager1</span> <span class=""o"">=</span> <span class=""k"">new</span> <span class=""n"">DynamicAABBTreeCollisionManager</span><span class=""p"">();</span> \n<span class=""c1"">// Initialize the collision manager for the second group of objects.\n</span><span class=""n"">BroadPhaseCollisionManager</span><span class=""o"">*</span> <span class=""n"">manager2</span> <span class=""o"">=</span> <span class=""k"">new</span> <span class=""n"">DynamicAABBTreeCollisionManager</span><span class=""p"">();</span>\n<span class=""c1"">// To add objects into the collision manager, using BroadPhaseCollisionManager::registerObject() function to add one object\n</span><span class=""n"">std</span><span class=""o"">::</span><span class=""n"">vector</span><span class=""o"">&lt;</span><span class=""n"">CollisionObject</span><span class=""o"">*&gt;</span> <span class=""n"">objects1</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""k"">for</span><span class=""p"">(</span><span class=""n"">std</span><span class=""o"">::</span><span class=""kt"">size_t</span> <span class=""n"">i</span> <span class=""o"">=</span> <span class=""mi"">0</span><span class=""p"">;</span> <span class=""n"">i</span> <span class=""o"">&lt;</span> <span class=""n"">objects1</span><span class=""p"">.</span><span class=""n"">size</span><span class=""p"">();</span> <span class=""o"">++</span><span class=""n"">i</span><span class=""p"">)</span>\n<span class=""n"">manager1</span><span class=""o"">-&gt;</span><span class=""n"">registerObject</span><span class=""p"">(</span><span class=""n"">objects1</span><span class=""p"">[</span><span class=""n"">i</span><span class=""p"">]);</span>\n<span class=""c1"">// Another choose is to use BroadPhaseCollisionManager::registerObjects() function to add a set of objects\n</span><span class=""n"">std</span><span class=""o"">::</span><span class=""n"">vector</span><span class=""o"">&lt;</span><span class=""n"">CollisionObject</span><span class=""o"">*&gt;</span> <span class=""n"">objects2</span> <span class=""o"">=</span> <span class=""p"">...</span>\n<span class=""n"">manager2</span><span class=""o"">-&gt;</span><span class=""n"">registerObjects</span><span class=""p"">(</span><span class=""n"">objects2</span><span class=""p"">);</span>\n<span class=""c1"">// In order to collect the information during broadphase, CollisionManager requires two settings: \n// a) a callback to collision or distance; \n// b) an intermediate data to store the information generated during the broadphase computation\n// For a), FCL provides the default callbacks for both collision and distance.\n// For b), FCL uses the CollisionData structure for collision and DistanceData structure for distance. CollisionData/DistanceData is just a container including both the CollisionRequest/DistanceRequest and CollisionResult/DistanceResult structures mentioned above.\n</span><span class=""n"">CollisionData</span> <span class=""n"">collision_data</span><span class=""p"">;</span>\n<span class=""n"">DistanceData</span> <span class=""n"">distance_data</span><span class=""p"">;</span>\n<span class=""c1"">// Setup the managers, which is related with initializing the broadphase acceleration structure according to objects input\n</span><span class=""n"">manager1</span><span class=""o"">-&gt;</span><span class=""n"">setup</span><span class=""p"">();</span>\n<span class=""n"">manager2</span><span class=""o"">-&gt;</span><span class=""n"">setup</span><span class=""p"">();</span>\n<span class=""c1"">// Examples for various queries\n// 1. Collision query between two object groups and get collision numbers\n</span><span class=""n"">manager2</span><span class=""o"">-&gt;</span><span class=""n"">collide</span><span class=""p"">(</span><span class=""n"">manager1</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">collision_data</span><span class=""p"">,</span> <span class=""n"">defaultCollisionFunction</span><span class=""p"">);</span>\n<span class=""kt"">int</span> <span class=""n"">n_contact_num</span> <span class=""o"">=</span> <span class=""n"">collision_data</span><span class=""p"">.</span><span class=""n"">result</span><span class=""p"">.</span><span class=""n"">numContacts</span><span class=""p"">();</span> \n<span class=""c1"">// 2. Distance query between two object groups and get the minimum distance\n</span><span class=""n"">manager2</span><span class=""o"">-&gt;</span><span class=""n"">distance</span><span class=""p"">(</span><span class=""n"">manager1</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">distance_data</span><span class=""p"">,</span> <span class=""n"">defaultDistanceFunction</span><span class=""p"">);</span>\n<span class=""kt"">double</span> <span class=""n"">min_distance</span> <span class=""o"">=</span> <span class=""n"">distance_data</span><span class=""p"">.</span><span class=""n"">result</span><span class=""p"">.</span><span class=""n"">min_distance</span><span class=""p"">;</span>\n<span class=""c1"">// 3. Self collision query for group 1\n</span><span class=""n"">manager1</span><span class=""o"">-&gt;</span><span class=""n"">collide</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">collision_data</span><span class=""p"">,</span> <span class=""n"">defaultCollisionFunction</span><span class=""p"">);</span>\n<span class=""c1"">// 4. Self distance query for group 1\n</span><span class=""n"">manager1</span><span class=""o"">-&gt;</span><span class=""n"">distance</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">distance_data</span><span class=""p"">,</span> <span class=""n"">defaultDistanceFunction</span><span class=""p"">);</span>\n<span class=""c1"">// 5. Collision query between one object in group 1 and the entire group 2\n</span><span class=""n"">manager2</span><span class=""o"">-&gt;</span><span class=""n"">collide</span><span class=""p"">(</span><span class=""n"">objects1</span><span class=""p"">[</span><span class=""mi"">0</span><span class=""p"">],</span> <span class=""o"">&amp;</span><span class=""n"">collision_data</span><span class=""p"">,</span> <span class=""n"">defaultCollisionFunction</span><span class=""p"">);</span>\n<span class=""c1"">// 6. Distance query between one object in group 1 and the entire group 2\n</span><span class=""n"">manager2</span><span class=""o"">-&gt;</span><span class=""n"">distance</span><span class=""p"">(</span><span class=""n"">objects1</span><span class=""p"">[</span><span class=""mi"">0</span><span class=""p"">],</span> <span class=""o"">&amp;</span><span class=""n"">distance_data</span><span class=""p"">,</span> <span class=""n"">defaultDistanceFunction</span><span class=""p"">);</span> \n\n</code></pre></div>\n<p>For more examples, please refer to the test folder:\n- test_fcl_collision.cpp: provide examples for collision test\n- test_fcl_distance.cpp: provide examples for distance test\n- test_fcl_broadphase.cpp: provide examples for broadphase collision/distance test\n- test_fcl_frontlist.cpp: provide examples for frontlist collision acceleration</p>\n\n<h1 id=""test_fcl_global_penetration-cpp-provide-examples-for-global-penetration-depth-test"">- test_fcl_global_penetration.cpp: provide examples for global penetration depth test</h1>\n\n<h1 id=""test_fcl_xmldata-cpp-provide-examples-for-more-global-penetration-depth-test-based-on-xml-data"">- test_fcl_xmldata.cpp: provide examples for more global penetration depth test based on xml data</h1>\n\n<ul>\n<li>test_fcl_octomap.cpp: provide examples for collision/distance computation between octomap data and other data types.</li>\n</ul>\n</div>\n\n            \n          </div>'"
jsk_pr2eus,http://rosindex.github.io/r/jsk_pr2eus/,"hydro,electric,groovy,diamondback,jade,indigo","jsk_pr2eus,pr2eus,pr2eus_armnavigation,pr2eus_impedance,pr2eus_moveit,pr2eus_openrave,pr2eus_tutorials","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_pr2eus"">jsk_pr2eus <a href=""https://travis-ci.org/jsk-ros-pkg/jsk_pr2eus""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_pr2eus.png?branch=master"" alt=""Build Status""></a>\n</h1>\n</div>\n\n            \n          </div>'"
jsk_common,http://rosindex.github.io/r/jsk_common/,"hydro,electric,groovy,diamondback,jade,indigo","jsk_common,dynamic_tf_publisher,jsk_data,jsk_network_tools,image_view2,multi_map_server,jsk_tilt_laser,jsk_tools,jsk_topic_tools,virtual_force_publisher,aques_talk,crlibm,ff,ffha,jtalk,libsiftfast,collada_urdf_jsk_patch,pr2_teleop_general_jsk_patch,opt_camera,parallel_util,posedetection_msgs,stereo_synchronizer","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_common"">jsk_common</h1>\n\n<p><a href=""https://badge.fury.io/gh/jsk-ros-pkg%2Fjsk_common""><img src=""https://badge.fury.io/gh/jsk-ros-pkg%2Fjsk_common.svg"" alt=""GitHub version""></a>\n<a href=""https://travis-ci.org/jsk-ros-pkg/jsk_common""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_common.svg?branch=master"" alt=""Build Status""></a>\n<a href=""http://jsk-docs.readthedocs.org/en/latest/jsk_common/doc/index.html""><img src=""https://readthedocs.org/projects/jsk-docs/badge/?version=latest"" alt=""Read the Docs""></a>\n<a href=""http://jsk-robotics.slack.com""><img src=""https://img.shields.io/badge/slack-jsk--robotics-e100e1.svg"" alt=""Slack""></a>\n<a href=""https://gitter.im/jsk-ros-pkg/jsk_common?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge""><img src=""https://badges.gitter.im/Join%20Chat.svg"" alt=""Join the chat at https://gitter.im/jsk-ros-pkg/jsk_common""></a></p>\n\n<h2 id=""document"">Document</h2>\n\n<p>See <a href=""http://jsk-common.readthedocs.org/en/latest/"">readthedocs</a> for document.</p>\n\n<h2 id=""deb-build-status"">Deb Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Indigo (Saucy)</th>\n<th>Indigo (Trusty)</th>\n<th>Jade (Trusty)</th>\n<th>Jade (Vivid)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>jsk_common (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__jsk_common__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uS32__jsk_common__ubuntu_saucy_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__jsk_common__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uT32__jsk_common__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__jsk_common__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uT32__jsk_common__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__jsk_common__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uV32__jsk_common__ubuntu_vivid_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>jsk_common (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__jsk_common__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uS64__jsk_common__ubuntu_saucy_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__jsk_common__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uT64__jsk_common__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__jsk_common__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uT64__jsk_common__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__jsk_common__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uV64__jsk_common__ubuntu_vivid_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""install"">Install</h2>\n\n<p>You can use <code>jsk.rosbuild</code> to setup your environment.</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">wget -q -O /tmp/jsk.rosbuild https://raw.github.com/jsk-ros-pkg/jsk_common/master/jsk.rosbuild\nbash /tmp/jsk.rosbuild hydro\n\n</code></pre></div>\n<p>For hacker</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">wget -q -O /tmp/jsk.rosbuild https://raw.github.com/jsk-ros-pkg/jsk_common/master/jsk.rosbuild\nbash /tmp/jsk.rosbuild --from-source hydro\n\n</code></pre></div>\n<p>For hrpsys user</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">wget -q -O /tmp/jsk.rosbuild https://raw.github.com/jsk-ros-pkg/jsk_common/master/jsk.rosbuild\nbash /tmp/jsk.rosbuild --rtm hydro\n\n</code></pre></div>\n<p>For hrpsys hacker</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">wget -q -O /tmp/jsk.rosbuild https://raw.github.com/jsk-ros-pkg/jsk_common/master/jsk.rosbuild\nbash /tmp/jsk.rosbuild --from-source --rtm hydro\n\n</code></pre></div>\n<p><code>jsk.rosbuild</code> generates filesystem as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">~ --- ros\n       + --- hydro_parent: Only availabe if --from-source option is enabled\n              + --- src:   maintained by wstool\n              + --- build: generated by catkin_tools\n              + --- devel: generated by catkin_tools\n       +--- hydro\n             + --- src:    maintained by wstool\n             + --- build:  generated by catkin_tools\n             + --- devel:  generated by catkin_tools\n\n</code></pre></div>\n<h1 id=""watch-all-the-jsk-github-repositories"">Watch all the jsk github repositories.</h1>\n\n<p>Please use <a href=""http://jsk-github-watcher.herokuapp.com/"">this</a></p>\n\n<h1 id=""slack-for-jsk-lab-members"">Slack for JSK Lab members <img src=""https://upload.wikimedia.org/wikipedia/en/7/76/Slack_Icon.png"" height=""40px"">\n</h1>\n\n<p>You can login to <a href=""https://slack.com/"">slack</a> from <a href=""https://jsk-robotics.slack.com"">here</a>.\nYou can create account using imi address.</p>\n\n<p><a href=""https://github.com/raelgc/scudcloud"">scudcloud</a> is a desktop client for slack and you can install it\nby following <a href=""https://github.com/raelgc/scudcloud#ubuntukubuntu-mint-and-debian"">instruction</a>.</p>\n\n<p>You can restart travis and jenkins from slack\'s <code>#travis</code> channel.</p>\n\n<h2 id=""restart-travis-from-slack"">Restart travis from slack</h2>\n\n<p><img src=""https://raw.githubusercontent.com//jsk-ros-pkg/jsk_common/master//images/restart_travis.png"" alt=""""></p>\n\n<p>Type <code>restart travis &lt;job-id&gt;</code> from slack#travis channel.</p>\n\n<p><strong>N.B.: <code>&lt;job-id&gt;</code> is not the number of Pull-request.</strong></p>\n\n<p>you can get <code>&lt;job-id&gt;</code> from Travis page.</p>\n\n<ul>\n<li><img src=""https://raw.githubusercontent.com//jsk-ros-pkg/jsk_common/master//images/PR_page.png"" alt=""""></li>\n<li><img src=""https://raw.githubusercontent.com//jsk-ros-pkg/jsk_common/master//images/Travis_page.png"" width=""70%""></li>\n</ul>\n\n<h2 id=""restart-docker-from-slack"">Restart docker from slack</h2>\n\n<p><img src=""https://raw.githubusercontent.com//jsk-ros-pkg/jsk_common/master//images/restart_docker.png"" alt=""""></p>\n\n<p>Type <code>restart docker</code> from slack#travis channel.</p>\n</div>\n\n            \n          </div>'"
rbdl,http://rosindex.github.io/r/rbdl/,"hydro,indigo",,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>RBDL - Rigid Body Dynamics Library\nCopyright (c) 2011-2016 Martin Felis <a href=""mailto:martin.felis@iwr.uni-heidelberg.de"">martin.felis@iwr.uni-heidelberg.de</a></p>\n\n<h1 id=""introduction"">Introduction</h1>\n\n<p>RBDL is a highly efficient C++ library that contains some essential rigid\nbody dynamics algorithms such as the Articulated Body Algorithm (ABA) for\nforward dynamics, Recursive Newton-Euler Algorithm (RNEA) for inverse\ndynamics and the Composite Rigid Body Algorithm (CRBA) for the efficient\ncomputation of the joint space inertia matrix. It further contains code for\nJacobians, forward and inverse kinematics, and handling of external\nconstraints such as contacts and collisions.</p>\n\n<p>The code is developed by Martin Felis <a href=""mailto:martin.felis@iwr.uni-heidelberg.de"">martin.felis@iwr.uni-heidelberg.de</a>\nat the research group <a href=""http://orb.iwr.uni-heidelberg.de"">Optimization in Robotics and Biomechanics\n(ORB)</a> of the <a href=""http://www.iwr.uni-heidelberg.de"">Interdisciplinary Center\nfor Scientific Computing (IWR)</a> at\n<a href=""http://www.uni-heidelberg.de"">Heidelberg University</a>. The code tightly\nfollows the notation used in Roy Featherstone\'\'s book ""Rigid Body Dynamics\nAlgorithm"".</p>\n\n<h1 id=""recent-changes"">Recent Changes</h1>\n\n<ul>\n<li>28 April 2016: Nev version 2.5.0:\n\n<ul>\n<li>Added an experimental Cython based Python wrapper of RBDL. The API is\nvery close to the C++ API. For a brief glimpse of the API see the file\npython/test_wrapper.py.</li>\n<li>Matthew Millard added CustomJoints which allow to create different joint\ntypes completely by user code. They are implemented as proxy joints for\nwhich their behaviour is specified using virtual functions.</li>\n<li>Added CalcMInvTimesTau() that evaluates multiplication of the inverse of\nthe joint space inertia matrix with a vector in O(n) time.</li>\n<li>Added JointTypeFloatingBase which uses TX,TY,TZ and a spherical joint for\nthe floating base joint.</li>\n<li>Loading of floating base URDF models must now be specified as a third\nparameter to URDFReadFromFile() and URDFReadFromString()</li>\n<li>Added the URDF code from Bullet3 which gets used when ROS is not found.\nOtherwise use the URDF libraries found via Catkin.</li>\n<li>Added CalcPointVelocity6D, CalcPointAcceleration6D, and CalcPointJacobian6D\nthat compute both linear and angular quantities</li>\n<li>Removed Model::SetFloatingBase (body). Use a 6-DoF joint or\nJointTypeFloatingBase instead.</li>\n<li>Fixed building issues when building DLL with MSVC++.</li>\n</ul>\n</li>\n<li>20 April 2016: New version 2.4.1:\n\n<ul>\n<li>This is a bugfix release that maintains binary compatibility and only fixes\nerroneous behaviour.</li>\n<li>critical: fixed termination criterion for InverseKinematics. The termination\ncriterion would be evaluated too early and thus report convergence too\nearly. This was reported independently by Kevin Stein, Yun Fei, and Davide\nCorradi. Thanks for the reports!</li>\n<li>critical: fixed CompositeRigidBodyAlgorithm when using spherical joints\n(thanks to S\xc3\xa9bastien Barth\xc3\xa9l\xc3\xa9my for reporting!)</li>\n</ul>\n</li>\n<li>23 February 2015: New version 2.4.0:\n\n<ul>\n<li>Added sparse range-space method ForwardDynamicsContactsRangeSpaceSparse()\nand ComputeContactImpulsesRangeSpaceSparse() </li>\n<li>Added null-space method ForwardDynamicsContactsNullSpace()\nand ComputeContactImpulsesNullSpace() </li>\n<li>Renamed ForwardDynamicsContactsLagrangian() to\nForwardDynamicsContactsDirect() and\nComputeContactImpulsesLagrangian() to ComputeContactImpulsesDirect()</li>\n<li>Renamed ForwardDynamicsContacts() to ForwardDynamicsContactsKokkevis()</li>\n<li>Removed/Fixed CalcAngularMomentum(). The function produced wrong values. The\nfunctionality has been integrated into CalcCenterOfMass().</li>\n<li>CalcPointJacobian() does not clear the argument of the result anymore.\nCaller has to ensure that the matrix was set to zero before using this\nfunction.</li>\n<li>Added optional workspace parameters for ForwardDynamicsLagrangian() to\noptionally reduce memory allocations</li>\n<li>Added JointTypeTranslationXYZ, JointTypeEulerXYZ, and JointTypeEulerYXZ\nwhich are equivalent to the emulated multidof joints but faster.</li>\n<li>Added optional parameter to CalcCenterOfMass to compute angular momentum.</li>\n<li>Added CalcBodySpatialJacobian()</li>\n<li>Added CalcContactJacobian()</li>\n<li>Added NonlinearEffects()</li>\n<li>Added solving of linear systems using standard Householder QR</li>\n<li>LuaModel: Added LuaModelReadFromLuaState()</li>\n<li>URDFReader: Fixed various issues and using faster joints for floating\nbase models</li>\n<li>Various performance improvements</li>\n</ul>\n</li>\n</ul>\n\n<p>For a complete history see doc/api_changes.txt.</p>\n\n<h1 id=""documentation"">Documentation</h1>\n\n<p>The documentation is contained in the code and can be extracted with the\ntool <a href=""http://www.doxygen.org"">doxygen</a>.</p>\n\n<p>To create the documentation simply run</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">doxygen Doxyfile\n</code></pre></div>\n<p>which will generate the documentation in the subdirectory ./doc/html. The\nmain page will then be located in ./doc/html/index.html.</p>\n\n<p>An online version of the generated documentation can be found at\n<a href=""http://rbdl.bitbucket.org"">http://rbdl.bitbucket.org</a>.</p>\n\n<h1 id=""getting-rbdl"">Getting RBDL</h1>\n\n<p>The latest stable code can be obtained from</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">https://bitbucket.org/rbdl/rbdl/get/default.zip\n</code></pre></div>\n<p>The official mercurial repository can be cloned from</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">https://bitbucket.org/rbdl/rbdl\n</code></pre></div>\n<p>(See <a href=""http://mercurial.selenic.com"">http://mercurial.selenic.com/</a> for\nmercurial clients.)</p>\n\n<h1 id=""building-and-installation"">Building and Installation</h1>\n\n<p>The RBDL is built using CMake\n(<a href=""http://www.cmake.org"">http://www.cmake.org</a>). To compile the library in\na separate directory in Release mode use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">mkdir build\ncd build/\ncmake -D CMAKE_BUILD_TYPE=Release ../ \nmake\n</code></pre></div>\n<p>For optimal performance it is highly recommended to install the Eigen3\nlinear algebra library from\n<a href=""http://eigen.tuxfamily.org"">http://eigen.tuxfamily.org</a>. RBDL also\ncomes with a simple, albeit much slower math library (SimpleMath) that can\nbe used by enabling <code>RBDL_USE_SIMPLE_MATH</code>, i.e.:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cmake -D RBDL_USE_SIMPLE_MATH=TRUE ../\n</code></pre></div>\n<h1 id=""licensing"">Licensing</h1>\n\n<p>The library is published under the very permissive zlib free software\nlicense which should allow you to use the software wherever you need. </p>\n\n<p>This is the full license text (zlib license):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">RBDL - Rigid Body Dynamics Library\nCopyright (c) 2011-2016 Martin Felis &lt;martin.felis@iwr.uni-heidelberg.de&gt;\n\nThis software is provided \'as-is\', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n   1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n\n   2. Altered source versions must be plainly marked as such, and must not\n   be misrepresented as being the original software.\n\n   3. This notice may not be removed or altered from any source\n   distribution.\n</code></pre></div>\n<h1 id=""acknowledgements"">Acknowledgements</h1>\n\n<p>Work on this library was funded by the <a href=""http://hgs.iwr.uni-heidelberg.de/hgs.mathcomp/"">Heidelberg Graduate School of\nMathematical and Computational Methods for the Sciences\n(HGS)</a>, and the European\nFP7 projects <a href=""http://echord.eu"">ECHORD</a> (grant number 231143) and\n<a href=""http://koroibot.eu"">Koroibot</a> (grant number 611909).</p>\n</div>\n\n            \n          </div>'"
moveit_setup_assistant,http://rosindex.github.io/r/moveit_setup_assistant/,"hydro,fuerte,groovy,jade,indigo",moveit_setup_assistant,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-setup-assistant"">MoveIt Setup Assistant</h1>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/ros-planning/moveit_setup_assistant""><img src=""https://travis-ci.org/ros-planning/moveit_setup_assistant.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
denso,http://rosindex.github.io/r/denso/,"hydro,indigo","denso,denso_controller,denso_launch,vs060,vs060_gazebo,vs060_moveit_config","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""denso"">denso <a href=""https://travis-ci.org/start-jsk/denso""><img src=""https://travis-ci.org/start-jsk/denso.svg?branch=indigo-devel"" alt=""Build Status""></a>\n</h1>\n\n<p>A controller package suite for robots from Densowave based on open-industrial-ros-controllers</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""denso"">denso</h1>\n\n<p>A controller package suite for robots from Densowave based on open-industrial-ros-controllers</p>\n</div>\n\n            \n          </div>'"
avt_vimba_camera,http://rosindex.github.io/r/avt_vimba_camera/,"hydro,indigo",avt_vimba_camera,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hector_worldmodel,http://rosindex.github.io/r/hector_worldmodel/,"hydro,fuerte,electric,groovy,jade,indigo","hector_object_tracker,hector_worldmodel,hector_worldmodel_geotiff_plugins,hector_worldmodel_msgs,object_tracker","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""hector_worldmodel"">hector_worldmodel</h1>\n\n<p>hector_worldmodel collects and fuses information about objects in the world. Originally used by Team Hector Darmstadt to localize victims and QR codes in the Robocup Rescue scenario. hector_object_tracker is core package - pulls all information together into single worldmodel state. </p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hector_slam,http://rosindex.github.io/r/hector_slam/,"hydro,fuerte,electric,groovy,jade,indigo","hector_compressed_map_transport,hector_geotiff,hector_geotiff_plugins,hector_imu_attitude_to_tf,hector_imu_tools,hector_map_server,hector_map_tools,hector_mapping,hector_marker_drawing,hector_nav_msgs,hector_slam,hector_slam_launch,hector_trajectory_server","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang=""""># hector_slam\n\nSee the ROS Wiki for documentation: http://wiki.ros.org/hector_slam\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">== Postprocessing Logfile example ==\nDownload this file:\nhttp://code.google.com/p/tu-darmstadt-ros-pkg/downloads/detail?name=Team_Hector_MappingBox_RoboCup_2011_Rescue_Arena.bag&amp;can=2&amp;q=\n\nOpen a new terminal window, type:\nrosmake hector_slam\n\nLaunch the tutorial launch file provided in the hector_slam_launch package:\nroslaunch hector_slam_launch tutorial.launch\n\nOpen another terminal, enter the directory of the .bag file and type:\nrosbag play Team_Hector_MappingBox_RoboCup_2011_Rescue_Arena.bag --clock\n\nYou should now be able see the mapping process in rviz.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
catkin_pip,http://rosindex.github.io/r/catkin_pip/,"jade,indigo",catkin_pip,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""catkin_pip"">catkin_pip</h1>\n\n<p><a href=""https://travis-ci.org/asmodehn/catkin_pip""><img src=""https://travis-ci.org/asmodehn/catkin_pip.svg?branch=indigo"" alt=""Build Status""></a></p>\n\n<p>Provides catkin extension (cmake hooks) to work with pure python packages in catkin workspaces.\nBecause state of the art python (ref. <a href=""http://jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/"">http://jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/</a>) should be allowed to work in catkin.</p>\n\n<p>catkin_pip allows you to use your own package as a normal python package, with python workflow (example using virtualenvwrapper):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ mkvirtualenv my_package_venv --system-site-packages\n(my_package_venv)$ pip install -r requirements.txt\n(my_package_venv)$ python -m my_package\n(my_package_venv)$ nosetests my_package\n(my_package_venv)$ deactivate\n$\n\n</code></pre></div>\n<p>OR using the python workflow from inside a catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ source /opt/ros/indigo/setup.bash\n$ cd existing_catkin_ws\n$ catkin_make\n$ source devel/setup.bash\n$ python -m my_package\n$ nosetests my_package\n\n</code></pre></div>\n<p>TODO : improve this with real simple command line examples, copied verbatim.</p>\n\n<p>It basically make use, through cmake, of the workspace as a virtual env would be used in a python flow.\nMostly it\'s just a few arguments added to pip to get it to install packages in the correct way in a workspace.</p>\n\n<p>The provided cmake macros are:</p>\n\n<ul>\n<li>catkin_pip_setup()</li>\n<li>catkin_pip_requirements(requirements_file)</li>\n<li>catkin_pip_package()</li>\n</ul>\n\n<p>they can be used like this :</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">...\ncmake_minimum_required(VERSION 2.8.3)\nproject(my_project)\n\nfind_package(catkin REQUIRED COMPONENTS\n    catkin_pip\n)\n\n# Getting pip requirements for catkin_pip itself\ncatkin_pip_setup()\n\n# We need to install the project pip dependencies in the devel workspace being created\ncatkin_pip_requirements(${CMAKE_CURRENT_SOURCE_DIR}/requirements.txt)\n\n# defining current package as a package that should be managed by pip (not catkin - even though we make it usable with workspaces)\ncatkin_pip_package()\n\n# Corresponding install rules are also setup by each of these macros.\n...\n\n</code></pre></div>\n<p>As a result, for source dependencies (available only for development) you can :\n- Use pip dependency requirements mechanism with any python git repo, for devel workspace\n- Use wstool/rosinstall to retrieve multiple git repository in one place.</p>\n\n<p>And for package dependencies (available for development and for your package) you can :\n- Use pip dependency requirements mechanism with any python package from pypi, for both devel and install workspace.\n- Use rosdep dependency mechanism, with any ros package dependency.</p>\n\n<h1 id=""roadmap"">Roadmap</h1>\n\n<ul>\n<li>[] check if suitable to have catkin always look into site-packages by default, it would avoid this code to hack <code>_setup_util.py</code> in each workspace</li>\n<li>[] multiple packages using catkin_pip in same workspace should find each other in the right order and avoid pip version error...</li>\n<li>[] debian packaging. Not sure yet if this is even suitable/possible without huge changes...</li>\n</ul>\n</div>\n\n            \n          </div>'"
hector_gazebo,http://rosindex.github.io/r/hector_gazebo/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","hector_gazebo,hector_gazebo_plugins,hector_gazebo_thermal_camera,hector_gazebo_worlds,hector_sensors_gazebo,gazebo_rtt_plugin","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""hector_gazebo"">hector_gazebo</h1>\n\n<p>hector_gazebo provides packages related to the simulation of robots using gazebo (gazebo plugins, world files etc.).</p>\n</div>\n\n            \n          </div>'"
moveit_metapackages,http://rosindex.github.io/r/moveit_metapackages/,"hydro,groovy,indigo","moveit_full,moveit_full_pr2","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit_metapackages"">moveit_metapackages</h1>\n\n<p>This repository includes metapackages for installation variants of MoveIt!.</p>\n</div>\n\n            \n          </div>'"
mavlink,http://rosindex.github.io/r/mavlink/,"hydro,jade,kinetic,indigo",mavlink,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><a href=""https://travis-ci.org/mavlink/mavlink""><img src=""https://travis-ci.org/mavlink/mavlink.svg?branch=master"" alt=""Build Status""></a></p>\n\n<h2 id=""mavlink"">MAVLink</h2>\n\n<ul>\n<li>  Official Website: <a href=""http://mavlink.org"">http://mavlink.org</a>\n</li>\n<li>  Source: <a href=""https://github.com/mavlink/mavlink"">Mavlink Generator</a>\n</li>\n<li>  Binaries (always up-to-date from master):\n\n<ul>\n<li><a href=""https://github.com/mavlink/c_library"">C/C++ header-only library</a></li>\n</ul>\n</li>\n<li>  Mailing list: <a href=""http://groups.google.com/group/mavlink"">Google Groups</a>\n</li>\n</ul>\n\n<p>MAVLink -- Micro Air Vehicle Message Marshalling Library.</p>\n\n<p>This is a library for lightweight communication between Micro Air Vehicles (swarm) and/or ground control stations. It allows for defining messages within XML files, which then are converted into appropriate source code for different languages. These XML files are called dialects, most of which build on the <em>common</em> dialect provided in <code>common.xml</code>.</p>\n\n<p>The MAVLink protocol performs byte-level serialization and so is appropriate for use with any type of radio modem.</p>\n\n<p>This repository is largely Python scripts that convert XML files into language-specific libraries. There are additional Python scripts providing examples and utilities for working with MAVLink data. These scripts, as well as the generated Python code for MAVLink dialects, require Python 2.7 or greater.</p>\n\n<p>Note that there are two incompatible versions of the MAVLink protocol: v0.9 and v1.0. Most programs, including <a href=""https://github.com/mavlink/qgroundcontrol"">QGroundControl</a>, have switched over to v1.0. The v0.9 protocol is <strong>DEPRECATED</strong> and should only be used to maintain backwards compatibility where necessary.</p>\n\n<h3 id=""requirements"">Requirements</h3>\n\n<ul>\n<li>Python 2.7+\n\n<ul>\n<li>Tkinter (if GUI functionality is desired)</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=""installation"">Installation</h3>\n\n<ol>\n<li>Clone into a user-writable directory.</li>\n<li>Add the repository directory to your <code>PYTHONPATH</code>\n</li>\n<li>Generate MAVLink parser files following the instructions in the next section <em>AND/OR</em> run included helper scripts described in the Scripts/Examples secion.</li>\n</ol>\n\n<h3 id=""generating-language-specific-source-files"">Generating Language-specific Source Files</h3>\n\n<p>Language-specific files can be generated via a Python script from the command line or using a GUI. If a dialect XML file has a dependency on another XML file, they must be located in the same directory. Since most MAVLink dialects depend on the <strong>common</strong> messageset, it is recommend that you place your dialect with the others in <code>/message_definitions/v1.0/</code>.</p>\n\n<p>Available languages are:</p>\n\n<ul>\n<li>C</li>\n<li>C#</li>\n<li>Java</li>\n<li>JavaScript</li>\n<li>Lua</li>\n<li>Python, version 2.7+</li>\n</ul>\n\n<h4 id=""from-a-gui-recommended"">From a GUI (recommended)</h4>\n\n<p>mavgenerate.py is a header generation tool GUI written in Python. It requires Tkinter, which is only included with Python on Windows, so it will need to be installed separately on non-Windows platforms. It can be run from anywhere using Python\'s -m argument:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ python -m mavgenerate\n</code></pre></div>\n<h4 id=""from-the-command-line"">From the command line</h4>\n\n<p>mavgen.py is a command-line interface for generating a language-specific MAVLink library. This is actually the backend used by <code>mavgenerate.py</code>. After the <code>mavlink</code> directory has been added to the Python path, it can be run by executing from the command line:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ python -m pymavlink.tools.mavgen\n</code></pre></div>\n<h3 id=""usage"">Usage</h3>\n\n<p>Using the generated MAVLink dialect libraries varies depending on the language, with language-specific details below:</p>\n\n<h4 id=""c"">C</h4>\n\n<p>To use MAVLink, include the <em>mavlink.h</em> header file in your project:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;mavlink.h&gt;\n</code></pre></div>\n<p>Do not include the individual message files. In some cases you will have to add the main folder to the include search path as well. To be safe, we recommend these flags:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ gcc -I mavlink/include -I mavlink/include/&lt;your message set, e.g. common&gt;\n</code></pre></div>\n<p>The C MAVLink library utilizes a channels metaphor to allow for simultaneous processing of multiple MAVLink streams in the same program. It is therefore important to use the correct channel for each operation as all receiving and transmitting functions provided by MAVLink require a channel. If only one MAVLink stream exists, channel 0 should be used by using the <code>MAVLINK_COMM_0</code> constant.</p>\n\n<h5 id=""receiving"">Receiving</h5>\n\n<p>MAVLink reception is then done using <code>mavlink_helpers.h:mavlink_parse_char()</code>.</p>\n\n<h5 id=""transmitting"">Transmitting</h5>\n\n<p>Transmitting can be done by using the <code>mavlink_msg_*_pack()</code> function, where one is defined for every message. The packed message can then be serialized with <code>mavlink_helpers.h:mavlink_msg_to_send_buffer()</code> and then writing the resultant byte array out over the appropriate serial interface.</p>\n\n<p>It is possible to simplify the above by writing wrappers around the transmitting/receiving code. A multi-byte writing macro can be defined, <code>MAVLINK_SEND_UART_BYTES()</code>, or a single-byte function can be defined, <code>comm_send_ch()</code>, that wrap the low-level driver for transmitting the data. If this is done, <code>MAVLINK_USE_CONVENIENCE_FUNCTIONS</code> must be defined.</p>\n\n<h3 id=""scripts-examples"">Scripts/Examples</h3>\n\n<p>This MAVLink library also comes with supporting libraries and scripts for using, manipulating, and parsing MAVLink streams within the pymavlink, pymav\nlink/tools, and pymavlink/examples directories.</p>\n\n<p>The scripts have the following requirements:\n  * Python 2.7+\n  * mavlink repository folder in <code>PYTHONPATH</code>\n  * Write access to the entire <code>mavlink</code> folder.\n  * Your dialect\'s XML file is in <code>message_definitions/*/</code></p>\n\n<p>Running these scripts can be done by running Python with the \'-m\' switch, which indicates that the given script exists on the PYTHONPATH. This is the proper way to run Python scripts that are part of a library as per PEP-328 (and the rejected PEP-3122). The following code runs <code>mavlogdump.py</code> in <code>/pymavlink/tools/</code> on the recorded MAVLink stream <code>test_run.mavlink</code> (other scripts in <code>/tools</code> and <code>/scripts</code> can be run in a similar fashion):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ python -m pymavlink.tools.mavlogdump test_run.mavlink\n</code></pre></div>\n<h3 id=""license"">License</h3>\n\n<p>MAVLink is licensed under the terms of the Lesser General Public License (version 3) of the Free Software Foundation (LGPLv3). The C-language version of MAVLink is a header-only library, and as such compiling an application with it is considered ""using the library"", not a derived work. MAVLink can therefore be used without limits in any closed-source application without publishing the source code of the closed-source application.</p>\n\n<p>See the <em>COPYING</em> file for more info.</p>\n\n<h3 id=""credits"">Credits</h3>\n\n<p>\xc2\xa9 2009-2014 <a href=""mailto:mail@qgroundcontrol.org"">Lorenz Meier</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><a href=""https://travis-ci.org/mavlink/mavlink""><img src=""https://travis-ci.org/mavlink/mavlink.svg?branch=master"" alt=""Build Status""></a></p>\n\n<h2 id=""mavlink"">MAVLink</h2>\n\n<ul>\n<li>  Official Website: <a href=""http://mavlink.org"">http://mavlink.org</a>\n</li>\n<li>  Source: <a href=""https://github.com/mavlink/mavlink"">Mavlink Generator</a>\n</li>\n<li>  Binaries (always up-to-date from master):\n\n<ul>\n<li><a href=""https://github.com/mavlink/c_library_v1"">C/C++ header-only library v1</a></li>\n<li><a href=""https://github.com/mavlink/c_library_v2"">C/C++ header-only library v2</a></li>\n</ul>\n</li>\n<li>  Mailing list: <a href=""http://groups.google.com/group/mavlink"">Google Groups</a>\n</li>\n</ul>\n\n<p>MAVLink -- Micro Air Vehicle Message Marshalling Library.</p>\n\n<p>This is a library for lightweight communication between Micro Air Vehicles (swarm) and/or ground control stations. It allows for defining messages within XML files, which then are converted into appropriate source code for different languages. These XML files are called dialects, most of which build on the <em>common</em> dialect provided in <code>common.xml</code>.</p>\n\n<p>The MAVLink protocol performs byte-level serialization and so is appropriate for use with any type of radio modem.</p>\n\n<p>This repository is largely Python scripts that convert XML files into language-specific libraries. There are additional Python scripts providing examples and utilities for working with MAVLink data. These scripts, as well as the generated Python code for MAVLink dialects, require Python 2.7 or greater.</p>\n\n<h3 id=""requirements"">Requirements</h3>\n\n<ul>\n<li>Python 2.7+\n\n<ul>\n<li>Tkinter (if GUI functionality is desired)</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=""installation"">Installation</h3>\n\n<ol>\n<li>Clone into a user-writable directory.</li>\n<li>Add the repository directory to your <code>PYTHONPATH</code>\n</li>\n<li>Generate MAVLink parser files following the instructions in the next section <em>AND/OR</em> run included helper scripts described in the Scripts/Examples secion.</li>\n</ol>\n\n<h3 id=""generating-language-specific-source-files"">Generating Language-specific Source Files</h3>\n\n<p>Language-specific files can be generated via a Python script from the command line or using a GUI. If a dialect XML file has a dependency on another XML file, they must be located in the same directory. Since most MAVLink dialects depend on the <strong>common</strong> messageset, it is recommend that you place your dialect with the others in <code>/message_definitions/v1.0/</code>.</p>\n\n<p>Available languages are:</p>\n\n<ul>\n<li>C</li>\n<li>C#</li>\n<li>Java</li>\n<li>JavaScript</li>\n<li>Lua</li>\n<li>Python, version 2.7+</li>\n</ul>\n\n<h4 id=""from-a-gui-recommended"">From a GUI (recommended)</h4>\n\n<p>mavgenerate.py is a header generation tool GUI written in Python. It requires Tkinter, which is only included with Python on Windows, so it will need to be installed separately on non-Windows platforms. It can be run from anywhere using Python\'s -m argument:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ python -m mavgenerate\n</code></pre></div>\n<h4 id=""from-the-command-line"">From the command line</h4>\n\n<p>mavgen.py is a command-line interface for generating a language-specific MAVLink library. This is actually the backend used by <code>mavgenerate.py</code>. After the <code>mavlink</code> directory has been added to the Python path, it can be run by executing from the command line:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ python -m pymavlink.tools.mavgen\n</code></pre></div>\n<h3 id=""usage"">Usage</h3>\n\n<p>Using the generated MAVLink dialect libraries varies depending on the language, with language-specific details below:</p>\n\n<h4 id=""c"">C</h4>\n\n<p>To use MAVLink, include the <em>mavlink.h</em> header file in your project:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;mavlink.h&gt;\n</code></pre></div>\n<p>Do not include the individual message files. In some cases you will have to add the main folder to the include search path as well. To be safe, we recommend these flags:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ gcc -I mavlink/include -I mavlink/include/&lt;your message set, e.g. common&gt;\n</code></pre></div>\n<p>The C MAVLink library utilizes a channels metaphor to allow for simultaneous processing of multiple MAVLink streams in the same program. It is therefore important to use the correct channel for each operation as all receiving and transmitting functions provided by MAVLink require a channel. If only one MAVLink stream exists, channel 0 should be used by using the <code>MAVLINK_COMM_0</code> constant.</p>\n\n<h5 id=""receiving"">Receiving</h5>\n\n<p>MAVLink reception is then done using <code>mavlink_helpers.h:mavlink_parse_char()</code>.</p>\n\n<h5 id=""transmitting"">Transmitting</h5>\n\n<p>Transmitting can be done by using the <code>mavlink_msg_*_pack()</code> function, where one is defined for every message. The packed message can then be serialized with <code>mavlink_helpers.h:mavlink_msg_to_send_buffer()</code> and then writing the resultant byte array out over the appropriate serial interface.</p>\n\n<p>It is possible to simplify the above by writing wrappers around the transmitting/receiving code. A multi-byte writing macro can be defined, <code>MAVLINK_SEND_UART_BYTES()</code>, or a single-byte function can be defined, <code>comm_send_ch()</code>, that wrap the low-level driver for transmitting the data. If this is done, <code>MAVLINK_USE_CONVENIENCE_FUNCTIONS</code> must be defined.</p>\n\n<h3 id=""scripts-examples"">Scripts/Examples</h3>\n\n<p>This MAVLink library also comes with supporting libraries and scripts for using, manipulating, and parsing MAVLink streams within the pymavlink, pymav\nlink/tools, and pymavlink/examples directories.</p>\n\n<p>The scripts have the following requirements:\n  * Python 2.7+\n  * mavlink repository folder in <code>PYTHONPATH</code>\n  * Write access to the entire <code>mavlink</code> folder.\n  * Your dialect\'s XML file is in <code>message_definitions/*/</code></p>\n\n<p>Running these scripts can be done by running Python with the \'-m\' switch, which indicates that the given script exists on the PYTHONPATH. This is the proper way to run Python scripts that are part of a library as per PEP-328 (and the rejected PEP-3122). The following code runs <code>mavlogdump.py</code> in <code>/pymavlink/tools/</code> on the recorded MAVLink stream <code>test_run.mavlink</code> (other scripts in <code>/tools</code> and <code>/scripts</code> can be run in a similar fashion):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ python -m pymavlink.tools.mavlogdump test_run.mavlink\n</code></pre></div>\n<h3 id=""license"">License</h3>\n\n<p>MAVLink is licensed under the terms of the Lesser General Public License (version 3) of the Free Software Foundation (LGPLv3). The C-language version of MAVLink is a header-only library which is generated as MIT-licensed code. MAVLink can therefore be used without limits in any closed-source application without publishing the source code of the closed-source application.</p>\n\n<p>See the <em>COPYING</em> file for more info.</p>\n\n<h3 id=""credits"">Credits</h3>\n\n<p>\xc2\xa9 2009-2014 <a href=""mailto:mail@qgroundcontrol.org"">Lorenz Meier</a></p>\n</div>\n\n            \n          </div>'"
robot_controllers,http://rosindex.github.io/r/robot_controllers/,"jade,indigo","robot_controllers,robot_controllers_interface,robot_controllers_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot-controllers"">Robot Controllers</h1>\n\n<p>This is a robot control infrastructure, developed initially for Fetch and Freight, but\ndesigned to be robot-agnostic. In comparison to ros_control, robot_controllers offers\nthe ability to ""stack"" controllers and avoids template-based hardware interfaces.\nrobot_controllers has not be designed with real-time constraints in mind, and is intended\nprimarily for robots where the real-time joint-level controllers are run in hardware,\nas is the case for Fetch and Freight.</p>\n\n<ul>\n<li>Devel Job Status: <a href=""http://build.ros.org/view/Idev/job/Idev__robot_controllers__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__robot_controllers__ubuntu_trusty_amd64"" alt=""Build Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://build.ros.org/view/Ibin_uT64/job/Ibin_uT64__robot_controllers_interface__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__robot_controllers_interface__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
cob_navigation,http://rosindex.github.io/r/cob_navigation/,"hydro,groovy,indigo","cob_linear_nav,cob_map_accessibility_analysis,cob_mapping_slam,cob_navigation,cob_navigation_config,cob_navigation_global,cob_navigation_local,cob_navigation_slam,cob_scan_unifier,cob_unified_scan_publisher","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cob_navigation"">cob_navigation</h1>\n\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_navigation""><img src=""https://travis-ci.org/ipa320/cob_navigation.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p>The cob_navigation repository provides configuration and launch files for running the navigation stack on the Fraunhofer IPA robots Care-O-bot and rob@work in a number of common configurations.\nFor example, the <code>cob_navigation_local</code> package holds files that configure the <code>move_base</code> node to operate in an odometric frame, and the \xe2\x80\x99cob_mapping_slam\xe2\x80\x99 package holds files that configure the robot for SLAM.\nThese configuration files are intended for use as building blocks for applications that wish to use autonomous navigation as a component.</p>\n\n<p>The naming of the packages as well as the documentation is kept close to the one of <code>pr2_navigation</code> for ease of use for experienced ROS users. However, changes are made to suit our needs.</p>\n\n<p>For more information, check out the <a href=""http://wiki.ros.org/cob_navigation"" title=""cob_navigation wiki page"">ROS Wiki page</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cob_navigation"">cob_navigation</h1>\n\n<p>The cob_navigation repository provides configuration and launch files for running the navigation stack on the Fraunhofer IPA robots Care-O-bot and rob@work in a number of common configurations.\nFor example, the <code>cob_navigation_local</code> package holds files that configure the <code>move_base</code> node to operate in an odometric frame, and the \xe2\x80\x99cob_mapping_slam\xe2\x80\x99 package holds files that configure the robot for SLAM.\nThese configuration files are intended for use as building blocks for applications that wish to use autonomous navigation as a component.</p>\n\n<p>The naming of the packages as well as the documentation is kept close to the one of <code>pr2_navigation</code> for ease of use for experienced ROS users. However, changes are made to suit our needs.</p>\n\n<p>For more information, check out the <a href=""http://wiki.ros.org/cob_navigation"" title=""cob_navigation wiki page"">ROS Wiki page</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Installation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
axis_camera,http://rosindex.github.io/r/axis_camera/,"hydro,fuerte,electric,groovy,indigo",axis_camera,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p>This <a href=""http://ros.org"">ROS</a> package provides an <a href=""http://www.axis.com/products/video/camera/index.htm"">Axis network\ncamera</a> driver,\nwritten in Python.</p>\n\n<p>ROS wiki documentation: <a href=""http://ros.org/wiki/axis_camera"">axis_camera</a>.</p>\n\n<p>This driver is under active development. Its ROS interfaces are\nrelatively stable, but may still change.</p>\n\n<p>There is no released code API.</p>\n\n<p><strong>Warning</strong>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">The master branch normally contains code being tested for the next\nROS release.  It does not always work with previous ROS distributions.\nSometimes, it may not work at all.\n</code></pre></div>\n<p>Each official release is tagged in the repository. The <a href=""https://github.com/clearpathrobotics/axis_camera/blob/master/CHANGELOG.rst"">change\nhistory</a>\ndescribes every version.</p>\n</div>\n\n            \n          </div>'"
cob_command_tools,http://rosindex.github.io/r/cob_command_tools/,"hydro,groovy,indigo","cob_command_gui,cob_command_tools,cob_dashboard,cob_interactive_teleop,cob_monitoring,cob_script_server,cob_teleop,cob_teleop_cob4","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Installation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Installation instructions and tutorials can be found at <a href=""http://wiki.ros.org/care-o-bot"">http://wiki.ros.org/care-o-bot</a>.</p>\n\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_command_tools""><img src=""https://travis-ci.org/ipa320/cob_command_tools.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
turtlebot_create,http://rosindex.github.io/r/turtlebot_create/,"hydro,fuerte,groovy,kinetic,indigo","create_description,create_driver,create_node,turtlebot_create","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot_create"">turtlebot_create</h1>\n\n<p>It keeps iRobot Create specific packages</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nThis stack is to support development of irobot create research development platform.\n\n## create_driver\n\nThis software is for standalone use - users will gain access to a library and its api.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
moveit_pr2,http://rosindex.github.io/r/moveit_pr2/,"hydro,groovy,fuerte,indigo","moveit_pr2,pr2_moveit_config,pr2_moveit_plugins,pr2_moveit_tests,pr2_moveit_tutorials,pr2_arm_ik_tests,pr2_jacobian_tests,pr2_move_group_test,pr2_ompl_planning_tests,pr2_planning_interface_tests,pr2_simple_benchmark_test,pr2_test_chomp_planner,pr2_test_collision_detection,pr2_test_collision_distance_field,pr2_test_kinematic_constraints,pr2_test_sbpl_planner,pr2_trajectory_execution_tests,pr2_test_moveit_manipulation,pr2_arm_kinematics,pr2_constraint_sampler,pr2_gripper_controller,pr2_moveit_apps,pr2_moveit_controller_manager,pr2_moveit_sensor_manager","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit_pr2"">moveit_pr2</h1>\n\n<p>MoveIt! Packages for PR2</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit_pr2"">moveit_pr2</h1>\n\n<p>MoveIt! Packages for PR2</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>hydro-devel branch: <a href=""https://travis-ci.org/ros-planning/moveit_pr2""><img src=""https://travis-ci.org/ros-planning/moveit_pr2.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
meta-ros,http://rosindex.github.io/r/meta-ros/,"jade,indigo",,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>This is a layer to provide ROS Indigo Igloo in an OpenEmbedded Linux system.\nIt provides a stable cross-compilation build system for many common ROS packages. \nCurrently, this layer is still under continuous development.</p>\n\n<h2 id=""important-resources"">IMPORTANT RESOURCES</h2>\n\n<ul>\n<li>Source Code Repository: <a href=""https://github.com/bmwcarit/meta-ros.git"">https://github.com/bmwcarit/meta-ros.git</a>\n</li>\n<li>Issue Tracker: <a href=""https://github.com/bmwcarit/meta-ros/issues"">https://github.com/bmwcarit/meta-ros/issues</a>\n</li>\n<li>Mailing List: <a href=""https://groups.google.com/forum/#!forum/meta-ros"">https://groups.google.com/forum/#!forum/meta-ros</a>\n</li>\n<li>Installation Guide: <a href=""http://wiki.ros.org/hydro/Installation/OpenEmbedded"">http://wiki.ros.org/hydro/Installation/OpenEmbedded</a>\n</li>\n<li>Development Guides:\n\n<ul>\n<li><a href=""https://github.com/bmwcarit/meta-ros/wiki/Guidelines-for-ROS-recipes"">https://github.com/bmwcarit/meta-ros/wiki/Guidelines-for-ROS-recipes</a></li>\n<li><a href=""https://github.com/bmwcarit/meta-ros/wiki/Developer-Guidelines"">https://github.com/bmwcarit/meta-ros/wiki/Developer-Guidelines</a></li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""maintainers"">MAINTAINERS</h2>\n\n<ul>\n<li>Lukas Bulwahn, BMW Car IT GmbH <a href=""mailto:lukas.bulwahn@oss.bmw-carit.de"">lukas.bulwahn@oss.bmw-carit.de</a>\n</li>\n<li>Stefan Herbrechtsmeier, Bielefeld University <a href=""mailto:stefan@herbrechtsmeier.net"">stefan@herbrechtsmeier.net</a>\n</li>\n<li>Kristof Robot <a href=""mailto:krirobo@gmail.com"">krirobo@gmail.com</a>\n</li>\n</ul>\n\n<h2 id=""contributors"">CONTRIBUTORS</h2>\n\n<ul>\n<li>Lukas Bulwahn, BMW Car IT GmbH <a href=""mailto:lukas.bulwahn@oss.bmw-carit.de"">lukas.bulwahn@oss.bmw-carit.de</a>\n</li>\n<li>Stefan Herbrechtsmeier, Bielefeld University <a href=""mailto:stefan@herbrechtsmeier.net"">stefan@herbrechtsmeier.net</a>\n</li>\n<li>Tobias Weigl, BMW Car IT GmbH <a href=""mailto:tobias.weigl@bmw-carit.de"">tobias.weigl@bmw-carit.de</a>\n</li>\n<li>Kartik Mohta <a href=""mailto:kartikmohta@gmail.com"">kartikmohta@gmail.com</a>\n</li>\n<li>Koen Kooi <a href=""mailto:koen@dominion.thruhere.net"">koen@dominion.thruhere.net</a>\n</li>\n<li>Victor Mayoral Vilches <a href=""mailto:v.mayoralv@gmail.com"">v.mayoralv@gmail.com</a>\n</li>\n<li>Sergey \'Jin\' Bostandzhyan <a href=""mailto:jin@dev.digitalstrom.org"">jin@dev.digitalstrom.org</a>\n</li>\n<li>Andreas Hildisch, BMW Car IT GmbH <a href=""mailto:andreas.hildisch@bmw-carit.de"">andreas.hildisch@bmw-carit.de</a>\n</li>\n<li>William <a href=""mailto:william@friedcircuits.us"">william@friedcircuits.us</a>\n</li>\n<li>Kristof Robot <a href=""mailto:krirobo@gmail.com"">krirobo@gmail.com</a>\n</li>\n<li>Khem Raj <a href=""mailto:raj.khem@gmail.com"">raj.khem@gmail.com</a>\n</li>\n<li>Esteve Fernandez <a href=""mailto:esteve@apache.org"">esteve@apache.org</a>\n</li>\n<li>Jonas Sticha <a href=""mailto:jonas.sticha@bmw-carit.de"">jonas.sticha@bmw-carit.de</a>\n</li>\n<li>Pascal Bach <a href=""mailto:pascal.bach@siemens.com"">pascal.bach@siemens.com</a>\n</li>\n<li>Andreas Galauner <a href=""mailto:andreas@galauner.de"">andreas@galauner.de</a>\n</li>\n<li>Peter S. Housel <a href=""mailto:housel@acm.org"">housel@acm.org</a>\n</li>\n<li>Gauthier Monserand <a href=""mailto:simkim@simkim.net"">simkim@simkim.net</a>\n</li>\n<li>Timo Mueller <a href=""mailto:timo.mueller@bmw-carit.de"">timo.mueller@bmw-carit.de</a>\n</li>\n<li>Andreas Baak <a href=""mailto:andreas.baak@bmw-carit.de"">andreas.baak@bmw-carit.de</a>\n</li>\n</ul>\n\n<h2 id=""how-to-contribute"">HOW TO CONTRIBUTE</h2>\n\n<p>We are still working on this development and are interested in other use cases.\n  If you are interested in this project, please contact us via email.\n  The more people are interested, the more we will be pushing this project.\n  If you want to contribute, please contact us and we can discuss open issues\n  and how to join forces.</p>\n\n<h2 id=""dependencies"">DEPENDENCIES</h2>\n\n<p>This layer depends on:</p>\n\n<p><strong>openembedded-core</strong><br>\n  URI: git://git.openembedded.org/openembedded-core<br>\n  subdirectory: meta<br>\n  branch: master<br>\n  revision: HEAD  </p>\n\n<p><strong>meta-openembedded (meta-oe)</strong><br>\n  URI: git://git.openembedded.org/meta-openembedded<br>\n  subdirectory: meta-oe<br>\n  branch: master<br>\n  revision: HEAD  </p>\n\n<p><strong>meta-python</strong> (since a6d7ba92645a112af358efd94ff3aa0c74985a51@meta-openembedded)<br>\n  URI: git://git.openembedded.org/meta-openembedded<br>\n  subdirectory: meta-python<br>\n  branch: master<br>\n  revision: HEAD  </p>\n\n<p><strong>meta-multimedia</strong> (since fe44ac167a2a76531af3519f3889fce92024567b@meta-openembedded)<br>\n  URI: git://git.openembedded.org/meta-openembedded<br>\n  subdirectory: meta-multimedia<br>\n  branch: master<br>\n  revision: HEAD  </p>\n\n<p><strong>bitbake</strong> &gt; 1.20</p>\n\n<h2 id=""dependencies-on-recent-commits"">DEPENDENCIES ON RECENT COMMITS</h2>\n\n<p>Here, we list which parts of this layer depend on recent commits in the\n  bitbake, openembedded-core and meta-openembedded repositories. Using\n  <code>git blame</code> on the lines below, you can find the commits in meta-ros that\n  rely on the remote commits. In case of porting to other versions, you must\n  possibly revert some of those commits.</p>\n\n<p>cv-bridge and dependent recipes, e.g., the image-transport recipes, depend on\n  <a href=""mailto:7568bfdd114597956a1da68746f207ec7f93a48d@openembedded-core"">7568bfdd114597956a1da68746f207ec7f93a48d@openembedded-core</a>.\n  For native python-numpy support, these recipes also depend on\n  c13c5f40160d289bb62538a16900fed30621cb22@meta-openembedded or on\n  9bf355cceaec6ebacdcbcc35f9713ff73e1c85da@openembedded-core.</p>\n\n<p>Some recipes that need the Eigen library, e.g., the pcl-ros recipe, depend on\n  424e3c1b930c0103c2cedfd4df1671e84a5256d5@meta-openembedded.</p>\n\n<p>Using wildcards in bbappend versions part in name depends on\n  31bc9af9cd56e7b318924869970e850993fafc5f@bitbake and\n  991cbeedbde8bd25ce08c669b1bfac8b99e33149@bitbake.</p>\n\n<p>octomap-ros and collada-urdf depend on\n  43073569cb67d98c11aa71211d77b566b64f9145@openembedded-core and\n  783fb88f476c94d5d4f4b954f7053464d9a6dff5@openembedded-core.</p>\n\n<p>urdfdom-py depends on the meta-python layer since\n  a6d7ba92645a112af358efd94ff3aa0c74985a51@meta-openembedded.</p>\n\n<p>Since 3edf08b38b0af93cef0933b061349264dc86d54c@openembedded-core,\n  recipes relying on opencv need to activate the DISTRO_FEATURE\n  opengl.</p>\n\n<h2 id=""installation"">INSTALLATION</h2>\n\n<p>The repository contains a layer for ROS that builds on top of the\n  OpenEmbedded Core layer and the meta-oe layer.</p>\n\n<p>We try our best to keep up with the development of the current HEAD\n  of the layers mentioned above. If you notice any problems with the\n  current HEAD, please report this in our issue tracker.</p>\n\n<p>You can use this layer with earlier versions of the layers mentioned above\n  and their release branches, dora and daisy, with a few minor adjustments.\n  The section ""dependencies on recent commits"" in this file provides a few\n  pointers to adjust this layer for other versions.</p>\n\n<h2 id=""usage"">USAGE</h2>\n\n<p>Initialize the build environment:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">source oe-init-build-env\n</code></pre></div>\n<p>Add the required layers (see <strong>DEPENDENCIES</strong>) by modifying <code>./conf/bblayers.conf</code> (adjust <code>/home/me/devel</code> as necessary): </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">BBLAYERS ?= "" \\\n/home/me/devel/openembedded-core/meta \\\n/home/me/devel/meta-openembedded/meta-oe \\\n/home/me/devel/meta-openembedded/meta-python \\\n/home/me/devel/meta-openembedded/meta-multimedia \\\n/home/me/devel/meta-ros \\\n""\n</code></pre></div>\n<p>Compile package:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">bitbake &lt;package-name&gt;\n</code></pre></div>\n<p>The recipe core-image-ros-roscore provides a minimal Linux system that runs\n  roscore.</p>\n\n<p>You can compile the minimal Linux system with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">bitbake core-image-ros-roscore\n</code></pre></div>\n<p>Then for example, you start this system in the qemu virtual machine with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">runqemu &lt;MACHINE&gt; core-image-ros-roscore\n</code></pre></div>\n<p>On the Linux system, ensure that the own host\'s name in resolved by adding</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">127.0.0.1   &lt;HOSTNAME&gt;.localdomain      &lt;HOSTNAME&gt;\n</code></pre></div>\n<p>to the /etc/hosts file, and set up the environment with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">export ROS_ROOT=/opt/ros/indigo\nexport ROS_DISTRO=indigo\nexport ROS_PACKAGE_PATH=/opt/ros/indigo/share\nexport PATH=$PATH:/opt/ros/indigo/bin\nexport LD_LIBRARY_PATH=/opt/ros/indigo/lib\nexport PYTHONPATH=/opt/ros/indigo/lib/python2.7/site-packages\nexport ROS_MASTER_URI=http://localhost:11311\nexport CMAKE_PREFIX_PATH=/opt/ros/indigo\ntouch /opt/ros/indigo/.catkin\n</code></pre></div>\n<p>Finally, you can start roscore with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roscore\n</code></pre></div>\n<h2 id=""cross-compiling-all-ros-packages-in-meta-ros"">CROSS-COMPILING ALL ROS PACKAGES IN meta-ros</h2>\n\n<p>The meta-ros layers only includes a subset of the officially released ROS\n  packages, available from packages.ros.org. The here provided ROS packages\n  are mainly driven by the current users\' needs.</p>\n\n<p>For ROS packages that depend on cv-bridge, the commercial license flag\n  must be whitelisted, as cv-bridge depends on opencv, and opencv by\n  default depends on libav that has special terms and conditions when used\n  commercially.\n  This can be done by adding to the local.conf the line: </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">LICENSE_FLAGS_WHITELIST = ""commercial""\n</code></pre></div>\n<p>Alternatively, the dependency from opencv on libav can be explicit excluded\n  by modifying the PACKAGECONFIG setting.</p>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>All metadata is MIT licensed unless otherwise stated. Source code included\n  in tree for individual recipes is under the LICENSE stated in each recipe\n  (.bb file) unless otherwise stated.\n  The descriptions in the recipes of ROS packages have been extracted from\n  the ROS wiki (<a href=""http://www.ros.org/wiki/"">http://www.ros.org/wiki/</a>) and are licensed under \n  Creative Commons Attribution 3.0 (<a href=""http://creativecommons.org/licenses/by/3.0/"">http://creativecommons.org/licenses/by/3.0/</a>)\n  unless otherwise noted.</p>\n\n<p>This README document is Copyright (C) 2012 BMW Car IT GmbH.</p>\n\n<h2 id=""redistributions"">REDISTRIBUTIONS</h2>\n\n<p>The log4cxx recipe originated from the recipe in the OpenEmbedded (Classic) Development\n  (cf. <a href=""http://cgit.openembedded.org/openembedded/tree/recipes/log4cxx"">http://cgit.openembedded.org/openembedded/tree/recipes/log4cxx</a>)\n  licensed with the MIT License.</p>\n\n<p>The yaml-cpp recipe originated from the recipe in Kartik Mohta\'s OpenEmbedded layer\n  (cf. <a href=""https://github.com/kartikmohta/meta-km/blob/master/recipes-devtools/yaml-cpp/yaml-cpp_0.3.0.bb"">https://github.com/kartikmohta/meta-km/blob/master/recipes-devtools/yaml-cpp/yaml-cpp_0.3.0.bb</a>)\n  licensed with the MIT License.</p>\n\n<p>The libpoco recipe originated from the recipe in digitalSTROM\'s OpenEmbedded layer\n  (cf. <a href=""https://gitorious.digitalstrom.org/dss-oe/dss-oe/blobs/master/dS/meta-dss11-production/recipes-support/poco/poco_1.3.6p2.bb"">https://gitorious.digitalstrom.org/dss-oe/dss-oe/blobs/master/dS/meta-dss11-production/recipes-support/poco/poco_1.3.6p2.bb</a>)\n  licensed with the MIT License.</p>\n\n<p>The core-image-ros-* recipes originated from the core-image-minimal recipe in OpenEmbedded Core\n  (cf. <a href=""http://cgit.openembedded.org/openembedded-core/tree/meta/recipes-core/images/core-image-minimal.bb"">http://cgit.openembedded.org/openembedded-core/tree/meta/recipes-core/images/core-image-minimal.bb</a>)\n  licensed with the MIT License.</p>\n\n<p>The original or modified files are redistributed here under the same MIT License.</p>\n</div>\n\n            \n          </div>'"
actionlib,http://rosindex.github.io/r/actionlib/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo","actionlib,bfl,tinyxml,yaml_cpp,bond,bondcpp,bondpy,filters,nodelet,nodelet_topic_tools,pluginlib,smclib,test_bond,test_nodelet,xacro","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rtabmap,http://rosindex.github.io/r/rtabmap/,"hydro,jade,kinetic,indigo",rtabmap,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rtabmap"">rtabmap</h1>\n\n<p>RTAB-Map library and standalone application.</p>\n\n<p>For more information, visit the <a href=""http://introlab.github.io/rtabmap"">RTAB-Map\'s home page</a> or the <a href=""https://github.com/introlab/rtabmap/wiki"">RTAB-Map\'s wiki</a>.</p>\n\n<p>To use RTAB-Map under ROS, visit the <a href=""http://wiki.ros.org/rtabmap"">rtabmap</a> page on the ROS wiki.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rtabmap"">rtabmap <a href=""https://travis-ci.org/introlab/rtabmap""><img src=""https://travis-ci.org/introlab/rtabmap.svg?branch=master"" alt=""Build Status""></a>\n</h1>\n\n<p>RTAB-Map library and standalone application.</p>\n\n<p>For more information, visit the <a href=""http://introlab.github.io/rtabmap"">RTAB-Map\'s home page</a> or the <a href=""https://github.com/introlab/rtabmap/wiki"">RTAB-Map\'s wiki</a>.</p>\n\n<p>To use RTAB-Map under ROS, visit the <a href=""http://wiki.ros.org/rtabmap"">rtabmap</a> page on the ROS wiki.</p>\n</div>\n\n            \n          </div>'"
softkinetic,http://rosindex.github.io/r/softkinetic/,"hydro,groovy,kinetic,indigo","softkinetic,softkinetic_camera","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""softkinetic"">softkinetic</h1>\n\n<p>This repository holds a ROS driver package for an interactive gesture camera\n(softkinetic).</p>\n\n<h2 id=""status"">Status</h2>\n\n<p>New users should try the <code>indigo_dev</code> branch of this repository, it contains\nmany improvements that are currently being readied for release. Despite the\nname, this version should also work on Hydro installations.</p>\n\n<p>The <code>hydro_dev</code> branch remains the default branch for now, as the improvements\nin the Indigo version are not backwards compatible.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""softkinetic"">softkinetic</h1>\n\n<p>This repository holds a ROS driver package for an interactive gesture camera (softkinetic).</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""softkinetic"">softkinetic</h1>\n\n<p>This repository holds a ROS driver package for an interactive gesture camera\n(softkinetic).</p>\n\n<h2 id=""status"">Status</h2>\n\n<p>New users should try the <code>indigo_dev</code> branch of this repository, it contains\nmany improvements that are currently being readied for release. Despite the\nname, this version should also work on Hydro installations.</p>\n\n<p>The <code>hydro_dev</code> branch is maintained separatedly, as both branches have notably\ndiverged. Some topic and parameters names are different, so they are not compatible.</p>\n</div>\n\n            \n          </div>'"
um7,http://rosindex.github.io/r/um7/,indigo,um7,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-drivers-um7"">ros-drivers-um7</h1>\n\n<p>ROS driver for the CH Robotics UM7 inertial measurement device.\nSupports standard data and mag topics as well as providing temperature and rpy outputs.\n  See the ROS wiki for details:  <a href=""http://wiki.ros.org/um7"">http://wiki.ros.org/um7</a></p>\n</div>\n\n            \n          </div>'"
class_loader,http://rosindex.github.io/r/class_loader/,"hydro,groovy,kinetic,jade,indigo",class_loader,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jsk_planning,http://rosindex.github.io/r/jsk_planning/,"hydro,electric,groovy,diamondback,indigo","jsk_planning,pddl_msgs,pddl_planner,pddl_planner_viewer,task_compiler","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_planning"">jsk_planning <a href=""https://travis-ci.org/jsk-ros-pkg/jsk_planning""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_planning.png?branch=master"" alt=""Build Status""></a>\n</h1>\n</div>\n\n            \n          </div>'"
cob_common,http://rosindex.github.io/r/cob_common/,"hydro,groovy,diamondback,indigo","cob_common,cob_description,cob_msgs,cob_srvs,raw_description,brics_actuator,desire_description,cob_default_config,cob_goco,cob_machine,cob_utilities,cob_vision_utils","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cob_common"">cob_common</h1>\n\n<p><a href=""https://travis-ci.org/ipa320/cob_common""><img src=""https://travis-ci.org/ipa320/cob_common.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p>This is a repository for Care-O-bot common packages.</p>\n\n<p>Installation instructions and tutorials can be found at <a href=""http://www.care-o-bot.org"">http://www.care-o-bot.org</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Installation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a repository for Care-O-bot common packages.\n\nInstallation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
dynamic_reconfigure,http://rosindex.github.io/r/dynamic_reconfigure/,"hydro,fuerte,groovy,kinetic,diamondback,jade,indigo","dynamic_reconfigure,driver_base,timestamp_tools","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cob_manipulation,http://rosindex.github.io/r/cob_manipulation/,"hydro,fuerte,electric,groovy,indigo","cob_collision_monitor,cob_grasp_generation,cob_kinematics,cob_lookat_action,cob_manipulation,cob_moveit_config,cob_moveit_interface,cob_obstacle_distance_moveit,cob_pick_place_action,cob_tactiletools,cob_tray_monitor,cob_arm_navigation,cob_interpolated_ik_motion_planner,cob_manipulation_config,cob_object_handler","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_manipulation""><img src=""https://travis-ci.org/ipa320/cob_manipulation.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p>This is a repository for Care-O-bot manipulation packages.</p>\n\n<p>Installation instructions and tutorials can be found at <a href=""http://www.care-o-bot.org"">http://www.care-o-bot.org</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a repository for Care-O-bot manipulation packages.\n\nInstallation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n</code></pre></div></div>\n\n            \n          </div>'"
hrpsys,http://rosindex.github.io/r/hrpsys/,"jade,kinetic,indigo",hrpsys,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><a href=""https://travis-ci.org/fkanehiro/hrpsys-base""><img src=""https://travis-ci.org/fkanehiro/hrpsys-base.svg?branch=master"" alt=""Build Status""></a></p>\n\n<h1 id=""install"">Install</h1>\n\n<p>For Install, See <a href=""https://raw.githubusercontent.com/fkanehiro/hrpsys-base/master/INSTALL"">INSTALL</a></p>\n\n<h1 id=""api"">API</h1>\n\n<p>For API, See <a href=""http://fkanehiro.github.io/hrpsys-base/"">API Doc</a></p>\n\n<h1 id=""samples"">Samples</h1>\n\n<p>For Samples, See <a href=""https://github.com/fkanehiro/hrpsys-base/tree/master/sample"">Samples</a></p>\n\n<p>For related informations:</p>\n\n<p>ROS integration with hrpsys-base <a href=""http://wiki.ros.org/rtmros_common/Tutorials/GettingStart"">ROS wiki hrpsys page</a></p>\n\n<p>Example case of system configurations is written in the following paper Fig.3:\nShunichi Nozawa, Eisoku Kuroiwa, Kunio Kojima, Ryohei Ueda, Masaki Murooka, Shintaro Noda,\nIori Kumagai, Yu Ohara, Yohei Kakiuchi, Kei Okada, Masayuki Inaba, \n""Multi-layered real-time controllers for humanoid\'s manipulation and locomotion tasks with emergency stop"",\n2015 IEEE-RAS 15th International Conference on Humanoid Robots (Humanoids), pp.381-388, 2015</p>\n\n<h1 id=""directories"">Directories</h1>\n\n<p>Main directories are here (for more information, please see API Doc):</p>\n\n<h2 id=""3rdparty"">3rdparty</h2>\n\n<p>3rd party software installation cmake and settings.</p>\n\n<h2 id=""ec"">ec</h2>\n\n<p>For execution context implementations for real-time linux used for hrpsys-base software.</p>\n\n<h2 id=""python-jython"">python/jython</h2>\n\n<p>python/jython files.</p>\n\n<h2 id=""lib"">lib</h2>\n\n<p>Library programs which can be used from outside of hrpsys-base.\nFor example, IO libraries.</p>\n\n<h2 id=""sample"">sample</h2>\n\n<p>Sample programs. See Samples.</p>\n\n<h2 id=""util"">util</h2>\n\n<p>Utilities.</p>\n\n<h2 id=""doc"">doc</h2>\n\n<p>Doxygen files.\nSubstantial documentation files are in each directories such as rtc/XX/XX.txt.</p>\n\n<h2 id=""idl"">idl</h2>\n\n<p>IDL files used for each RTC.</p>\n\n<h2 id=""launch"">launch</h2>\n\n<p>ROS related programs.</p>\n\n<h2 id=""test"">test</h2>\n\n<p>Test codes including python samples and rostest.</p>\n\n<h2 id=""rtc"">rtc</h2>\n\n<p>RT-Component implementations.\nBasically, one directory corresponds to one RT-Component.</p>\n</div>\n\n            \n          </div>'"
openhrp3,http://rosindex.github.io/r/openhrp3/,"jade,kinetic,indigo",openhrp3,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\xef\xbb\xbf\n\xe6\x9c\xac\xe3\x82\xbd\xe3\x83\x95\xe3\x83\x88\xe3\x82\xa6\xe3\x82\xa7\xe3\x82\xa2\xe3\x81\xaf OpenHRP version 3.1.6 \xe3\x81\xa7\xe3\x81\x99\xe3\x80\x82\n\n\xe4\xbd\xbf\xe7\x94\xa8\xe6\x9d\xa1\xe4\xbb\xb6\xe7\xad\x89\xe3\x81\xaf LICENSE-ja.txt \xe3\x82\x92\xe3\x81\x8a\xe8\xaa\xad\xe3\x81\xbf\xe3\x81\x8f\xe3\x81\xa0\xe3\x81\x95\xe3\x81\x84\xe3\x80\x82\n\n\xe6\x94\xb9\xe7\x89\x88\xe5\xb1\xa5\xe6\xad\xb4\xe3\x81\xaf HISTORY-ja.txt \xe3\x82\x92\xe3\x81\x8a\xe8\xaa\xad\xe3\x81\xbf\xe3\x81\x8f\xe3\x81\xa0\xe3\x81\x95\xe3\x81\x84\xe3\x80\x82\n\n\xe4\xbd\xbf\xe7\x94\xa8\xe6\x96\xb9\xe6\xb3\x95\xe3\x81\xab\xe3\x81\xa4\xe3\x81\x84\xe3\x81\xa6\xe3\x81\xaf\xe3\x80\x81http://www.openrtp.jp/openhrp3/ \xe3\x81\xab\xe3\x81\x82\xe3\x82\x8a\xe3\x81\xbe\xe3\x81\x99\xe3\x80\x82\n\n\xe7\x8b\xac\xe7\xab\x8b\xe8\xa1\x8c\xe6\x94\xbf\xe6\xb3\x95\xe4\xba\xba \xe7\x94\xa3\xe6\xa5\xad\xe6\x8a\x80\xe8\xa1\x93\xe7\xb7\x8f\xe5\x90\x88\xe7\xa0\x94\xe7\xa9\xb6\xe6\x89\x80\n\xe5\x9b\xbd\xe7\xab\x8b\xe5\xa4\xa7\xe5\xad\xa6\xe6\xb3\x95\xe4\xba\xba \xe6\x9d\xb1\xe4\xba\xac\xe5\xa4\xa7\xe5\xad\xa6\n\xe3\x82\xbc\xe3\x83\x8d\xe3\x83\xa9\xe3\x83\xab\xe3\x83\xad\xe3\x83\x9c\xe3\x83\x86\xe3\x82\xa3\xe3\x83\x83\xe3\x82\xaf\xe3\x82\xb9\xe6\xa0\xaa\xe5\xbc\x8f\xe4\xbc\x9a\xe7\xa4\xbe\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rtabmap_ros,http://rosindex.github.io/r/rtabmap_ros/,"hydro,jade,kinetic,indigo",rtabmap_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rtabmap_ros"">rtabmap_ros</h1>\n\n<p>RTAB-Map\'s ROS package.</p>\n\n<p>For more information, demos and tutorials about this package, visit <a href=""http://wiki.ros.org/rtabmap_ros"">rtabmap_ros</a> page on ROS wiki.</p>\n\n<p>For the RTAB-Map libraries and standalone application, visit <a href=""http://introlab.github.io/rtabmap"">RTAB-Map\'s home page</a> or <a href=""https://github.com/introlab/rtabmap/wiki"">RTAB-Map\'s wiki</a>.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""ros-distribution"">ROS distribution</h3>\n\n<p>RTAB-Map is released as binaries in the ROS distribution. For <strong>latest binaries</strong>, use <a href=""http://wiki.ros.org/ShadowRepository"">ros-shadow-fixed</a> repository.\n * Kinetic</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-kinetic-rtabmap-ros\n\n</code></pre></div>\n<ul>\n<li>Jade</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-jade-rtabmap-ros\n\n</code></pre></div>\n<ul>\n<li>Indigo</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-indigo-rtabmap-ros\n\n</code></pre></div>\n<ul>\n<li>Hydro:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-hydro-rtabmap-ros\n\n</code></pre></div>\n<ul>\n<li>Note that rtabmap_ros Hydro binaries are stuck at version 0.8.12. To use the latest version, see <a href=""https://github.com/introlab/rtabmap_ros#build-from-source"">Build from source</a> below.</li>\n</ul>\n\n<h3 id=""build-from-source"">Build from source</h3>\n\n<p>This section shows how to install RTAB-Map ros-pkg on <strong>ROS Hydro/Indigo/Jade/Kinetic</strong> (Catkin build). RTAB-Map works only with the PCL 1.7, which is the default version installed with ROS Hydro/Indigo/Jade/Kinetic (<strong>Fuerte and Groovy are not supported</strong>).</p>\n\n<ul>\n<li>The next instructions assume that you have set up your ROS workspace using this <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">tutorial</a>. I will use kinetic prefix for convenience, but it should work with Hydro, Indigo and Jade. The workspace path is <code>~/catkin_ws</code> and your <code>~/.bashrc</code> contains:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">source</span> /opt/ros/kinetic/setup.bash\n<span class=""gp"">$ </span><span class=""nb"">source</span> ~/catkin_ws/devel/setup.bash\n\n</code></pre></div>\n<ul>\n<li>Make sure you don\'t have the binaries installed too (if you tried them before):</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo apt-get remove ros-kinetic-rtabmap\n\n</code></pre></div>\n<ol>\n<li>Optional dependencies\n\n<ul>\n<li>If you want SURF/SIFT on Indigo/Jade/Kinetic (Hydro has already SIFT/SURF), you have to build <a href=""%5BOpenCV%5D(http://opencv.org/)"">OpenCV</a> from source to have access to <em>nonfree</em> module. Install it in <code>/usr/local</code> (default) and the rtabmap library should link with it instead of the one installed in ROS. I recommend to use latest 2.4 version (<a href=""https://github.com/Itseez/opencv/archive/2.4.11.zip"">2.4.11</a>) and build it from source following these <a href=""http://docs.opencv.org/doc/tutorials/introduction/linux_install/linux_install.html#building-opencv-from-source-using-cmake-using-the-command-line"">instructions</a>. RTAB-Map can build with OpenCV3+<a href=""https://github.com/Itseez/opencv_contrib/tree/master/modules/xfeatures2d"">xfeatures2d</a> module, but rtabmap_ros package will have libraries conflict as cv-bridge is depending on OpenCV2. If you want OpenCV3, you should build ros <a href=""https://github.com/ros-perception/vision_opencv"">vision-opencv</a> package yourself (and all ros packages depending on it) so it can link on OpenCV3.</li>\n</ul>\n</li>\n</ol>\n\n<ul>\n<li>ROS (Qt, PCL, dc1394, OpenNI, OpenNI2, Freenect, g2o, Costmap2d, Rviz, Octomap, CvBridge). Note that I\'ve found that <a href=""https://github.com/RainerKuemmerle/g2o"">latest g2o version</a> built from source is faster (install <code>libsuitesparse-dev</code> before building <code>g2o</code>) and would be <a href=""http://official-rtab-map-forum.67519.x6.nabble.com/ROS-2D-occupancy-grid-tp1204p1215.html"">required to avoid some crashes</a>.</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo apt-get install libqt4-dev libpcl-1.7-all-dev libdc1394-dev ros-kinetic-openni-launch ros-kinetic-openni2-launch ros-kinetic-freenect-launch ros-kinetic-costmap-2d ros-kinetic-octomap-ros ros-kinetic-g2o ros-kinetic-rviz ros-kinetic-cv-bridge\n\n</code></pre></div>\n<ul>\n<li><p><a href=""https://collab.cc.gatech.edu/borg/gtsam"">GTSAM</a>: Follow installation instructions from <a href=""https://collab.cc.gatech.edu/borg/gtsam/#quickstart"">here</a>. RTAB-Map needs latest version from source (<code>git clone https://bitbucket.org/gtborg/gtsam.git</code>), it will not build with 3.2.1.</p></li>\n<li><p><a href=""http://www.uco.es/investiga/grupos/ava/node/39"">cvsba</a>: Follow installation instructions from <a href=""http://www.uco.es/investiga/grupos/ava/node/39"">here</a>. Their installation is not standard CMake, you need these extra steps so RTAB-Map can find it:</p></li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>mkdir /usr/local/lib/cmake/cvsba \n<span class=""gp"">$ </span>mv /usr/local/lib/cmake/Findcvsba.cmake /usr/local/lib/cmake/cvsba/cvsbaConfig.cmake\n\n</code></pre></div>\n<ul>\n<li>\n<a href=""https://github.com/OpenKinect/libfreenect2"">Freenect2</a>: Follow installation instructions from <a href=""https://github.com/OpenKinect/libfreenect2#debianubuntu-1404-perhaps-earlier"">here</a>.</li>\n</ul>\n\n<ol>\n<li>Install RTAB-Map standalone libraries (<strong>don\'t checkout in the Catkin workspace</strong> but install in your Catkin\'s devel folder).</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> ~\n<span class=""gp"">$ </span>git clone https://github.com/introlab/rtabmap.git rtabmap\n<span class=""gp"">$ </span><span class=""nb"">cd </span>rtabmap/build\n<span class=""gp"">$ </span>cmake -DCMAKE_INSTALL_PREFIX<span class=""o"">=</span>~/catkin_ws/devel ..  <span class=""o"">[</span>&lt;---double dots included]\n<span class=""gp"">$ </span>make -j4\n<span class=""gp"">$ </span>make install\n\n</code></pre></div>\n<ol>\n<li>Install RTAB-Map ros-pkg in your src folder of your Catkin workspace.</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n<span class=""gp"">$ </span>git clone https://github.com/introlab/rtabmap_ros.git src/rtabmap_ros\n<span class=""gp"">$ </span>catkin_make\n\n</code></pre></div>\n<h4 id=""update-to-new-version"">Update to new version</h4>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd </span>rtabmap\n<span class=""gp"">$ </span>git pull origin master\n<span class=""gp"">$ </span><span class=""nb"">cd </span>build\n<span class=""gp"">$ </span>make\n<span class=""gp"">$ </span>make install\n\n<span class=""gp"">$ </span>roscd rtabmap_ros\n<span class=""gp"">$ </span>git pull origin master\n<span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n<span class=""gp"">$ </span>catkin_make\n\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rtabmap_ros"">rtabmap_ros</h1>\n\n<p>RTAB-Map\'s ROS package.</p>\n\n<p>For more information, demos and tutorials about this package, visit <a href=""http://wiki.ros.org/rtabmap_ros"">rtabmap_ros</a> page on ROS wiki.</p>\n\n<p>For the RTAB-Map libraries and standalone application, visit <a href=""http://introlab.github.io/rtabmap"">RTAB-Map\'s home page</a> or <a href=""https://github.com/introlab/rtabmap/wiki"">RTAB-Map\'s wiki</a>.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""ros-distribution"">ROS distribution</h3>\n\n<p>RTAB-Map is released as binaries in the ROS distribution. For <strong>latest binaries</strong>, use <a href=""http://wiki.ros.org/ShadowRepository"">ros-shadow-fixed</a> repository.\n * Kinetic</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-kinetic-rtabmap-ros\n\n</code></pre></div>\n<ul>\n<li>Jade</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-jade-rtabmap-ros\n\n</code></pre></div>\n<ul>\n<li>Indigo</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-indigo-rtabmap-ros\n\n</code></pre></div>\n<ul>\n<li>Hydro:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-hydro-rtabmap-ros\n\n</code></pre></div>\n<ul>\n<li>Note that rtabmap_ros Hydro binaries are stuck at version 0.8.12. To use the latest version, see <a href=""https://github.com/introlab/rtabmap_ros#build-from-source"">Build from source</a> below.</li>\n</ul>\n\n<h3 id=""build-from-source"">Build from source</h3>\n\n<p>This section shows how to install RTAB-Map ros-pkg on <strong>ROS Hydro/Indigo/Jade/Kinetic</strong> (Catkin build). RTAB-Map works only with the PCL 1.7, which is the default version installed with ROS Hydro/Indigo/Jade/Kinetic (<strong>Fuerte and Groovy are not supported</strong>).</p>\n\n<ul>\n<li>The next instructions assume that you have set up your ROS workspace using this <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">tutorial</a>. I will use kinetic prefix for convenience, but it should work with Hydro, Indigo and Jade. The workspace path is <code>~/catkin_ws</code> and your <code>~/.bashrc</code> contains:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">source</span> /opt/ros/kinetic/setup.bash\n<span class=""gp"">$ </span><span class=""nb"">source</span> ~/catkin_ws/devel/setup.bash\n\n</code></pre></div>\n<ul>\n<li>Make sure you don\'t have the binaries installed too (if you tried them before):</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo apt-get remove ros-kinetic-rtabmap\n\n</code></pre></div>\n<ol>\n<li>Optional dependencies\n\n<ul>\n<li>If you want SURF/SIFT on Indigo/Jade/Kinetic (Hydro has already SIFT/SURF), you have to build <a href=""%5BOpenCV%5D(http://opencv.org/)"">OpenCV</a> from source to have access to <em>nonfree</em> module. Install it in <code>/usr/local</code> (default) and the rtabmap library should link with it instead of the one installed in ROS. I recommend to use latest 2.4 version (<a href=""https://github.com/Itseez/opencv/archive/2.4.11.zip"">2.4.11</a>) and build it from source following these <a href=""http://docs.opencv.org/doc/tutorials/introduction/linux_install/linux_install.html#building-opencv-from-source-using-cmake-using-the-command-line"">instructions</a>. RTAB-Map can build with OpenCV3+<a href=""https://github.com/Itseez/opencv_contrib/tree/master/modules/xfeatures2d"">xfeatures2d</a> module, but rtabmap_ros package will have libraries conflict as cv-bridge is depending on OpenCV2. If you want OpenCV3, you should build ros <a href=""https://github.com/ros-perception/vision_opencv"">vision-opencv</a> package yourself (and all ros packages depending on it) so it can link on OpenCV3.</li>\n</ul>\n</li>\n</ol>\n\n<ul>\n<li>ROS (Qt, PCL, dc1394, OpenNI, OpenNI2, Freenect, g2o, Costmap2d, Rviz, Octomap, CvBridge). Note that I\'ve found that <a href=""https://github.com/RainerKuemmerle/g2o"">latest g2o version</a> built from source is faster (install <code>libsuitesparse-dev</code> before building <code>g2o</code>) and would be <a href=""http://official-rtab-map-forum.67519.x6.nabble.com/ROS-2D-occupancy-grid-tp1204p1215.html"">required to avoid some crashes</a>.</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo apt-get install libqt4-dev libpcl-1.7-all-dev libdc1394-dev ros-kinetic-openni-launch ros-kinetic-openni2-launch ros-kinetic-freenect-launch ros-kinetic-costmap-2d ros-kinetic-octomap-ros ros-kinetic-g2o ros-kinetic-rviz ros-kinetic-cv-bridge\n\n</code></pre></div>\n<ul>\n<li><p><a href=""https://collab.cc.gatech.edu/borg/gtsam"">GTSAM</a>: Follow installation instructions from <a href=""https://collab.cc.gatech.edu/borg/gtsam/#quickstart"">here</a>. RTAB-Map needs latest version from source (<code>git clone https://bitbucket.org/gtborg/gtsam.git</code>), it will not build with 3.2.1.</p></li>\n<li><p><a href=""http://www.uco.es/investiga/grupos/ava/node/39"">cvsba</a>: Follow installation instructions from <a href=""http://www.uco.es/investiga/grupos/ava/node/39"">here</a>. Their installation is not standard CMake, you need these extra steps so RTAB-Map can find it:</p></li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>mkdir /usr/local/lib/cmake/cvsba \n<span class=""gp"">$ </span>mv /usr/local/lib/cmake/Findcvsba.cmake /usr/local/lib/cmake/cvsba/cvsbaConfig.cmake\n\n</code></pre></div>\n<ul>\n<li>\n<a href=""https://github.com/OpenKinect/libfreenect2"">Freenect2</a>: Follow installation instructions from <a href=""https://github.com/OpenKinect/libfreenect2#debianubuntu-1404-perhaps-earlier"">here</a>.</li>\n</ul>\n\n<ol>\n<li>Install RTAB-Map standalone libraries. Add <code>-DCMAKE_INSTALL_PREFIX=~/catkin_ws/devel</code> to <code>cmake</code> command below if you want to install in your Catkin\'s devel folder without <code>sudo</code>.</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> ~\n<span class=""gp"">$ </span>git clone https://github.com/introlab/rtabmap.git rtabmap\n<span class=""gp"">$ </span><span class=""nb"">cd </span>rtabmap/build\n<span class=""gp"">$ </span>cmake ..  <span class=""o"">[</span>&lt;---double dots included]\n<span class=""gp"">$ </span>make -j4\n<span class=""gp"">$ </span>sudo make install\n\n</code></pre></div>\n<ol>\n<li>Install RTAB-Map ros-pkg in your src folder of your Catkin workspace.</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n<span class=""gp"">$ </span>git clone https://github.com/introlab/rtabmap_ros.git src/rtabmap_ros\n<span class=""gp"">$ </span>catkin_make\n\n</code></pre></div>\n<h4 id=""update-to-new-version"">Update to new version</h4>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd </span>rtabmap\n<span class=""gp"">$ </span>git pull origin master\n<span class=""gp"">$ </span><span class=""nb"">cd </span>build\n<span class=""gp"">$ </span>make\n<span class=""gp"">$ </span>make install\n\n<span class=""gp"">$ </span>roscd rtabmap_ros\n<span class=""gp"">$ </span>git pull origin master\n<span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n<span class=""gp"">$ </span>catkin_make\n\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rtabmap_ros"">rtabmap_ros</h1>\n\n<p>RTAB-Map\'s ROS package.</p>\n\n<p>For more information, demos and tutorials about this package, visit the <a href=""http://wiki.ros.org/rtabmap_ros"">rtabmap_ros</a> page on the ROS wiki.</p>\n\n<p>For the RTAB-Map libraries and standalone application, visit the <a href=""http://introlab.github.io/rtabmap"">RTAB-Map\'s home page</a> or the <a href=""https://github.com/introlab/rtabmap/wiki"">RTAB-Map\'s wiki</a>.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""ros-distribution"">ROS distribution</h3>\n\n<p>RTAB-Map is released as binaries in the ROS distribution.\n * Indigo</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-indigo-rtabmap-ros\n\n</code></pre></div>\n<ul>\n<li>Hydro</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-hydro-rtabmap-ros\n\n</code></pre></div>\n<h3 id=""build-from-source"">Build from source</h3>\n\n<p>This section shows how to install RTAB-Map ros-pkg on <strong>ROS Hydro/Indigo</strong> (Catkin build). RTAB-Map works only with the PCL 1.7, which is the default version installed with ROS Hydro/Indigo (<strong>Fuerte and Groovy are not supported</strong>).\n * <strong>Note for ROS Indigo</strong>: If you want SURF/SIFT, you have to build OpenCV from source to have access to <em>nonfree</em> module. Install it in <code>/usr/local</code> (default) and the rtabmap library should link with it instead of the one installed in ROS.</p>\n\n<ul>\n<li>The next instructions assume that you have setup your ROS workspace using this <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">tutorial</a>. The workspace path is <code>~/catkin_ws</code> and your <code>~/.bashrc</code> contains:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">source /opt/ros/hydro/setup.bash\nsource ~/catkin_ws/devel/setup.bash\n\n</code></pre></div>\n<ol>\n<li>First, you need to install the RTAB-Map standalone libraries (<strong>don\'t checkout in the Catkin workspace</strong> but install in your Catkin\'s devel folder).</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ git clone https://github.com/introlab/rtabmap.git rtabmap\n$ cd rtabmap/build\n$ cmake -DCMAKE_INSTALL_PREFIX=~/catkin_ws/devel ..  [&lt;---double dots included]\n$ make -j4\n$ make install\n\n</code></pre></div>\n<ol>\n<li>Now install the RTAB-Map ros-pkg in your src folder of your Catkin workspace.</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_ws\n$ git clone https://github.com/introlab/rtabmap_ros.git src/rtabmap_ros\n$ catkin_make\n\n</code></pre></div>\n<h4 id=""update-to-new-version"">Update to new version</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd rtabmap\n$ git pull origin master\n$ cd build\n$ make\n$ make install\n\n$ roscd rtabmap_ros\n$ git pull origin master\n$ cd ~/catkin_ws\n$ catkin_make\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
pluginlib,http://rosindex.github.io/r/pluginlib/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo",pluginlib,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
segbot,http://rosindex.github.io/r/segbot/,"hydro,groovy,indigo","segbot,segbot_bringup,segbot_description,segbot_firmware,segbot_gazebo,segbot_gui,segbot_logical_translator,segbot_navigation,segbot_sensors,segbot_simulation_apps","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""the-segbot-ros-meta-package"">The segbot ROS meta-package</h1>\n\n<p>ROS drivers for controlling Segway RMP 50 based robots at Learning Agents \nResearch Group (LARG), AI Laboratory, Department of Computer Science, \nThe University of Texas at Austin. </p>\n\n<p>Detailed documentation for this code-base can be found on the ROS wiki:\n* <a href=""http://wiki.ros.org/segbot_bringup"">segbot_bringup</a>\n* <a href=""http://wiki.ros.org/segbot_description"">segbot_description</a>\n* <a href=""http://wiki.ros.org/segbot_firmware"">segbot_firmware</a>\n* <a href=""http://wiki.ros.org/segbot_sensors"">segbot_sensors</a></p>\n\n<p>All the code in this package has been released using a modified BSD license, \nwhich can be found with this package <a href=""LICENSE"">here</a>.</p>\n\n<p>All academic uses of this work should cite the following representative paper:\n""Piyush Khandelwal, Fangkai Yang, Matteo Leonetti, Vladimir Lifschitz, and\nPeter Stone. Planning in Action Language BC while Learning Action Costs for\nMobile Robots. International Conference on Automated Planning and Scheduling\n(ICAPS). 2014.""</p>\n</div>\n\n            \n          </div>'"
nodelet_core,http://rosindex.github.io/r/nodelet_core/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo","nodelet,nodelet_core,nodelet_topic_tools,test_nodelet,test_nodelet_topic_tools,actionlib,bfl,bond,bondcpp,bondpy,filters,pluginlib,smclib,test_bond,tinyxml,xacro,yaml_cpp","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
diffdrive_gazebo_plugin,http://rosindex.github.io/r/diffdrive_gazebo_plugin/,"hydro,fuerte,electric,groovy,diamondback,jade,indigo",diffdrive_gazebo_plugin,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cob_control,http://rosindex.github.io/r/cob_control/,"hydro,indigo","cob_base_velocity_smoother,cob_cartesian_controller,cob_collision_velocity_filter,cob_control,cob_control_mode_adapter,cob_control_msgs,cob_footprint_observer,cob_frame_tracker,cob_model_identifier,cob_obstacle_distance,cob_omni_drive_controller,cob_trajectory_controller,cob_twist_controller,cob_undercarriage_ctrl_node,cob_lookat_controller","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_control""><img src=""https://travis-ci.org/ipa320/cob_control.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<h1 id=""cob_control"">cob_control</h1>\n\n<p>The cob_control stack includes packages that are used to do low level control tasks with Care-O-bot hardware over ROS.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cob_control"">cob_control</h1>\n\n<p>The cob_control stack includes packages that are used to do low level control tasks with Care-O-bot hardware over ROS.</p>\n</div>\n\n            \n          </div>'"
volksbot_driver,http://rosindex.github.io/r/volksbot_driver/,"hydro,fuerte,electric,groovy,jade,indigo",volksbot_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""volksbot_driver"">volksbot_driver</h1>\n\n<p>ROS driver for the Volksbot (see <a href=""http://www.ros.org/wiki/volksbot_driver"">http://www.ros.org/wiki/volksbot_driver</a> for installation instructions and documentation).</p>\n</div>\n\n            \n          </div>'"
xacro,http://rosindex.github.io/r/xacro/,"hydro,fuerte,groovy,kinetic,jade,indigo",xacro,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
industrial_ci,http://rosindex.github.io/r/industrial_ci/,"jade,kinetic,indigo",industrial_ci,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""industrial-ci"">Industrial CI</h1>\n\n<p>Continuous integration repository for ROS-Industrial</p>\n\n<h2 id=""introduction"">Introduction</h2>\n\n<p>This repository contains <a href=""https://en.wikipedia.org/wiki/Continuous_integration"">CI (Continuous\nIntegration)</a>\nconfiguration that can be commonly used by the repositories in\n<a href=""https://github.com/ros-industrial"">ros-industrial</a> organization. Non\nros-industrial repositories in other organizations can utilize the CI\nconfig here too, as long as they are ROS-powered.</p>\n\n<p>As of December 2015, this repo provides configuration for Travis CI. The\nCI config in this repository is intended to be obtained by git clone\nfeature. In client repos you can define custom, repository-specific\nchecks, in addition to the generic configs stored in this repo.</p>\n\n<p>For a brief introduction, you could also check a presentation:</p>\n\n<ul>\n<li>  <a href=""http://rosindustrial.org/news/2016/6/14/ros-i-community-web-meeting-june-2016"">ROS-Industrial community\nmeeting</a>\n</li>\n</ul>\n\n<h3 id=""supported-ros-distributions"">Supported ROS distributions</h3>\n\n<p>Following <a href=""http://wiki.ros.org/action/login/Distributions"">ROS\ndistributions</a> are\nsupported.</p>\n\n<ul>\n<li>  <a href=""http://wiki.ros.org/indigo"">Indigo</a>\n</li>\n<li>  <a href=""http://wiki.ros.org/jade"">Jade</a>\n</li>\n<li>  <a href=""http://wiki.ros.org/kinetic"">Kinetic</a>\n</li>\n</ul>\n\n<h3 id=""terminology"">Terminology</h3>\n\n<ul>\n<li>  <strong>client repository</strong>: The repositories that use the configuration\nstored in this repo to run CI jobs.</li>\n<li>  <strong>downstream packages</strong>: The software packages that depend on the\npackage that\'s targetted to be tested using industrial_ci.</li>\n</ul>\n\n<h2 id=""faq"">FAQ</h2>\n\n<ul>\n<li>\n<p>Q- This config can be used ONLY by the repositories under\n<a href=""https://github.com/ros-industrial"">github/ros-industrial</a>\norganization?</p>\n\n<p>A- No. industrial_ci repo is open to public. Anyone can use this\nfrom any platform. Note that because as of Dec. 2015 it has only\nconfig for <a href=""https://travis-ci.org/"">Travis CI</a>, you may want to use\nit where Travis CI is available (github.com works the best.</p>\n</li>\n<li>\n<p>Q- What kind of checks are implemented that are specific to\nindustrial robotics?</p>\n\n<p>A- As of Dec. 2015, no particular configuration for industrial robot\nis defined.</p>\n</li>\n<li>\n<p>Q- So, can the config be used against any robotics repository?</p>\n\n<p>A- I\'d say no. It\'s still limited for the projects based on\n<a href=""http://ros.org/"">ROS</a>. And checks are run on Ubuntu linux.</p>\n</li>\n<li>\n<p>Q- In my project there aren\'t yet test cases. Can I still have it\nchecked using industrial_ci and what can I get out of the check?</p>\n\n<p>A- The industrial_ci still provides valuable checks; it ensures if\nyour package builds without issues. Also installation rules if\nyou define. Just as a headsup that making test cases are highly\nrecommended as your ear may hurt.</p>\n</li>\n<li>\n<p>Q- My package uses a custom Point Cloud Library (PCL) version or the\n<a href=""https://github.com/ros-industrial/industrial_calibration"">industrial_calibration</a>\npackage, how do I make build work?</p>\n\n<p>A- You can check\n<a href=""https://github.com/InstitutMaupertuis/advanced_industrial_ci"">advanced_industrial_ci</a>\nwhich provides scripts and binaries for PCL 1.8.0 and the\nCeres solver. An integration example can be found\n<a href=""https://github.com/InstitutMaupertuis/ensenso_extrinsic_calibration/blob/indigo-devel/.travis.yml"">here</a>.</p>\n</li>\n<li>\n<p>Q- How does the target package get installed?</p>\n\n<p>A- Travis CI does this. It pulls in your package to an running\ninstance of an operating system of your choice, and place your\npackage under /home/travis.</p>\n</li>\n<li>\n<p>Q- The jobs on Travis CI are failing. How can I fix them?</p>\n\n<p>A- (1) Find the section where error occurred that caused CI to stop.\nSections are folded nicely and it\'s colored red when it fails. (2)\nThen identify whether the issue is pertaining to your package, or\nsomething else. Sometimes a cause is in industrial_ci, not\nyour package. (3) Reviewing <a href=""https://docs.travis-ci.com/user/common-build-problems"">Common Build Problems for Travis\nCI</a> helps you\nto isolate the root cause. (4) If you think the root cause is in\nindustrial_ci, (or if you\'re not sure,) ask at its <a href=""https://github.com/ros-industrial/industrial_ci/issues"">issue\ntracker</a>.</p>\n</li>\n<li>\n<p>Q- How can I customize the jobs?</p>\n\n<p>A- (1) There are a number of variables to customize your jobs that\nyou can learn the usage <a href=""https://github.com/ros-industrial/industrial_ci/blob/master/README.rst#variables-you-can-configure"">in this\nsection</a>. (2)\nYou can define pre- and post-processes, in addition to the default\nscripts (it\'s\n<a href=""https://github.com/ros-industrial/industrial_ci/blob/master/travis.sh"">travis.sh</a>\nfor Travis CI). See <a href=""https://github.com/ros-industrial/industrial_ci/blob/master/README.rst#run-pre-install-custom-commands"">this\nsection</a>\nfor how.</p>\n</li>\n</ul>\n\n<h3 id=""what-are-checked"">What are checked?</h3>\n\n<p>List of the checked items, in the actual order to be run.</p>\n\n<ol>\n<li> If your package builds.</li>\n<li> If available tests in the given package pass. Because tests use\nsoftware from install space, it is important that the building step\nends without issues (otherwise the tests may not be reached).</li>\n<li> If your package gets installed (i.e. built artifact goes into the\ninstall space).</li>\n<li> If downstream packages are designated, the tests in those\npackages pass.</li>\n</ol>\n\n<p>Your client repository does NOT need to pass all of above steps; in fact\nyou can have only some of them tested. To pass the steps without having\ntested, simply ""empty"" them. For instance, in your client repository:</p>\n\n<ul>\n<li>  Step 2 will be skipped when no test files are present.</li>\n<li>  Step 3 will be skipped when no installation rule is defined.</li>\n<li>  Step 4 will be skipped when no downstream packages to be tested\nare defined.</li>\n</ul>\n\n<h2 id=""prerequisite"">Prerequisite</h2>\n\n<p>In order for your repository to get checked with configurations in\nindustrial_ci, it needs:</p>\n\n<ul>\n<li>  To be a <a href=""http://wiki.ros.org/ROS/Tutorials/catkin/CreatingPackage"">Catkin\npackage</a>\n(uses CMake for build configuration), since many checks are\ntriggered by the Catkin-based commands.</li>\n<li>  Build-able on Linux (as of Dec 2015, Ubuntu 14.04/Trusty is used).\nAlthough your repository is not necessarilly intended for Linux,\nchecks are run on Linux.</li>\n</ul>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>Here are some operations in your client repositories.</p>\n\n<h3 id=""to-start-using-ci-config-stored-in-this-repo"">To start using CI config stored in this repo</h3>\n\n<p>With the following few short steps, you can start in your client\nrepository using CI confiurations stored in here (industrial_ci\nrepository).</p>\n\n<ol>\n<li> Don\'t forget to activate CI on your github repository (you may do so\non <a href=""https://travis-ci.org/profile/YOUR_GITHUB_ORGANIZATION"">https://travis-ci.org/profile/YOUR_GITHUB_ORGANIZATION</a> or\n<a href=""https://travis-ci.org/profile/YOUR_GITHUB_USER"">https://travis-ci.org/profile/YOUR_GITHUB_USER</a>).</li>\n<li> In .travis.yml file in your client repo, add in before_config\nsection a sentence\ngit clone <a href=""https://github.com/ros-industrial/industrial%5C_ci.git"">https://github.com/ros-industrial/industrial\\_ci.git</a> .ci_config,\nlike below:</li>\n</ol>\n\n<!-- -->\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">before_config:\n  - git clone https://github.com/ros-industrial/industrial_ci.git .ci_config\nscript:\n  - source .ci_config/travis.sh\n</code></pre></div>\n<ul>\n<li>  Note that .ci_config is the required name of the cloned folder; it\nis hardcoded so you need to use this name.</li>\n<li>  Example of entire file .travis.yml can be found in\n<a href=""https://github.com/ros-industrial/industrial_core/blob/indigo-devel/.travis.yml"">industrial_core/.travis.yml</a>.</li>\n</ul>\n\n<p>That\'s it.</p>\n\n<h3 id=""apply-the-changes-in-this-repo-industrial_ci-to-the-checking-in-client-repos"">Apply the changes in this repo (industrial_ci) to the checking in client repos</h3>\n\n<p>Nothing. Once you add git clone statement in your client repo, basically\nyou don\'t need to do anything to apply the change in industrial_ci\nrepository.</p>\n\n<h3 id=""example-client-packages"">Example client packages</h3>\n\n<ul>\n<li>  <a href=""https://github.com/ros-industrial/industrial_core/blob/indigo-devel/.travis.yml"">ros-industrial/industrial_core</a>\n</li>\n<li>  <a href=""https://github.com/ros-industrial-consortium/descartes/blob/indigo-devel/.travis.yml"">ros-industrial-consortium/descartes</a>\n</li>\n</ul>\n\n<h3 id=""variables-you-can-configure"">Variables you can configure</h3>\n\n<p>You can configure the behavior in .travis.yml in your client repository.</p>\n\n<ul>\n<li>  OS to use. Defined at dist tag.</li>\n</ul>\n\n<p>Required environment variables:</p>\n\n<ul>\n<li>  `ROS_REPOSITORY_PATH`: Location of ROS\' binary repositories\nwhere depended packages get installed from (typically both standard\nrepo (<a href=""http://packages.ros.org/ros/ubuntu"">http://packages.ros.org/ros/ubuntu</a>) and <a href=""http://wiki.ros.org/ShadowRepository"">""Shadow-Fixed""\nrepository</a> (<a href=""http://packages.ros.org/ros-shadow-fixed/ubuntu)"">http://packages.ros.org/ros-shadow-fixed/ubuntu)</a>)</li>\n<li>  `ROS_DISTRO`: Version of ROS in all lower case. E.g.: indigo /\njade</li>\n</ul>\n\n<h4 id=""optional-environment-variables"">Optional environment variables</h4>\n\n<p>Note that some of these currently tied only to a single option, but we\nstill leave them for the future when more options become available (e.g.\nament with BUILDER).</p>\n\n<ul>\n<li>  ADDITIONAL_DEBS (default: not set): More DEBs to be used. List the\nname of DEB(s delimitted by whitespace if multiple DEBs specified).\nNeeds to be full-qualified Ubuntu package name. E.g.:\n""ros-indigo-roslint ros-indigo-gazebo-ros"" (without quotation).</li>\n<li>  `BEFORE_SCRIPT`: (default: not set): Used to specify shell\ncommands that run before building packages.</li>\n<li>  BUILD_PKGS_WHITELIST (default: not set): Packages to be built can\nbe explicitly specified with this, in ROS package name format (i.e.\nusing underscore. No hyphen). This is useful when your repo contains\nsome packages that you don\'t want to be used upon testing.\nDownstream packages, if necessary, should be also specified\nusing this. Also these packages are to be built when\nNOT_TEST_INSTALL is set. Finally, packages specified with this\nwill be built together with those speicified using\nunimplmented USE_DEB.</li>\n<li>  BUILDER (default: catkin): Currently only catkin is implemented (and\nwith that catkin_tools is used instead of catkin_make. See <a href=""https://github.com/ros-industrial/industrial_ci/issues/3"">this\ndiscussion</a>).</li>\n<li>  CATKIN_PARALLEL_JOBS (default: -p4): Maximum number of packages to\nbe built in parallel that is passed to underlining build tool. As of\nJan 2016, this is only enabled with catkin_tools. See for more\ndetail about <a href=""http://catkin-tools.readthedocs.org/en/latest/verbs/catkin_build.html#controlling-the-number-of-build-jobs"">number of build\njobs</a>\nand <a href=""https://catkin-tools.readthedocs.org/en/latest/verbs/catkin_build.html#full-command-line-interface"">documentation of\ncatkin_tools</a>\nthat this env variable is passed to internally in catkin-tools.</li>\n<li>  CATKIN_PARALLEL_TEST_JOBS (default: -p4): Maximum number of\npackages which could be examined in parallel during the test run. If\nnot set it\'s filled by ROS_PARALLEL_JOBS.</li>\n<li>  CI_PARENT_DIR (default: .ci_config): (NOT recommended to specify)\nThis is the folder name that is used in downstream repositories in\norder to point to this repo.</li>\n<li>  NOT_TEST_BUILD (default: not set): If true, tests in build space\nwon\'t be run.</li>\n<li>  NOT_TEST_INSTALL (default: not set): If true, tests in install\nspace won\'t be run.</li>\n<li>  PRERELEASE (default: false): If true, run <a href=""http://wiki.ros.org/bloom/Tutorials/PrereleaseTest/"">Prerelease Test on docker\nthat emulates ROS\nbuildfarm</a>. The\nusage of Prerelease Test feature is <a href=""https://github.com/ros-industrial/industrial_ci/blob/add/dockerbased_prerelease/README.rst#optional-run-ros-prerelease-test"">explained more in this\nsection</a>.</li>\n<li>  PRERELEASE_DOWNSTREAM_DEPTH (0 to 4, default: 0): Number of the\nlevels of the package dependecies the Prerelease Test targets at.\nRange of the level is defined by ROS buildfarm\n(<a href=""http://prerelease.ros.org""></a>). NOTE: a job can run exponentially\nlonger for the values greater than 0 depending on how many packages\ndepend on your package (and remember a job on Travis CI can only run\nfor up to 50 minutes).</li>\n<li>  PRERELEASE_REPONAME (default: not set): The target of Prerelease\nTest (that you select at <a href=""http://prerelease.ros.org/indigo""></a>,\n<a href=""http://prerelease.ros.org/kinetic""></a> etc.) If not set then it tests\nthe package of the repository\'s name. You can specify this by your\nROS package name format (with underscore e.g. industrial_core), not\nDebian package name format. NOTE that this package name must be\nlisted in the rosdistro/distribution.yaml (e.g. [for ROS\nIndigo](<a href=""https://github.com/ros/rosdistro/blob/master/indigo/distribution.yaml"">https://github.com/ros/rosdistro/blob/master/indigo/distribution.yaml</a>))\n(this requirement comes from ROS buildfarm\'s Prerelease Test).</li>\n<li>  PKGS_DOWNSTREAM (default: explained): Packages in downstream to\nbe tested. By default, TARGET_PKGS is used if set, if not then\nBUILD_PKGS is used.</li>\n<li>  ROS_PARALLEL_JOBS (default: -j8): Maximum number of packages to be\nbuilt in parallel by the underlining build tool. As of Jan 2016,\nthis is only enabled with catkin_tools (with make as an\nunderlining builder).</li>\n<li>  ROS_PARALLEL_TEST_JOBS (default: -j8): Maximum number of packages\nwhich could be examined in parallel during the test run by the\nunderlining build tool. If not set it\'s filled\nby ROS_PARALLEL_JOBS. As of Jan 2016, this is only enabled with\ncatkin_tools (with make as an underlining builder).</li>\n<li>  ROSINSTALL_FILENAME (default: not set): See\nUPSTREAM_WORKSPACE description.</li>\n<li>  ROSWS (default: wstool): Currently only wstool is available.</li>\n<li>  TARGET_PKGS (default: not set): Used to fill PKGS_DOWNSTREAM if it\nis not set. If not set packages are set using the output of\ncatkin_topological_order for the source space.</li>\n<li>  UPSTREAM_WORKSPACE (default: debian): When this is set file, the\ndependended packages that need to be built from source are\ndownloaded based on a .rosinstall file in your repository. Use\n\\$ROSINSTALL_FILENAME to specify the file name. See more in <a href=""https://github.com/ros-industrial/industrial_ci/blob/master/README.rst#optional-build-depended-packages-from-source"">this\nsection</a>.</li>\n<li>  USE_DEB (<em>DEPRECATED</em>: use UPSTREAM_WORKSPACE instead. default:\ntrue): if true, UPSTREAM_WORKSPACE will be set as debian. if false,\nfile will be set. See UPSTREAM_WORKSPACE section for more info.</li>\n</ul>\n\n<p>Note: You see some *PKGS* variables. These make things very flexible\nbut in normal usecases you don\'t need to be bothered with them - just\nkeep them blank.</p>\n\n<h3 id=""optional-but-recommended-subscribe-to-the-change-in-this-repo-industrial_ci"">(Optional but recommended) Subscribe to the change in this repo (industrial_ci)</h3>\n\n<p>Because of the aforementioned responsibility for the maintainers to\nwatch the changes in industrial_ci, <a href=""https://github.com/ros-industrial/industrial_ci/subscription"">you\'re encouraged to subscribe to\nthe updates in this\nrepository</a>.</p>\n\n<h3 id=""add-repository-specific-ci-config-in-addition"">Add repository-specific CI config in addition</h3>\n\n<p>Sometimes CI config stored in industrial_ci repo may not be sufficient\nfor your purpose. In that case you can add your own config, while you\nstill take advantage of industrial_ci repository.</p>\n\n<ol>\n<li> In .travis.yml file in your client repo, add the portion below:</li>\n</ol>\n\n<!-- -->\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">script: \n  - source .ci_config/travis.sh\n  - source ./travis.sh\n</code></pre></div>\n<ol>\n<li> Create travis.sh file and define the checks you wish to add. NOTE:\nthis .sh file you add here is a normal shell script, so this\nshouldn\'t be written in travis CI grammar.</li>\n</ol>\n\n<h3 id=""optional-to-use-specific-version-of-industrial_ci-in-your-client-repo"">(Optional) To use specific version of industrial_ci in your client repo</h3>\n\n<p>(A minor) downside of how you associate your client repo to this\nindustrial_ci repository is that you have no control over which version\nto use (see <a href=""https://github.com/ros-industrial/industrial_ci/issues/3"">discussion in this\nticket</a>). If\nyou wish you can specify the version.</p>\n\n<p>The following is an example using git submodule. Note that when using\nthis method, you have to manually update the submodule every time\nthere\'s an update in this industrial_ci package.</p>\n\n<h4 id=""first-time-you-define-the-dependency-to-this-repo"">First time you define the dependency to this repo</h4>\n\n<ol>\n<li> Run git submodule command.</li>\n</ol>\n\n<!-- -->\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">CLIENTREPO_LOCAL$ git submodule add https://github.com/ros-industrial/industrial_ci .ci_config\n</code></pre></div>\n<p>This standard git submodule command:</p>\n\n<ul>\n<li>  hooks up your client repository to this repo by the name\n"".ci_config"" (this name is hardcoded and mandatory).</li>\n<li>  stores the configuration in a file called .gitmodules.</li>\n</ul>\n\n<ol>\n<li> Don\'t forget to activate CI on your github repository (you may do so\non <a href=""https://travis-ci.org/profile/YOUR_GITHUB_USER"">https://travis-ci.org/profile/YOUR_GITHUB_USER</a>).</li>\n<li> In .travis.yml file in your client repo, add the portion below:</li>\n</ol>\n\n<!-- -->\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">script: \n  - source .ci_config/travis.sh\n  #- source ./travis.sh  # Optional. Explained later\n</code></pre></div>\n<p>Also, the example of entire file .travis.yml can be found in\n<a href=""https://github.com/ros-industrial/industrial_core/.travis.yml"">industrial_core/.travis.yml</a>.</p>\n\n<p>That\'s it.</p>\n\n<h4 id=""apply-the-changes-in-this-repo-industrial_ci-to-the-checking-in-client-repos"">Apply the changes in this repo (industrial_ci) to the checking in client repos</h4>\n\n<p>Maintainers of client repos are responsible for applying the changes\nthat happen in this repos, if they want to use up-to-date checks; since\ngit submodule does NOT provide features to automatically detect the\nchanges made in the sub modules, maintainers need to keep an eye on the\nchanges.</p>\n\n<ol>\n<li> Update the SHA key of the commit in this repo. The command below\nassumes that there\'s .gitmodules file that\'s generated by\ngit submodule add command explained above.</li>\n</ol>\n\n<!-- -->\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">CLIENTREPO_LOCAL$ git submodule foreach git pull origin master\n</code></pre></div>\n<ol>\n<li> Don\'t forget to commit the changes the command above makes.</li>\n</ol>\n\n<h3 id=""optional-run-ros-prerelease-test"">(Optional) Run ROS Prerelease Test</h3>\n\n<p>Running <a href=""http://wiki.ros.org/bloom/Tutorials/PrereleaseTest/"">docker-based ROS Prerelease\nTest</a> is strongly\nrecommended when you make a release. There are, however, some\ninconvenience (requires host computer setup, runs on your local host,\netc. Detail discussed in <a href=""https://github.com/ros-industrial/industrial_ci/pull/35#issue-150581346"">a\nticket</a>).\nindustrial_ci provides a way to run it on your Travis CI test.</p>\n\n<p>To do so, add a single line to your Travis config (eg. .travis.yml):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ROS_DISTRO=indigo PRERELEASE=true\n</code></pre></div>\n<p>Or with more configuration:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ROS_DISTRO=indigo PRERELEASE=true PRERELEASE_REPONAME=industrial_core PRERELEASE_DOWNSTREAM_DEPTH=0\n</code></pre></div>\n<p>NOTE: A job that runs Prerelease Test does not run the checks that are\ndefined in\n<a href=""https://github.com/ros-industrial/industrial_ci/blob/master/travis.sh"">travis.sh</a>.\nTo run both, use matrix in Travis config.</p>\n\n<p>See the usage sample in <a href=""https://github.com/ros-industrial/industrial_ci/blob/master/.travis.yml"">.travis in indusrial_ci\nrepository</a>.</p>\n\n<p>The following is some tips to be shared for running Prerelease Test on\nTravis CI using industrial_ci.</p>\n\n<h4 id=""workaround-don-39-t-want-to-always-run-prerelease-test"">(Workaround) Don\'t want to always run Prerelease Test</h4>\n\n<p>The jobs that run Prerelease Test may usually take longer than the tests\ndefined in\n<a href=""https://github.com/ros-industrial/industrial_ci/blob/master/travis.sh"">travis.sh</a>,\nwhich can result in longer time for the entire Travis jobs to finish.\nThis is usually okay, as developers who are concerned with PRs might not\nwait for the Travis result that eagerly (besides that, Travis CI limits\nthe maximum run time as 50 minutes so there can\'t be very long run). If\nyou\'re concerned, however, then you may want to separately run the\nPrerelease Test. An example way to do this is to create a branch\nspecifically for Prerelease Test where .travis.yml only defines a check\nentry with PRERELEASE turned on. E.g.:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">:\nenv:\n  matrix:\n    - ROS_DISTRO=indigo PRERELEASE=true\n:\n</code></pre></div>\n<p>Then open a pull request using this branch against the branch that the\nchange is subject to be merged. You do not want to actually merge this\nbranch no matter what the Travis result is. This branch is solely for\nPrerelease Test purpose.</p>\n\n<h3 id=""run-pre-install-custom-commands"">Run pre-install custom commands</h3>\n\n<p>You may want to add custom steps prior to the setup defined in\n<a href=""./travis.sh"">./travis.sh</a>. Example:</p>\n\n<ul>\n<li>  A device driver package X in your repository or in your repository\'s\ndependency requires a prorietary library installed. This library is\npublicly available, but not via apt or any package management system\nand thus the only way you can install it is in a classic way (unzip,\nrun installer etc.) (<a href=""https://github.com/ros-industrial/industrial_ci/issues/14"">More\ndiscussion</a>).</li>\n</ul>\n\n<p>In this case, add sourced scripts before travis.sh gets called (see\nbelow for an example).</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">script: \n  - source ./your_custom_PREprocess.sh\n  - source .ci_config/travis.sh\n  - source ./your_custom_POSTprocess.sh\n</code></pre></div>\n<p>In the above case, in both .ci_config/travis.sh and\nyour_custom_POSTprocess.sh the environment is kept from previous\nscript(s), so whatever is done in previous scripts remains.</p>\n\n<h3 id=""optional-build-depended-packages-from-source"">(Optional) Build depended packages from source</h3>\n\n<p>By default the packages your package depend upon are installed via\nbinaries. However, you may want to build them via source in some cases\n(e.g. when depended binaries are not available). There are a few ways to\ndo so in industrial_ci. Examples of all are available in <a href=""https://github.com/ros-industrial/industrial_ci/blob/master/.travis.yml"">.travis.yml\nfile on this\nrepository</a>.</p>\n\n<h4 id=""use-rosinstall-file-to-specify-the-depended-packages-source-repository"">Use .rosinstall file to specify the depended packages source repository</h4>\n\n<p>Standard way is 1) set UPSTREAM_WORKSPACE as file, 2) create a file\n\\$ROSINSTALL_FILENAME using the same file format as\n<a href=""http://docs.ros.org/independent/api/rosinstall/html/rosinstall_file_format.html"">.rosinstall</a>\nand place it at the top level directory of your package.</p>\n\n<h4 id=""have-multiple-rosinstall-files-per-ros-distro"">Have multiple .rosinstall files per ROS-distro</h4>\n\n<p>By adding .\\$ROS_DISTRO suffix to your \\$ROSINSTALL_FILENAME file, you\ncan specify which file to use per your \\$ROS_DISTRO. So the syntax of\nthe file name for this purpose is \\$ROSINSTALL_FILENAME.\\$ROS_DISTRO.\nFor example, let\'s say you want to test multiple distros (indigo, jade)\nand you have .travis.rosinstall and .travis.rosinstall.jade files in\nyour repo. You can define the Travis config as:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">env:\n  matrix:\n\n    - ROS_DISTRO=indigo UPSTREAM_WORKSPACE=file\n    - ROS_DISTRO=jade   UPSTREAM_WORKSPACE=file\n</code></pre></div>\n<p>With this config, for indigo default file name .travis.rosinstall will\nbe seached and used if found. For jade, the file that consists of the\ndefault file name plus .jade suffix will be prioritized.</p>\n\n<p>When \\$ROSINSTALL_FILENAME.\\$ROS_DISTRO file isn\'t found,\n\\$ROSINSTALL_FILENAME will be used for all jobs that define\nUPSTREAM_WORKSPACE.</p>\n\n<h4 id=""use-rosinstall-from-external-location"">Use .rosinstall from external location</h4>\n\n<p>You can utilize .rosinstall file stored anywhere as long as its location\nis URL specifyable. To do so, set its complete path URL directly to\nUPSTREAM_WORKSPACE.</p>\n\n<h2 id=""for-maintainers-of-industrial_ci-repository"">For maintainers of industrial_ci repository</h2>\n\n<h3 id=""checks-for-industrial_ci-repo-itself"">Checks for industrial_ci repo itself</h3>\n\n<p>While this repository provides CI config that can be used by other\nrepositories, it also checks this repo itself using the same CI config\nand the simplest package setting. That is why this repo contains the ROS\npackage files and a test (CMakeLists.txt, package.xml, .test).</p>\n</div>\n\n            \n          </div>'"
smarthome_light_msgs,http://rosindex.github.io/r/smarthome_light_msgs/,indigo,smarthome_light_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-lighting-message-for-ros"">SmartHome Lighting message for ROS</h1>\n\n<p>This package is a ROS Light message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_light_msgs__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_light_msgs__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
ueye,http://rosindex.github.io/r/ueye/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo",ueye,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cob_simulation,http://rosindex.github.io/r/cob_simulation/,"hydro,groovy,diamondback,indigo","cob_bringup_sim,cob_gazebo,cob_gazebo_objects,cob_gazebo_worlds,cob_simulation,cob_controller_configuration_gazebo,cob_ogre","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Installation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a repository for Care-O-bot simulation packages.\n\nInstallation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_simulation""><img src=""https://travis-ci.org/ipa320/cob_simulation.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p>This is a repository for Care-O-bot simulation packages.</p>\n\n<p>Installation instructions and tutorials can be found at <a href=""http://www.care-o-bot.org"">http://www.care-o-bot.org</a>.</p>\n</div>\n\n            \n          </div>'"
pepper_robot,http://rosindex.github.io/r/pepper_robot/,"hydro,jade,kinetic,indigo","pepper_bringup,pepper_description,pepper_robot,pepper_sensors_py","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
micros_mars_task_alloc,http://rosindex.github.io/r/micros_mars_task_alloc/,indigo,micros_mars_task_alloc,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""micros_mars_task_alloc"">micros_mars_task_alloc</h1>\n\n<p>A cooperative robot team is a multi-agent robot system in essence. In the team, each robot can be seen as an intelligent agent. This is a ROS package used for the mult-task allocation in a robot team. It is based on Multi-Agent theory and is an abstraction of ALLIANCE model. We have developed a prototype system by python hitherto. The nodelet-based C++ version is being developed and will be released in short time periods. </p>\n\n<h2 id=""alliance-model"">ALLIANCE model</h2>\n\n<p></p>\n<center>\n<img src=""https://raw.githubusercontent.com//liminglong/micros_mars_task_alloc/master//doc/images/alliance_generic_model.jpg"" alt=""image1"">\n</center>\n\n<p>ALLIANCE model is a natural extension of Brooks\' famous subsumption model, which is applicable to fault-tolerant cooperative multi-robot systems. As shown in the figure above, each single robots in the cooperative team should obey a same ALLIANCE model. The model is composed of several behavior sets and behavior layers. Both of them are implemented by following the subsumption model. The behavior sets correspond to some high-level task-achieving functions. The module named \'motivational behavior\' can activate the behavior sets to select a task adaptively. The \'F\' circles in the figure above connect the output of each motivational behavior with the output of its corresponding behavior set indicating that a motivational behavior either allows all or none of the outputs of its behavior set to pass through to the robot\'s actuators. The lower several layers of the ALLIANCE architecture composed a subsumption model, we can also use the subsumption method to coordinate the behavior inside the behavior sets. Note that the motivational behavior needs to receive the sensor information. Besides, the output of some behavior set can also be used as the sensor information, which is called `virtual sensors\' in ALLIANCE model(imaginary lines in the figure above). </p>\n\n<h2 id=""general-overview"">General Overview</h2>\n\n<p></p>\n<center>\n<img src=""https://raw.githubusercontent.com//liminglong/micros_mars_task_alloc/master//doc/images/general_overview.jpg"" alt=""image2"">\n</center>\n\n<p>At the bottom layer, we encapsulate the ROS communication and python multi-process libraries into ROS node classes. By inheriting the ROS node classes, one may implement Function Units and connect them (i.e. establish message passing channels among them) to construct Behavior Layers quite conveniently. To do that, one could focus only on application logic, leaving others to the framework. Besides, several ALLIANCE elements including Inhibitors, Suppressors and Forwarders (i.e. the \'I\', \'S\' and \'F\' circles) are all available, which can be directly put between Behavior Layers to construct Behavior Sets. A Motivational Behavior template is also available for developers. Once again, one could focus only on the parameters of the Motivational Behavior, others including the following three aspects are already handled by the framework:</p>\n\n<ul>\n<li>The fault-tolerant adaptive multi-task selection algorithm that incorporates the use of mathematically-modeled motivations.</li>\n<li>The interconnected communication among all motivational behaviors in the team robots by using ROS broadcasting mechanism.</li>\n<li>By specifying the forwarder name as a parameter, the interaction with the behavior set can be built automatically.</li>\n</ul>\n\n<p>Finally, Behavior Layers and Behavior Sets can aggregate the Robots. </p>\n\n<h2 id=""uml-graph"">UML Graph</h2>\n\n<p>The UML graph shows the overall software architecture of the package.\n</p>\n<center>\n<img src=""https://raw.githubusercontent.com//liminglong/micros_mars_task_alloc/master//doc/images/alliance_generic_uml.jpg"" alt=""image3"">\n</center>\n\n<h2 id=""main-apis"">Main APIs</h2>\n\n<p>The main APIs are shown below. The parameter names present the parameter function clearly. As mentioned above, each motivational behavior is responsible for activating a forwarder to forward the messges sent from the attached behavior set. So the \'MotivationalBehavior\' class should have a parameter named \'forwarder_name\' indicating that which forwarder it activates. The paramters of the topics in \'Forwarder\' indicate which behavior set they attach.</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""n"">Inhibitor</span><span class=""p"">(</span><span class=""n"">inhibitor_name</span><span class=""p"">,</span> <span class=""n"">topic_in</span><span class=""p"">,</span> <span class=""n"">in_out_msg_type</span><span class=""p"">,</span> <span class=""n"">topic_out</span><span class=""p"">,</span> <span class=""n"">inhibiting_topic</span><span class=""p"">,</span> <span class=""n"">inhibiting_msg_type</span><span class=""p"">)</span>\n<span class=""n"">suppressor</span><span class=""p"">(</span><span class=""n"">suppressor_name</span><span class=""p"">,</span> <span class=""n"">topic_in</span><span class=""p"">,</span> <span class=""n"">in_out_msg_type</span><span class=""p"">,</span> <span class=""n"">topic_out</span><span class=""p"">,</span> <span class=""n"">suppressing_topic</span><span class=""p"">,</span> <span class=""n"">suppressing_msg_type</span><span class=""p"">)</span>\n<span class=""n"">Forwarder</span><span class=""p"">(</span><span class=""n"">forwarder_name</span><span class=""p"">,</span> <span class=""n"">topic_1_in</span> <span class=""p"">,</span> <span class=""n"">msg_1_type</span><span class=""p"">,</span> <span class=""n"">topic_1_out</span><span class=""p"">,</span> <span class=""n"">topic_2_in</span><span class=""p"">,</span> <span class=""n"">msg_2_type</span><span class=""p"">,</span> <span class=""n"">topic_2_out</span><span class=""p"">)</span>\n<span class=""n"">MotivationalBehavior</span><span class=""p"">(</span><span class=""n"">motivational_behavior_name</span><span class=""p"">,</span> <span class=""n"">robot_ID</span><span class=""p"">,</span> <span class=""n"">behavior_set_ID</span><span class=""p"">,</span> <span class=""n"">forwarder_name</span><span class=""p"">)</span>\n\n</code></pre></div>\n<h2 id=""a-demo"">A Demo</h2>\n\n<p>We assume a scenario that there are three rooms in a house and each robot patrols a room according to several pre-selected goals. If another intruder robot moves into the house, one of the three patrol robots can detect it, follow it and alarm. But at the same time, the room the robot patrols before is empty. So the other two patrol robots will compensate for this fault and patrol different rooms alternately. Besides, during the whole system running, one of the robot may break down, the other two robots may also compensate the fault according to the way mentioned above. We have used the package to develop the system. </p>\n\n<ul>\n<li>The ALLIANCE model and UML graph of the application is shown in the figures below</li>\n</ul>\n\n<p></p>\n<center>\n<img src=""https://raw.githubusercontent.com//liminglong/micros_mars_task_alloc/master//doc/images/apm.jpg"" alt=""image4"">\n</center>\n\n<p></p>\n<center>\n<img src=""https://raw.githubusercontent.com//liminglong/micros_mars_task_alloc/master//doc/images/apuml.jpg"" alt=""image5"">\n</center>\n\n<ul>\n<li>The exprimental result is shown in the figures below.</li>\n</ul>\n\n<p></p>\n<center>\n<img src=""https://raw.githubusercontent.com//liminglong/micros_mars_task_alloc/master//doc/images/sim_follow.jpg"" alt=""image6"">\n</center>\n\n<p></p>\n<center>\n<img src=""https://raw.githubusercontent.com//liminglong/micros_mars_task_alloc/master//doc/images/real_follow.jpg"" alt=""image7"">\n</center>\n\n<p>If you want to test the demo yourself, please follow the steps below.</p>\n\n<ul>\n<li>environmental configuration</li>\n</ul>\n\n<p>Notice that, the multi-robot task need multi-robot collision avoidance. One ROS package can help you do this, so you should git clone and compile the collvoid package first.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/daenny/collvoid.git\n\n</code></pre></div>\n<p>The package needs a simulated environment supporting multi-robot navigation without confliction (the prefixes of the namespace and TF may conflict with each other). You should git clone the multi_robot_stage package in your own catkin_ws.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/liminglong/multi_robot_stage.git\n\n</code></pre></div>\n<p>And then git clone this package micros_mars_task_alloc in your workspace.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/liminglong/micros_mars_task_alloc.git\n\n</code></pre></div>\n<p>Finally, even all the codes are witten in python, you should compile the files in your workspace again. Such that the added message files can be imported by the python modules. Don\'t forget to source your setup.bash.</p>\n\n<ul>\n<li>run the demo\nFirst, launch the simulated multi-robot environment.</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch multi_robot_stage multi_robot.launch\n\n</code></pre></div>\n<p>Run the following commands in your terminal.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd /catkin_ws/src/micros_mars_task_alloc/scripts/basic_support\n\n</code></pre></div>\n<p>Use the python interpreter to start the first robot.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">python robot0.py\n\n</code></pre></div>\n<p>Open a new terminal in the same directory to start the second robot.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">python robot1.py\n\n</code></pre></div>\n<p>Open another new ternimal in the same directory to run the third robot.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">python robot2.py\n\n</code></pre></div>\n<p>Then the whole system will run as a whole. The three robots patrol the three rooms.\nBesides, you can also control a suspicious robot to invade the room.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch micros_mars_task_alloc robot3_control.launch\n\n</code></pre></div>\n<p>One of the robot can detect and follow it immediately. The remained room will not be empty, because the other two robots will patrol the three rooms alternatively and compensate for this fault.</p>\n\n<h2 id=""videos"">Videos</h2>\n\n<p>The experimental videos can be downloaded and watched <a href=""https://www.trustie.net/organizations/61"">here.</a></p>\n</div>\n\n            \n          </div>'"
maggie_robot,http://rosindex.github.io/r/maggie_robot/,"hydro,indigo","maggie_bringup,maggie_description,maggie_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""maggie_robot"">maggie_robot</h1>\n\n<p>GitHub repository for the Social Robot Maggie.</p>\n\n<h2 id=""content"">CONTENT</h2>\n\n<ul>\n<li>\n<code>maggie_bringup</code>: a ROS package with the launch and config files necessary to start the robot.</li>\n<li>\n<code>maggie_description</code>: a ROS package with the URDF model of the robot (pending).</li>\n<li>\n<code>maggie_robot</code>: a ROS metapackage.</li>\n</ul>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The license of the packages is custom LASR-UC3M (Licencia Acad\xc3\xa9mica Social Robotics Lab - UC3M), an open, non-commercial license which enables you to download, modify and distribute the code as long as you distribute the sources.  </p>\n\n<h2 id=""acknowledgements"">ACKNOWLEDGEMENTS</h2>\n\n<p><img src=""http://ieee.uc3m.es/images/thumb/b/b6/Roboticslab_text_new.jpg/128px-Roboticslab_text_new.jpg"" alt=""RoboticsLab"">\n<img src=""http://ieee.uc3m.es/images/thumb/6/6b/Logo_uc3m_letras.png/256px-Logo_uc3m_letras.png"" alt=""UC3M""></p>\n</div>\n\n            \n          </div>'"
rosdoc_lite,http://rosindex.github.io/r/rosdoc_lite/,"hydro,fuerte,groovy,kinetic,jade,indigo",rosdoc_lite,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p><a href=""http://wiki.ros.org/rosdoc_lite"">rosdoc_lite</a> is a\n<a href=""http://www.ros.org"">ROS</a> package that wraps documentation tools like\n<a href=""http://www.doxygen.org"">doxygen</a>, <a href=""http://sphinx-doc.org"">sphinx</a>,\nand <a href=""http://epydoc.sourceforge.net/"">epydoc</a>, for convenient\ngeneration of ROS package documentation.</p>\n\n<p>It also generates online documentation for the ROS wiki.</p>\n\n<p>This package provides only the <code>rosdoc_lite</code> command.  It has no supported\nPython or C++ API.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosdoc_lite"">rosdoc_lite</h1>\n\n<p>A light-weight version of rosdoc that does not rely on ROS infrastructure for crawling package.</p>\n</div>\n\n            \n          </div>'"
stereo_slam,http://rosindex.github.io/r/stereo_slam/,"jade,indigo",stereo_slam,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""stereo-slam"">Stereo SLAM</h1>\n\n<p>stereo_slam is a <a href=""http://www.ros.org/"">ROS</a> node to execute Simultaneous Localization And Mapping (SLAM) using only one stereo camera. The algorithm was designed and tested for underwater robotics. This node is based on the <a href=""http://wiki.ros.org/g2o"">G2O</a> library for graph optimization and uses the power of <a href=""https://github.com/srv/libhaloc"">libhaloc</a> to find loop closures between graph nodes. It uses a keyframe to multi-keyframe loop closing mechanism, based on keypoint clustering, to improve the SLAM corrections on feature-poor environments.</p>\n\n<p>You can see it in action here:</p>\n\n<p><a href=""http://www.youtube.com/watch?v=h3FfXafuOvE""><img src=""http://img.youtube.com/vi/h3FfXafuOvE/0.jpg"" alt=""Alt text for your video""></a></p>\n\n<p>Specially designed for underwater scenarios:</p>\n\n<p><a href=""https://www.youtube.com/watch?v=C4U8eaPzrLg"">Video: ORB-SLAM vs Stereo SLAM (underwater)</a></p>\n\n<p>More videos...</p>\n\n<p><a href=""http://www.youtube.com/watch?v=GXOhWmzSqUM"">Video: Stereo SLAM and 3D reconstruction </a> and\n<a href=""http://www.youtube.com/watch?v=8NR6ono1SUI"">Video: Stereo SLAM at UIB outdoor pond</a></p>\n\n<h2 id=""installation-ubuntu-ros-indigo"">Installation (Ubuntu + ROS Indigo)</h2>\n\n<p>1) Install the dependencies</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">sudo apt-get install ros-&lt;your ros distro&gt;-libg2o\n\nsudo apt-get install libceres-dev\n\n</code></pre></div>\n<p>You also need to setup a stereo visual odometer (e.g. <a href=""http://wiki.ros.org/viso2_ros"">viso2</a> or <a href=""http://wiki.ros.org/fovis_ros"">fovis</a>).</p>\n\n<p>3) Download the code, save it to your ROS workspace enviroment and compile.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">roscd\ngit clone https://github.com/srv/stereo_slam.git\n<span class=""nb"">cd </span>stereo_slam\nrosmake\n\n</code></pre></div>\n<h2 id=""parameters"">Parameters</h2>\n\n<ul>\n<li>\n<code>odom_topic</code> - Visual odometry topic (type nav_msgs::Odometry).</li>\n<li>\n<code>camera_topic</code> - The namespace of your stereo camera.</li>\n</ul>\n\n<p>Other (hard-coded) parameters</p>\n\n<ul>\n<li>\n<code>include/constants.h</code> - Contains the set of node parameters. Default parameters should work.</li>\n</ul>\n\n<h2 id=""run-the-node"">Run the node</h2>\n\n<p>You can run the node using the following launch file (please, for a better performance scale your images if more than 960px width).</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">&lt;launch&gt;\n  &lt;arg <span class=""nv"">name</span><span class=""o"">=</span><span class=""s2"">""camera""</span> <span class=""nv"">default</span><span class=""o"">=</span><span class=""s2"">""/stereo""</span>/&gt;\n\n  &lt;!-- Run the stereo image proc --&gt;\n  &lt;node <span class=""nv"">ns</span><span class=""o"">=</span><span class=""s2"">""</span><span class=""k"">$(</span>arg camera<span class=""k"">)</span><span class=""s2"">""</span> <span class=""nv"">pkg</span><span class=""o"">=</span><span class=""s2"">""stereo_image_proc""</span> <span class=""nb"">type</span><span class=""o"">=</span><span class=""s2"">""stereo_image_proc""</span> <span class=""nv"">name</span><span class=""o"">=</span><span class=""s2"">""stereo_image_proc""</span> /&gt;\n\n  &lt;node <span class=""nv"">pkg</span><span class=""o"">=</span><span class=""s2"">""viso2_ros""</span> <span class=""nb"">type</span><span class=""o"">=</span><span class=""s2"">""stereo_odometer""</span> <span class=""nv"">name</span><span class=""o"">=</span><span class=""s2"">""stereo_odometer""</span>&gt;\n    &lt;remap <span class=""nv"">from</span><span class=""o"">=</span><span class=""s2"">""stereo""</span> <span class=""nv"">to</span><span class=""o"">=</span><span class=""s2"">""</span><span class=""k"">$(</span>arg camera<span class=""k"">)</span><span class=""s2"">""</span>/&gt;\n    &lt;remap <span class=""nv"">from</span><span class=""o"">=</span><span class=""s2"">""image""</span> <span class=""nv"">to</span><span class=""o"">=</span><span class=""s2"">""image_rect""</span>/&gt;\n  &lt;/node&gt;\n\n  &lt;node <span class=""nv"">pkg</span><span class=""o"">=</span><span class=""s2"">""stereo_slam""</span> <span class=""nb"">type</span><span class=""o"">=</span><span class=""s2"">""localization""</span> <span class=""nv"">name</span><span class=""o"">=</span><span class=""s2"">""stereo_slam""</span> <span class=""nv"">output</span><span class=""o"">=</span><span class=""s2"">""screen""</span>&gt;\n    &lt;param <span class=""nv"">name</span><span class=""o"">=</span><span class=""s2"">""odom_topic""</span> <span class=""nv"">value</span><span class=""o"">=</span><span class=""s2"">""/stereo_odometer/odometry""</span>/&gt;\n    &lt;param <span class=""nv"">name</span><span class=""o"">=</span><span class=""s2"">""camera_topic""</span> <span class=""nv"">value</span><span class=""o"">=</span><span class=""s2"">""</span><span class=""k"">$(</span>arg camera<span class=""k"">)</span><span class=""s2"">""</span>/&gt;\n  &lt;/node&gt;\n&lt;/launch&gt;\n\n</code></pre></div>\n<h2 id=""published-topics"">Published Topics</h2>\n\n<ul>\n<li>\n<code>/stereo_slam/odometry</code> - The vehicle pose (type nav_msgs::Odometry).</li>\n<li>\n<code>/stereo_slam/graph_poses</code> - The updated graph poses (type stereo_slam::GraphPoses).</li>\n<li>\n<code>/stereo_slam/keyframes</code> - Number of inserted keyframes (type std_msgs::String).</li>\n<li>\n<code>/stereo_slam/keypoints_clustering</code> - Image containing the keypoint clusters (type sensor_msgs::Image).</li>\n<li>\n<code>/stereo_slam/loop_closing_matchings</code> - Image of the loop closing correspondences. Correspondences are keyframe-to-multi-keyframe (type sensor_msgs::Image).</li>\n<li>\n<code>/stereo_slam/loop_closing_queue</code> - Number of keyframes waiting on the loop closing queue. Please monitor this topic, to check the real-time performance: if this number grows indefinitely it means that your system is not able to process all the keyframes, then, scale your images. (type std_msgs::String).</li>\n<li>\n<code>/stereo_slam/loop_closings</code> - Number of loop closings found (type std_msgs::String).</li>\n<li>\n<code>/stereo_slam/pointcloud</code> - The pointcloud for every keyframe (type sensor_msgs::PointCloud2).</li>\n<li>\n<code>/stereo_slam/tracking_overlap</code> - Image containing a representation of the traking overlap. Used to decide when to insert a new keyframe into the graph (type sensor_msgs::Image).</li>\n<li>\n<code>/stereo_slam/camera_params</code> - The optimized (calibrated) camera parameters after every loop closure (type stereo_slam::CameraParams).</li>\n</ul>\n\n<h2 id=""saved-data"">Saved data</h2>\n\n<p>The node stores some data into the stereo_slam directory during the execution:\n* <code>haloc</code> - A folder containing all the files needed for the libhaloc library, which is responsible for loop closing detection. You do not need this folder at all.\n* <code>keyframes</code> - Stores the left stereo image for every keyframe (with the possibility of drawing the keypoint clustering over the image).\n* <code>loop_closures</code> - Stores all the images published in the topic <code>/stereo_slam/loop_closing_matchings</code>.\n* <code>pointclouds</code> - Stores all the pointclouds published in the topic <code>/stereo_slam/pointcloud</code>.</p>\n\n<h2 id=""online-graph-viewer"">Online graph viewer</h2>\n\n<p>The node provides a python script to visualize the results of the stereo_slam during the execution: scripts/graph_viewer.py:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">usage:  graph_viewer.py <span class=""o"">[</span>-h]\n    ground_truth_file visual_odometry_file\n    graph_vertices_file graph_edges_file\n\n</code></pre></div>\n<p>or (automatically detect the graph files):</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">roscd stereo_slam\n./scripts/graph_viewer.py\n\n</code></pre></div>\n<p>The odometry file can be recorded directly from ros using:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rostopic <span class=""nb"">echo</span> -p /your_odometry_topic/odometry &gt; odometry.txt\n\n</code></pre></div>\n<p>The ground truth file must have the same format than the odometry.</p>\n\n<h2 id=""post-processing"">Post processing</h2>\n\n<p>The node provides a python script to evaluate the results of the stereo_slam once the execution finishes: scripts/slam_evaluation.py:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">usage: slam_evaluation.py <span class=""o"">[</span>-h]\n    ground_truth_file visual_odometry_file\n    graph_vertices_file graph_edges_file\n\n</code></pre></div>\n<p>This script perform a set of operations in order to evaluate the performance of the stereo_slam algorithm:</p>\n\n<p>1) Align all the curves (ground truth, visual_odometry and graph vertices) to the same origin.</p>\n\n<p>2) Compute the average translation error.</p>\n\n<p>3) Plot the error vs trajectory distance.</p>\n</div>\n\n            \n          </div>'"
fetch_ros,http://rosindex.github.io/r/fetch_ros/,indigo,"fetch_calibration,fetch_depth_layer,fetch_description,fetch_maps,fetch_moveit_config,fetch_navigation,fetch_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fetch_ros"">fetch_ros</h1>\n\n<p>Open ROS Components for Robots from Fetch Robotics</p>\n\n<ul>\n<li>Devel/Test Job: <a href=""http://build.ros.org/view/Idev/job/Idev__fetch_ros__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__fetch_ros__ubuntu_trusty_amd64"" alt=""Build Status""></a>\n</li>\n<li>Debian Build: <a href=""http://build.ros.org/view/Ibin_uT64/job/Ibin_uT64__fetch_depth_layer__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__fetch_depth_layer__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
rviz,http://rosindex.github.io/r/rviz/,"hydro,electric,groovy,kinetic,jade,indigo",rviz,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><img src=""https://raw.githubusercontent.com/ros-visualization/rviz/kinetic-devel/images/splash.png"" alt=""rviz logo"">\n<a href=""https://travis-ci.org/ros-visualization/rviz""><img src=""https://travis-ci.org/ros-visualization/rviz.svg?branch=kinetic-devel"" alt=""Build Status""></a></p>\n\n<p>rviz is a 3D visualiazer for the Robot Operating System (ROS) framework.</p>\n\n<p>For more information, please see the wiki: <a href=""http://wiki.ros.org/rviz"">http://wiki.ros.org/rviz</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><img src=""https://raw.githubusercontent.com/ros-visualization/rviz/indigo-devel/images/splash.png"" alt=""rviz logo"">\n<a href=""https://travis-ci.org/ros-visualization/rviz""><img src=""https://travis-ci.org/ros-visualization/rviz.svg?branch=indigo-devel"" alt=""Build Status""></a></p>\n\n<p>rviz is a 3D visualiazer for the Robot Operating System (ROS) framework.</p>\n\n<p>For more information, please see the wiki: <a href=""http://wiki.ros.org/rviz"">http://wiki.ros.org/rviz</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robot_localization,http://rosindex.github.io/r/robot_localization/,"hydro,groovy,kinetic,jade,indigo",robot_localization,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_localization"">robot_localization</h1>\n\n<p>robot_localization is a package of nonlinear state estimation nodes. The package was developed by Charles River Analytics, Inc.</p>\n\n<p>Please see documentation here: <a href=""http://wiki.ros.org/robot_localization"">http://wiki.ros.org/robot_localization</a></p>\n</div>\n\n            \n          </div>'"
interactive_marker_twist_server,http://rosindex.github.io/r/interactive_marker_twist_server/,"hydro,jade,groovy,indigo",interactive_marker_twist_server,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
warehouse_ros,http://rosindex.github.io/r/warehouse_ros/,"jade,indigo",warehouse_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Code for persisting ROS message data using MongoDB.  Contains C++ and Python libraries to serialize ROS data to MongoDB, as well as some handy scripts to record data from the command line.  See <a href=""http://www.ros.org/wiki/warehousewg"">http://www.ros.org/wiki/warehousewg</a> for more.</p>\n\n<p>master branch: <a href=""https://travis-ci.org/ros-planning/warehouse_ros""><img src=""https://travis-ci.org/ros-planning/warehouse_ros.png?branch=master"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Abstract interface for persisting ROS message data.  Implementations are loaded using pluginlib.  Currently has one implementation, using MongoDB, warehouse_ros_mongo.  See <a href=""http://www.ros.org/wiki/warehousewg"">http://www.ros.org/wiki/warehousewg</a> for more.</p>\n</div>\n\n            \n          </div>'"
pr2_navigation,http://rosindex.github.io/r/pr2_navigation/,"hydro,fuerte,electric,groovy,diamondback,indigo","laser_tilt_controller_filter,pr2_move_base,pr2_navigation,pr2_navigation_config,pr2_navigation_global,pr2_navigation_local,pr2_navigation_perception,pr2_navigation_self_filter,pr2_navigation_slam,pr2_navigation_teleop,semantic_point_annotator","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
moveit_commander,http://rosindex.github.io/r/moveit_commander/,"hydro,fuerte,groovy,jade,indigo",moveit_commander,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-commander"">MoveIt Commander</h1>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/ros-planning/moveit_commander""><img src=""https://travis-ci.org/ros-planning/moveit_commander.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
srv_tools,http://rosindex.github.io/r/srv_tools/,"hydro,groovy,fuerte,indigo","bag_tools,launch_tools,plot_tools,pointcloud_tools,srv_tools,tf_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""srv_tools"">srv_tools</h1>\n\n<p>ROS stack with some tools. For more information, see <a href=""http://www.ros.org/wiki/srv_tools"">http://www.ros.org/wiki/srv_tools</a></p>\n</div>\n\n            \n          </div>'"
leap_motion,http://rosindex.github.io/r/leap_motion/,"hydro,jade,kinetic,indigo",leap_motion,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-leap-motion"">ROS LEAP MOTION</h1>\n\n<p>Leap Motion ROS integration</p>\n\n<h1 id=""requirements"">REQUIREMENTS</h1>\n\n<p>ROS Groovy installed including rospy and geometry_msg and the LEAP MOTION SDK for Linux</p>\n\n<h1 id=""features"">FEATURES</h1>\n\n<p>Release 0.0.1 Includes:</p>\n\n<p>Currently, this ros package features the extraction of one hand, the first to be recognized by the LEAP DEVICE.</p>\n\n<p>(Vector3)\ndirection.x\ndirection.y\ndirection.z</p>\n\n<p>(Vector3)\nnormal.x\nnormal.y\nnormal.z</p>\n\n<p>(Point)\npos.x\npos.y\npos.z</p>\n\n<p>(Vector3)\nhand.pitch\nhand.yaw\nhand.roll</p>\n\n<p>For each finger in [\xe2\x80\x98thumb\xe2\x80\x99, \xe2\x80\x98index\xe2\x80\x99, \xe2\x80\x98middle\xe2\x80\x99, \xe2\x80\x98ring\xe2\x80\x99, \xe2\x80\x98pinky\xe2\x80\x99], the coordinates of each bone in [\xe2\x80\x98metacarpal\xe2\x80\x99, \xe2\x80\x98proximal\xe2\x80\x99, \xe2\x80\x98intermediate\xe2\x80\x99, \xe2\x80\x98distal\xe2\x80\x99] are available as finger_bone (e.g., thumb_metacarpal).</p>\n\n<p>(Point)\nfinger_bone.x\nfinger_bone.y\nfinger_bone.z</p>\n\n<p>These coordinates are taken at the base of each bone (closest to the wrist). To access the end of the distal bone, use finger_tip (e.g., thumb_tip).</p>\n\n<p>(Point)\nfinger_tip.x\nfinger_tip.y\nfinger_tip.z</p>\n\n<h1 id=""installation"">INSTALLATION</h1>\n\n<ol>\n<li><p>If you don\'t already have a catkin workspace, please follow these instructions before starting with 2.: <a href=""http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace"">http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace</a></p></li>\n<li><p>cd ~/catkin_ws/src</p></li>\n<li><p>git clone <a href=""https://github.com/warp1337/rosleapmotion.git"">https://github.com/warp1337/rosleapmotion.git</a></p></li>\n<li><p>cd ~/catkin_ws &amp;&amp; catkin_make</p></li>\n<li><p>Start a roscore (another shell) and leapd (another shell)</p></li>\n<li><p>You need to append the location of your LeapSDK (especially /lib and /lib/x64 or x86) to your PYTHONPATH,e.g., export PYTHONPATH=$PYTHONPATH:/path/to/SDK/lib:/path/to/SDK/lib/x64\nRemember that you will need to have your path set at least in the ""sender"" shell. If you don\'t want to set it every time, you can also alter the leapinterface.py file (have a look at it).</p></li>\n<li><p>source ~/catkin_ws/devel/setup.bash &amp;&amp; rosrun leap_motion sender.py (another shell)</p></li>\n<li><p>source ~/catkin_ws/devel/setup.bash &amp;&amp; rosrun leap_motion subscriber.py (another shell) </p></li>\n<li><p>You are done, you should see the LEAP MOTION coordinates in your shell prompt</p></li>\n</ol>\n\n<h1 id=""use-leap-as-stereo-camera"">USE LEAP AS STEREO CAMERA</h1>\n\n<p>if you want to use leap_motion as stereo_camera, You can use by compiling it.</p>\n\n<ol>\n<li><p>Make sure that You are using LeapSDK ver 2.*</p></li>\n<li><p>You need to append the location of your LeapSDK (especially /lib and /lib/x64 or x86) to your environment variable named LEAP_SDK, e.g., add ""export LEAP_SDK=/home/Your_name/LeapDebeloperKit_2.*/LeapSDK "" in ~/.bashrc</p></li>\n<li><p>command LeapControlPanel in your shell and enable the feature in the Leap Motion control panel for any application to get the raw camera images.</p></li>\n<li><p>You need to install leap library(libLeap.so). e.g., sudo cp $LEAP_SDK/lib/x64/libLeap.so /usr/local/lib ; sudo ldconfig</p></li>\n<li><p>in your catkin_ws, catkin_make install --pkg leap_motion</p></li>\n<li><p>roslaunch leap_motion leap_camera.launch</p></li>\n<li><p>roslaunch leap_motion leap_stereo.launch</p></li>\n</ol>\n</div>\n\n            \n          </div>'"
sophus,http://rosindex.github.io/r/sophus/,"kinetic,indigo",sophus,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""sophus"">Sophus</h2>\n\n<p>C++ implementation of Lie Groups using Eigen. </p>\n\n<h3 id=""packaging"">Packaging</h3>\n\n<p>This is a maintained version of the original code developed by Hauke Strasdat.</p>\n\n<p>The current release branch is <em>indigo</em>. Ros packages are available for indigo, jade &amp; kinetic (built as a <a href=""http://wiki.ros.org/bloom/Tutorials/ReleaseThirdParty"">3rdparty package</a>).</p>\n\n<h3 id=""installation-cmake"">Installation - CMake</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd Sophus\n$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n\n</code></pre></div>\n<h3 id=""installation-ros-3rd-party-package"">Installation - ROS 3rd Party Package</h3>\n\n<p>Install in a catkin workspace dedicated to 3rd party packages (usually you\'ll install this package on its own):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ mkdir -p ~/3rd_party_workspace/src\n$ cd ~/3rd_party_workspace/src\n$ wstool init .\n$ wstool set sophus --git https://github.com/stonier/sophus.git --version=indigo\n$ wstool update sophus\n$ cd ~/3rd_party_workspace\n$ catkin_make_isolated -DCMAKE_INSTALL_PREFIX=install_isolated --install\n$ source ~/3rd_party_workspace/install_isolated/setup.bash\n\n</code></pre></div>\n<h3 id=""errata"">Errata</h3>\n\n<p>Thanks to Steven Lovegrove, Sophus is now fully templated  - using the Curiously Recurring Template Pattern (CRTP).</p>\n\n<p>(In order to go back to the non-templated/double-only version ""git checkout a621ff"".)</p>\n</div>\n\n            \n          </div>'"
vision_opencv,http://rosindex.github.io/r/vision_opencv/,"hydro,fuerte,groovy,kinetic,jade,indigo","cv_bridge,image_geometry,opencv_tests,vision_opencv,cv_markers,opencv2","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""vision_opencv"">vision_opencv</h1>\n\n<p><a href=""https://travis-ci.org/ros-perception/vision_opencv""><img src=""https://travis-ci.org/ros-perception/vision_opencv.svg?branch=indigo"" alt=""image""></a></p>\n\n<p>Packages for interfacing ROS with OpenCV, a library of programming\nfunctions for real time computer vision.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
smarthome_msgs,http://rosindex.github.io/r/smarthome_msgs/,indigo,smarthome_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-message-for-ros"">SmartHome message for ROS</h1>\n\n<p>This package is a ROS message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_msgs__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_msgs__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
jsk_common_msgs,http://rosindex.github.io/r/jsk_common_msgs/,"hydro,electric,kinetic,diamondback,jade,indigo","jsk_common_msgs,jsk_footstep_msgs,jsk_gui_msgs,jsk_hark_msgs,posedetection_msgs,speech_recognition_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
fanuc_experimental,http://rosindex.github.io/r/fanuc_experimental/,"hydro,jade,groovy,indigo","fanuc_cr35ia_support,fanuc_experimental,fanuc_lrmate200ib3l_moveit_config,fanuc_lrmate200ib_moveit_config,fanuc_lrmate200ib_moveit_plugins,fanuc_lrmate200ib_support,fanuc_lrmate200id_moveit_config,fanuc_lrmate200id_moveit_plugins,fanuc_lrmate200id_support,fanuc_m6ib_moveit_config,fanuc_m6ib_moveit_plugins,fanuc_m6ib_support,fanuc_m710ic_support,fanuc_m900ia_support,fanuc_m900ib_support,fanuc_r1000ia80f_moveit_config,fanuc_r1000ia_moveit_plugins,fanuc_r1000ia_support,fanuc_lrmate200ic5h_moveit_config,fanuc_lrmate200ic_moveit_config,fanuc_lrmate200ic_moveit_plugins,fanuc_lrmate200ic_support,fanuc_m10ia_moveit_config,fanuc_m10ia_moveit_plugins,fanuc_m16ib20_moveit_config,fanuc_m20ia10l_moveit_config,fanuc_m20ia_moveit_config,fanuc_m20ia_moveit_plugins,fanuc_m20ia_support,fanuc_m430ia2f_moveit_config,fanuc_m430ia2p_moveit_config,fanuc_m430ia_moveit_plugins","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fanuc-experimental"">Fanuc experimental</h1>\n\n<p>Experimental packages for Fanuc manipulators within <a href=""http://wiki.ros.org/Industrial"">ROS-Industrial</a>.\nSee the <a href=""http://wiki.ros.org/fanuc_experimental"">ROS wiki</a> page for more information.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repository contains packages that will be migrated to the <a href=""https://github.com/ros-industrial/fanuc"">fanuc</a> \nrepository after they have received sufficient testing. The contents of \nthese packages are subject to change, without prior notice. Any available \nAPIs are to be considered unstable and are not guaranteed to be complete \nand / or functional.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fanuc-experimental"">Fanuc experimental</h1>\n\n<p><a href=""http://build.ros.org/job/Idev__fanuc_experimental__ubuntu_trusty_amd64""><img src=""http://build.ros.org/job/Idev__fanuc_experimental__ubuntu_trusty_amd64/badge/icon"" alt=""Build Status""></a></p>\n\n<p>Experimental packages for Fanuc manipulators within <a href=""http://wiki.ros.org/Industrial"">ROS-Industrial</a>.\nSee the <a href=""http://wiki.ros.org/fanuc_experimental"">ROS wiki</a> page for more information.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repository contains packages that will be migrated to the <a href=""https://github.com/ros-industrial/fanuc"">fanuc</a>\nrepository after they have received sufficient testing. The contents of\nthese packages are subject to change, without prior notice. Any available\nAPIs are to be considered unstable and are not guaranteed to be complete\nand / or functional.</p>\n</div>\n\n            \n          </div>'"
rqt_launchtree,http://rosindex.github.io/r/rqt_launchtree/,"jade,kinetic,indigo",rqt_launchtree,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rqt_launchtree"">rqt_launchtree</h1>\n\n<p>An RQT plugin for hierarchical launchfile configuration introspection.</p>\n\n<p><img src=""http://philserver.bplaced.net/img/rqt_launchtree_screenshot.png"" alt=""img""></p>\n</div>\n\n            \n          </div>'"
fanuc,http://rosindex.github.io/r/fanuc/,"hydro,jade,groovy,indigo","fanuc,fanuc_driver,fanuc_lrmate200ic5h_moveit_config,fanuc_lrmate200ic5l_moveit_config,fanuc_lrmate200ic_moveit_config,fanuc_lrmate200ic_moveit_plugins,fanuc_lrmate200ic_support,fanuc_m10ia_moveit_config,fanuc_m10ia_moveit_plugins,fanuc_m10ia_support,fanuc_m16ib20_moveit_config,fanuc_m16ib_moveit_plugins,fanuc_m16ib_support,fanuc_m20ia10l_moveit_config,fanuc_m20ia_moveit_config,fanuc_m20ia_moveit_plugins,fanuc_m20ia_support,fanuc_m430ia2f_moveit_config,fanuc_m430ia2p_moveit_config,fanuc_m430ia_moveit_plugins,fanuc_m430ia_support,fanuc_resources,fanuc_assets,fanuc_m10ia_arm_navigation,fanuc_m16ib20_arm_navigation,fanuc_m430ia2f_arm_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fanuc"">Fanuc</h1>\n\n<p><a href=""http://jenkins.ros.org/job/devel-hydro-fanuc/""><img src=""http://jenkins.ros.org/job/devel-hydro-fanuc/badge/icon"" alt=""Build Status""></a></p>\n\n<p><a href=""http://wiki.ros.org/Industrial"">ROS-Industrial</a> Fanuc meta-package. See the <a href=""http://wiki.ros.org/fanuc"">ROS wiki</a> page for more \ninformation.</p>\n\n<p>The <a href=""https://github.com/ros-industrial/fanuc_experimental"">fanuc_experimental</a> repository contains additional packages.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>Branch naming follows the ROS distribution they are compatible with. <code>-devel</code>\nbranches may be unstable. Releases are made from the distribution branches\n(<code>hydro</code>, <code>indigo</code>).</p>\n\n<p>Older releases may be found in the old ROS-Industrial <a href=""https://swri-ros-pkg.googlecode.com/svn/tags/fanuc/fanuc-0.1.1"">subversion repository</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fanuc"">Fanuc</h1>\n\n<p><a href=""http://build.ros.org/job/Idev__fanuc__ubuntu_trusty_amd64""><img src=""http://build.ros.org/job/Idev__fanuc__ubuntu_trusty_amd64/badge/icon"" alt=""Build Status""></a></p>\n\n<p><a href=""http://wiki.ros.org/Industrial"">ROS-Industrial</a> Fanuc meta-package. See the <a href=""http://wiki.ros.org/fanuc"">ROS wiki</a> page for more\ninformation.</p>\n\n<p>The <a href=""https://github.com/ros-industrial/fanuc_experimental"">fanuc_experimental</a> repository contains additional packages.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>Branch naming follows the ROS distribution they are compatible with. <code>-devel</code>\nbranches may be unstable. Releases are made from the distribution branches\n(<code>hydro</code>, <code>indigo</code>).</p>\n\n<p>Older releases may be found in the old ROS-Industrial <a href=""https://swri-ros-pkg.googlecode.com/svn/tags/fanuc/fanuc-0.1.1"">subversion repository</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fanuc"">Fanuc</h1>\n\n<p><a href=""http://www.ros.org/wiki/Industrial"">ROS-Industrial</a> Fanuc meta-package. See the <a href=""http://ros.org/wiki/fanuc"">ROS wiki</a> page for more \ninformation.</p>\n\n<p>Some additional packages can be found in the <a href=""https://github.com/ros-industrial/fanuc_experimental"">fanuc_experimental</a> repository.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>Development in this repository is focused on ROS versions after Groovy, but \nits packages can still be installed from source on a Groovy installation.\nFor the code of the rosbuild version released into Groovy (0.1.1), see the \n<a href=""https://swri-ros-pkg.googlecode.com/svn/tags/fanuc/fanuc-0.1.1"">subversion repository</a>.</p>\n</div>\n\n            \n          </div>'"
gazebo_ros_pkgs,http://rosindex.github.io/r/gazebo_ros_pkgs/,"hydro,groovy,kinetic,jade,indigo","gazebo_msgs,gazebo_plugins,gazebo_ros,gazebo_ros_control,gazebo_ros_pkgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gazebo_ros_pkgs"">gazebo_ros_pkgs</h1>\n\n<p><a href=""http://build.ros.org/job/Jpr__gazebo_ros_pkgs__ubuntu_trusty_amd64""><img src=""http://build.ros.org/buildStatus/icon?job=Jpr__gazebo_ros_pkgs__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>Wrappers, tools and additional API\'s for using ROS with the Gazebo simulator. Formally simulator_gazebo stack, gazebo_pkgs is a meta package. Now Catkinized and works with the standalone Gazebo debian.</p>\n\n<h3 id=""installation"">Installation</h3>\n\n<p><a href=""http://gazebosim.org/tutorials?tut=ros_installing&amp;cat=connect_ros"">Installing gazebo_ros_pkgs</a></p>\n\n<h3 id=""documentation-and-tutorials"">Documentation and Tutorials</h3>\n\n<p><a href=""http://gazebosim.org/tutorials?cat=connect_ros"">On gazebosim.org</a></p>\n\n<h3 id=""develop-and-contribute"">Develop and Contribute</h3>\n\n<p>See <a href=""https://github.com/ros-simulation/gazebo_ros_pkgs/blob/hydro-devel/CONTRIBUTING.md"">Contribute</a> page.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gazebo_ros_pkgs"">gazebo_ros_pkgs</h1>\n\n<p><a href=""http://build.ros.org/job/Kpr__gazebo_ros_pkgs__ubuntu_xenial_amd64""><img src=""http://build.ros.org/buildStatus/icon?job=Kpr__gazebo_ros_pkgs__ubuntu_xenial_amd64"" alt=""Build Status""></a></p>\n\n<p>Wrappers, tools and additional API\'s for using ROS with the Gazebo simulator. Formally simulator_gazebo stack, gazebo_pkgs is a meta package. Now Catkinized and works with the standalone Gazebo debian.</p>\n\n<h3 id=""installation"">Installation</h3>\n\n<p><a href=""http://gazebosim.org/tutorials?tut=ros_installing&amp;cat=connect_ros"">Installing gazebo_ros_pkgs</a></p>\n\n<h3 id=""documentation-and-tutorials"">Documentation and Tutorials</h3>\n\n<p><a href=""http://gazebosim.org/tutorials?cat=connect_ros"">On gazebosim.org</a></p>\n\n<h3 id=""develop-and-contribute"">Develop and Contribute</h3>\n\n<p>See <a href=""https://github.com/ros-simulation/gazebo_ros_pkgs/blob/hydro-devel/CONTRIBUTING.md"">Contribute</a> page.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gazebo_ros_pkgs"">gazebo_ros_pkgs</h1>\n\n<p>Wrappers, tools and additional API\'s for using ROS with the Gazebo simulator. Formally simulator_gazebo stack, gazebo_pkgs is a meta package. Now Catkinized and works with the standalone Gazebo debian.</p>\n\n<h3 id=""installation"">Installation</h3>\n\n<p><a href=""http://gazebosim.org/wiki/Tutorials/1.9/Installing_gazebo_ros_Packages"">Installing gazebo_ros_pkgs</a></p>\n\n<h3 id=""documentation-and-tutorials"">Documentation and Tutorials</h3>\n\n<p><a href=""http://gazebosim.org/tutorials?cat=connect_ros"">On gazebosim.org</a></p>\n\n<h3 id=""develop-and-contribute"">Develop and Contribute</h3>\n\n<p>See <a href=""https://github.com/ros-simulation/gazebo_ros_pkgs/blob/hydro-devel/CONTRIBUTING.md"">Contribute</a> page.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gazebo_ros_pkgs"">gazebo_ros_pkgs</h1>\n\n<p>Wrappers, tools and additional API\'s for using ROS with the Gazebo simulator. Formally simulator_gazebo stack, gazebo_pkgs is a meta package. Now Catkinized and works with the standalone Gazebo debian.</p>\n\n<h3 id=""installation"">Installation</h3>\n\n<p><a href=""http://gazebosim.org/wiki/Tutorials/1.9/Installing_gazebo_ros_Packages"">Installing gazebo_ros_pkgs</a></p>\n\n<h3 id=""documentation-and-tutorials"">Documentation and Tutorials</h3>\n\n<p><a href=""http://gazebosim.org/wiki/Tutorials#ROS_Integration"">On gazebosim.org</a></p>\n\n<h3 id=""develop-and-contribute"">Develop and Contribute</h3>\n\n<p>See <a href=""https://github.com/ros-simulation/gazebo_ros_pkgs/blob/hydro-devel/CONTRIBUTING.md"">Contribute</a> page.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gazebo_ros_pkgs"">gazebo_ros_pkgs</h1>\n\n<p><a href=""http://build.ros.org/job/Ipr__gazebo_ros_pkgs__ubuntu_trusty_amd64""><img src=""http://build.ros.org/buildStatus/icon?job=Ipr__gazebo_ros_pkgs__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>Wrappers, tools and additional API\'s for using ROS with the Gazebo simulator. Formally simulator_gazebo stack, gazebo_pkgs is a meta package. Now Catkinized and works with the standalone Gazebo debian.</p>\n\n<h3 id=""installation"">Installation</h3>\n\n<p><a href=""http://gazebosim.org/tutorials?tut=ros_installing&amp;cat=connect_ros"">Installing gazebo_ros_pkgs</a></p>\n\n<h3 id=""documentation-and-tutorials"">Documentation and Tutorials</h3>\n\n<p><a href=""http://gazebosim.org/tutorials?cat=connect_ros"">On gazebosim.org</a></p>\n\n<h3 id=""develop-and-contribute"">Develop and Contribute</h3>\n\n<p>See <a href=""https://github.com/ros-simulation/gazebo_ros_pkgs/blob/hydro-devel/CONTRIBUTING.md"">Contribute</a> page.</p>\n</div>\n\n            \n          </div>'"
win_ros,http://rosindex.github.io/r/win_ros/,"hydro,electric,groovy,fuerte","mingw_cross,msvc_runtime,rosrun,winros_create_msg_pkg,winros_create_pkg,win_appupdater,win_boost,win_bzip2,win_dateutil,win_eigen,win_empy,win_mercurial,win_python_build_tools,win_pyyaml,win_tinyxml,msvc_sdk_tutorials,win_roscpp_tutorials,win_ros,msvc_hudson,msvc_sdk,win_pymercurial,win_rosinstall,win_rospkg,win_patches,win_roscd,gen_comms,mingw_build,win_env,win_hudson,win_py2exe,win_sdk","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">= Win-Ros =\n\nThis stack provides resources for developing with ros on windows via:\n\n* Qt + Mingw cross compiler on linux\n* Msvc compiler on windows (v2010)\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">= Win-Ros =\n\nThis stack provides an implementation for developing with ros on windows via:\n\n* Qt + Mingw cross compiles on linux\n* Msvc compiler on windows\n\nDaniel Stonier is playing with git\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
jsk_visualization,http://rosindex.github.io/r/jsk_visualization/,"hydro,groovy,indigo","jsk_interactive,jsk_interactive_marker,jsk_interactive_test,jsk_rqt_plugins,jsk_rviz_plugins,jsk_visualization","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_visualization"">jsk_visualization</h1>\n\n<p><a href=""https://travis-ci.org/jsk-ros-pkg/jsk_visualization""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_visualization.svg?branch=master"" alt=""Build Status""></a>\n<a href=""https://jsk-visualization.readthedocs.org""><img src=""https://readthedocs.org/projects/pip/badge/?version=latest"" alt=""Read the Docs""></a>\njsk visualization ros packages</p>\n\n<p>see <a href=""http://jsk-visualization.readthedocs.org/en/latest/"">read the docs</a></p>\n\n<h2 id=""deb-build-status"">Deb Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Indigo (Saucy)</th>\n<th>Indigo (Trusty)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>jsk_visualization (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__jsk_visualization__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uS32__jsk_visualization__ubuntu_saucy_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__jsk_visualization__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uT32__jsk_visualization__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>jsk_visualization (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__jsk_visualization__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uS64__jsk_visualization__ubuntu_saucy_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__jsk_visualization__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uT64__jsk_visualization__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n\n            \n          </div>'"
kobuki,http://rosindex.github.io/r/kobuki/,"hydro,fuerte,electric,groovy,kinetic,indigo","kobuki,kobuki_auto_docking,kobuki_bumper2pc,kobuki_capabilities,kobuki_controller_tutorial,kobuki_description,kobuki_keyop,kobuki_node,kobuki_random_walker,kobuki_rapps,kobuki_safety_controller,kobuki_testsuite,kobuki_arm,kobuki_driver,kobuki_ftdi,kobuki_apps,kobuki_bringup,kobuki_comms,kobuki_udev","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nThis stack is to support development of Yujin\'s **IClebo Kobuki** research development platform.\n\n## Device Drivers\n\nThis software is for standalone use - users will gain access to a library and its api.\n\n## Turtlebot Drivers\n\nTurtlebot support is enabled to meet the requirements of [Ros REP #119](http://www.ros.org/reps/rep-0119.html).\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Kobuki\n======\n\nThis repository holds the ROS wrapper of [Kobuki\'s C++ driver](https://github.com/yujinrobot/kobuki_core) plus various ROS tools and applications.\n\n![Kobuki Logo](http://kobuki.yujinrobot.com/files/cache/3e02b571192eb6f4ea15e3ad52419cd3.png)\n\n### Documentation ###\n\n* [Official Web Page](http://kobuki.yujinrobot.com) - home page, sales, specifications and hardware howto.\n* [Protocol, Usage and Api Documentation](http://yujinrobot.github.com/kobuki/doxygen/index.html) - in doxygen.\n* [Ros Usage and Tutorials](http://www.ros.org/wiki/kobuki) - on the roswiki.\n* [Turtlebot Reference Platform](http://www.ros.org/wiki/Robots/TurtleBot) - kobuki has been designed to meet the requirements of [ROS REP #119](http://www.ros.org/reps/rep-0119.html) to support turtlebot.\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">kobuki\n======\n\nThe kobuki stack consists the C++ driver for communicating with [iClebo Kobuki](http:/kobuki.yujinrobot.com) and a wrapper for [ROS](http://www.ros.org).\n\n![Kobuki Logo](http://kobuki.yujinrobot.com/files/cache/3e02b571192eb6f4ea15e3ad52419cd3.png)\n\nROS\n\nCheck out the [ROS wiki entry for Kobuki](http://www.ros.org/wiki/kobuk) for more information about how to use Kobuki with ROS.\n\nTurtleBot\n\nThe Kobuki software is designed to meet the requirements of [ROS REP #119](http://www.ros.org/reps/rep-0119.html) to support [TurtleBot](http://turtlebot.com).\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Kobuki\n======\n\nThe kobuki stack consists the C++ driver for communicating with [iClebo Kobuki](http:/kobuki.yujinrobot.com) and a wrapper for [ROS](http://www.ros.org).\n\n![Kobuki Logo](http://kobuki.yujinrobot.com/files/cache/3e02b571192eb6f4ea15e3ad52419cd3.png)\n\n### Documentation ###\n\n* [Official Web Page](http://kobuki.yujinrobot.com) - home page, sales, specifications and hardware howto.\n* [Protocol, Usage and Api Documentation](http://yujinrobot.github.com/kobuki/doxygen/index.html) - in doxygen.\n* [Ros Usage and Tutorials](http://www.ros.org/wiki/kobuki) - on the roswiki.\n* [Turtlebot Reference Platform](http://www.ros.org/wiki/Robots/TurtleBot) - kobuki has been designed to meet the requirements of [ROS REP #119](http://www.ros.org/reps/rep-0119.html) to support turtlebot.\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
kobuki_core,http://rosindex.github.io/r/kobuki_core/,"hydro,fuerte,electric,groovy,kinetic,indigo","kobuki_core,kobuki_dock_drive,kobuki_driver,kobuki_ftdi,kobuki_arm,kobuki_auto_docking,kobuki_bumper2pc,kobuki_controller_tutorial,kobuki_description,kobuki_keyop,kobuki_node,kobuki_safety_controller,kobuki_testsuite,kobuki_apps,kobuki_bringup,kobuki_comms,kobuki_udev","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nThis stack is to support development of Yujin\'s **IClebo Kobuki** research development platform.\n\n## Device Drivers\n\nThis software is for standalone use - users will gain access to a library and its api.\n\n## Turtlebot Drivers\n\nTurtlebot support is enabled to meet the requirements of [Ros REP #119](http://www.ros.org/reps/rep-0119.html).\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">kobuki\n======\n\nThe kobuki stack consists the C++ driver for communicating with [iClebo Kobuki](http:/kobuki.yujinrobot.com) and a wrapper for [ROS](http://www.ros.org).\n\n![Kobuki Logo](http://kobuki.yujinrobot.com/files/cache/3e02b571192eb6f4ea15e3ad52419cd3.png)\n\n###ROS###\n\nCheck out the [ROS wiki entry for Kobuki](http://www.ros.org/wiki/kobuki) for more information about how to use Kobuki with ROS.\n\n###TurtleBot###\n\nThe Kobuki software is designed to meet the requirements of [ROS REP #119](http://www.ros.org/reps/rep-0119.html) to support [TurtleBot](http://turtlebot.com).\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Kobuki Core\n===========\n\nThe Kobuki Core stack consists of the C++ driver for communicating with [iClebo Kobuki](http:/kobuki.yujinrobot.com). For using Kobuki with [ROS](http://www.ros.org) take a look at the [Kobuki stack](https://github.com/yujinrobot/kobuki).\n\n![Kobuki Logo](http://yujinkobuki.homepang.com/wp-content/multiverso-files/2_55afb8a87b9ea/kobuki_logo.png)\n\n### Documentation ###\n\n* [Official Web Page](http://kobuki.yujinrobot.com) - home page, sales, specifications and hardware howto.\n* [Protocol, Usage and Api Documentation](http://yujinrobot.github.com/kobuki/doxygen/index.html) - in doxygen.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">kobuki\n======\n\nThe kobuki stack consists the C++ driver for communicating with [iClebo Kobuki](http:/kobuki.yujinrobot.com) and a wrapper for [ROS](http://www.ros.org).\n\n![Kobuki Logo](http://kobuki.yujinrobot.com/files/cache/3e02b571192eb6f4ea15e3ad52419cd3.png)\n\nROS\n\nCheck out the [ROS wiki entry for Kobuki](http://www.ros.org/wiki/kobuk) for more information about how to use Kobuki with ROS.\n\nTurtleBot\n\nThe Kobuki software is designed to meet the requirements of [ROS REP #119](http://www.ros.org/reps/rep-0119.html) to support [TurtleBot](http://turtlebot.com).\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Kobuki Core\n===========\n\nThe Kobuki Core stack consists of the C++ driver for communicating with [iClebo Kobuki](http:/kobuki.yujinrobot.com). For using Kobuki with [ROS](http://www.ros.org) take a look at the [Kobuki stack](https://github.com/yujinrobot/kobuki).\n\n![Kobuki Logo](http://kobuki.yujinrobot.com/files/cache/3e02b571192eb6f4ea15e3ad52419cd3.png)\n\n### Documentation ###\n\n* [Official Web Page](http://kobuki.yujinrobot.com) - home page, sales, specifications and hardware howto.\n* [Protocol, Usage and Api Documentation](http://yujinrobot.github.com/kobuki/doxygen/index.html) - in doxygen.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
guardian_sim,http://rosindex.github.io/r/guardian_sim/,"hydro,indigo","guardian_control,guardian_description,guardian_gazebo,guardian_joystick,guardian_robot_control,guardian_sim,lwa4p_description,robotnik_wam_description","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""guardian_sim"">guardian_sim</h1>\n\n<p>ROS packages for the mobile robot Guardian (Simulation)</p>\n</div>\n\n            \n          </div>'"
rocon_multimaster,http://rosindex.github.io/r/rocon_multimaster/,"hydro,fuerte,groovy,kinetic,indigo","rocon_unreliable_experiments,rocon_gateway,rocon_gateway_tests,rocon_gateway_utils,rocon_hub,rocon_hub_client,rocon_multimaster,rocon_test,redis,rocon_utilities,rocon_gateway_graph,rocon_gateway_tutorials","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon_multimaster"">rocon_multimaster</h1>\n\n<p>Key components for ros multimaster systems</p>\n</div>\n\n            \n          </div>'"
urdf_tools,http://rosindex.github.io/r/urdf_tools/,indigo,"urdf2inventor,urdf_tools,urdf_transform,urdf_traverser,urdf_viewer","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""urdf_tools"">urdf_tools</h1>\n\n<p>A collection of tools to traverse, view and manipulate a URDF.</p>\n\n<p>See also <a href=""https://github.com/JenniferBuehler/urdf-tools-pkgs/wiki"">the wiki pages</a>.</p>\n</div>\n\n            \n          </div>'"
fetch_tools,http://rosindex.github.io/r/fetch_tools/,indigo,fetch_tools,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fetch-tools"">Fetch Tools</h1>\n\n<p>This package contains the <code>fetch</code> utility to make development\neasier. For full details of command usage and arguments, run <code>fetch\n-h</code> and <code>fetch COMMAND -h</code>. Below summarizes installation and common\nusage.</p>\n\n<h2 id=""intended-workflow"">Intended Workflow</h2>\n\n<p>This tool was written to help make it easier to develop code and\nswitch between robots with ease. It works by inferring what robot\nyou\'re working on from <code>$ROS_MASTER_URI</code> and automating common tasks\nsuch as account creation, code syncing, and running commands. It\nassumes that you always edit code in your ROS Workspace and then push\na copy of the workspace to the robot afterwards, so that you can run\nit. This keeps all code that you are developing on your computer in\ncase someone takes the robot.</p>\n\n<h3 id=""example-workflow"">Example Workflow</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Start working on freight 0 for the first time\nufr 0\nfetch create-account --fullname ""Not A. Robot""\nfetch push --install-deps --build\nfetch run ""roslaunch my_awesome_package do_stuff.launch""\n# Edit code to fix a bug\nfetch push --build ""--pkg my_awesome_package""\nfetch run ""roslaunch my_awesome_package do_stuff.launch""\n# Switch over to freight 8, since someone kidnapped freight 0\nufr 8\nfetch create-account --fullname ""Not A. Robot""\nfetch push --install-deps --build\nfetch run ""roslaunch my_awesome_package do_stuff.launch""\n\n</code></pre></div>\n<h2 id=""installation"">Installation</h2>\n\n<p>To install run, checkout the fetchrobotics/sandbox repo and run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-fetch-tools\n\n</code></pre></div>\n<p>Afterwards, restart your terminal or run <code>source $(rospack find\nfetch_tools)/setup.bash</code>.</p>\n\n<h2 id=""common-arguments"">Common Arguments</h2>\n\n<h3 id=""robot"">Robot</h3>\n\n<p>Most operations interact with a robot, in this case they take an\noptional <code>--robot</code> argument.  If the robot parameter is passed in\nusing <code>--robot</code>, that is the value used. If not, the parameter\ndefaults to the robot pointed at by <code>$ROS_MASTER_URI</code>. To set the\ndefault value, add the line <code>export FETCH_ROBOT=myrobot</code> to your\n.bashrc file.</p>\n\n<p>If the robot is not on the DNS (i.e. pinging the robot name does not\nwork), you can add <code>.local</code> to the parameter, e.g. <code>fetch4.local</code>, and\ncommunication with the robot will work via zeroconf (avahi).</p>\n\n<h3 id=""workspace"">Workspace</h3>\n\n<p>Some operations interact with a workspace, in this case take an\noptional <code>--workspace</code> argument.  If the a parameter is passed in that\nvalue is used. If not, the parameter defaults to <code>~/$ROS_DISTRO</code>. To\nset the default value, add the line <code>export\nFETCH_WORKSPACE=/path/to/my/workspace</code> to your .bashrc file. By\ndefault, the remote workspace is assumed to match your local\nworkspace. If not, you can use either the <code>--remote-workspace</code>\nargument or the <code>FETCH_REMOTE_WORKSPACE</code> environment variable to\nchange it.</p>\n\n<h3 id=""user"">User</h3>\n\n<p>Most operations interact with a robot, in this case they often effect\na particular user on that robot, so they take an optional <code>--user</code>\nargument.  If the robot parameter is passed in using <code>--user</code>, that is\nthe value used. If not, the parameter defaults to <code>$USER</code>. To set the\ndefault value, add the line <code>export FETCH_USER=myuser</code> to your .bashrc\nfile.</p>\n\n<h2 id=""fetch-commands"">\n<code>fetch</code> Commands</h2>\n\n<h3 id=""fetch-create-account"">fetch create-account</h3>\n\n<p>To create an account:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch create-account\n\n</code></pre></div>\n<p>To create an account with another username:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch create-account --robot freight0 --user test\n\n</code></pre></div>\n<p>Once it is done you can run <code>ssh $USER@freight0</code> without entering your\npassword. (If both users are the same you can just run <code>ssh freight0</code>)</p>\n\n<h4 id=""customizing-account-creation"">Customizing Account Creation</h4>\n\n<p>If you are creating accounts on lots of robots, you can customize the\ninstall process. First, create a copy of the skeleton directory:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cp -r $(rospack find fetch_tools)/resources/robot_skeleton ~/.fetch/robot_skeleton\n\n</code></pre></div>\n<p>Next, customize all files to your desired value. <code>initialize.sh</code> is a\nspecial script that gets run during the account creation process. If\nyou want to install software or run other commands every time you\ncreate an account, customize <code>initialize.sh</code>.</p>\n\n<h3 id=""fetch-push"">fetch push</h3>\n\n<p><strong>WARNING:</strong> Synchronize in this context means make the remote\nworkspace like the current workspace. This means new files will be\nadded and <em>old files will be deleted.</em> It is strongly recommended that\nyou never change files in the workspace on the robot directly.</p>\n\n<p>To synchronize your <code>$workspace/src</code> directory with the matching\ndirectory on another robot:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch push\n\n</code></pre></div>\n<p>To synchronize another workspace with a robot:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch push --workspace ~/test_ws\n\n</code></pre></div>\n<p>To synchronize and then run <code>catkin_make</code> to build:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch push --build\n\n</code></pre></div>\n<p>To synchronize and install all dependencies with rosdep:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch push --install-deps\n\n</code></pre></div>\n<p>To synchronize and then run <code>catkin_make --pkg follow_pick\n-DCMAKE_BUILD_TYPE=RELEASE</code> instead of <code>catkin_make --pkg follow_pick\n-DCMAKE_BUILD_TYPE=Debug</code> to build:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch push --no-debug --build ""--pkg follow_pick -DCMAKE_BUILD_TYPE=RELEASE""\n\n</code></pre></div>\n<h3 id=""fetch-pull"">fetch pull</h3>\n\n<p>Is just fetch push in reverse, so it pulls code from the remote\nworkspace into the local workspace. It supports the same arguments</p>\n\n<h3 id=""fetch-run"">fetch run</h3>\n\n<p>To run a command on the robot:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch run COMMAND\n\n</code></pre></div>\n<p>To run a command on the robot with arguments:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch run ""COMMAND --flag1 --flag2 arg1""\n\n</code></pre></div>\n<h3 id=""fetch-lint"">fetch lint</h3>\n\n<p>Fetch lint runs pep8, roslint, and catkin_lint to make sure a package\nis compliant with all style guides. To lint a package:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch lint PACKAGE\n\n</code></pre></div>\n<p>To lint a folder:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch lint FOLDER\n\n</code></pre></div>\n<p>To lint a file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch lint FILE\n\n</code></pre></div>\n<h3 id=""fetch-workspace-status"">fetch workspace-status</h3>\n\n<p>This command produces a table of the current workspace, including the\ngit information so that you can communicate what code is checked out\neasily. Running:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch workspace-status\n\n</code></pre></div>\n<p>Produces:</p>\n\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Branch</th>\n<th>SHA1</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fetch_ros</td>\n<td>indigo-devel</td>\n<td>30d7794</td>\n</tr>\n<tr>\n<td>fetch_tools</td>\n<td>push</td>\n<td>5bbb0e4-dirty</td>\n</tr>\n<tr>\n<td>some_random_code</td>\n<td>None</td>\n<td>untracked</td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""fetch-debug-snapshot"">fetch debug-snapshot</h3>\n\n<p>This command takes a debug snapshot of running robot, gathering\ninformation that can be useful in diagnosing robot problems:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fetch debug-snapshot\n\n</code></pre></div>\n<h2 id=""useful-aliases"">Useful Aliases</h2>\n\n<p>In addition to the <code>fetch</code> command, setup.bash loads some useful\naliases for working with multiple Fetch and Freight robots.</p>\n\n<h3 id=""working-with-ros_master_uri"">Working with <code>$ROS_MASTER_URI</code>\n</h3>\n\n<p>There are three aliases for working with <code>$ROS_MASTER_URI</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">uf 5   # Set ROS_MASTER_URI=""http://fetch5:11311""\nufr 0  # Set ROS_MASTER_URI=""http://freight0:11311""\nul     # Set ROS_MASTER_URI=""http://localhost:11311""\n\n</code></pre></div>\n<ul>\n<li>\n<code>uf</code> is short for use fetch</li>\n<li>\n<code>ufr</code> is short for use freight</li>\n<li>\n<code>ul</code> is short for use localhost</li>\n</ul>\n\n<p>Note also that <code>ul</code> supports setting a custom port</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ul 11312  # Set ROS_MASTER_URI=""http://localhost:11312""\n\n</code></pre></div>\n<h3 id=""ssh"">SSH</h3>\n\n<p>There are two aliases for sshing into robots</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sf 5   # SSH into fetch 5\nsfr 0  # SSH into freight0\n\n</code></pre></div>\n<h3 id=""using-local-with-uf-ufr-and-sf-sfr"">Using .local with uf/ufr and sf/sfr</h3>\n\n<p>The robot\'s number can simply be appended with <code>.local</code> to take advantage\nof zeroconf (avahi) without needing any DNS configuration.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">uf 5.local   # Set ROS_MASTER_URI=""http://fetch5.local:11311""\nsf 5.local   # SSH into fetch 5, without using DNS\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
message_multiplexing,http://rosindex.github.io/r/message_multiplexing/,indigo,"message_multiplexing,mm_core_msgs,mm_eigen_msgs,mm_messages,mm_mux_demux,mm_radio","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""message_multiplexing"">message_multiplexing</h1>\n\n<p>Lightweight embedded messaging system that funnels all communications through a single port with the ability to serialise/deserialise to and from native types.</p>\n</div>\n\n            \n          </div>'"
qglv_toolkit,http://rosindex.github.io/r/qglv_toolkit/,indigo,"qglv_extras,qglv_gallery,qglv_opencv,qglv_opengl,qglv_pcl,qglv_toolkit","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""about"">About</h1>\n\n<p>This repository contains rendering api for methods and objects we use within the qglviewer framework.\nThis includes (simply because we don\'t have enough to warrant additional repositories):</p>\n\n<ul>\n<li>Pure opengl primitives and objects</li>\n<li>Qt-Opencv widgets</li>\n<li>PCL renderings on a gl canvas</li>\n</ul>\n\n<h1 id=""usage"">Usage</h1>\n\n<p>Methods and headers are arranged in the following fashion:</p>\n\n<ul>\n<li>One namespace for everything: qglv.</li>\n<li>One core header for each package, e.g. <qglv>, <qglv>.</qglv></qglv>\n</li>\n<li>The gl header organiser in <qglv> contains the correct mix and sequence of gl headers we use.</qglv>\n</li>\n</ul>\n\n<p>If building your own gl classes:</p>\n\n<ul>\n<li>Make sure you call the gl headers first so you don\'t end up with GL/Glew conflicts.</li>\n</ul>\n\n<p>Creating an application with a qglviewer with lots of lighting/keyboard/mouse/... settings appropriate\nfor our use cases, simply inherit our QGLViewer first:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;qglv/opengl.hpp&gt;\n#include &lt;qglv/extras.hpp&gt;\n\nclass MyQGLViewerCanvas : public qglv::QGLViewer\n\n</code></pre></div>\n<h1 id=""dev-notes"">Dev Notes</h1>\n\n<p>Methods and classes are usually grouped in the following header directories\n(independent of package name):</p>\n\n<ul>\n<li>\n<code>include/qglv/gl</code> : for gl-like methods (e.g. qglv::moveTo(...))</li>\n<li>\n<code>include/qglv/primitives</code> : for basic renderings, e.g. arrows frames</li>\n<li>\n<code>include/qglv/objects</code> : for complicated objects that follow a typical init into a gl generated list, followed by a <code>draw()</code> function.</li>\n<li>\n<code>include/qglv/widgets</code> : for qt widgets, frames, etc.</li>\n</ul>\n\n<p>To put what where? Packages are organised according to their dependencies. This is important so we don\'t\nrope in a huge dependency tree for people when they don\'t want it. e.g. why bring in the humungous block that\nis opencv if you don\'t use the qglv opencv widget? Even more important for pcl.</p>\n\n<ul>\n<li>To add a primitive/object that is only dependent on gl, put it in <code>qglv_opengl</code>.</li>\n<li>To add an primitive/object/widget dependent on qglviewer api, put it in <code>qglv_extras</code>.</li>\n<li>A nice thing to do is transition objects from qglv_extras -&gt; qglv_opengl as we can.</li>\n<li>To add a primitive/object/widget dependent on opencv, put it in <code>qglv_opencv</code>\n</li>\n<li>To add a primitive/object/widget dependent on pcl, put it in <code>qglv_pcl</code>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
ros_controllers,http://rosindex.github.io/r/ros_controllers/,"hydro,fuerte,groovy,kinetic,jade,indigo","diff_drive_controller,effort_controllers,force_torque_sensor_controller,forward_command_controller,gripper_action_controller,imu_sensor_controller,joint_state_controller,joint_trajectory_controller,position_controllers,ros_controllers,rqt_joint_trajectory_controller,velocity_controllers,controllers_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_controllers"">ros_controllers</h1>\n\n<p>See <a href=""http://ros.org/wiki/ros_control"">ros_control documentation</a> on ros.org</p>\n\n<h2 id=""rosbuild-support"">rosbuild support</h2>\n\n<p>By the hydro-devel branch of ros_controllers has been catkinized but remains backwards compatible with Fuerte and earlier via a bash script that enables manifest.xml files to be shown. To enable, run <code>. enable_manifest_xml.sh</code> in the root of this meta package and all of the manifest.xml files will be enabled.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_controllers"">ros_controllers</h1>\n\n<p>See <a href=""http://ros.org/wiki/ros_control"">ros_control documentation</a> on ros.org</p>\n\n<h2 id=""rosbuild-support"">rosbuild support</h2>\n\n<p>By the hydro-devel branch of ros_controllers has been catkinized but remains backwards compatible with Fuerte and earlier via a bash script that enables manifest.xml files to be shown. To enable, run <code>. enable_manifest_xml.sh</code> in the root of this meta package and all of the manifest.xml files will be enabled.</p>\n\n<h3 id=""build-status"">Build Status</h3>\n\n<p><a href=""https://travis-ci.org/ros-controls/ros_controllers""><img src=""https://travis-ci.org/ros-controls/ros_controllers.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
yujin_ocs,http://rosindex.github.io/r/yujin_ocs/,"hydro,fuerte,groovy,kinetic,indigo","yocs_ar_marker_tracking,yocs_ar_pair_approach,yocs_ar_pair_tracking,yocs_cmd_vel_mux,yocs_controllers,yocs_diff_drive_pose_controller,yocs_joyop,yocs_keyop,yocs_localization_manager,yocs_math_toolkit,yocs_navi_toolkit,yocs_navigator,yocs_rapps,yocs_safety_controller,yocs_velocity_smoother,yocs_virtual_sensor,yocs_waypoint_provider,yocs_waypoints_navi,yujin_ocs,cmd_vel_mux","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""yujin-open-control-system-yocs"">Yujin Open Control System (yocs)</h1>\n\n<p>Yujin Robot\'s open-source control system including libraries and exectuables</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""yujin_open_control_system-yocs"">yujin_open_control_system (yocs)</h1>\n\n<p>Yujin Robot\'s open-source control system including libraries and exectuables</p>\n</div>\n\n            \n          </div>'"
diagnostics,http://rosindex.github.io/r/diagnostics/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","diagnostic_aggregator,diagnostic_analysis,diagnostic_common_diagnostics,diagnostic_updater,diagnostics,self_test,test_diagnostic_aggregator","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
geometric_shapes,http://rosindex.github.io/r/geometric_shapes/,"hydro,groovy,kinetic,jade,indigo",geometric_shapes,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""geometric_shapes"">geometric_shapes</h1>\n\n<p>This package contains generic definitions of geometric shapes and bodies, as well as tools for operating on shape messages.\nShapes represent only the form of an object.\nBodies are shapes at a particular pose. Routines such as point containment and ray intersections are provided.</p>\n\n<p>Supported shapes:\n- sphere\n- box\n- cone\n- cylinder\n- mesh</p>\n\n<p>Note: Bodies for meshes compute the convex hull of those meshes in order to provide the point containment / ray intersection routines.\nNote: <a href=""https://github.com/ros-planning/shape_tools"">shape_tools</a> package was recently merged into this package</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>Devel Job: <a href=""http://build.ros.org/view/Ibin_uT64/job/Jbin_uT64__geometric_shapes__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__geometric_shapes__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></p>\n\n<p>Debian Job: <a href=""http://build.ros.org/view/Idev/job/Jdev__geometric_shapes__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Jdev__geometric_shapes__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""geometric_shapes"">geometric_shapes</h1>\n\n<p>This package contains generic definitions of geometric shapes and bodies. Shapes represent only the form of an object.\nBodies are shapes at a particular pose. Routines such as point containment and ray intersections are provided.</p>\n\n<p>Supported shapes:\n- sphere\n- box\n- cone\n- cylinder\n- mesh</p>\n\n<p>Note: Bodies for meshes compute the convex hull of those meshes in order to provide the point containment / ray intersection routines.</p>\n</div>\n\n            \n          </div>'"
ecl_core,http://rosindex.github.io/r/ecl_core/,"hydro,groovy,kinetic,jade,indigo","ecl_command_line,ecl_concepts,ecl_containers,ecl_converters,ecl_core,ecl_core_apps,ecl_devices,ecl_eigen,ecl_exceptions,ecl_filesystem,ecl_formatters,ecl_geometry,ecl_ipc,ecl_linear_algebra,ecl_math,ecl_mpl,ecl_sigslots,ecl_statistics,ecl_streams,ecl_threads,ecl_time,ecl_type_traits,ecl_utilities","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecl_core"">ecl_core</h1>\n\n<p>A set of tools and interfaces extending the capabilities of c++ to provide a lightweight, consistent interface with a focus for control programming.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecl_core"">ecl_core</h1>\n\n<p>A set of tools and interfaces extending the capabilities of c++ to provide a lightweight,\nconsistent interface with a focus for control programming.</p>\n</div>\n\n            \n          </div>'"
ecl_lite,http://rosindex.github.io/r/ecl_lite/,"hydro,groovy,kinetic,jade,indigo","ecl_config,ecl_console,ecl_converters_lite,ecl_errors,ecl_io,ecl_lite,ecl_sigslots_lite,ecl_time_lite","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecl_lite"">ecl_lite</h1>\n\n<p>The ecl-lite stack includes packages with few dependencies on either system\nor c++ functionality. This makes it ideal for very embedded builds where\nmany of the usual mechanisms are unavailable.</p>\n\n<ul>\n<li>No malloc/new</li>\n<li>No exceptions</li>\n<li>Minimal templates</li>\n</ul>\n\n<p>It also includes a few packages which standardise lower level\napi (e.g. posix/win32) with drop-ins to make them properly cross-platform,</p>\n</div>\n\n            \n          </div>'"
moveit_msgs,http://rosindex.github.io/r/moveit_msgs/,"hydro,fuerte,groovy,jade,indigo","moveit_msgs,kinematics_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit_msgs"">moveit_msgs</h1>\n\n<p>This package includes the ROS messages specific to MoveIt!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit_msgs"">moveit_msgs</h1>\n\n<p>This package includes the ROS messages specific to MoveIt!</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/ros-planning/moveit_msgs""><img src=""https://travis-ci.org/ros-planning/moveit_msgs.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
ros_canopen,http://rosindex.github.io/r/ros_canopen/,indigo,"can_msgs,canopen_402,canopen_chain_node,canopen_master,canopen_motor_node,ros_canopen,socketcan_bridge,socketcan_interface","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_canopen"">ros_canopen</h1>\n\n<p>Canopen implementation for ROS.</p>\n\n<p><a href=""https://travis-ci.org/ros-industrial/ros_canopen""><img src=""https://travis-ci.org/ros-industrial/ros_canopen.svg?branch=indigo-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
smarthome_media_kodi_driver,http://rosindex.github.io/r/smarthome_media_kodi_driver/,indigo,smarthome_media_kodi_driver,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
teb_local_planner,http://rosindex.github.io/r/teb_local_planner/,"jade,kinetic,indigo",teb_local_planner,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teb_local_planner-ros-package"">teb_local_planner ROS Package</h1>\n\n<p>The teb_local_planner package implements a plugin to the base_local_planner of the 2D navigation stack. \nThe underlying method called Timed Elastic Band locally optimizes the robot\'s trajectory with respect to trajectory execution time, \nseparation from obstacles and compliance with kinodynamic constraints at runtime.</p>\n\n<p>Refer to <a href=""http://wiki.ros.org/teb_local_planner"">http://wiki.ros.org/teb_local_planner</a> for more information and tutorials.</p>\n\n<p>Build status of the <em>jade-devel</em> branch:\n- ROS Buildfarm: <a href=""http://build.ros.org/job/Jdev__teb_local_planner__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Jdev__teb_local_planner__ubuntu_trusty_amd64"" alt=""Jade Build Status""></a>\n- Travis: <a href=""https://travis-ci.org/rst-tu-dortmund/teb_local_planner""><img src=""https://travis-ci.org/rst-tu-dortmund/teb_local_planner.svg?branch=jade-devel"" alt=""Build Status""></a></p>\n\n<h3 id=""papers-describing-the-approach"">Papers Describing the Approach</h3>\n\n<ul>\n<li>R\xc3\xb6smann C., Feiten W., W\xc3\xb6sch T., Hoffmann F. and Bertram. T.: Trajectory modification considering dynamic constraints of autonomous robots. Proc. 7th German Conference on Robotics, Germany, Munich, May 2012, pp 74\xe2\x80\x9379.</li>\n<li>R\xc3\xb6smann C., Feiten W., W\xc3\xb6sch T., Hoffmann F. and Bertram. T.: Efficient trajectory optimization using a sparse model. Proc. IEEE European Conference on Mobile Robots, Spain, Barcelona, Sept. 2013, pp. 138\xe2\x80\x93143. </li>\n<li>R\xc3\xb6smann C., Hoffmann F. and Bertram. T.: Planning of Multiple Robot Trajectories in Distinctive Topologies, Proc. IEEE European Conference on Mobile Robots, UK, Lincoln, Sept. 2015.</li>\n</ul>\n\n<h3 id=""videos"">Videos</h3>\n\n<p>The left of the following videos presents features of the package and shows examples from simulation and real robot situations.\nSome spoken explanations are included in the audio track of the video. \nThe right one demonstrates features introduced in version 0.2 (supporting car-like robots and costmap conversion). Please watch the left one first.</p>\n\n<p><a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=e1Bw6JOgHME"" target=""_blank""><img src=""http://img.youtube.com/vi/e1Bw6JOgHME/0.jpg"" alt=""teb_local_planner - An Optimal Trajectory Planner for Mobile Robots"" width=""240"" height=""180"" border=""10""></a>\n<a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=o5wnRCzdUMo"" target=""_blank""><img src=""http://img.youtube.com/vi/o5wnRCzdUMo/0.jpg"" alt=""teb_local_planner - Car-like Robots and Costmap Conversion"" width=""240"" height=""180"" border=""10""></a></p>\n\n<h3 id=""license"">License</h3>\n\n<p>The <em>teb_local_planner</em> package is licensed under the BSD license.\nIt depends on other ROS packages, which are listed in the package.xml. They are also BSD licensed.</p>\n\n<p>Some third-party dependencies are included that are licensed under different terms:\n - <em>Eigen</em>, MPL2 license, <a href=""http://eigen.tuxfamily.org"">http://eigen.tuxfamily.org</a>\n - <em>libg2o</em> / <em>g2o</em> itself is licensed under BSD, but the enabled <em>csparse_extension</em> is licensed under LGPL3+, \n   <a href=""https://github.com/RainerKuemmerle/g2o"">https://github.com/RainerKuemmerle/g2o</a>. <a href=""http://www.cise.ufl.edu/research/sparse/CSparse/""><em>CSparse</em></a> is included as part of the <em>SuiteSparse</em> collection, <a href=""http://www.suitesparse.com"">http://www.suitesparse.com</a>. \n - <em>Boost</em>, Boost Software License, <a href=""http://www.boost.org"">http://www.boost.org</a></p>\n\n<p>All packages included are distributed in the hope that they will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the licenses for more details.</p>\n\n<h3 id=""requirements"">Requirements</h3>\n\n<p>Install dependencies (listed in the <em>package.xml</em> and <em>CMakeLists.txt</em> file) using <em>rosdep</em>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install teb_local_planner\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teb_local_planner-ros-package"">teb_local_planner ROS Package</h1>\n\n<p>The teb_local_planner package implements a plugin to the base_local_planner of the 2D navigation stack. \nThe underlying method called Timed Elastic Band locally optimizes the robot\'s trajectory with respect to trajectory execution time, \nseparation from obstacles and compliance with kinodynamic constraints at runtime.</p>\n\n<p>Refer to <a href=""http://wiki.ros.org/teb_local_planner"">http://wiki.ros.org/teb_local_planner</a> for more information and tutorials.</p>\n\n<p>Build status of the <em>kinetic-devel</em> branch:\n- ROS Buildfarm: <a href=""http://build.ros.org/job/Kdev__teb_local_planner__ubuntu_xenial_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Kdev__teb_local_planner__ubuntu_xenial_amd64"" alt=""Kinetic Status""></a>\n- Travis (Ubuntu Trusty): <a href=""https://travis-ci.org/rst-tu-dortmund/teb_local_planner""><img src=""https://travis-ci.org/rst-tu-dortmund/teb_local_planner.svg?branch=kinetic-devel"" alt=""Build Status""></a></p>\n\n<h3 id=""papers-describing-the-approach"">Papers Describing the Approach</h3>\n\n<ul>\n<li>R\xc3\xb6smann C., Feiten W., W\xc3\xb6sch T., Hoffmann F. and Bertram. T.: Trajectory modification considering dynamic constraints of autonomous robots. Proc. 7th German Conference on Robotics, Germany, Munich, May 2012, pp 74\xe2\x80\x9379.</li>\n<li>R\xc3\xb6smann C., Feiten W., W\xc3\xb6sch T., Hoffmann F. and Bertram. T.: Efficient trajectory optimization using a sparse model. Proc. IEEE European Conference on Mobile Robots, Spain, Barcelona, Sept. 2013, pp. 138\xe2\x80\x93143. </li>\n<li>R\xc3\xb6smann C., Hoffmann F. and Bertram. T.: Planning of Multiple Robot Trajectories in Distinctive Topologies, Proc. IEEE European Conference on Mobile Robots, UK, Lincoln, Sept. 2015.</li>\n</ul>\n\n<h3 id=""videos"">Videos</h3>\n\n<p>The left of the following videos presents features of the package and shows examples from simulation and real robot situations.\nSome spoken explanations are included in the audio track of the video. \nThe right one demonstrates features introduced in version 0.2 (supporting car-like robots and costmap conversion). Please watch the left one first.</p>\n\n<p><a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=e1Bw6JOgHME"" target=""_blank""><img src=""http://img.youtube.com/vi/e1Bw6JOgHME/0.jpg"" alt=""teb_local_planner - An Optimal Trajectory Planner for Mobile Robots"" width=""240"" height=""180"" border=""10""></a>\n<a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=o5wnRCzdUMo"" target=""_blank""><img src=""http://img.youtube.com/vi/o5wnRCzdUMo/0.jpg"" alt=""teb_local_planner - Car-like Robots and Costmap Conversion"" width=""240"" height=""180"" border=""10""></a></p>\n\n<h3 id=""license"">License</h3>\n\n<p>The <em>teb_local_planner</em> package is licensed under the BSD license.\nIt depends on other ROS packages, which are listed in the package.xml. They are also BSD licensed.</p>\n\n<p>Some third-party dependencies are included that are licensed under different terms:\n - <em>Eigen</em>, MPL2 license, <a href=""http://eigen.tuxfamily.org"">http://eigen.tuxfamily.org</a>\n - <em>libg2o</em> / <em>g2o</em> itself is licensed under BSD, but the enabled <em>csparse_extension</em> is licensed under LGPL3+, \n   <a href=""https://github.com/RainerKuemmerle/g2o"">https://github.com/RainerKuemmerle/g2o</a>. <a href=""http://www.cise.ufl.edu/research/sparse/CSparse/""><em>CSparse</em></a> is included as part of the <em>SuiteSparse</em> collection, <a href=""http://www.suitesparse.com"">http://www.suitesparse.com</a>. \n - <em>Boost</em>, Boost Software License, <a href=""http://www.boost.org"">http://www.boost.org</a></p>\n\n<p>All packages included are distributed in the hope that they will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the licenses for more details.</p>\n\n<h3 id=""requirements"">Requirements</h3>\n\n<p>Install dependencies (listed in the <em>package.xml</em> and <em>CMakeLists.txt</em> file) using <em>rosdep</em>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install teb_local_planner\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teb_local_planner-ros-package"">teb_local_planner ROS Package</h1>\n\n<p>The teb_local_planner package implements a plugin to the base_local_planner of the 2D navigation stack. \nThe underlying method called Timed Elastic Band locally optimizes the robot\'s trajectory with respect to trajectory execution time, \nseparation from obstacles and compliance with kinodynamic constraints at runtime.</p>\n\n<p>Refer to <a href=""http://wiki.ros.org/teb_local_planner"">http://wiki.ros.org/teb_local_planner</a> for more information and tutorials.</p>\n\n<p>Build status of the <em>indigo-devel</em> branch:\n- ROS Buildfarm: <a href=""http://build.ros.org/job/Idev__teb_local_planner__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__teb_local_planner__ubuntu_trusty_amd64"" alt=""Inidgo Build Status""></a>\n- Travis: <a href=""https://travis-ci.org/rst-tu-dortmund/teb_local_planner""><img src=""https://travis-ci.org/rst-tu-dortmund/teb_local_planner.svg?branch=indigo-devel"" alt=""Build Status""></a></p>\n\n<h3 id=""papers-describing-the-approach"">Papers Describing the Approach</h3>\n\n<ul>\n<li>R\xc3\xb6smann C., Feiten W., W\xc3\xb6sch T., Hoffmann F. and Bertram. T.: Trajectory modification considering dynamic constraints of autonomous robots. Proc. 7th German Conference on Robotics, Germany, Munich, May 2012, pp 74\xe2\x80\x9379.</li>\n<li>R\xc3\xb6smann C., Feiten W., W\xc3\xb6sch T., Hoffmann F. and Bertram. T.: Efficient trajectory optimization using a sparse model. Proc. IEEE European Conference on Mobile Robots, Spain, Barcelona, Sept. 2013, pp. 138\xe2\x80\x93143. </li>\n<li>R\xc3\xb6smann C., Hoffmann F. and Bertram. T.: Planning of Multiple Robot Trajectories in Distinctive Topologies, Proc. IEEE European Conference on Mobile Robots, UK, Lincoln, Sept. 2015.</li>\n</ul>\n\n<h3 id=""videos"">Videos</h3>\n\n<p>The left of the following videos presents features of the package and shows examples from simulation and real robot situations.\nSome spoken explanations are included in the audio track of the video. \nThe right one demonstrates features introduced in version 0.2 (supporting car-like robots and costmap conversion). Please watch the left one first.</p>\n\n<p><a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=e1Bw6JOgHME"" target=""_blank""><img src=""http://img.youtube.com/vi/e1Bw6JOgHME/0.jpg"" alt=""teb_local_planner - An Optimal Trajectory Planner for Mobile Robots"" width=""240"" height=""180"" border=""10""></a>\n<a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=o5wnRCzdUMo"" target=""_blank""><img src=""http://img.youtube.com/vi/o5wnRCzdUMo/0.jpg"" alt=""teb_local_planner - Car-like Robots and Costmap Conversion"" width=""240"" height=""180"" border=""10""></a></p>\n\n<h3 id=""license"">License</h3>\n\n<p>The <em>teb_local_planner</em> package is licensed under the BSD license.\nIt depends on other ROS packages, which are listed in the package.xml. They are also BSD licensed.</p>\n\n<p>Some third-party dependencies are included that are licensed under different terms:\n - <em>Eigen</em>, MPL2 license, <a href=""http://eigen.tuxfamily.org"">http://eigen.tuxfamily.org</a>\n - <em>libg2o</em> / <em>g2o</em> itself is licensed under BSD, but the enabled <em>csparse_extension</em> is licensed under LGPL3+, \n   <a href=""https://github.com/RainerKuemmerle/g2o"">https://github.com/RainerKuemmerle/g2o</a>. <a href=""http://www.cise.ufl.edu/research/sparse/CSparse/""><em>CSparse</em></a> is included as part of the <em>SuiteSparse</em> collection, <a href=""http://www.suitesparse.com"">http://www.suitesparse.com</a>. \n - <em>Boost</em>, Boost Software License, <a href=""http://www.boost.org"">http://www.boost.org</a></p>\n\n<p>All packages included are distributed in the hope that they will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the licenses for more details.</p>\n\n<h3 id=""requirements"">Requirements</h3>\n\n<p>Install dependencies (listed in the <em>package.xml</em> and <em>CMakeLists.txt</em> file) using <em>rosdep</em>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install teb_local_planner\n</code></pre></div>\n</div>\n\n            \n          </div>'"
micros_swarm_framework,http://rosindex.github.io/r/micros_swarm_framework/,indigo,micros_swarm_framework,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""introduction"">Introduction</h2>\n\n<p>This package provides a programming framework for robot swarms, including a communication kernel and  a synchronization protocol. This package also provides essential data structures for swarm\nrobotics, such as Swarm, Neighbors, and Virtual Stigmergy.</p>\n\n<p>ROS wiki:  <a href=""http://wiki.ros.org/micros_swarm_framework"">http://wiki.ros.org/micros_swarm_framework</a></p>\n\n<p></p>\n<center>\n<img src=""https://raw.githubusercontent.com//xuefengchang/micros_swarm_framework/master//doc/images/app1.png"" alt=""image1"">\n</center>\n\n<p></p>\n<center>\n<img src=""https://raw.githubusercontent.com//xuefengchang/micros_swarm_framework/master//doc/images/app2.png"" alt=""image2"">\n</center>\n</div>\n\n            \n          </div>'"
urdf_tutorial,http://rosindex.github.io/r/urdf_tutorial/,"hydro,groovy,kinetic,jade,indigo",urdf_tutorial,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""urdf_tutorial"">urdf_tutorial</h1>\n\n<p>See the tutorials over at <a href=""http://wiki.ros.org/urdf_tutorial"">http://wiki.ros.org/urdf_tutorial</a></p>\n</div>\n\n            \n          </div>'"
trac_ik,http://rosindex.github.io/r/trac_ik/,"jade,kinetic,indigo","trac_ik,trac_ik_examples,trac_ik_lib,trac_ik_kinematics_plugin","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>The ROS packages in this repository were created to provide an alternative\nInverse Kinematics solver to the popular inverse Jacobian methods in KDL.\nSpecifically, KDL\'s convergence algorithms are based on Newton\'s method, which\ndoes not work well in the presence of joint limits --- common for many robotic\nplatforms.  TRAC-IK concurrently runs two IK implementations.  One is a simple\nextension to KDL\'s Newton-based convergence algorithm that detects and\nmitigates local minima due to joint limits by random jumps.  The second is an\nSQP (Sequential Quadratic Programming) nonlinear optimization approach which\nuses quasi-Newton methods that better handle joint limits.  By default, the IK\nsearch returns immediately when either of these algorithms converges to an\nanswer.  Secondary constraints of distance and manipulability are also provided \nin order to receive back the ""best"" IK solution.</p>\n\n<h3 id=""this-repo-contains-4-ros-packages"">This repo contains 4 ROS packages:</h3>\n\n<ul>\n<li><p>trac_ik is a metapackage with build and complete <a href=""https://bitbucket.org/traclabs/trac_ik/src/HEAD/trac_ik/CHANGELOG.rst"">Changelog</a> info.</p></li>\n<li><p>trac_ik_examples contains examples on how to use the standalone TRAC-IK library.</p></li>\n<li><p><a href=""https://bitbucket.org/traclabs/trac_ik/src/HEAD/trac_ik_lib"">trac_ik_lib</a>, the TRAC-IK kinematics code,\nbuilds a .so library that can be used as a drop in replacement for KDL\'s IK\nfunctions for KDL chains. Details for use are in trac_ik_lib/README.md.</p></li>\n<li><p><a href=""https://bitbucket.org/traclabs/trac_ik/src/HEAD/trac_ik_kinematics_plugin"">trac_ik_kinematics_plugin</a> builds a <a href=""http://moveit.ros.org/documentation/concepts/#kinematics"">MoveIt! plugin</a> that can\nreplace the default KDL plugin for MoveIt! with TRAC-IK for use in planning.\nDetails for use are in trac_ik_kinematics_plugin/README.md. (Note prior to v1.1.2, the plugin was not thread safe.)</p></li>\n</ul>\n\n<h3 id=""as-of-v1-4-3-this-package-is-part-of-the-ros-indigo-jade-binaries-sudo-apt-get-install-ros-jade-trac-ik"">As of v1.4.3, this package is part of the ROS Indigo/Jade binaries: <code>sudo apt-get install ros-jade-trac-ik</code>\n</h3>\n\n<h3 id=""a-detailed-writeup-on-trac-ik-can-be-found-here"">A detailed writeup on TRAC-IK can be found here:</h3>\n\n<p><a href=""https://personal.traclabs.com/%7Epbeeson/publications/b2hd-Beeson-humanoids-15.html"">Humanoids-2015</a> (reported results are from v1.0.0 of TRAC-IK, see below for newer results).</p>\n\n<h3 id=""some-sample-results-are-below"">Some sample results are below:</h3>\n\n<p><em>Orocos\' <strong>KDL</strong></em> (inverse Jacobian w/ joint limits), <em><strong>KDL-RR</strong></em> (our fixes to KDL joint limit handling), and <em><strong>TRAC-IK</strong></em> (our concurrent inverse Jacobian and non-linear optimization solver; Speed mode) are compared below.</p>\n\n<p>IK success and average speed (for successful solves) as of TRAC-IK tag v1.4.1.  All results are from 10,000 randomly generated, reachable joint configurations.  Full 3D pose IK was requested at 1e-5 Cartesian error for x,y,z,roll,pitch,yaw with a maximum solve time of 5 ms.  All IK queries are seeded from the chain\'s ""nominal"" pose midway between joint limits.</p>\n\n<p><strong>Note on success</strong>: Neither KDL nor TRAC-IK uses any mesh information to determine if <em>valid</em> IK solutions result in self-collisions.  IK solutions deal with link distances and joint ranges, and remain agnostic about self-collisions due to volumes.  Expected future enhancements to TRAC-IK that search for multiple solutions may also include the ability to throw out solutions that result in self collisions (provided the URDF has valid geometry information); however, this is currently not the behaviour of any generic IK solver examined to date.</p>\n\n<p><strong>Note on timings</strong>: The timings provided include both successful and unsuccessful runs.  When an IK solution is not found, the numerical IK solver implementations will run for the full timeout requested, searching for an answer; thus for robot chains where KDL fails much of the time (e.g., Jaco-2), the KDL times are skewed towards the user requested timeout value (here 5 ms).  </p>\n\n<p>Chain | DOFs | Orocos\' <em>KDL</em> solve rate | Orocos\' <em>KDL</em> Avg Time | <em>KDL-RR</em> solve rate | <em>KDL-RR</em> Avg Time | <em>TRAC-IK</em> solve rate | <em>TRAC-IK</em> Avg Time\n- | - | - | - | - | - | - | -\nAtlas 2013 arm | 6 | <strong>75.54%</strong> | 1.35ms | <strong>97.13%</strong> | 0.39ms | <strong>99.97%</strong> | 0.33ms\nAtlas 2015 arm | 7 | <strong>75.71%</strong> | 1.50ms | <strong>93.13%</strong> | 0.81ms | <strong>99.18%</strong> | 0.48ms\nBaxter arm | 7 | <strong>61.07%</strong> | 2.21ms | <strong>89.52%</strong> | 1.02ms | <strong>99.17%</strong> | 0.60ms\nDenso VS-068 | 6 | <strong>27.92%</strong> | 3.69ms | <strong>98.13%</strong> | 0.42ms | <strong>99.78%</strong> | 0.38ms\nFanuc M-430iA/2F | 5 | <strong>21.07%</strong> | 3.99ms | <strong>88.34%</strong> | 0.92ms | <strong>99.16%</strong> | 0.58ms\nFetch arm | 7 | <strong>92.49%</strong> | 0.73ms | <strong>93.82%</strong> | 0.72ms | <strong>99.96%</strong> | 0.44ms\nJaco2 | 6 | <strong>26.23%</strong> | 3.79ms | <strong>97.66%</strong> | 0.58ms | <strong>99.51%</strong> | 0.58ms\nKUKA LBR iiwa 14 R820 | 7 | <strong>37.71%</strong> | 3.37ms | <strong>94.02%</strong> | 0.73ms | <strong>99.63%</strong> | 0.56ms\nKUKA LWR 4+ | 7 | <strong>67.80%</strong> | 1.88ms | <strong>95.40%</strong> | 0.62ms | <strong>99.95%</strong> | 0.38ms\nPR2 arm | 7 | <strong>83.14%</strong> | 1.37ms | <strong>86.96%</strong> | 1.27ms | <strong>99.84%</strong> | 0.59ms\nNASA Robonaut2 \'grasping leg\' | 7 | <strong>61.27%</strong> | 2.29ms | <strong>87.57%</strong> | 1.10ms | <strong>99.31%</strong> | 0.67ms\nNASA Robonaut2 \'leg\' + waist + arm | 15 | <strong>97.99%</strong> | 0.80ms | <strong>98.00%</strong> | 0.84ms | <strong>99.86%</strong> | 0.79ms\nNASA Robonaut2 arm | 7 | <strong>86.28%</strong> | 1.02ms | <strong>94.26%</strong> | 0.73ms | <strong>99.25%</strong> | 0.50ms\nNASA Robosimian arm | 7 | <strong>61.74%</strong> | 2.44ms | <strong>99.87%</strong> | 0.36ms | <strong>99.93%</strong> | 0.44ms\nTRACLabs modular arm | 7 | <strong>79.11%</strong> | 1.35ms | <strong>95.12%</strong> | 0.63ms | <strong>99.80%</strong> | 0.53ms\nUR10 | 6 | <strong>36.16%</strong> | 3.29ms | <strong>88.05%</strong> | 0.82ms | <strong>99.47%</strong> | 0.49ms\nUR5 | 6 | <strong>35.88%</strong> | 3.30ms | <strong>88.69%</strong> | 0.78ms | <strong>99.55%</strong> | 0.42ms\nNASA Valkyrie arm | 7 | <strong>45.18%</strong> | 3.01ms | <strong>90.05%</strong> | 1.29ms | <strong>99.63%</strong> | 0.61ms</p>\n\n<p>Feel free to <a href=""mailto:pbeeson@traclabs.com"">email Patrick</a> if there is a robot chain that you would like to see added above.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>The ROS packages in this repository were created to provide an alternative\nInverse Kinematics solver to the popular inverse Jacobian methods in KDL.\nSpecifically, KDL\'s convergence algorithms are based on Newton\'s method, which\ndoes not work well in the presence of joint limits --- common for many robotic\nplatforms.  TRAC-IK concurrently runs two IK implementations.  One is a simple\nextension to KDL\'s Newton-based convergence algorithm that detects and\nmitigates local minima due to joint limits by random jumps.  The second is an\nSQP (Sequential Quadratic Programming) nonlinear optimization approach which\nuses quasi-Newton methods that better handle joint limits.  By default, the IK\nsearch returns immediately when either of these algorithms converges to an\nanswer.  Secondary constraints of distance and manipulability are also provided \nin order to receive back the ""best"" IK solution.</p>\n\n<h3 id=""this-repo-contains-3-ros-packages"">This repo contains 3 ROS packages:</h3>\n\n<ul>\n<li><p>trac_ik is a metapackage with build and complete <a href=""https://bitbucket.org/traclabs/trac_ik/src/HEAD/trac_ik/CHANGELOG.rst"">Changelog</a> info.</p></li>\n<li><p>trac_ik_examples contains examples on how to use the standalone TRAC-IK library.</p></li>\n<li><p><a href=""https://bitbucket.org/traclabs/trac_ik/src/HEAD/trac_ik_lib"">trac_ik_lib</a>, the TRAC-IK kinematics code,\nbuilds a .so library that can be used as a drop in replacement for KDL\'s IK\nfunctions for KDL chains. Details for use are in trac_ik_lib/README.md.</p></li>\n</ul>\n\n<h3 id=""as-of-v1-4-3-this-package-is-part-of-the-ros-indigo-jade-binaries-sudo-apt-get-install-ros-jade-trac-ik"">As of v1.4.3, this package is part of the ROS Indigo/Jade binaries: <code>sudo apt-get install ros-jade-trac-ik</code>\n</h3>\n\n<h3 id=""a-detailed-writeup-on-trac-ik-can-be-found-here"">A detailed writeup on TRAC-IK can be found here:</h3>\n\n<p><a href=""https://personal.traclabs.com/%7Epbeeson/publications/b2hd-Beeson-humanoids-15.html"">Humanoids-2015</a> (reported results are from v1.0.0 of TRAC-IK, see below for newer results).</p>\n\n<h3 id=""some-sample-results-are-below"">Some sample results are below:</h3>\n\n<p><em>Orocos\' <strong>KDL</strong></em> (inverse Jacobian w/ joint limits), <em><strong>KDL-RR</strong></em> (our fixes to KDL joint limit handling), and <em><strong>TRAC-IK</strong></em> (our concurrent inverse Jacobian and non-linear optimization solver; Speed mode) are compared below.</p>\n\n<p>IK success and average speed (for successful solves) as of TRAC-IK tag v1.4.1.  All results are from 10,000 randomly generated, reachable joint configurations.  Full 3D pose IK was requested at 1e-5 Cartesian error for x,y,z,roll,pitch,yaw with a maximum solve time of 5 ms.  All IK queries are seeded from the chain\'s ""nominal"" pose midway between joint limits.</p>\n\n<p><strong>Note on success</strong>: Neither KDL nor TRAC-IK uses any mesh information to determine if <em>valid</em> IK solutions result in self-collisions.  IK solutions deal with link distances and joint ranges, and remain agnostic about self-collisions due to volumes.  Expected future enhancements to TRAC-IK that search for multiple solutions may also include the ability to throw out solutions that result in self collisions (provided the URDF has valid geometry information); however, this is currently not the behaviour of any generic IK solver examined to date.</p>\n\n<p><strong>Note on timings</strong>: The timings provided include both successful and unsuccessful runs.  When an IK solution is not found, the numerical IK solver implementations will run for the full timeout requested, searching for an answer; thus for robot chains where KDL fails much of the time (e.g., Jaco-2), the KDL times are skewed towards the user requested timeout value (here 5 ms).  </p>\n\n<p>Chain | DOFs | Orocos\' <em>KDL</em> solve rate | Orocos\' <em>KDL</em> Avg Time | <em>KDL-RR</em> solve rate | <em>KDL-RR</em> Avg Time | <em>TRAC-IK</em> solve rate | <em>TRAC-IK</em> Avg Time\n- | - | - | - | - | - | - | -\nAtlas 2013 arm | 6 | <strong>75.54%</strong> | 1.35ms | <strong>97.13%</strong> | 0.39ms | <strong>99.97%</strong> | 0.33ms\nAtlas 2015 arm | 7 | <strong>75.71%</strong> | 1.50ms | <strong>93.13%</strong> | 0.81ms | <strong>99.18%</strong> | 0.48ms\nBaxter arm | 7 | <strong>61.07%</strong> | 2.21ms | <strong>89.52%</strong> | 1.02ms | <strong>99.17%</strong> | 0.60ms\nDenso VS-068 | 6 | <strong>27.92%</strong> | 3.69ms | <strong>98.13%</strong> | 0.42ms | <strong>99.78%</strong> | 0.38ms\nFanuc M-430iA/2F | 5 | <strong>21.07%</strong> | 3.99ms | <strong>88.34%</strong> | 0.92ms | <strong>99.16%</strong> | 0.58ms\nFetch arm | 7 | <strong>92.49%</strong> | 0.73ms | <strong>93.82%</strong> | 0.72ms | <strong>99.96%</strong> | 0.44ms\nJaco2 | 6 | <strong>26.23%</strong> | 3.79ms | <strong>97.66%</strong> | 0.58ms | <strong>99.51%</strong> | 0.58ms\nKUKA LBR iiwa 14 R820 | 7 | <strong>37.71%</strong> | 3.37ms | <strong>94.02%</strong> | 0.73ms | <strong>99.63%</strong> | 0.56ms\nKUKA LWR 4+ | 7 | <strong>67.80%</strong> | 1.88ms | <strong>95.40%</strong> | 0.62ms | <strong>99.95%</strong> | 0.38ms\nPR2 arm | 7 | <strong>83.14%</strong> | 1.37ms | <strong>86.96%</strong> | 1.27ms | <strong>99.84%</strong> | 0.59ms\nNASA Robonaut2 \'grasping leg\' | 7 | <strong>61.27%</strong> | 2.29ms | <strong>87.57%</strong> | 1.10ms | <strong>99.31%</strong> | 0.67ms\nNASA Robonaut2 \'leg\' + waist + arm | 15 | <strong>97.99%</strong> | 0.80ms | <strong>98.00%</strong> | 0.84ms | <strong>99.86%</strong> | 0.79ms\nNASA Robonaut2 arm | 7 | <strong>86.28%</strong> | 1.02ms | <strong>94.26%</strong> | 0.73ms | <strong>99.25%</strong> | 0.50ms\nNASA Robosimian arm | 7 | <strong>61.74%</strong> | 2.44ms | <strong>99.87%</strong> | 0.36ms | <strong>99.93%</strong> | 0.44ms\nTRACLabs modular arm | 7 | <strong>79.11%</strong> | 1.35ms | <strong>95.12%</strong> | 0.63ms | <strong>99.80%</strong> | 0.53ms\nUR10 | 6 | <strong>36.16%</strong> | 3.29ms | <strong>88.05%</strong> | 0.82ms | <strong>99.47%</strong> | 0.49ms\nUR5 | 6 | <strong>35.88%</strong> | 3.30ms | <strong>88.69%</strong> | 0.78ms | <strong>99.55%</strong> | 0.42ms\nNASA Valkyrie arm | 7 | <strong>45.18%</strong> | 3.01ms | <strong>90.05%</strong> | 1.29ms | <strong>99.63%</strong> | 0.61ms</p>\n\n<p>Feel free to <a href=""mailto:pbeeson@traclabs.com"">email Patrick</a> if there is a robot chain that you would like to see added above.</p>\n</div>\n\n            \n          </div>'"
image_pipeline,http://rosindex.github.io/r/image_pipeline/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","camera_calibration,depth_image_proc,image_pipeline,image_proc,image_rotate,image_view,stereo_image_proc","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""image_pipeline"">image_pipeline</h1>\n\n<p><a href=""https://travis-ci.org/ros-perception/image_pipeline""><img src=""https://travis-ci.org/ros-perception/image_pipeline.svg?branch=indigo"" alt=""image""></a></p>\n\n<p>This package fills the gap between getting raw images from a camera\ndriver and higher-level vision processing.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
alfred_bot,http://rosindex.github.io/r/alfred_bot/,indigo,alfred_bot,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nerian_sp1,http://rosindex.github.io/r/nerian_sp1/,"hydro,jade,kinetic,indigo",nerian_sp1,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
catkin,http://rosindex.github.io/r/catkin/,"hydro,fuerte,groovy,kinetic,jade,indigo",catkin,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""catkin"">catkin</h1>\n\n<p>Catkin is a collection of cmake macros and associated python code used\nto build some parts of <a href=""http://www.ros.org"">ROS</a></p>\n\n<h2 id=""documentation"">Documentation</h2>\n\n<p><a href=""http://ros.org/doc/api/catkin/html/"">http://ros.org/doc/api/catkin/html/</a></p>\n</div>\n\n            \n          </div>'"
octomap,http://rosindex.github.io/r/octomap/,"hydro,groovy,kinetic,jade,indigo","dynamic_edt_3d,octomap,octovis","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nOctomap\n- A probabilistic, flexible, and compact 3D mapping library for robotic systems.\n\nAuthors: Kai M. Wurm and Armin Hornung, University of Freiburg, Copyright (C) 2009-2013.\nhttp://octomap.github.com\n\nFurther Contributors:\nC. Sprunk, University of Freiburg\nJ. Mueller, University of Freiburg\nS. Osswald, University of Freiburg\nR. Schmitt, University of Freiburg\nR. Bogdan Rusu, Willow Garage Inc.\n\nLicense: \n  * New BSD License (see ""octomap/LICENSE.txt"")\n  * GPL for the viewer ""octovis"" and related libraries (see ""octovis/LICENSE.txt"").\n\n\nDownload the latest releases:\n  https://github.com/octomap/octomap/tags\n\nAPI documentation:\n  http://octomap.github.com/octomap/doc/\n\nReport bugs and request features in our tracker:\n  https://github.com/OctoMap/octomap/issues\n\nA list of changes is available in the file ""octomap/CHANGELOG.txt""\n\n\nOVERVIEW\n############################\n\nOctoMap now consists of two separate libraries each in its own subfolder:\noctomap, the actual library, and octovis, our visualization libraries and tools.\nThis README provides an overview of both, for details on compiling each please \nsee ""octomap/README.txt"" and ""octovis/README.txt"" respectively.\nSee http://www.ros.org/wiki/octomap and http://www.ros.org/wiki/octovis if you \nwant to use OctoMap in ROS; there are pre-compiled packages available.\n\nYou can build each library separately with CMake by running it from the subdirectories, \nor build octomap and octovis together from this top-level directory. E.g., to\nonly compile the library, run:\n\n  cd octomap\n  mkdir build\n  cd build\n  cmake ..\n  make\n\nTo compile the complete package, run:\n  cd build\n  cmake ..\n  make\n\nBinaries and libs will end up in the directories ""bin"" and ""lib"" of the \ntop-level directory where you started the build.\n\n\nSee ""octomap/README.txt"" and ""octovis/README.txt"" for further\ndetails and hints on compiling under Windows.\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""octomap-an-efficient-probabilistic-3d-mapping-framework-based-on-octrees"">OctoMap - An Efficient Probabilistic 3D Mapping Framework Based on Octrees.</h1>\n\n<p><a href=""http://octomap.github.io"">http://octomap.github.io</a></p>\n\n<p>Originally developed by Kai M. Wurm and Armin Hornung, University of Freiburg, Copyright (C) 2009-2014.\nCurrently maintained by <a href=""https://github.com/ahornung"">Armin Hornung</a>.\nSee the <a href=""octomap/AUTHORS.txt"">list of contributors</a> for further authors.</p>\n\n<p>License: \n  * octomap: <a href=""octomap/LICENSE.txt"">New BSD License</a>\n  * octovis and related libraries: <a href=""octovis/LICENSE.txt"">GPL</a></p>\n\n<p>Download the latest releases:\n  <a href=""https://github.com/octomap/octomap/releases"">https://github.com/octomap/octomap/releases</a></p>\n\n<p>API documentation:\n  <a href=""http://octomap.github.com/octomap/doc/"">http://octomap.github.com/octomap/doc/</a></p>\n\n<p>Build status: \n  <a href=""https://travis-ci.org/OctoMap/octomap""><img src=""https://travis-ci.org/OctoMap/octomap.png?branch=devel"" alt=""Build Status""></a></p>\n\n<p>Report bugs and request features in our tracker:\n  <a href=""https://github.com/OctoMap/octomap/issues"">https://github.com/OctoMap/octomap/issues</a></p>\n\n<p>A list of changes is available in the <a href=""octomap/CHANGELOG.txt"">octomap changelog</a></p>\n\n<h2 id=""overview"">OVERVIEW</h2>\n\n<p>OctoMap consists of two separate libraries each in its own subfolder:\n<strong>octomap</strong>, the actual library, and <strong>octovis</strong>, our visualization libraries and tools.\nThis README provides an overview of both, for details on compiling each please \nsee <a href=""octomap/README.md"">octomap/README.md</a> and <a href=""octovis/README.md"">octovis/README.md</a> respectively.\nSee <a href=""http://www.ros.org/wiki/octomap"">http://www.ros.org/wiki/octomap</a> and <a href=""http://www.ros.org/wiki/octovis"">http://www.ros.org/wiki/octovis</a> if you \nwant to use OctoMap in ROS; there are pre-compiled packages available.</p>\n\n<p>You can build each library separately with CMake by running it from the subdirectories, \nor build octomap and octovis together from this top-level directory. E.g., to\nonly compile the library, run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd octomap\nmkdir build\ncd build\ncmake ..\nmake\n</code></pre></div>\n<p>To compile the complete package, run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd build\ncmake ..\nmake\n</code></pre></div>\n<p>Binaries and libs will end up in the directories <code>bin</code> and <code>lib</code> of the\ntop-level directory where you started the build.</p>\n\n<p>See <a href=""octomap/README.md"">octomap README</a> and <a href=""octovis/README.md"">octovis README</a> for further\ndetails and hints on compiling, especially under Windows.</p>\n</div>\n\n            \n          </div>'"
octomap_rviz_plugins,http://rosindex.github.io/r/octomap_rviz_plugins/,"hydro,groovy,fuerte,indigo","octomap_rviz_plugins,octomap_rviz_displays","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""octomap_rviz_plugins"">octomap_rviz_plugins</h1>\n\n<p>RViz display plugins for visualizing octomap messages (ROS groovy and later):\n<a href=""http://ros.org/wiki/octomap_rviz_plugins"">http://ros.org/wiki/octomap_rviz_plugins</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
smarthome_comm_msgs,http://rosindex.github.io/r/smarthome_comm_msgs/,indigo,smarthome_comm_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-communication-message-for-ros"">SmartHome Communication message for ROS</h1>\n\n<p>This package is a ROS Communication message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_comm_msgs__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_comm_msgs__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
smarthome_common_driver,http://rosindex.github.io/r/smarthome_common_driver/,indigo,smarthome_common_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-common-driver-for-rosjava"">SmartHome common Driver for ROSjava</h1>\n\n<p>This package is a ROSJava common Driver for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_common_driver__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_common_driver__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>For :\n* Android platform\n* ROSJava node platform </p>\n</div>\n\n            \n          </div>'"
smarthome_heater_msgs_java,http://rosindex.github.io/r/smarthome_heater_msgs_java/,indigo,smarthome_heater_msgs_java,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-heater-message-for-rosjava"">SmartHome Heater message for ROSjava</h1>\n\n<p>This package is a ROSJava Heating message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_heater_msgs_java__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_heater_msgs_java__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>For :\n* Android platform\n* ROSJava node platform </p>\n</div>\n\n            \n          </div>'"
smarthome_heater_msgs,http://rosindex.github.io/r/smarthome_heater_msgs/,indigo,smarthome_heater_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-heater-message-for-ros"">SmartHome Heater message for ROS</h1>\n\n<p>This package is a ROS Heating message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_heater_msgs__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_heater_msgs__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
smarthome_media_msgs,http://rosindex.github.io/r/smarthome_media_msgs/,indigo,smarthome_media_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-media-message-for-ros"">SmartHome Media message for ROS</h1>\n\n<p>This package is a ROS Media message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_media_msgs__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_media_msgs__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
alfred_sr_linux,http://rosindex.github.io/r/alfred_sr_linux/,indigo,alfred_sr_linux,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
smarthome_media_onkyo_driver,http://rosindex.github.io/r/smarthome_media_onkyo_driver/,indigo,smarthome_media_onkyo_driver,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ecto,http://rosindex.github.io/r/ecto/,"hydro,groovy,kinetic,jade,indigo",ecto,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecto"">Ecto</h1>\n\n<p>Ecto is a hybrid C++/Python development framework for constructing and\nmaintaining pipelines. In Ecto, pipelines are constructed in terms of\nprocessing units, <code>Cells</code>, connected by data paths, <code>Tendrils</code>, that\nform <em>Directed Acyclic Graphs</em>, <code>Plasms</code>. Cells are typically written in\nC++, tendrils may be any type, and the plasm may be executed in a\nvariety of clever ways. Python is uses as a the graph DSL.</p>\n\n<p>Ecto may be found useful in domains such as perception, audio, or\nrobotics.</p>\n\n<p>To get started see the online docs at <a href=""http://plasmodic.github.io/ecto/"">http://plasmodic.github.io/ecto/</a></p>\n\n<h1 id=""get-and-build-ecto"">Get and Build Ecto</h1>\n\n<p>These instructions are useful if you wish to work with Ecto from source,\nas a standalone library.</p>\n\n<h2 id=""source"">source</h2>\n\n<p>We use git for our source control. You can get a copy of our repo by\ndoing the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone git://github.com/plasmodic/ecto.git\n</code></pre></div>\n<h2 id=""dependencies"">dependencies</h2>\n\n<p>Ecto requires</p>\n\n<ul>\n<li>\n<p>CMake</p>\n\n<p>:   CMake is used for our build system, and you will need a\n    version &gt;= 2.8</p>\n</li>\n<li>\n<p>Boost</p>\n\n<p>:   Anything over 1.40 <a href=""http://www.boost.org"">http://www.boost.org</a></p>\n</li>\n<li>\n<p>Python</p>\n\n<p>:   Ecto should work with 2.6 and up. You should have the\n    development libraries. If you are bellow 2.7 you should install\n    the argparse library</p>\n</li>\n<li>\n<p><em>optional</em> Sphinx</p>\n\n<p>:   Docs are built with sphinx, &gt;= v1.0.7</p>\n</li>\n<li>\n<p><em>optional</em> gtest</p>\n\n<p>:   <a href=""http://code.google.com/p/googletest"">http://code.google.com/p/googletest</a></p>\n</li>\n</ul>\n\n<p>On ubuntu you can get most of these through apt:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install cmake libboost-all-dev python-dev python-argparse python-yaml libgtest-dev\n</code></pre></div>\n<p>To build the docs, you should use a very recent version of Sphinx:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo easy_install -U sphinx\n</code></pre></div>\n<h2 id=""build"">build</h2>\n\n<p>To build you should just follow a normal cmake recipe:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ecto\nmkdir -p build\ncd build\ncmake ..\nmake\n</code></pre></div>\n<h2 id=""test"">test</h2>\n\n<p>To validate ecto using our test suite, you may:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ecto/build\nmake\nctest\n</code></pre></div>\n<p>This should report zero test errors. If it does report an error, please\ntell us about it here: <a href=""https://github.com/plasmodic/ecto/issues/new"">https://github.com/plasmodic/ecto/issues/new</a></p>\n\n<h2 id=""docs"">docs</h2>\n\n<p>To create the latest documentation for Ecto:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo pip install -U catkin_sphinx\nsphinx-build -b html ./doc/source/ ./doc/build\n</code></pre></div>\n<p>To build documentation for the kitchen: :</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sphinx-build -b html ./doc/kitchen/ ./doc/build/\n</code></pre></div>\n<p>Then you can open up <code>ecto/build/doc/html/index.html</code> locally.</p>\n\n<h2 id=""install"">install</h2>\n\n<p>To install Ecto on your machine:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ecto/build\nmake install\n</code></pre></div>\n<h2 id=""use"">use</h2>\n\n<p>See the documentation (<a href=""http://plasmodic.github.io/ecto/"">http://plasmodic.github.io/ecto/</a>) for detailed\nusage instructions.</p>\n</div>\n\n            \n          </div>'"
smarthome_network_zeroconf,http://rosindex.github.io/r/smarthome_network_zeroconf/,indigo,smarthome_network_zeroconf,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-auto-discover-for-rosjava"">SmartHome Auto-Discover for ROSjava</h1>\n\n<p>This package is a ROSJava Zeroconf for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_network_zeroconf__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_network_zeroconf__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>For :\n* Android platform\n* ROSJava node platform </p>\n</div>\n\n            \n          </div>'"
smarthome_network_wakeonlan,http://rosindex.github.io/r/smarthome_network_wakeonlan/,indigo,smarthome_network_wakeonlan,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-wakeonlan-for-rosjava"">SmartHome WakeOnLan for ROSjava</h1>\n\n<p>This package is a ROSJava wake-on-line for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_network_wakeonlan__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_network_wakeonlan__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>For :\n* Android platform\n* ROSJava node platform </p>\n</div>\n\n            \n          </div>'"
haf_grasping,http://rosindex.github.io/r/haf_grasping/,indigo,haf_grasping,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">==========================================================\n==               PACKAGE: haf_grasping              ==\n==========================================================\n\nAuthor:  David Fischinger, Vienna University of Technology\nVersion: 1.0\nDate:    15.5.2015\n\nHAF_GRASPING\nis calculating grasp points for unknown and known objects represented by the surface point cloud data.\nFor scientific foundation see:\nD. Fischinger, M. Vincze: ""Learning Grasps for Unknown Objects in Cluttered Scenes"", IEEE International Conference on Robotics and Automation (ICRA), 2013.\n&lt;a href=""files/ICRA2013.pdf""&gt;[pdf]&lt;/a&gt;\nD. Fischinger, A. Weiss, M. Vincze: ""Learning Grasps with Topographic Features"", The International Journal of Robotics Research.\n\n\nIn a first step the point cloud is read from a ROS topic and a heightsgrid is created.\nFor each 14x14 square of the hightsgrid a featurevector is created. \nUsing SVM with an existing model file, it is predicted if the center of the square is a good \ngrasping point. For good grasping points the coordinates and the direction of the approach vectors\nare published.\n\n\nDOWNLOAD CODE\n\n&gt;&gt; git \n\n\nHOW TO USE HAF_GRASPING - GET STARTED\n\nStart calculation server (does the work), haf_client (small programming incl. class that shows how to use haf_grasping) and a visualization in rviz:\n\n&gt;&gt; roslaunch haf_grasping haf_grasping_all.launch\n\nPublish the path of a point cloud to calculate grasp points on this object with the gripper approaching direction along the z-axis:\n\n&gt;&gt; rostopic pub /haf_grasping/input_pcd_rcs_path std_msgs/String ""$(rospack find haf_grasping)/data/pcd2.pcd"" -1\n\n(Alternatively, publish a point cloud at the ros topic:  /haf_grasping/depth_registered/single_cloud/points_in_lcs)\n\n\nEXPLANATION FOR THE RVIZ VISUALIZATION\n\nRVIZ will now visualize the point cloud with corresponding frame (blue indicates the z-axis). \nBigger rectangle: indicates the area where heights can be used for grasp calculation\nInner rectangle:  defines the area where grasps (grasp centers) are searched.\nLong red line:    indicates the closing direction (for a two finger gripper)\nRed/green spots:  indicate the positions where grasps are really tested for the current gripper roll (ignoring points where no calculation is needed, e.g. no data there)\nGreen bars:       indicate where possible grasps were found. The height of the bars indicate an grasp evaluation score (the higher the better)\nBlack arrow:      indicates the best grasp position found and the approching direction (for a parallel two finger gripper)\n\n\n\nHAF-GRASPING CLIENT - CODE EXPLAINDED\n\nIn calc_grasppoints_action_client.cpp we subscribe to a point_cloud topic and start the following callback when a point cloud comes in:\n\n== code start ==\n\n//get goal (input point cloud) for grasp calculation, send it to grasp action server and receive result\nvoid CCalcGrasppointsClient::get_grasp_cb(const sensor_msgs::PointCloud2ConstPtr&amp; pc_in)\n{\n    ROS_INFO(""\\nFrom calc_grasppoints_action_client: point cloud received"");\n\n    // create the action client\n    // true causes the client to spin its own thread\n    actionlib::SimpleActionClient&lt;haf_grasping::CalcGraspPointsServerAction&gt; ac(""calc_grasppoints_svm_action_server"", true);\n\n    ROS_INFO(""Waiting for action server to start."");\n    // wait for the action server to start\n    ac.waitForServer(); //will wait for infinite time\n\n    ROS_INFO(""Action server started, sending goal."");\n    // send a goal to the action\n    haf_grasping::CalcGraspPointsServerGoal goal;\n    goal.graspinput.input_pc = *pc_in;\n\n    goal.graspinput.grasp_area_center = this-&gt;graspsearchcenter;\n\n    // set size of grasp search area\n    goal.graspinput.grasp_area_length_x = this-&gt;grasp_search_size_x+14;\n    goal.graspinput.grasp_area_length_y = this-&gt;grasp_search_size_y+14;\n\n    // set max grasp calculation time\n    goal.graspinput.max_calculation_time = this-&gt;grasp_calculation_time_max;\n\n    //send goal\n    ac.sendGoal(goal);\n\n    //wait for the action to return\n    bool finished_before_timeout = ac.waitForResult(ros::Duration(50.0));\n\n    if (finished_before_timeout)\n    {\n        actionlib::SimpleClientGoalState state = ac.getState();\n        boost::shared_ptr&lt;const haf_grasping::CalcGraspPointsServerResult_&lt;std::allocator&lt;void&gt; &gt; &gt; result = ac.getResult();\n        ROS_INFO(""Result: %s"", (*(result)).result.data.c_str());\n        ROS_INFO(""Action finished: %s"",state.toString().c_str());\n    }\n    else\n        ROS_INFO(""Action did not finish before the time out."");\n}\n\n== code end ==\n\n\nPARAMETER SETTING\n\nThere are a number of parameters that can be set (directly or via a service call). Set grasp search center (in m) to (x=0.1,y=0):\n\nGrasp_center: the x-,y-position, that is the center of the area where grasps are searched.\nService call to change it:\n\n&gt;&gt; rosservice call /haf_grasping/set_grasp_center ""graspsearchcenter:\n  x: 0.10\n  y: 0.0\n  z: 0.0"" \n\nGrasp_area_size: the size of the area were grasps should be detected. Set rectangle to 16x10 centimeter:\n\n&gt;&gt; rosservice call /haf_grasping/set_grasp_search_area_size ""grasp_search_size_x: 16\ngrasp_search_size_y: 10""\n\nGrasp_calculation_time_max: maximal time in seconds until a grasp has to be returned. Set max timt to 3 sec:\n\n&gt;&gt; rosservice call /haf_grasping/set_grasp_calculation_time_max ""max_calculation_time:\n  secs: 3\n  nsecs: 0"" \n\n\n\n\n== Input == \n\nA point cloud from objects \n\n\n== Output ==\n\nGrasp points and approach vectors which are detected using Support Vector Machines\n(at the beginning the approach vectors are parallel to the z-axis) \n\n\n\n== LIBSVM ==\n\nWe have included LIBSVM to work as our classifier (go to folder libsvm-3.12 and type ""make"" after checking out):\n\nChih-Chung Chang and Chih-Jen Lin, LIBSVM : a library for support\nvector machines. ACM Transactions on Intelligent Systems and\nTechnology, 2:27:1--27:27, 2011. Software available at\nhttp://www.csie.ntu.edu.tw/~cjlin/libsvm\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
smarthome_light_msgs_java,http://rosindex.github.io/r/smarthome_light_msgs_java/,indigo,smarthome_light_msgs_java,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-light-message-for-rosjava"">SmartHome Light message for ROSjava</h1>\n\n<p>This package is a ROSJava Lighting message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_light_msgs_java__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_light_msgs_java__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>For :\n* Android platform\n* ROSJava node platform </p>\n</div>\n\n            \n          </div>'"
octomap_msgs,http://rosindex.github.io/r/octomap_msgs/,"hydro,groovy,kinetic,jade,indigo",octomap_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""octomap_msgs"">octomap_msgs</h1>\n\n<p>ROS package to provide messages and serializations / conversion for the OctoMap library.</p>\n\n<p>This repository continues from the groovy branch imported from SVN: <a href=""http://alufr-ros-pkg.googlecode.com/svn/branches/octomap_stacks-groovy-devel/octomap_msgs/"">http://alufr-ros-pkg.googlecode.com/svn/branches/octomap_stacks-groovy-devel/octomap_msgs/</a>\nSee <a href=""https://code.google.com/p/alufr-ros-pkg/"">https://code.google.com/p/alufr-ros-pkg/</a> for the previous versions.</p>\n</div>\n\n            \n          </div>'"
smarthome_media_samsungtv_driver,http://rosindex.github.io/r/smarthome_media_samsungtv_driver/,indigo,smarthome_media_samsungtv_driver,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
smarthome_media_model,http://rosindex.github.io/r/smarthome_media_model/,indigo,smarthome_media_model,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-media-models-for-rosjava"">SmartHome Media models for ROSjava</h1>\n\n<p>This package is a ROSJava Media models for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_media_model__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_media_model__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>For :\n* Android platform\n* ROSJava node platform </p>\n</div>\n\n            \n          </div>'"
smarthome_msgs_java,http://rosindex.github.io/r/smarthome_msgs_java/,indigo,smarthome_msgs_java,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-message-for-rosjava"">SmartHome message for ROSjava</h1>\n\n<p>This package is a ROSJava message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_msgs_java__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_msgs_java__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>For :\n* Android platform\n* ROSJava node platform </p>\n</div>\n\n            \n          </div>'"
resource_retriever,http://rosindex.github.io/r/resource_retriever/,"jade,kinetic,indigo",resource_retriever,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
geometry2,http://rosindex.github.io/r/geometry2/,"hydro,fuerte,groovy,kinetic,jade,indigo","geometry2,geometry_experimental,test_tf2,tf2,tf2_bullet,tf2_eigen,tf2_geometry_msgs,tf2_kdl,tf2_msgs,tf2_py,tf2_ros,tf2_sensor_msgs,tf2_tools","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
leptrino_force_torque,http://rosindex.github.io/r/leptrino_force_torque/,"jade,kinetic,indigo",leptrino_force_torque,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""leptrino_force_torque"">leptrino_force_torque</h1>\n\n<p>Leptrino 6 DOF force-torque sensors (<a href=""http://www.leptrino.co.jp/P_CFS.html"">http://www.leptrino.co.jp/P_CFS.html</a>)</p>\n</div>\n\n            \n          </div>'"
robot_model,http://rosindex.github.io/r/robot_model/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","collada_parser,collada_urdf,joint_state_publisher,kdl_parser,kdl_parser_py,robot_model,urdf,urdf_parser_plugin,resource_retriever,srdf,urdf_interface,urdf_parser,colladadom,convex_decomposition,ivcon,robot_state_publisher,simmechanics_to_urdf","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sr_visualization,http://rosindex.github.io/r/sr_visualization/,"hydro,groovy,kinetic,indigo","sr_gui_advanced_controls,sr_gui_biotac,sr_gui_bootloader,sr_gui_change_muscle_controllers,sr_gui_cyberglove_calibrator,sr_gui_movement_recorder,sr_gui_muscle_driver_bootloader,sr_gui_self_test,sr_gui_controller_tuner,sr_gui_hand_calibration,sr_gui_motor_resetter,sr_gui_change_controllers,sr_gui_grasp_controller,sr_gui_joint_slider,sr_visualization,sr_visualization_icons","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<table>\n<thead>\n<tr>\n<th>Service</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Documentation</td>\n<td><a href=""http://sr-visualization.readthedocs.org""><img src=""https://readthedocs.org/projects/sr-visualization/badge/?version=latest"" alt=""Documentation Status""></a></td>\n</tr>\n<tr>\n<td>Code style checks</td>\n<td><a href=""https://circleci.com/gh/shadow-robot/sr-visualization""><img src=""https://circleci.com/gh/shadow-robot/sr-visualization.svg?style=shield"" alt=""Circle CI""></a></td>\n</tr>\n<tr>\n<td>Unit tests</td>\n<td><a href=""https://travis-ci.org/shadow-robot/sr-visualization""><img src=""https://travis-ci.org/shadow-robot/sr-visualization.svg"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Install tests</td>\n<td><a href=""https://semaphoreci.com/shadow-robot/sr-visualization""><img src=""https://semaphoreci.com/api/v1/projects/680462a5-c461-404c-b01d-9c0cbd82261d/537672/shields_badge.svg"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Code Coverage</td>\n<td><a href=""http://codecov.io/github/shadow-robot/sr-visualization?branch=indigo-devel""><img src=""https://img.shields.io/codecov/c/github/shadow-robot/sr-visualization/indigo-devel.svg"" alt=""codecov.io""></a></td>\n</tr>\n<tr>\n<td>Code Health</td>\n<td><a href=""https://landscape.io/github/shadow-robot/sr-visualization/indigo-devel""><img src=""https://landscape.io/github/shadow-robot/sr-visualization/indigo-devel/landscape.svg?style=flat"" alt=""Code Health""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=""sr-visualization"">sr-visualization</h1>\n\n<p>This is a package with GUI plugins which can be used to control the different nodes of the shadow_robot stack. The GUI plugins are programmed in Python and can be started from within rqt</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robot_state_publisher,http://rosindex.github.io/r/robot_state_publisher/,"hydro,groovy,kinetic,jade,indigo",robot_state_publisher,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
gazebo_tools,http://rosindex.github.io/r/gazebo_tools/,indigo,"gazebo_grasp_plugin,gazebo_state_plugins,gazebo_test_tools,gazebo_world_plugin_loader","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gazebo-pkgs"">gazebo-pkgs</h1>\n\n<p>A collection of tools and plugins for Gazebo.</p>\n\n<p>Please also refer to <a href=""https://github.com/JenniferBuehler/gazebo-pkgs/wiki"">the wiki</a> for more information.</p>\n</div>\n\n            \n          </div>'"
rtmros_hironx,http://rosindex.github.io/r/rtmros_hironx/,"hydro,groovy,indigo","hironx_calibration,hironx_moveit_config,hironx_ros_bridge,rtmros_hironx","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""rtmros_hironx"">rtmros_hironx  <a href=""https://travis-ci.org/start-jsk/rtmros_hironx""><img src=""https://travis-ci.org/start-jsk/rtmros_hironx.png"" alt=""Build Status""></a>\n</h2>\n\n<h1 id=""document"">Document</h1>\n\n<p>See <a href=""http://wiki.ros.org/rtmros_hironx"">ROS wiki</a> for the document, tutorials.</p>\n\n<p><a href=""http://docs.ros.org/hydro/api/hironx_ros_bridge/html/annotated.html"">API doc is available</a> also on ROS domain.</p>\n\n<h1 id=""deb-build-status"">DEB build status</h1>\n\n<table>\n<thead>\n<tr>\n<th>ROS Distro</th>\n<th>Source deb</th>\n<th>Development Branch (travis)</th>\n<th>Development branch (ros.org)</th>\n<th>Release Branch</th>\n<th>binarydeb Precise AMD64</th>\n<th>Documentation (ros.org)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Indigo</td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Hydro</td>\n<td><a href=""http://jenkins.ros.org/job/ros-hydro-rtmros_hironx_sourcedeb/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-hydro-rtmros_hironx_sourcedeb"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/start-jsk/rtmros_hironx""><img src=""https://travis-ci.org/start-jsk/rtmros_hironx.png?branch=hydro-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-hydro-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-hydro-rtmros_hironx"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/rtmros_hironx""><img src=""https://travis-ci.org/lagadic/rtmros_hironx.png?branch=hydro"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-hydro-rtmros_hironx_binarydeb_precise_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-hydro-rtmros_hironx_binarydeb_precise_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-hydro-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-hydro-rtmros_hironx"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Groovy</td>\n<td><a href=""http://jenkins.ros.org/job/ros-groovy-rtmros_hironx_sourcedeb/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-groovy-rtmros_hironx_sourcedeb"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/start-jsk/rtmros_hironx""><img src=""https://travis-ci.org/start-jsk/rtmros_hironx.png?branch=groovy-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-groovy-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-groovy-rtmros_hironx"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/rtmros_hironx""><img src=""https://travis-ci.org/lagadic/rtmros_hironx.png?branch=groovy"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-groovy-rtmros_hironx_binarydeb_precise_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-groovy-rtmros_hironx_binarydeb_precise_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-groovy-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-groovy-rtmros_hironx"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""devel-test-status""><a href=""http://wiki.ros.org/regression_tests#Development_Tests"">Devel Test Status</a></h2>\n\n<p><a href=""http://jenkins.ros.org/job/devel-hydro-rtmros_hironx/""><img src=""http://jenkins.ros.org/job/devel-hydro-rtmros_hironx/test/trend?job"" alt=""Hydro Test Satus""></a></p>\n\n<p><a href=""http://jenkins.ros.org/job/devel-groovy-rtmros_hironx/""><img src=""http://jenkins.ros.org/job/devel-groovy-rtmros_hironx/test/trend?job"" alt=""Groovy Test Satus""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""rtmros_hironx"">rtmros_hironx  <a href=""https://travis-ci.org/start-jsk/rtmros_hironx""><img src=""https://travis-ci.org/start-jsk/rtmros_hironx.png"" alt=""Build Status""></a>\n</h2>\n\n<h1 id=""document"">Document</h1>\n\n<p>See <a href=""http://wiki.ros.org/rtmros_hironx"">ROS wiki</a> for the document, tutorials.</p>\n\n<p><a href=""http://docs.ros.org/hydro/api/hironx_ros_bridge/html/annotated.html"">API doc is available</a> also on ROS domain.</p>\n\n<h1 id=""deb-build-status"">DEB build status</h1>\n\n<table>\n<thead>\n<tr>\n<th>ROS Distro</th>\n<th>Source deb</th>\n<th>Development Branch (travis)</th>\n<th>Development branch (ros.org)</th>\n<th>Release Branch</th>\n<th>binarydeb Precise AMD64</th>\n<th>Documentation (ros.org)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Indigo</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-rtmros_hironx_sourcedeb/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-rtmros_hironx_sourcedeb"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/start-jsk/rtmros_hironx""><img src=""https://travis-ci.org/start-jsk/rtmros_hironx.png?branch=hydro-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-indigo-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-rtmros_hironx"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/rtmros_hironx""><img src=""https://travis-ci.org/lagadic/rtmros_hironx.png?branch=hydro"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-rtmros_hironx_binarydeb_precise_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-rtmros_hironx_binarydeb_precise_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-indigo-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-indigo-rtmros_hironx"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Hydro</td>\n<td><a href=""http://jenkins.ros.org/job/ros-hydro-rtmros_hironx_sourcedeb/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-hydro-rtmros_hironx_sourcedeb"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/start-jsk/rtmros_hironx""><img src=""https://travis-ci.org/start-jsk/rtmros_hironx.png?branch=hydro-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-hydro-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-hydro-rtmros_hironx"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/rtmros_hironx""><img src=""https://travis-ci.org/lagadic/rtmros_hironx.png?branch=hydro"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-hydro-rtmros_hironx_binarydeb_precise_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-hydro-rtmros_hironx_binarydeb_precise_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-hydro-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-hydro-rtmros_hironx"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Groovy</td>\n<td><a href=""http://jenkins.ros.org/job/ros-groovy-rtmros_hironx_sourcedeb/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-groovy-rtmros_hironx_sourcedeb"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/start-jsk/rtmros_hironx""><img src=""https://travis-ci.org/start-jsk/rtmros_hironx.png?branch=groovy-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-groovy-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-groovy-rtmros_hironx"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/rtmros_hironx""><img src=""https://travis-ci.org/lagadic/rtmros_hironx.png?branch=groovy"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-groovy-rtmros_hironx_binarydeb_precise_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-groovy-rtmros_hironx_binarydeb_precise_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-groovy-rtmros_hironx/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-groovy-rtmros_hironx"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""devel-test-status""><a href=""http://wiki.ros.org/regression_tests#Development_Tests"">Devel Test Status</a></h2>\n\n<p><a href=""http://jenkins.ros.org/job/devel-hydro-rtmros_hironx/""><img src=""http://jenkins.ros.org/job/devel-hydro-rtmros_hironx/test/trend?job"" alt=""Hydro Test Satus""></a></p>\n\n<p><a href=""http://jenkins.ros.org/job/devel-groovy-rtmros_hironx/""><img src=""http://jenkins.ros.org/job/devel-groovy-rtmros_hironx/test/trend?job"" alt=""Groovy Test Satus""></a></p>\n</div>\n\n            \n          </div>'"
jb_common_libs,http://rosindex.github.io/r/jb_common_libs/,indigo,"arm_components_name_manager,baselib_binding,convenience_math_functions,convenience_ros_functions,logger_binding","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""convenience-pkgs"">convenience-pkgs</h1>\n\n<p>Collection of tools generally useful for testing and developing various other ROS packages.</p>\n\n<p>See also <a href=""https://github.com/JenniferBuehler/convenience-pkgs/wiki/"">the wiki page</a> for more information.</p>\n</div>\n\n            \n          </div>'"
ar_track_alvar,http://rosindex.github.io/r/ar_track_alvar/,"hydro,fuerte,groovy,kinetic,jade,indigo",ar_track_alvar,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">ar_track_alvar\nPackage maintained by Scott Niekum\nsniekum@willowgarage.com\nsniekum@cs.umass.edu\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
octomap_mapping,http://rosindex.github.io/r/octomap_mapping/,"hydro,fuerte,electric,groovy,diamondback,jade,indigo","octomap_mapping,octomap_server,octomap,octomap_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""octomap_mapping"">octomap_mapping</h1>\n\n<p>ROS stack for mapping with OctoMap, contains the octomap_server package.</p>\n\n<p>The <code>master</code> branch tracks the latest (stable) releases. Please send pull requests against the latest development branch, e.g. <code>indigo-devel</code>.</p>\n\n<p>Imported from SVN, see <a href=""https://code.google.com/p/alufr-ros-pkg/"">https://code.google.com/p/alufr-ros-pkg/</a> for the previous versions.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""octomap_mapping"">octomap_mapping</h1>\n\n<p>ROS stack for mapping with OctoMap, contains octomap_server package</p>\n\n<p>Imported from SVN, see <a href=""https://code.google.com/p/alufr-ros-pkg/"">https://code.google.com/p/alufr-ros-pkg/</a> for the previous versions.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pyros_config,http://rosindex.github.io/r/pyros_config/,"jade,indigo",pyros_config,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Pyros-config ===========</p>\n\n<p><a href=""https://travis-ci.org/asmodehn/pyros-config""><img src=""https://travis-ci.org/asmodehn/pyros-config.svg?branch=master"" alt=""image""></a></p>\n\n<p>Package to help manage configuration of always running servers this is\nheavily inspired from flask configuration</p>\n\n<p>This is a pure python package. It is also provided as a ROS package for\nease of use in pyros</p>\n</div>\n\n            \n          </div>'"
ubiquity_motor,http://rosindex.github.io/r/ubiquity_motor/,"hydro,indigo",ubiquity_motor,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ubiquity_motor"">ubiquity_motor</h1>\n\n<p><a href=""https://travis-ci.org/UbiquityRobotics/ubiquity_motor""><img src=""https://travis-ci.org/UbiquityRobotics/ubiquity_motor.svg?branch=hydro"" alt=""Build Status""></a></p>\n\n<p>Package that provides a ROS interface for the motors in UbiquityRobotics robots</p>\n\n<h2 id=""to-run-this-node"">To run this node:</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ubiquity_motor ubiquity_motor\n</code></pre></div>\n<h2 id=""parameters-and-defaults"">Parameters and defaults</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    /ubiquity/motor/device_name /dev/ttyUSB0 \n/ubiquity/motor/baud_rate 9600\n/ubiquity/motor/odom_rate 1.0/20.0\n/ubiquity/motor/diag_rate 2\n/ubiquity/motor/spin_rate 1.0/100.0\n</code></pre></div>\n<h2 id=""subscribes-to"">Subscribes to</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/cmd_vel    geometry_msgs::Twist\n</code></pre></div>\n<h2 id=""publishes"">Publishes</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/odom       nav_msgs::Odometry  \n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ubiquity_motor"">ubiquity_motor</h1>\n\n<p><a href=""https://travis-ci.org/UbiquityRobotics/ubiquity_motor""><img src=""https://travis-ci.org/UbiquityRobotics/ubiquity_motor.svg?branch=indigo-devel"" alt=""Build Status""></a></p>\n\n<p>Package that provides a ROS interface for the motors in UbiquityRobotics robots</p>\n</div>\n\n            \n          </div>'"
uc3m_maps,http://rosindex.github.io/r/uc3m_maps/,"hydro,indigo",uc3m_maps,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""uc3m_maps"">uc3m_maps</h1>\n\n<p>ROS package containing the maps of the University Carlos III of Madrid, Spain .</p>\n\n<h2 id=""some-maps-of-this-repo"">Some maps of this repo:</h2>\n\n<p><img src=""https://raw.githubusercontent.com//UC3MSocialRobots/uc3m_maps/hydro-devel///maps/roboticslab_complete_clean.png?raw=true"" alt=""UC3M\'s Systems Engineering and Automation Department"" title=""UC3M\'s Systems Engineering and Automation Department""></p>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The license of the packages is custom LASR-UC3M (Licencia Acad\xc3\xa9mica Social Robotics Lab - UC3M), an open, non-commercial license which enables you to download, modify and distribute the code as long as you distribute the sources.  </p>\n\n<h2 id=""acknowledgements"">ACKNOWLEDGEMENTS</h2>\n\n<p><img src=""http://ieee.uc3m.es/images/thumb/b/b6/Roboticslab_text_new.jpg/128px-Roboticslab_text_new.jpg"" alt=""RoboticsLab"">\n<img src=""http://ieee.uc3m.es/images/thumb/6/6b/Logo_uc3m_letras.png/256px-Logo_uc3m_letras.png"" alt=""UC3M""></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""uc3m_maps"">uc3m_maps</h1>\n\n<p>ROS package containing the maps of the University Carlos III of Madrid, Spain .</p>\n\n<h2 id=""some-maps-of-this-repo"">Some maps of this repo:</h2>\n\n<p><img src=""https://raw.githubusercontent.com//UC3MSocialRobots/uc3m_maps/indigo-devel///maps/roboticslab_complete_clean.png?raw=true"" alt=""UC3M\'s Systems Engineering and Automation Department"" title=""UC3M\'s Systems Engineering and Automation Department""></p>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The license of the packages is custom LASR-UC3M (Licencia Acad\xc3\xa9mica Social Robotics Lab - UC3M), an open, non-commercial license which enables you to download, modify and distribute the code as long as you distribute the sources.  </p>\n\n<h2 id=""acknowledgements"">ACKNOWLEDGEMENTS</h2>\n\n<p><img src=""http://ieee.uc3m.es/images/thumb/b/b6/Roboticslab_text_new.jpg/128px-Roboticslab_text_new.jpg"" alt=""RoboticsLab"">\n<img src=""http://ieee.uc3m.es/images/thumb/6/6b/Logo_uc3m_letras.png/256px-Logo_uc3m_letras.png"" alt=""UC3M""></p>\n</div>\n\n            \n          </div>'"
depth_nav_tools,http://rosindex.github.io/r/depth_nav_tools/,indigo,"cliff_detector,depth_nav_msgs,depth_nav_tools,depth_sensor_pose,laserscan_kinect,nav_layer_from_points","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""depth_nav_tools"">depth_nav_tools</h1>\n\n<p>Set of tools for mobile robot navigation with depth sensor, for example \nMicrosoft Kinect.</p>\n\n<p>Package depth_nav_tools contains following packages:\n- laserscan_kinect -- converts depth image to laser scan (LaserScan). \nIt finds smallest value of distance in each column of depth image \nand converts it to polar coordinates. Moreover, package provides features \nlike ground removing from scan and sensor tilt compensation in distance values, \nbut it is necessary to know height of sensor optical center and tilt angle in frame of ground.</p>\n\n<ul>\n<li><p>depth_sensor_pose -- detects ground plane on depth image and estimate \n                   height and tilt angle of depth sensor.</p></li>\n<li><p>cliff_detector -- detects negative objects like a cliff or downstairs.</p></li>\n<li><p>nav_layer_from_points -- creates navigation costmap layer based on received\n                       points.</p></li>\n<li><p>depth_nav_msgs -- specific messages for other packages.</p></li>\n</ul>\n\n<h2 id=""ros-documentation"">ROS Documentation</h2>\n\n<p>A more detailed, standard ROS-style documentation of this package can be found on the ROS wiki at:\n<a href=""http://wiki.ros.org/depth_nav_tools"">http://wiki.ros.org/depth_nav_tools</a></p>\n</div>\n\n            \n          </div>'"
moveit_helpers,http://rosindex.github.io/r/moveit_helpers/,indigo,"moveit_controller_multidof,moveit_object_handling,moveit_planning_helper","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-pkgs"">moveit-pkgs</h1>\n\n<p>My collection of packages related to MoveIt!</p>\n\n<p>See also <a href=""https://github.com/JenniferBuehler/moveit-pkgs/wiki"">the wiki page</a> for more information.</p>\n</div>\n\n            \n          </div>'"
openni2_camera,http://rosindex.github.io/r/openni2_camera/,"hydro,groovy,kinetic,jade,indigo",openni2_camera,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""openni2_camera"">openni2_camera</h1>\n\n<p>ROS wrapper for openni 2.0</p>\n\n<p>Note: openni2_camera supports xtion devices, but not kinects. For using a kinect with ROS, try the freenect stack: <a href=""http://www.ros.org/wiki/freenect_stack"">http://www.ros.org/wiki/freenect_stack</a></p>\n</div>\n\n            \n          </div>'"
jackal_desktop,http://rosindex.github.io/r/jackal_desktop/,indigo,"jackal_desktop,jackal_viz","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jb_general_msgs,http://rosindex.github.io/r/jb_general_msgs/,indigo,"object_msgs,object_msgs_tools,path_navigation_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""general-message-pkgs"">general-message-pkgs</h1>\n\n<p>Collection of various message packages which can be useful to a broader range of other packages.</p>\n\n<h1 id=""dependencies"">Dependencies</h1>\n\n<ul>\n<li><a href=""http://wiki.ros.org/object_recognition_msgs"">object_recognition_msgs</a></li>\n<li>This repository itself: <a href=""https://github.com/JenniferBuehler/general-message-pkgs"">general-message-pkgs</a>\n</li>\n</ul>\n\n<h1 id=""install"">Install</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install \\\n    ros-&lt;distro&gt;-object-recognition-msgs\n\n</code></pre></div>\n<p>Add the git repository to your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd &lt;your-catkin-ws&gt;/src\ngit clone https://github.com/JenniferBuehler/general-message-pkgs.git\n\n</code></pre></div>\n<p><em>Hint</em>: Alternatively to cloning the repositry directly into the catkin source folder, you\nmay also clone the repository elsewhere and then create a softlink to the main folders\nin your catkin source directory:<br>\n<code>ln -s &lt;path to general-message-pkgs&gt;</code> </p>\n\n<p>To compile, you can now use catkin_make as usual:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ..\ncatkin_make\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
industrial_core,http://rosindex.github.io/r/industrial_core/,"hydro,jade,groovy,indigo","industrial_core,industrial_deprecated,industrial_msgs,industrial_robot_client,industrial_robot_simulator,industrial_trajectory_filters,industrial_utils,simple_message","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""industrial-core"">Industrial Core</h1>\n\n<p><a href=""http://jenkins.ros.org/job/devel-hydro-industrial_core/""><img src=""http://jenkins.ros.org/job/devel-hydro-industrial_core/badge/icon"" alt=""Build Status""></a><br>\n<a href=""http://www.ros.org/wiki/Industrial"">ROS-Industrial</a> core meta-package.  See the <a href=""http://ros.org/wiki/industrial_core"">ROS wiki</a> page for more information.  </p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repo holds source code for all versions &gt; groovy. For those versions &lt;= groovy see: <a href=""https://code.google.com/p/swri-ros-pkg/source/browse"">SVN repo</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""industrial-core"">Industrial Core</h1>\n\n<p><a href=""http://www.ros.org/wiki/Industrial"">ROS-Industrial</a> core meta-package.  See the <a href=""http://ros.org/wiki/industrial_core"">ROS wiki</a> page for more information.  </p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repo holds source code for all versions &gt; groovy. For those versions &lt;= groovy see: <a href=""https://code.google.com/p/swri-ros-pkg/source/browse"">SVN repo</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""industrial-core"">Industrial Core</h1>\n\n<p><a href=""http://jenkins.ros.org/job/devel-indigo-industrial_core/""><img src=""http://jenkins.ros.org/job/devel-indigo-industrial_core/badge/icon"" alt=""Build Status""></a><br>\n<a href=""http://www.ros.org/wiki/Industrial"">ROS-Industrial</a> core meta-package.  See the <a href=""http://ros.org/wiki/industrial_core"">ROS wiki</a> page for more information.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repo holds source code for all versions &gt; groovy. For those versions &lt;= groovy see: <a href=""https://code.google.com/p/swri-ros-pkg/source/browse"">SVN repo</a></p>\n</div>\n\n            \n          </div>'"
mvsim,http://rosindex.github.io/r/mvsim/,"jade,kinetic,indigo",mvsim,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""multivehicle-simulator-libmvsim"">MultiVehicle simulator (libmvsim) </h1>\n\n<p>Lightweight, realistic dynamical simulator for 2D (""2.5D"") vehicles and robots. \nIt is tailored to analysis of vehicle dynamics, wheel-ground contact forces and accurate simulation of typical robot sensors (e.g. laser scanners).</p>\n\n<p>This package includes the C++ library <code>mvsim</code>, a standalone app and a ROS node.</p>\n\n<p>License: GNU General Public License version 3\nCopyright (C) 2014 Jose Luis Blanco <a href=""mailto:jlblanco@ual.es"">jlblanco@ual.es</a> (University of Almeria) and collaborators</p>\n\n<p><img src=""https://raw.githubusercontent.com/ual-arm-ros-pkg/mvsim/master/docs/imgs/screenshot_scans_see_each_other.png"" alt=""screenshot"" title=""Screenshot 1""></p>\n\n<h2 id=""docs"">Docs</h2>\n\n<ul>\n<li>\n<strong>The mvsim manual</strong> is the main reference document. (Write me!!)</li>\n<li>ROS tutorials (Write me!!)</li>\n<li><a href=""http://wiki.ros.org/mvsim"">http://wiki.ros.org/mvsim</a></li>\n</ul>\n\n<h2 id=""main-features"">Main features</h2>\n\n<ul>\n<li>Lightweight in memory, CPU and library requirements.</li>\n<li>Fully configurable via <code>.xml</code> ""world"" files.</li>\n<li>World maps:\n\n<ul>\n<li>Occupancy gridmaps: input as images or MRPT binary maps (from icp-slam, rbpf-slam, etc.)</li>\n<li>Elevation meshes.</li>\n</ul>\n</li>\n<li>Vehicle models: \n\n<ul>\n<li>Differential driven (2 &amp; 4 wheel drive).</li>\n<li>Ackermann steering (kinematic &amp; dynamic steering, different mechanical drive models).</li>\n</ul>\n</li>\n<li>Sensors: \n\n<ul>\n<li>Laser scanners: Robots see each other, their own bodies, etc.</li>\n</ul>\n</li>\n<li>Interface to vehicles: Choose among:\n\n<ul>\n<li>Raw access to forces and motor torques.</li>\n<li>Twist commands (using internal controllers).</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""compiling-standalone"">Compiling: standalone</h2>\n\n<p>Requisites:\n * A decent C++ compiler!\n * MRPT (&gt;=1.0.0 required; &gt;=1.2.2 recommended): In Windows, build from sources or install precompiled binaries. \n * Box2D: Will use an embedded copy if no system version is found.</p>\n\n<p>In Ubuntu, this will install all requirements:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""> sudo apt-get install libmrpt-dev libbox2d-dev\n</code></pre></div>\n<h2 id=""ros-compiling-amp-usage"">ROS: Compiling &amp; usage</h2>\n\n<ul>\n<li><p>Install: \n sudo apt-get install ros-$ROS_DISTRO-mvsim</p></li>\n<li><p>Usage: See docs and tutorials in <a href=""http://wiki.ros.org/mvsim"">http://wiki.ros.org/mvsim</a> </p></li>\n</ul>\n\n<h2 id=""compiling-moos-openmora"">Compiling: MOOS / OpenMORA</h2>\n\n<p>This package is already included in <a href=""https://github.com/OpenMORA"">OpenMORA</a>.</p>\n</div>\n\n            \n          </div>'"
smarthome_comm_msgs_java,http://rosindex.github.io/r/smarthome_comm_msgs_java/,indigo,smarthome_comm_msgs_java,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-communication-message-for-rosjava"">SmartHome Communication message for ROSjava</h1>\n\n<p>This package is a ROSJava Communication message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_comm_msgs_java__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_comm_msgs_java__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>For :\n* Android platform\n* ROSJava node platform </p>\n</div>\n\n            \n          </div>'"
smarthome_media_msgs_java,http://rosindex.github.io/r/smarthome_media_msgs_java/,indigo,smarthome_media_msgs_java,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smarthome-media-message-for-rosjava"">SmartHome Media message for ROSjava</h1>\n\n<p>This package is a ROSJava Media message artifacts for ROS SmartHome.</p>\n\n<p><a href=""http://build.ros.org/job/Idev__smarthome_media_msgs_java__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__smarthome_media_msgs_java__ubuntu_trusty_amd64"" alt=""Build Status""></a></p>\n\n<p>For :\n* Android platform\n* ROSJava node platform </p>\n</div>\n\n            \n          </div>'"
nao_moveit_config,http://rosindex.github.io/r/nao_moveit_config/,"hydro,jade,indigo",nao_moveit_config,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nao_moveit_config"">nao_moveit_config</h1>\n\n<p>This is a MoveIt! config package generated by the MoveIt! wizard. It\nrequires a NAO model which you can get from here:</p>\n\n<p><a href=""https://github.com/ros-naoqi/nao_robot/tree/master/nao_description"">https://github.com/ros-naoqi/nao_robot/tree/master/nao_description</a> or\nfrom the binary package : ros-indigo-nao-description</p>\n\n<p>The moveit package must be run on a remote computer and not directly on\nyour robot.</p>\n\n<h1 id=""urdf-and-textures-used"">URDF and Textures used</h1>\n\n<p>This moveit package is based on a textured nao:\n<a href=""https://github.com/ros-naoqi/nao_meshes"">https://github.com/ros-naoqi/nao_meshes</a></p>\n\n<p>The urdf used for the generation of the configuration files is at:\n<a href=""https://github.com/ros-naoqi/nao_robot"">https://github.com/ros-naoqi/nao_robot</a></p>\n\n<h1 id=""1-compile-the-packages"">1. Compile the packages</h1>\n\n<p>nao_moveit_config package doesn\'t need any compilation so running\nrospack profile should be enough</p>\n\n<p>For the dcm and gazebo packages you need to compile the C++ nodes. In\norder to compile nao_dcm packages, you need to set the environment\nvariable AL_DIR to the path to naoqiSDK-c++ on your computer.</p>\n\n<p>Then you can run the usual</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">catkin_make\n\n</code></pre></div>\n<p>And your ready to play with your nao</p>\n\n<h1 id=""2-run-moveit"">2. Run MoveIt</h1>\n\n<h2 id=""without-robot"">Without robot</h2>\n\n<p>You can run this moveit package either unconnected to any robot or\nattached to a robot (real or simulated): For a standalone execution :</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch nao_moveit_config demo.launch\n\n</code></pre></div>\n<h2 id=""on-a-real-nao"">On a real nao</h2>\n\n<p>To launch it on a real nao you need:</p>\n\n<p>:   -   nao_dcm (<a href=""https://github.com/ros-aldebaran/nao_dcm_robot"">https://github.com/ros-aldebaran/nao_dcm_robot</a>)\n    -   nao_control (<a href=""https://github.com/ros-aldebaran/nao_virtual"">https://github.com/ros-aldebaran/nao_virtual</a>)</p>\n\n<p>First set NAO_IP environment variable to your robot PI address</p>\n\n<p>Modify the bringup configuration file :\nnao_dcm_bringup/config/nao_dcm.yaml</p>\n\n<p>Set the rosparam ""RobotIP"" to your Nao\'s IP address</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch nao_dcm_bringup nao_dcm_H25_bringup_remote.launch\n\n</code></pre></div>\n<p>Wait until nao_dcm_bringup is ready then run:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch nao_moveit_config moveit_planner.launch\n\n</code></pre></div>\n<h2 id=""on-a-simulated-nao-in-gazebo"">On a simulated nao (in gazebo)</h2>\n\n<p>To launch it on a gazebo simulated nao you need :</p>\n\n<p>:   -   nao_dcm (<a href=""https://github.com/ros-aldebaran/nao_dcm_robot"">https://github.com/ros-aldebaran/nao_dcm_robot</a>)\n    -   nao_control (<a href=""https://github.com/ros-aldebaran/nao_virtual"">https://github.com/ros-aldebaran/nao_virtual</a>)\n    -   nao_gazebo_plugin\n        (<a href=""https://github.com/ros-aldebaran/nao_virtual"">https://github.com/ros-aldebaran/nao_virtual</a>)</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch nao_gazebo_plugin nao_gazebo_plugin_H25.launch\n\n</code></pre></div>\n<p>Wait until nao_gazebo is ready then click on the pla button in gazebo.</p>\n\n<p>Finally run:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch nao_moveit_config moveit_planner.launch\n\n</code></pre></div>\n<p>This is based on the work of Konstantinos Chatzilygeroudis:\n<a href=""https://github.com/costashatz/nao_dcm"">https://github.com/costashatz/nao_dcm</a>.</p>\n\n<h1 id=""3-use-moveit"">3 Use Moveit:</h1>\n\n<p>RVIZ has been open: you can see that a MotionPlanning plugin has been\nlaunched. First check the box ""Allow approximate IK Solutions"" on the\nbottom of the left column. Then click on the Planning tab.</p>\n\n<p>Select which part of the robot you want to move: In the plugin list on\nthe upper part of the left column, you can select a group under\nMotionPlanning/Planning Request/Planning Group</p>\n\n<p>Now you can define your motion by drag and dropping the interactive\nmarkers. You can compute a trajectory by clicking the \'planning\' button\nOnce the motion is satisfying you can try it on your real robot using\n\'execute\' or \'plan and execute\'.</p>\n\n<p>NOTE: The start state is not updated automatically, you have to go to\n\'Select Start State\' select \'Current\' and click \'Update\'.</p>\n</div>\n\n            \n          </div>'"
opencv_apps,http://rosindex.github.io/r/opencv_apps/,"jade,kinetic,indigo",opencv_apps,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ridgeback_robot,http://rosindex.github.io/r/ridgeback_robot/,indigo,"ridgeback_base,ridgeback_bringup,ridgeback_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ridgeback_robot"">ridgeback_robot</h1>\n\n<p>Robot packages for Ridgeback</p>\n</div>\n\n            \n          </div>'"
qwt_dependency,http://rosindex.github.io/r/qwt_dependency/,"jade,kinetic,indigo",qwt_dependency,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pyros_utils,http://rosindex.github.io/r/pyros_utils/,"jade,indigo",pyros_utils,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pyros-utils"">Pyros-utils</h1>\n\n<p><a href=""https://travis-ci.org/asmodehn/pyros-utils""><img src=""https://travis-ci.org/asmodehn/pyros-utils.svg?branch=indigo"" alt=""image""></a></p>\n\n<p>This is a ROS package, providing useful ROS addons for pyros.</p>\n\n<p>To be able to use latest python module and packages, it uses catkin-pip\nand it is released as a normal ROS package.</p>\n</div>\n\n            \n          </div>'"
romeo_moveit_actions,http://rosindex.github.io/r/romeo_moveit_actions/,indigo,romeo_moveit_actions,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""description"">Description</h1>\n\n<p>This package allows to perform simple actions with MoveIt! configured\nfor Romeo, NAO, and Pepper robots.</p>\n\n<p>It offers a set of functionalities, like:</p>\n\n<p>:   -   pick and place objects,\n    -   reach and grasp objects,\n    -   test a target space for reaching and grasping,\n    -   </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    manage objects\n\n    :   -   virtual objects: add, move, remove,\n        -   detect objects with the robot\'s sensors: call ORK\n            Linemod object recognition.\n</code></pre></div>\n<h1 id=""installation"">Installation</h1>\n\n<ul>\n<li>  apt-get install ros-indigo-romeo-moveit-actions</li>\n<li>  or from source: git clone\n<a href=""https://github.com/ros-aldebaran/romeo_moveit_actions"">https://github.com/ros-aldebaran/romeo_moveit_actions</a>\n</li>\n</ul>\n\n<p>In case of compilin from source, install the following dependencies:</p>\n\n<p>:   -   </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    MoveIt!\n\n    :   -   apt-get install ros-indigo-moveit-full\n        -   apt-get install ros-indigo-moveit-visual-tools\n\n-   \n\n    MoveIt! Grasp Generator\n\n    :   -   from source, the recommended branch: git clone -b\n            romeo-dev --single-branch\n            &lt;https://github.com/nlyubova/moveit_simple_grasps&gt;\n</code></pre></div>\n<p>Additionally, install a required robot description package and MoveIt!\nconfiguration, at minimum.</p>\n\n<p>Get a robot description:</p>\n\n<p>:   -   </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    for Romeo:\n\n    :   -   apt-get install ros-indigo-romeo-description\n        -   or from source\n            &lt;https://github.com/ros-aldebaran/romeo_robot&gt;\n\n-   \n\n    for Nao:\n\n    :   -   apt-get install ros-indigo-nao-description\n            ros-indigo-nao-meshes\n        -   or from source &lt;https://github.com/ros-naoqi/nao_robot&gt;,\n            &lt;https://github.com/ros-naoqi/nao_meshes&gt;\n\n-   \n\n    for Pepper:\n\n    :   -   apt-get install ros-indigo-pepper-description\n            ros-indigo-pepper-meshes\n        -   or from source\n            &lt;https://github.com/ros-naoqi/pepper_robot&gt;,\n            &lt;https://github.com/ros-naoqi/pepper_meshes&gt;\n</code></pre></div>\n<p>Get a robot-specific Moveit! configuration:</p>\n\n<p>:   -   </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    for Romeo:\n\n    :   -   apt-get install ros-indigo-romeo-moveit-config\n        -   or from source\n            &lt;https://github.com/ros-aldebaran/romeo_moveit_config&gt;\n\n-   \n\n    for Nao:\n\n    :   -   apt-get install ros-indigo-nao-moveit-config\n        -   or from source\n            &lt;https://github.com/ros-naoqi/nao_moveit_config&gt;\n\n-   \n\n    for Pepper:\n\n    :   -   apt-get install ros-indigo-pepper-moveit-config\n        -   or from source\n            &lt;https://github.com/ros-naoqi/pepper_moveit_config&gt;\n</code></pre></div>\n<h2 id=""for-romeo-real-not-a-simulator"">For Romeo real (not a simulator)</h2>\n\n<p>If you are working with a real robot (not a simulator) then install the dcm-related package:</p>\n\n<p>:   -   </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    for Romeo:\n\n    :   -   apt-get install ros-indigo-romeo-dcm-bringup\n        -   or from source\n            &lt;https://github.com/ros-aldebaran/romeo_robot/tree/master/romeo_dcm&gt;\n\n-   \n\n    for Nao:\n\n    :   -   &lt;https://github.com/ros-aldebaran/nao_dcm_robot&gt; and\n            &lt;https://github.com/ros-naoqi/nao_virtual&gt;\n</code></pre></div>\n<p>Update the robot IP in the config-file (Romeo example):</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">rosed romeo_dcm_bringup romeo_dcm.yaml\n\n</code></pre></div>\n<h1 id=""how-it-works"">How it works</h1>\n\n<h2 id=""for-romeo-simulator"">For Romeo simulator</h2>\n\n<p>Launch MoveIt!:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch romeo_moveit_config demo.launch\n\n</code></pre></div>\n<p>Wait until the robot model is loaded and launch moveit_simple_actions:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch romeo_moveit_actions actions_romeo.launch\n\n</code></pre></div>\n<p>Welcome to the world of simple actions! Now, you can add virtual objects\nor detect real objects and reach/grasp/place them !</p>\n\n<h2 id=""for-romeo-real-not-a-simulator"">For Romeo real (not a simulator)</h2>\n\n<p>Launch the dcm_bringup (check the robot IP as described in\ninstallation):</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch romeo_dcm_bringup romeo_dcm_bringup_remote.launch\n\n</code></pre></div>\n<p>Launch MoveIt!:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch romeo_moveit_config demo_real.launch\n\n</code></pre></div>\n<p>Wait until the robot model is loaded and launch moveit_simple_actions:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch romeo_moveit_actions actions_romeo.launch\n\n</code></pre></div>\n<p>Welcome to the world of simple actions! Now, you can add virtual objects\nor detect real objects and reach/grasp/place them !</p>\n</div>\n\n            \n          </div>'"
sf30,http://rosindex.github.io/r/sf30/,indigo,sf30_node,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""this-is-a-ros-node-for-sf30-rangefinders"">This is a ROS node for <a href=""http://www.lightware.co.za/shop/en/4-drone-altimeters"">SF30 rangefinders*</a>\n</h2>\n\n<p>(*it is probably compatible with other models: SF02, SF10, SF11 - not tested!)</p>\n\n<p>The node assume the following setup for the laser (I used the <a href=""http://www.lightware.co.za/shop/en/content/8-software"">Lightware</a> terminal from the manufacture):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#!term\n\n   1: Active data port           USB distance in m\n   2: Resolution                 0.03 m\n   3: Serial port update rate    1000 / sec  (actual = 1665 / sec)\n   4: Serial port baud rate      115200\n   5: Analog port update rate    1 / sec  (actual = 1 / sec)\n   6: Analog maximum range       256 m\n   7: Alarm activation distance  17.50 m\n   8: Alarm latch                Off\n   9: USB port update rate       50 / sec  (actual = 50 / sec)\n\n\n</code></pre></div>\n<p>Before you leave the terminal, make sure the sensor is sending messages of the form (hit space to make it happen):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#!term\n0.57 m\n0.57 m\n0.59 m\n0.57 m\n0.59 m\n0.59 m\n0.55 m\n0.59 m\n0.57 m\n0.57 m\n0.57 m\n\n\n</code></pre></div>\n<h3 id=""to-install-the-package"">To install the package:</h3>\n\n<p>Create a catkin workspace. For instructions on how to create the workspace go <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">here</a>. Download and compile the package:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""c"">#!bash</span>\n\n<span class=""nb"">cd </span>catkin_ws/src\ngit clone git@bitbucket.org:castacks/sf30_node.git\n<span class=""nb"">cd</span> ..\ncatkin_make\n\n</code></pre></div>\n<h3 id=""to-run-the-node"">To run the node:</h3>\n\n<p>In a terminal run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""c"">#!bash</span>\n<span class=""nb"">source </span>devel/setup.bash\nroslaunch sf30_node sf30.launch\n\n\n\n</code></pre></div>\n<p>The message of type <code>sensor_msgs::LaserScan</code> will be published in topic <code>/sf30/range</code> at 50Hz. The intensities field on this message means data confidence. It is <code>1</code> if we can trust the given range.</p>\n\n<h3 id=""who-do-i-talk-to"">Who do I talk to?</h3>\n\n<ul>\n<li>Guilherme Pereira - <a href=""mailto:gpereira@ufmg.br"">gpereira@ufmg.br</a>\n</li>\n</ul>\n\n<h3 id=""final-remarks"">Final Remarks</h3>\n\n<ul>\n<li><p>The laser sensor uses an internal FTDI serial-to-USB converter. Therefore, your Linux system must provide support for this device. Most of distributions come with this support but some embedded distributions need to be set. <a href=""http://elinux.org/Jetson/Tutorials/Program_An_Arduino"">Here</a> is a good tutorial on how to set the FTDI support on Jetson TK1 systems. It was tested on the DJI\'s Manifold.</p></li>\n<li><p>Some embedded Linux distributions suspend their inactive USB ports to save power. This may cause the sensor to stop working after the first use. <a href=""http://jetsonhacks.com/2015/05/27/usb-autosuspend-nvidia-jetson-tk1/"">Here</a> is how to disable the auto-suspend function to prevent problems.</p></li>\n<li><p>FTDI devices create a file in the folder <code>/dev/serial/by-id/</code> that can be used as a unique identifier for the device. To use this identifier, replace the parameter <code>portname</code> in the file <code>sf30.launch</code> from <code>/dev/ttyUSB0</code> to <code>/dev/serial/by-id/ID_OF_YOUR_DEVICE</code>. This is very useful when several devices are connected to the same computer.</p></li>\n</ul>\n</div>\n\n            \n          </div>'"
apriltags_ros,http://rosindex.github.io/r/apriltags_ros/,"hydro,indigo","apriltags,apriltags_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""apriltags_ros"">apriltags_ros  <a href=""https://travis-ci.org/RIVeR-Lab/apriltags_ros""><img src=""https://api.travis-ci.org/RIVeR-Lab/apriltags_ros.png"" alt=""Build Status""></a>\n</h1>\n\n<p>AprilTags for ROS</p>\n</div>\n\n            \n          </div>'"
cob_driver,http://rosindex.github.io/r/cob_driver/,"hydro,groovy,diamondback,indigo","cob_base_drive_chain,cob_bms_driver,cob_camera_sensors,cob_canopen_motor,cob_driver,cob_elmo_homing,cob_generic_can,cob_head_axis,cob_light,cob_mimic,cob_phidgets,cob_relayboard,cob_scan_unifier,cob_sick_lms1xx,cob_sick_s300,cob_sound,cob_undercarriage_ctrl,cob_utilities,cob_voltage_control,cob_base_velocity_smoother,cob_cam3d_throttle,cob_collision_velocity_filter,cob_footprint_observer,cob_hokuyo,cob_hwboard,cob_touch,cob_trajectory_controller,cob_arm,cob_base,cob_battery,cob_forcetorque,cob_joint_state_aggregator,cob_joy,cob_manipulator,cob_oodl_scanner,cob_powercube_chain,cob_pseudo_joint_state_publisher,cob_sdh,cob_torso,cob_tray,cob_tray_sensors","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Installation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a repository for Care-O-bot driver packages.\n\nInstallation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>This is a repository for Care-O-bot driver packages.</p>\n\n<p>Installation instructions and tutorials can be found at <a href=""http://www.care-o-bot.org"">http://www.care-o-bot.org</a>.</p>\n\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_driver""><img src=""https://travis-ci.org/ipa320/cob_driver.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
cob_extern,http://rosindex.github.io/r/cob_extern/,"hydro,groovy,diamondback,indigo","cob_extern,libntcan,libpcan,libphidgets,libmesasr,brics_oodl_scanner_libs,libcvd,libhokuyo_urg,libm5api,libtoon","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a repository for Care-O-bot extern packages.\n\nInstallation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Installation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a repository for Care-O-bot external and third party packages.\n\nInstallation instructions and tutorials can be found at http://www.care-o-bot.org.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_extern""><img src=""https://travis-ci.org/ipa320/cob_extern.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p>This is a repository for Care-O-bot external and third party packages.</p>\n\n<p>Installation instructions and tutorials can be found at <a href=""http://www.care-o-bot.org"">http://www.care-o-bot.org</a>.</p>\n</div>\n\n            \n          </div>'"
maggie_devices,http://rosindex.github.io/r/maggie_devices/,"hydro,indigo","maggie_base,maggie_devices,maggie_eyelids,maggie_ir_controller,maggie_labjack,maggie_motor_controller,maggie_rfid","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""maggie_devices"">maggie_devices</h1>\n\n<p>GitHub repository for the devices for the Social Robot Maggie.</p>\n\n<h2 id=""content"">CONTENT</h2>\n\n<ul>\n<li>\n<code>maggie_base</code>: a ROS package with the node to control motors of the mobile base.</li>\n<li>\n<code>maggie_eyelids</code>: a ROS package with the node to control the servomotors to move the eyelids.</li>\n<li>\n<code>maggie_ir_controller</code>: a ROS package with the node to control the IR controller for a TV.</li>\n<li>\n<code>maggie_labjack</code>: a ROS package with the node to control the analog and digital I/O. Get the information about the batteries, the touch sensors, and the emergency bumpers.</li>\n<li>\n<code>maggie_devices</code>: a ROS metapackage.</li>\n<li>\n<code>maggie_motor_controller</code>: a ROS package with the node to control the motors for the neck and the arms.</li>\n<li>\n<code>maggie_rfid</code>: a ROS package with the node to control the RFID reader.</li>\n</ul>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The license of the packages is custom LASR-UC3M (Licencia Acad\xc3\xa9mica Social Robotics Lab - UC3M), an open, non-commercial license which enables you to download, modify and distribute the code as long as you distribute the sources.  </p>\n\n<h2 id=""acknowledgements"">ACKNOWLEDGEMENTS</h2>\n\n<p><img src=""http://ieee.uc3m.es/images/thumb/b/b6/Roboticslab_text_new.jpg/128px-Roboticslab_text_new.jpg"" alt=""RoboticsLab"">\n<img src=""http://ieee.uc3m.es/images/thumb/6/6b/Logo_uc3m_letras.png/256px-Logo_uc3m_letras.png"" alt=""UC3M""></p>\n</div>\n\n            \n          </div>'"
dynpick_driver,http://rosindex.github.io/r/dynpick_driver/,"hydro,jade,kinetic,indigo",dynpick_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""dynpick-ros-driver"">DynPick ROS driver</h1>\n\n<p><img src=""http://www.wacoh-tech.com/img/img_model_wdf_6m200_3.jpg"" alt=""WDF-6M200-3"" title=""WDF-6M200-3""></p>\n\n<p>ROS driver for <a href=""http://www.wacoh-tech.com/en/products/dynpick/"">Wacoh-tech force sensor</a>.</p>\n\n<p>Document is available at <code>ros.org</code> (for <a href=""http://docs.ros.org/indigo/api/dynpick_driver/html/index.html"">ROS Indigo</a>).</p>\n</div>\n\n            \n          </div>'"
geometry_tutorials,http://rosindex.github.io/r/geometry_tutorials/,"hydro,groovy,kinetic,jade,indigo","geometry_tutorials,turtle_tf,turtle_tf2","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
maggie_drivers,http://rosindex.github.io/r/maggie_drivers/,"hydro,indigo","maggie_drivers,maggie_ir_drivers,maggie_labjack_drivers,maggie_motor_drivers,maggie_rfid_drivers,maggie_serial_comm_drivers","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""maggie_drivers"">maggie_drivers</h1>\n\n<p>GitHub repository for the drivers for the Social Robot Maggie.</p>\n\n<h2 id=""content"">CONTENT</h2>\n\n<ul>\n<li>\n<code>maggie_ir_drivers</code>: a ROS package with the interface and the wrapper for the IR controller device. Also contains a mock (see gmock) to simulate the behavior of the physical device.</li>\n<li>\n<code>maggie_labjack_drivers</code>: a ROS package with the interface and the wrapper for the labjack device. Also contains a mock (see gmock) to simulate the behavior of the physical device.</li>\n<li>\n<code>maggie_drivers</code>: a ROS metapackage.</li>\n<li>\n<code>maggie_motor_drivers</code>: a ROS package with the interface and the drivers for the motors device.</li>\n<li>\n<code>maggie_rfid_drivers</code>: a ROS package with the interface and the wrapper for the RFID device.</li>\n<li>\n<code>maggie_serial_comm_drivers</code>: a ROS package with the interface and the drivers for the servomotors device, implemented for the serial communication. Also contains a mock (see gmock) to simulate the behavior of the physical device.</li>\n</ul>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The license of the packages is custom LASR-UC3M (Licencia Acad\xc3\xa9mica Social Robotics Lab - UC3M), an open, non-commercial license which enables you to download, modify and distribute the code as long as you distribute the sources.  </p>\n\n<h2 id=""acknowledgements"">ACKNOWLEDGEMENTS</h2>\n\n<p><img src=""http://ieee.uc3m.es/images/thumb/b/b6/Roboticslab_text_new.jpg/128px-Roboticslab_text_new.jpg"" alt=""RoboticsLab"">\n<img src=""http://ieee.uc3m.es/images/thumb/6/6b/Logo_uc3m_letras.png/256px-Logo_uc3m_letras.png"" alt=""UC3M""></p>\n</div>\n\n            \n          </div>'"
rqt_robot_plugins,http://rosindex.github.io/r/rqt_robot_plugins/,"hydro,groovy,kinetic,jade,indigo","rqt_moveit,rqt_nav_view,rqt_pose_view,rqt_robot_dashboard,rqt_robot_monitor,rqt_robot_plugins,rqt_robot_steering,rqt_runtime_monitor,rqt_rviz,rqt_tf_tree","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rospy_message_converter,http://rosindex.github.io/r/rospy_message_converter/,"hydro,groovy,kinetic,jade,indigo",rospy_message_converter,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Rospy_message_converter is a lightweight ROS package and Python\nlibrary to convert from Python dictionaries and JSON messages to rospy\nmessages, and vice versa.</p>\n\n<p>Build status: <a href=""http://travis-ci.org/baalexander/rospy_message_converter""><img src=""https://secure.travis-ci.org/baalexander/rospy_message_converter.png"" alt=""Build\nStatus""></a></p>\n\n<h1 id=""usage"">Usage</h1>\n\n<p>Convert a dictionary to a ROS message</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .python"" data-lang="".sourceCode .python"">from rospy_message_converter import message_converter\nfrom std_msgs.msg import String\ndictionary = { \'data\': \'Howdy\' }\nmessage = message_converter.convert_dictionary_to_ros_message(\'std_msgs/String\', dictionary)\n\n</code></pre></div>\n<p>Convert a ROS message to a dictionary</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .python"" data-lang="".sourceCode .python"">from rospy_message_converter import message_converter\nfrom std_msgs.msg import String\nmessage = String(data = \'Howdy\')\ndictionary = message_converter.convert_ros_message_to_dictionary(message)\n\n</code></pre></div>\n<p>Convert JSON to a ROS message</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .python"" data-lang="".sourceCode .python"">from rospy_message_converter import json_message_converter\nfrom std_msgs.msg import String\njson_str = \'{""data"": ""Hello""}\'\nmessage = json_message_converter.convert_json_to_ros_message(\'std_msgs/String\', json_str)\n\n</code></pre></div>\n<p>Convert a ROS message to JSON</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .python"" data-lang="".sourceCode .python"">from rospy_message_converter import json_message_converter\nfrom std_msgs.msg import String\nmessage = String(data = \'Hello\')\njson_str = json_message_converter.convert_ros_message_to_json(message)\n\n</code></pre></div>\n<h1 id=""test"">Test</h1>\n\n<p>To run the tests:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">rostest rospy_message_converter test_all.test\n\n</code></pre></div>\n<h1 id=""license"">License</h1>\n\n<p>Project is released under the BSD license.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Rospy_message_converter is a lightweight ROS package and Python\nlibrary to convert from Python dictionaries and JSON messages to\n<a href=""http://www.ros.org/wiki/rospy"">rospy</a> messages, and vice versa.</p>\n\n<p>Build status: <a href=""http://travis-ci.org/baalexander/rospy_message_converter""><img src=""https://secure.travis-ci.org/baalexander/rospy_message_converter.png"" alt=""Build\nStatus""></a></p>\n\n<h1 id=""usage"">Usage</h1>\n\n<p>Convert a dictionary to a ROS message</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .python"" data-lang="".sourceCode .python"">from rospy_message_converter import message_converter\nfrom std_msgs.msg import String\ndictionary = { \'data\': \'Howdy\' }\nmessage = message_converter.convert_dictionary_to_ros_message(\'std_msgs/String\', dictionary)\n\n</code></pre></div>\n<p>Convert a ROS message to a dictionary</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .python"" data-lang="".sourceCode .python"">from rospy_message_converter import message_converter\nfrom std_msgs.msg import String\nmessage = String(data = \'Howdy\')\ndictionary = message_converter.convert_ros_message_to_dictionary(message)\n\n</code></pre></div>\n<p>Convert JSON to a ROS message</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .python"" data-lang="".sourceCode .python"">from rospy_message_converter import json_message_converter\nfrom std_msgs.msg import String\njson_str = \'{""data"": ""Hello""}\'\nmessage = json_message_converter.convert_json_to_ros_message(\'std_msgs/String\', json_str)\n\n</code></pre></div>\n<p>Convert a ROS message to JSON</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .python"" data-lang="".sourceCode .python"">from rospy_message_converter import json_message_converter\nfrom std_msgs.msg import String\nmessage = String(data = \'Hello\')\njson_str = json_message_converter.convert_ros_message_to_json(message)\n\n</code></pre></div>\n<h1 id=""test"">Test</h1>\n\n<p>To run the tests:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">rostest rospy_message_converter test_all.test\n\n</code></pre></div>\n<h1 id=""license"">License</h1>\n\n<p>Project is released under the BSD license.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Rospy_message_converter is a lightweight ROS package and Python library to\nconvert from Python dictionaries and JSON messages to\n<a href=""http://www.ros.org/wiki/rospy"">rospy</a> messages, and vice versa.</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>Convert a dictionary to a ROS message</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">from</span> <span class=""nn"">rospy_message_converter</span> <span class=""kn"">import</span> <span class=""n"">message_converter</span>\n<span class=""kn"">from</span> <span class=""nn"">std_msgs.msg</span> <span class=""kn"">import</span> <span class=""n"">String</span>\n<span class=""n"">dictionary</span> <span class=""o"">=</span> <span class=""p"">{</span> <span class=""s"">\'data\'</span><span class=""p"">:</span> <span class=""s"">\'Howdy\'</span> <span class=""p"">}</span>\n<span class=""n"">message</span> <span class=""o"">=</span> <span class=""n"">message_converter</span><span class=""o"">.</span><span class=""n"">convert_dictionary_to_ros_message</span><span class=""p"">(</span><span class=""s"">\'std_msgs/String\'</span><span class=""p"">,</span> <span class=""n"">dictionary</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>Convert a ROS message to a dictionary</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">from</span> <span class=""nn"">rospy_message_converter</span> <span class=""kn"">import</span> <span class=""n"">message_converter</span>\n<span class=""kn"">from</span> <span class=""nn"">std_msgs.msg</span> <span class=""kn"">import</span> <span class=""n"">String</span>\n<span class=""n"">message</span> <span class=""o"">=</span> <span class=""n"">String</span><span class=""p"">(</span><span class=""n"">data</span> <span class=""o"">=</span> <span class=""s"">\'Howdy\'</span><span class=""p"">)</span>\n<span class=""n"">dictionary</span> <span class=""o"">=</span> <span class=""n"">message_converter</span><span class=""o"">.</span><span class=""n"">convert_ros_message_to_dictionary</span><span class=""p"">(</span><span class=""n"">message</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>Convert JSON to a ROS message</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">from</span> <span class=""nn"">rospy_message_converter</span> <span class=""kn"">import</span> <span class=""n"">json_message_converter</span>\n<span class=""kn"">from</span> <span class=""nn"">std_msgs.msg</span> <span class=""kn"">import</span> <span class=""n"">String</span>\n<span class=""n"">json_str</span> <span class=""o"">=</span> <span class=""s"">\'{""data"": ""Hello""}\'</span>\n<span class=""n"">message</span> <span class=""o"">=</span> <span class=""n"">json_message_converter</span><span class=""o"">.</span><span class=""n"">convert_json_to_ros_message</span><span class=""p"">(</span><span class=""s"">\'std_msgs/String\'</span><span class=""p"">,</span> <span class=""n"">json_str</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>Convert a ROS message to JSON</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">from</span> <span class=""nn"">rospy_message_converter</span> <span class=""kn"">import</span> <span class=""n"">json_message_converter</span>\n<span class=""kn"">from</span> <span class=""nn"">std_msgs.msg</span> <span class=""kn"">import</span> <span class=""n"">String</span>\n<span class=""n"">message</span> <span class=""o"">=</span> <span class=""n"">String</span><span class=""p"">(</span><span class=""n"">data</span> <span class=""o"">=</span> <span class=""s"">\'Hello\'</span><span class=""p"">)</span>\n<span class=""n"">json_str</span> <span class=""o"">=</span> <span class=""n"">json_message_converter</span><span class=""o"">.</span><span class=""n"">convert_ros_message_to_json</span><span class=""p"">(</span><span class=""n"">message</span><span class=""p"">)</span>\n\n</code></pre></div>\n<h2 id=""test"">Test</h2>\n\n<p>To run the tests:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rostest rospy_message_converter test_all.test\n\n</code></pre></div>\n<h2 id=""license"">License</h2>\n\n<p>Project is released under the BSD license.</p>\n</div>\n\n            \n          </div>'"
pyros_test,http://rosindex.github.io/r/pyros_test/,"jade,indigo",pyros_test,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pyros-test"">Pyros-test</h1>\n\n<p><a href=""https://travis-ci.org/asmodehn/pyros-test""><img src=""https://travis-ci.org/asmodehn/pyros-test.svg?branch=indigo"" alt=""image""></a></p>\n\n<p>Just a very basic ROS package, following ROS structure and\nrecommendations. It is useful just as a test package to validate the\ntricky Pyros machinery. It contains a few test nodes that are useful for\nefficient ROS testing.</p>\n</div>\n\n            \n          </div>'"
rplidar_ros,http://rosindex.github.io/r/rplidar_ros/,"hydro,jade,kinetic,indigo",rplidar_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rplidar-ros-package"">RPLIDAR ROS package</h1>\n\n<p>ROS node and test application for RPLIDAR</p>\n\n<p>Visit RoboPeak Website for more details about RPLIDAR.</p>\n\n<h1 id=""how-to-build-rplidar-ros-package"">How to build rplidar ros package</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">1) Clone this project to your catkin\'s workspace src folder\n2) Running catkin_make to build rplidarNode and rplidarNodeClient\n</code></pre></div>\n<h1 id=""how-to-run-rplidar-ros-package"">How to run rplidar ros package</h1>\n\n<p>There\'re two ways to run rplidar ros package</p>\n\n<h2 id=""i-run-rplidar-node-and-view-in-the-rviz"">I. Run rplidar node and view in the rviz</h2>\n\n<p>roslaunch rplidar_ros view_rplidar.launch</p>\n\n<p>You should see rplidar\'s scan result in the rviz.</p>\n\n<h2 id=""ii-run-rplidar-node-and-view-using-test-application"">II. Run rplidar node and view using test application</h2>\n\n<p>roslaunch rplidar_ros rplidar.launch</p>\n\n<p>rosrun rplidar_ros rplidarNodeClient</p>\n\n<p>You should see rplidar\'s scan result in the console</p>\n\n<h1 id=""rplidar-frame"">RPLidar frame</h1>\n\n<p>RPLidar frame must be broadcasted according to picture shown in\nrplidar-frame.png</p>\n</div>\n\n            \n          </div>'"
astra_camera,http://rosindex.github.io/r/astra_camera/,"kinetic,indigo",astra_camera,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">1,first install astra udev file\n$sudo ./install.sh\n\n2,replug in the device  to recognize usb device correctly\n\n3,goto catkin workshop dir and compiler astra_camera\n$catkin_make --pkg astra_camera\n\n4,run astra_camera\n$roslaunch astra_launch astra.launch\n\n5,you can use rviz or image_view to verify driver\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
industrial_calibration,http://rosindex.github.io/r/industrial_calibration/,"hydro,indigo","caljob_creator,industrial_extrinsic_cal,intrinsic_cal,rgbd_depth_correction,target_finder,industrial_calibration_gui","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""industrial_calibration"">industrial_calibration</h1>\n\n<p>Contains libraries/algorithms for calibration industrial systems</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""industrial_calibration"">industrial_calibration</h1>\n\n<p>Contains libraries/algorithms for calibration industrial systems</p>\n\n<h1 id=""travis-ci"">Travis CI</h1>\n\n<p><a href=""https://travis-ci.org/ros-industrial/industrial_calibration/branches""><img src=""https://api.travis-ci.org/ros-industrial/industrial_calibration.svg?branch=indigo-devel"" alt=""Travis-CI""></a> </p>\n</div>\n\n            \n          </div>'"
jackal,http://rosindex.github.io/r/jackal/,indigo,"jackal_control,jackal_description,jackal_msgs,jackal_navigation,jackal_tutorials","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jackal"">jackal</h1>\n\n<p>Common packages for Jackal, including messages and robot description. These are packages relevant\nto all Jackal workspaces, whether simulation, desktop, or on the robot\'s own headless PC.</p>\n</div>\n\n            \n          </div>'"
o3d3xx,http://rosindex.github.io/r/o3d3xx/,indigo,o3d3xx,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""o3d3xx-ros"">o3d3xx-ros</h1>\n\n<p>o3d3xx-ros is a wrapper around\n<a href=""https://github.com/lovepark/libo3d3xx"">libo3d3xx</a> enabling the usage of IFM\nEfector O3D3xx ToF cameras from within <a href=""http://ros.org"">ROS</a> software\nsystems.</p>\n\n<h2 id=""software-compatibility-matrix"">Software Compatibility Matrix</h2>\n\n<table>\n         <tr>\n             <th>o3d3xx-ros version</th>\n             <th>libo3d3xx version</th>\n             <th>ROS distribution(s)</th>\n         </tr>\n         <tr>\n             <td>0.1.3</td>\n             <td>0.1.9</td>\n             <td>Indigo</td>\n         </tr>\n         <tr>\n             <td>0.1.4</td>\n             <td>0.1.9</td>\n             <td>Indigo</td>\n         </tr>\n         <tr>\n             <td>0.1.5</td>\n             <td>0.1.11</td>\n             <td>Indigo</td>\n         </tr>\n         <tr>\n             <td>0.1.6</td>\n             <td>0.1.11</td>\n             <td>Indigo</td>\n         </tr>\n         <tr>\n             <td>0.1.7</td>\n             <td>0.2.0</td>\n             <td>Indigo</td>\n         </tr>\n         <tr>\n             <td>0.1.8</td>\n             <td>0.2.0</td>\n             <td>Indigo</td>\n         </tr>\n         <tr>\n             <td>0.2.0</td>\n             <td>0.3.0</td>\n             <td>Indigo</td>\n         </tr>\n         <tr>\n             <td>0.2.1</td>\n             <td>0.4.0</td>\n             <td>Indigo</td>\n         </tr>\n         <tr>\n             <td>0.2.2</td>\n             <td>0.4.0, 0.4.1, 0.4.2</td>\n             <td>Indigo</td>\n        </tr>\n        <tr>\n             <td>0.2.3</td>\n             <td>0.4.3</td>\n             <td>Indigo, Kinetic</td>\n        </tr>\n        <tr>\n             <td>0.2.4</td>\n             <td>0.4.4</td>\n             <td>Indigo, Kinetic</td>\n        </tr>\n        <tr>\n             <td>0.2.5</td>\n             <td>0.4.5</td>\n             <td>Indigo, Kinetic</td>\n        </tr>\n</table>\n\n<h2 id=""prerequisites"">Prerequisites</h2>\n\n<ol>\n<li><a href=""http://www.ubuntu.com"">Ubuntu 14.04 or 16.04</a></li>\n<li><a href=""http://www.ros.org/install"">ROS Indigo or Kinetic</a></li>\n<li><a href=""https://github.com/lovepark/libo3d3xx"">libo3d3xx</a></li>\n</ol>\n\n<p>Additionally, your compiler must support C++11. This package has been validated\nwith:</p>\n\n<ul>\n<li>g++ 4.8.2 on Ubuntu 14.04 LTS, ROS Indigo</li>\n<li>g++ 5.3.x on Ubuntu 16.04 LTS, ROS Kinetic</li>\n</ul>\n\n<h2 id=""building-and-installing-the-software"">Building and Installing the Software</h2>\n\n<p><strong>NOTE</strong>: Since we are talking about ROS here, we assume you are on Ubuntu\nLinux.</p>\n\n<p>You should first ensure that you have installed ROS by following\n<a href=""http://wiki.ros.org/ROS/Installation"">these</a> instructions. The\n<code>desktop-full</code> installation is highly recommended.</p>\n\n<p>Next, you should be sure to install\n<a href=""https://github.com/lovepark/libo3d3xx"">libo3d3xx</a>. This ROS package assumes\nyou have installed libo3d3xx via the supported debian installer. Step-by-step\ninstructions for that process now follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ git clone https://github.com/lovepark/libo3d3xx.git\n$ cd libo3d3xx\n$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n</code></pre></div>\n<p>We now move on to building o3d3xx-ros.</p>\n\n<p>Building and installing o3d3xx-ros is accomplished by utilizing the ROS\n<a href=""http://wiki.ros.org/catkin"">catkin</a> tool. There are many tutorials and other\npieces of advice available on-line advising how to most effectively utilize\ncatkin. However, the basic idea is to provide a clean separation between your\nsource code repository and your build and runtime environments. The\ninstructions that now follow represent how we choose to use catkin to build and\n<em>permanently install</em> a ROS package from source.</p>\n\n<p>First, we need to decide where we want our software to ultimately be\ninstalled. For purposes of this document, we will assume that we will install\nour ROS packages at <code>~/ros</code>. For convenience, we add the following to our\n<code>~/.bash_profile</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">if [ -f /opt/ros/indigo/setup.bash ]; then\n    source /opt/ros/indigo/setup.bash\nfi\n\ncd ${HOME}\n\nexport LPR_ROS=${HOME}/ros\n\nif [ -d ${LPR_ROS} ]; then\n    for i in $(ls ${LPR_ROS}); do\n        if [ -d ${LPR_ROS}/${i} ]; then\n            if [ -f ${LPR_ROS}/${i}/setup.bash ]; then\n                source ${LPR_ROS}/${i}/setup.bash --extend\n            fi\n        fi\n    done\nfi\n</code></pre></div>\n<p>Next, we need to get the code from github. We assume we keep all of our git\nrepositories in <code>~/dev</code>.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/dev\n$ git clone https://github.com/lovepark/o3d3xx-ros.git\n</code></pre></div>\n<p>We now have the code in <code>~/dev/o3d3xx-ros</code>. Next, we want to create a <em>catkin\nworkspace</em> that we can use to build and install that code from. It is the\ncatkin philosophy that we do not do this directly in the source directory.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/dev\n$ mkdir o3d3xx-catkin\n$ cd o3d3xx-catkin\n$ mkdir src\n$ cd src\n$ catkin_init_workspace\n$ ln -s ~/dev/o3d3xx-ros o3d3xx\n</code></pre></div>\n<p>So, you should have a catkin workspace set up to build the o3d3xx-ros code that\nlooks basically like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">[ ~/dev/o3d3xx-catkin/src ]\ntpanzarella@jelly: $ pwd\n/home/tpanzarella/dev/o3d3xx-catkin/src\n\n[ ~/dev/o3d3xx-catkin/src ]\ntpanzarella@jelly: $ ls -l\ntotal 0\nlrwxrwxrwx 1 tpanzarella tpanzarella 49 Dec  2 15:26 CMakeLists.txt -&gt; /opt/ros/indigo/share/catkin/cmake/toplevel.cmake\nlrwxrwxrwx 1 tpanzarella tpanzarella 32 Dec  2 15:24 o3d3xx -&gt; /home/tpanzarella/dev/o3d3xx-ros\n</code></pre></div>\n<p>Now we are ready to build the code.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/dev/o3d3xx-catkin\n$ catkin_make -DCATKIN_ENABLE_TESTING=ON\n$ catkin_make run_tests\n$ catkin_make -DCMAKE_INSTALL_PREFIX=${LPR_ROS}/o3d3xx install\n</code></pre></div>\n<p>The ROS package should now be installed in <code>~/ros/o3d3xx</code>. To test everything\nout you should open a fresh bash shell, and start up a ROS core:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roscore\n</code></pre></div>\n<p>Open another shell and start the primary camera node:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx camera.launch ip:=192.168.10.69\n</code></pre></div>\n<p><strong>NOTE</strong>: The IP address of your camera may differ. If you are using the\nfactory default (192.168.0.69), you do not need to specify it on the above\n<code>roslaunch</code> line.</p>\n\n<p>Open another shell and start the rviz node to visualize the data coming from\nthe camera:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx rviz.launch\n</code></pre></div>\n<p>At this point, you should see an rviz window that looks something like:</p>\n\n<p><img src=""https://raw.githubusercontent.com//lovepark/o3d3xx-ros/master//doc/figures/rviz1.png"" alt=""rviz1""></p>\n\n<p>Congratulations! You can now utilize o3d3xx-ros.</p>\n\n<h2 id=""nodes"">Nodes</h2>\n\n<h3 id=""o3d3xx-camera"">/o3d3xx/camera</h3>\n\n<p>This node provides a real-time feed to the camera data. This node is started\nfrom the primary <code>camera.launch</code> file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx camera.launch\n</code></pre></div>\n<p>The naming of the camera can be customized via the <code>ns</code> (namespace) and <code>nn</code>\n(node name) command line arguments passed to the <code>camera.launch</code> file. For\nexample, if you specify your roslaunch command as:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx camera.launch ns:=robot nn:=front_camera\n</code></pre></div>\n<p>The node will have the name <code>/robot/front_camera</code> in the ROS computation\ngraph.</p>\n\n<h4 id=""published-topics"">Published Topics</h4>\n\n<table>\n         <tr>\n             <th>Topic</th>\n             <th>Message</th>\n             <th>Description</th>\n         </tr>\n\n         <tr>\n             <td>/o3d3xx/camera/amplitude</td>\n             <td>sensor_msgs/Image</td>\n             <td>16-bit gray scale encoding of the sensor Amplitude image\n             normalized wrt exposure time. </td>\n         </tr>\n         <tr>\n             <td>/o3d3xx/camera/raw_amplitude</td>\n             <td>sensor_msgs/Image</td>\n             <td>16-bit gray scale encoding of the sensor Amplitude image\n             non-normalized.</td>\n         </tr>\n         <tr>\n             <td>/o3d3xx/camera/cloud</td>\n             <td>sensor_msgs/PointCloud2</td>\n             <td>\n             A 3D PCL point cloud of point type `XYZI`. In this encoding the\n             intensity channel is represented by the corresponding pixel\'s\n             amplitude data. The units of this point cloud are in meters.\n             </td>\n         </tr>\n         <tr>\n             <td>/o3d3xx/camera/confidence</td>\n             <td>sensor_msgs/Image</td>\n             <td>\n             An 8-bit mono image encoding of the confidence image. The meaning\n             of each bit of each pixel value is discussed in the official IFM\n             documentation for the camera.\n             </td>\n         </tr>\n         <tr>\n             <td>/o3d3xx/camera/depth</td>\n             <td>sensor_msgs/Image</td>\n             <td>\n             A 16-bit mono image encoding of the radial depth map from the\n             camera. The depth units are in millimeters.\n             </td>\n         </tr>\n         <tr>\n             <td>/o3d3xx/camera/depth_viz</td>\n             <td>sensor_msgs/Image</td>\n             <td>\n             A rendering of the depth image utilizing a colormap more\n             human-friendly for visualization purposes. For performance\n             reasons, messages are only published to this topic when the\n             `publish_viz_images` parameter is set to true at launch time.\n             </td>\n         </tr>\n         <tr>\n             <td>/o3d3xx/camera/good_bad_pixels</td>\n             <td>sensor_msgs/Image</td>\n             <td>\n             A binary image showing good vs. bad pixels on the pixel array. Bad\n             pixels can be caused by numerous reasons (e.g., motion blur over\n             an integration/exposure timestep). Visualizing this data is useful\n             for when you are tuning your imager parameters. For performance\n             reasons, messages are only published to this topic when the\n             `publish_viz_images` parameter is set to true at launch time.\n             </td>\n         </tr>\n         <tr>\n             <td>/o3d3xx/camera/xyz_image</td>\n             <td>sensor_msgs/Image</td>\n             <td>\n             An OpenCV image encoding (CV_16SC3) of the same point cloud that\n             is published to `/o3d3xx/camera/cloud` where the three image planes\n             are 0 = x, 1 = y, 2 = z. Units are in millimeters yet the coord\n             frame is consistent with the point cloud.\n             </td>\n         </tr>\n         <tr>\n             <td>/o3d3xx/camera/unit_vectors</td>\n             <td>sensor_msgs/Image</td>\n             <td>\n             An OpenCV image encoding (CV_32FC3) of the rotated unit vectors\n             that can be used together with the translation vector from the\n             camera extrinsics and the radial distance image to compute the\n             cartesian coordinates for each pixel in the imager array off-board\n             the camera. This topic is latched.\n             </td>\n         </tr>\n         <tr>\n             <td>/o3d3xx/camera/extrinsics</td>\n             <td><a href=""msg/Extrinsics.msg"">Extrinsics.msg</a></td>\n             <td>\n             Extrinsics as reported by the camera. The translation vector here\n             is used together with the unit vectors and the radial distance\n             image to compute the Cartesian coordinates for each pixel in the\n             imager array. It should be noted that for this message, the\n             translational units are in mm and the rotational units are in\n             degrees. This is to be consistent with the camera eventhough it is\n             not necessarily consistent with ROS conventions. Usage of this\n             message is really for very specialized use-cases.\n             </td>\n         </tr>\n</table>\n\n<h4 id=""advertised-services"">Advertised Services</h4>\n\n<table>\n    <tr>\n        <th>Service Name</th>\n        <th>Service Definition</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>/o3d3xx/camera/Config</td>\n        <td><a href=""srv/Config.srv"">Config.srv</a></td>\n        <td>\n        Mutates camera settings based upon an input JSON file. <b>NOTE:</b> Due\n        to what appears to be limitations in the YAML parsing of the stock ROS\n        `rosservice` command line tool (i.e., it does not handle JSON as string\n        payload well) you will have to use the\n        <i>/o3d3xx/camera/config_node</i> to configure the camera. This is\n        explained in further detail below.\n        </td>\n    </tr>\n    <tr>\n        <td>/o3d3xx/camera/Dump</td>\n        <td><a href=""srv/Dump.srv"">Dump.srv</a></td>\n        <td>\n        Dumps the current configuration of the camera to a JSON string. The\n        output of this dump is suitable for editing and passing to the `Config`\n        service for configuring the camera.\n        </td>\n    </tr>\n    <tr>\n        <td>/o3d3xx/camera/GetVersion</td>\n        <td><a href=""srv/GetVersion.srv"">GetVersion.srv</a></td>\n        <td>\n        Returns the current version of the underlying\n        <a href=""https://github.com/lovepark/libo3d3xx"">libo3d3xx</a> library\n        that this ROS node is linked to.\n        </td>\n    </tr>\n    <tr>\n        <td>/o3d3xx/camera/Rm</td>\n        <td><a href=""srv/Rm.srv"">Rm.srv</a></td>\n        <td>Removes an application from the camera. This service will restrict\n        removing the current active application.\n        </td>\n    </tr>\n    <tr>\n        <td>/o3d3xx/camera/Trigger</td>\n        <td><a href=""srv/Trigger.srv"">Trigger.srv</a></td>\n        <td>\n        Sends a software trigger signal to the camera.\n        </td>\n    </tr>\n</table>\n\n<h4 id=""parameters"">Parameters</h4>\n\n<table>\n    <tr>\n<th>Name</th>\n<th>Data Type</th>\n<th>Description</th>\n</tr>\n    <tr>\n        <td>ip</td>\n        <td>string</td>\n        <td>IP address of the camera</td>\n    </tr>\n    <tr>\n        <td>xmlrpc_port</td>\n        <td>int</td>\n        <td>TCP port the camera\'s XMLRPC server is listening on</td>\n    </tr>\n    <tr>\n        <td>password</td>\n        <td>string</td>\n        <td>Password to use to connect to the camera</td>\n    </tr>\n    <tr>\n        <td>schema_mask</td>\n        <td>uint16_t</td>\n        <td>Mask controlling which image types to stream back from the\n           camera. This is useful for numerous reasons. It allows for\n           conserving bandwidth between the host computer and the camera or\n           lessens the CPU cycles required by the camera to compute image data\n           which may result in an increased frame rate. See the o3d3xx-schema\n           command line tool for generating custom masks.</td>\n    </tr>\n    <tr>\n        <td>timeout_millis</td>\n        <td>int</td>\n        <td>Time, in milliseconds, to block when waiting for a frame from the\n        camera before timing out.</td>\n    </tr>\n    <tr>\n        <td>timeout_tolerance_secs</td>\n        <td>double</td>\n        <td>Time, in seconds, to wait before trying to restart the underlying\n        framegrabber if it is currently experiencing timeouts while trying to\n        capture image data.</td>\n    </tr>\n    <tr>\n        <td>publish_viz_images</td>\n        <td>bool</td>\n        <td>\n        In general, for a runtime system, the core data a system will want from\n        this camera include the `cloud`, `depth`, `amplitude`, and `confidence`\n        images. This node will always publish those data. However, if you set\n        this parameter to `true` a few additional images are published. These\n        are `depth_viz` and `good_bad_pixels` (they are described\n        above in the `Topics` section). These <i>viz images</i> are intended\n        for human analysis and visualization in `rviz`.\n        </td>\n    </tr>\n    <tr>\n        <td>assume_sw_trigger</td>\n        <td>bool</td>\n        <td>\n        If your application intends to use software triggering (as opposed to a\n        free-running framegrabber), this parameter does four things. First, it\n        will not print out framegrabber timeout messages to the\n        rosconsole. Second, it will set, a-priori, the `timeout_millis`\n        parameter to 500 milliseconds (this is so that the node will release\n        the framegrabber mutex in the main publishing loop). Third, this will\n        set the `timeout_tolerance_secs` to 600 seconds so that the\n        framegrabber is not constantly getting recycled unnecessarily. Fourth,\n        it sets the `GLOG_minloglevel` environment variable to 3 (ERROR). This\n        is so the underlying `libo3d3xx` library does not fill your log files\n        with timeout messages which it emits at the WARNING level.\n        </td>\n    </tr>\n    <tr>\n        <td>frame_id_base</td>\n        <td>string</td>\n        <td>tf frame prefix</td>\n    </tr>\n</table>\n\n<h3 id=""o3d3xx-camera_tf"">/o3d3xx/camera_tf</h3>\n\n<p>This node is of type <code>tf/static_transform_publisher</code>. It establishes a frame_id\nfor the camera in the global tf tree. This node is launched from the primary\n<code>camera.launch</code> file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx camera.launch\n</code></pre></div>\n<p>When run as above, the tf publishing node would be named <code>/o3d3xx/camera_tf</code>\nand the camera coordinate frame would be <code>o3d3xx/camera_link</code> in the tf tree.</p>\n\n<p>You can customize this naming via the <code>frame_id_base</code> arg or implicitly through\nthe <code>ns</code> (namespace) and <code>nn</code> (node name) command line arguments passed to the\n<code>camera.launch</code> file. For example, if you specify your roslaunch command as:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx camera.launch ns:=robot nn:=front_camera\n</code></pre></div>\n<p>The node name will be <code>/robot/front_camera_tf</code> and the camera frame will\nbe <code>robot/front_camera_link</code> in the tf tree.</p>\n\n<h3 id=""o3d3xx-camera-config_node"">/o3d3xx/camera/config_node</h3>\n\n<p>This node is used as a proxy to simplify calling the <code>/o3d3xx/camera/Config</code>\nservice offered by the <code>/o3d3xx/camera</code> node. It was noted above that there\nappears to be a limitation in the YAML parser of the ROS <code>rosservice</code> command\nline tool. Specifically, it seems that it is not capable of assigning a JSON\nstring to a variable. This is the reason for this node. This is not a\nlong-running node but rather works like a typical command-line tool would: you\ninvoke it, it runs, and exits. The following command line will launch this\nnode:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx config.launch\n</code></pre></div>\n<h4 id=""parameters"">Parameters</h4>\n\n<table>\n    <tr>\n<th>Name</th>\n<th>Data Type</th>\n<th>Description</th>\n</tr>\n    <tr>\n        <td>infile</td>\n        <td>string</td>\n        <td>\n        By default, this node will read `stdin` for a JSON string to use to\n        pass to the `/o3d3xx/camera/Config` service. However, if this parameter\n        is specified it will read the JSON from this file.\n        </td>\n    </tr>\n</table>\n\n<h3 id=""rviz"">/rviz</h3>\n\n<p>This package offers a launch script that wraps the execution of <code>rviz</code> so that\nthe display will be conveniently configured for visualizing the\n<code>/o3d3xx/camera</code> data. To launch this node:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx rviz.launch\n</code></pre></div>\n<p>Running the command as above will color the point cloud with the\ndata from the normalized amplitude image (i.e., the intensity).</p>\n\n<p>The rviz window should look something like (assuming you are coloring the point\ncloud with the intensity data):</p>\n\n<p><img src=""https://raw.githubusercontent.com//lovepark/o3d3xx-ros/master//doc/figures/rviz1.png"" alt=""rviz1""></p>\n\n<h3 id=""o3d3xx-camera-xxx_throttler"">/o3d3xx/camera/XXX_throttler</h3>\n\n<p>This package offers a launch script that wraps the\n<a href=""http://wiki.ros.org/topic_tools/throttle"">topic_tools/throttler</a> node\nso that it can throttle the core topics from the camera. Specifically, it will\nthrottle <code>/o3d3xx/camera/cloud</code> to <code>/o3d3xx/camera/cloud_throttle</code>,\n<code>/o3d3xx/camera/amplitude</code> to <code>/o3d3xx/camera/amplitude_throttle</code>,\n<code>/o3d3xx/camera/raw_amplitude_throttle</code>,\n<code>/o3d3xx/camera/depth</code> to <code>/o3d3xx/camera/depth_throttle</code>,\n<code>/o3d3xx/camera/confidence</code> to <code>/o3d3xx/camera/confidence_throttle</code>. To launch\nthis node:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx throttled.launch\n</code></pre></div>\n<p>By default, it will throttle the above named topics to 1 Hz. You can change the\nfrequency with the <code>hz</code> command line argument. For example, to send data at 2\nHz:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx throttled.launch hz:=2.0\n</code></pre></div>\n<p>Using this launch file to launch this set of nodes is strictly optional. We\nhave found use for it in two ways. First, to slow down the publishing frequency\nof the topics when used in conjunction with the <code>/o3d3xx/camera/file_writer</code>\nnode for collecting data (i.e., in those instances when we really do not need\nall the data but rather some subsampling of it). Second, if we are running the\ncamera on a drone (for example) that has a slower radio link down to a ground\ncontrol station running <code>rviz</code> where we want to see what the camera sees while\nthe drone is in flight. Clearly there are other uses for this, YMMV.</p>\n\n<h2 id=""configuring-camera-settings"">Configuring Camera Settings</h2>\n\n<p>Configuring the camera is accomplished by passing a JSON string to the\n<code>/o3d3xx/camera/config_node</code> which will call the <code>/o3d3xx/camera/Config</code>\nservice to mutate the camera settings. Using a JSON string to configure the\ncamera has the following primary benefits:</p>\n\n<ol>\n<li>Configuration is declarative. The camera configuration will reflect that\nwhich is described by the JSON file.</li>\n<li>The JSON data is human-consumable and easily edited in a text editor. This\nmakes it very convenient for headless embedded systems.</li>\n<li>The JSON data is machine parsable, so configuring the camera on the fly via\nprogrammable logic is also possible.</li>\n</ol>\n\n<p>There are also a few downfalls to using JSON. Most notably the lack of comments\nand an enforceable schema. One could argue that the latter keeps things\nflexible. None-the-less, JSON is the format used by <code>libo3d3xx</code> and, by\nextension, this ROS package.</p>\n\n<p>An exemplary JSON file is shown <a href=""json/ex_camera.json"">here</a> (this is the result\nof calling the <code>/o3d3xx/camera/Dump</code> service on a development system). When\npassing a JSON string (like the previously linked to file) to the\n<code>/o3d3xx/camera/Config</code> service (or to the <code>/o3d3xx/camera/config_node</code>) the\nfollowing rules are used to configure the camera:</p>\n\n<ol>\n<li>The <code>Device</code> section is processed and saved on the camera.</li>\n<li>The <code>Apps</code> section is processed. For each app:\n\n<ol>\n<li>If the <code>Index</code> key is present, a current app at that <code>Index</code> is looked\nup. If present, it is edited to reflect the data in the JSON file. If an\napp at that <code>Index</code> is not present, a new app is created with the\nparameters from the JSON file. It is not guaranteed that the new app will\nhave the specified <code>Index</code>.</li>\n<li>If the <code>Index</code> key is not present, a new app is created with the\nparameters as specified in the JSON file.</li>\n</ol>\n</li>\n<li>The active application is set by consulting the desired index of the\n<code>ActiveApplication</code> from the <code>Device</code> section of the JSON. If the specified\n<code>Index</code> does not exist, the active application is not set.</li>\n<li>The <code>Net</code> section is processed. A reboot of the camera may be necessary\nafter changing the camera\'s network parameters. Additionally, you will\nlikely need to restart the <code>/o3d3xx/camera</code> node pointing it to the new IP\naddress (if that is what you changed).</li>\n</ol>\n\n<p>It should also be noted that any portion of the JSON tree can be specfied to\nconfigure only that part of the camera. The only rule to follow is that all\nkeys should be fully qualified. For example, to simply set the active\napplication, you can use a JSON snippet like this:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""p"">{</span><span class=""w"">\n    </span><span class=""nt"">""o3d3xx""</span><span class=""p"">:</span><span class=""w"">\n    </span><span class=""p"">{</span><span class=""w"">\n        </span><span class=""nt"">""Device""</span><span class=""p"">:</span><span class=""w"">\n        </span><span class=""p"">{</span><span class=""w"">\n            </span><span class=""nt"">""ActiveApplication""</span><span class=""p"">:</span><span class=""w""> </span><span class=""s2"">""2""</span><span class=""w"">\n        </span><span class=""p"">}</span><span class=""w"">\n    </span><span class=""p"">}</span><span class=""w"">\n</span><span class=""p"">}</span><span class=""w"">\n</span></code></pre></div>\n<p>The above snippet is provided as an example <a href=""json/ex_set_active.json"">here</a>. To\napply this to your camera, you can:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx config.launch infile:=/path/to/ex_set_active.json\n</code></pre></div>\n<p>It was also noted above that the <code>/o3d3xx/camera/config_node</code> will read <code>stdin</code>\nby default, so you could also:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ echo \'{""o3d3xx"":{""Device"":{""ActiveApplication"":""2""}}}\' | roslaunch o3d3xx config.launch\n</code></pre></div>\n<p><a href=""json/ex_add_app.json"">Here</a> is another example JSON file. This one will add a\nnew application to the camera, using the default values for the high-dynamic\nrange imager. We note that this application is <em>added</em> to the camera because no\n<code>Index</code> is specified for the application. If an <code>Index</code> were specfied, the\napplication at the specified <code>Index</code>, if present, would be edited to reflect\nthis configuration.</p>\n\n<p>In general, a simple way to configure camera settings without having to\nmemorize the JSON syntax would be to simply dump the current camera settings to\na file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /o3d3xx/camera/Dump &gt; /tmp/camera.json\n</code></pre></div>\n<p>Then, open <code>/tmp/camera.json</code> with a text editor to create a declarative JSON\nconfiguration for your camera. You should be sure to delete the variable names\nfrom the <code>rosservice</code> output if you are following this example\n<em>word-for-word</em>. Additionally, you can delete any unnecessary keys if you would\nlike, however it is not strictly necessary as the <code>/o3d3xx/camera/Config</code>\nservice will leave unedited values unchanged on the camera. Once you have a\nconfiguration that you like, you can:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch o3d3xx config.launch infile:=/tmp/camera.json\n</code></pre></div>\n<p>You can check that your configuration is active by calling the\n<code>/o3d3xx/camera/Dump</code> service again.</p>\n\n<h2 id=""todo"">TODO</h2>\n\n<p>Please see the <a href=""https://github.com/lovepark/o3d3xx-ros/issues"">Github Issues</a>.</p>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>Please see the file called LICENSE.</p>\n\n<h2 id=""authors"">AUTHORS</h2>\n\n<p>Tom Panzarella <a href=""mailto:tom@loveparkrobotics.com"">tom@loveparkrobotics.com</a></p>\n</div>\n\n            \n          </div>'"
qt_gui_core,http://rosindex.github.io/r/qt_gui_core/,"hydro,fuerte,groovy,kinetic,jade,indigo","qt_dotgraph,qt_gui,qt_gui_app,qt_gui_core,qt_gui_cpp,qt_gui_py_common","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robotcloudserver,http://rosindex.github.io/r/robotcloudserver/,indigo,,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot-management-cloud-server"">Robot Management Cloud Server</h1>\n\n<h2 id=""about-the-project"">About the project</h2>\n\n<p>This software solution enables you to control, manage and supervise ROS-based robots. It allows you secure remote access, and is compatible with any third party application protocol, as it offers routing and port mapping independent on the payload or type of packet.</p>\n\n<p>The possible usage of this software is very wide, ranging from home use, while making a single robot accessible from network, to remote lab management, where you can control robots in the lab, deploy software on them, connect through SSH and all of that from the comfort of your home.\nThe protocol, which is used for configuration of the routing tables in the reverse proxy server is simple enough to be used in any other application that you might have developed, or might want to, as it is completely independent of the RMS system, which was simply chosen as a tested and rich UI with user authentication.</p>\n\n<p>The project can be found on ROS wiki as well (<a href=""http://wiki.ros.org/robotcloudserver"">link</a>).</p>\n\n<p>The whole system consists of several parts:\n* OpenVPN network\n* RMS (Robot Management System) and it\'s extension\n* Dispatcher</p>\n\n<h2 id=""openvpn"">OpenVPN</h2>\n\n<p><a href=""https://openvpn.net/index.php/open-source/downloads.html"">Get OpenVPN</a></p>\n\n<p>The VPN network should be set up first, you can either make your own configuration, or use the one supplied in <strong>openvpn_config</strong> folder, in <strong>user_client</strong>, <strong>robot_client</strong> and <strong>server</strong> subfolders respectively.</p>\n\n<p>If you are to use your own configuration, keep in mind that client isolation is strongly advised, as well as no routing being set.\nSince the robots and user clients need to communicate only with the server, adding these options would only cause security risk.</p>\n\n<p>One VPN network should be sufficient, given the client isolation, but two is strongly recommended, so a user cannot create a fake robot connection,\nwhich would not cause any security issues, but could cause conflicts in robot identification.</p>\n\n<p>There are tools for OpenVPN configuration and key generation available in the <strong>openvpn_config</strong> folder. More information is also available in the readme file in that folder.</p>\n\n<h2 id=""rms-extension"">RMS extension</h2>\n\n<p><a href=""http://wiki.ros.org/rms"">Get RMS</a></p>\n\n<p>RMS setup is to be done exactly as described on the RMS webpage, with the addition of copying and overwriting the files in <strong>app</strong> folder by the ones\nsupplied from this repository (<strong>rms_extension/app</strong>), after the installation is complete.</p>\n\n<p>Once you complete the installation and copy the required files, you need to navigate to the installation folder and modify file located in <strong>RMS_FOLDER/app/config/bootstrap.php</strong>\nYou will find a line containing <strong>""VPN_SERVER_IP""</strong> and change the IP address there to the address of the VPN server, to which user clients will connect.</p>\n\n<p>Also, RMS requires rosbrdige to be installed and running on the side of the robots. How to install and run rosbridge on the robots running ROS is described on the <a href=""http://wiki.ros.org/rosbridge_suite"">official website</a>.</p>\n\n<h2 id=""dispatcher"">Dispatcher</h2>\n\n<p>Once the VPN and RMS with the extension are set up, you need to configure and run <strong>launch_server.py</strong> on the server side, and <strong>launch_client.py</strong> on the side of the robot.</p>\n\n<p>On the client, all you need to do is to edit the address of the server, you will find at the end of the script, simply change the <strong>""cloudServerIP""</strong> to the IP address\nof the VPN server for robots.</p>\n\n<p>On the server side, you may want to again navigate to the bottom lines of the script, and modify the listening ports or addresses for server threads,\nor add another network service by adding another line with the <strong>""addTunnel""</strong> method.</p>\n\n<p>Details of both server and client configurations for Dispatcher can be found in corresponding launch files.</p>\n\n<h2 id=""docker"">Docker</h2>\n\n<p>The server part of the application is also available as a Docker image, information on running it is available in it\'s Docker repository - <a href=""https://hub.docker.com/r/mjezersky/robotcloudserver/"">mjezersky/robotcloudserver</a>.</p>\n</div>\n\n            \n          </div>'"
rqt_multiplot_plugin,http://rosindex.github.io/r/rqt_multiplot_plugin/,"kinetic,indigo",rqt_multiplot,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rqt-multiplot-plugin"">Rqt Multiplot Plugin</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p><strong>Author(s):</strong> Ralf Kaestner</p>\n\n<p><strong>Maintainer:</strong> Ralf Kaestner <a href=""mailto:ralf.kaestner@gmail.com"">ralf.kaestner@gmail.com</a></p>\n\n<p><strong>License:</strong> GNU Lesser General Public License (LGPL)</p>\n\n<p><strong>Operating system(s):</strong> Debian-based Linux, Mac OS X</p>\n\n<p><strong>Package PPA:</strong> ppa:ethz-asl/ros</p>\n\n<h2 id=""content"">Content</h2>\n\n<p>This project provides a GUI plugin for visualizing numeric values in multiple 2D plots using the <a href=""http://qwt.sourceforge.net"">Qwt</a> plotting backend.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""dependencies"">Dependencies</h3>\n\n<ul>\n<li><a href=""http://wiki.ros.org/rqt"">rqt</a></li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">    sudo apt-get install ros-indigo-rqt\n\n</code></pre></div>\n<ul>\n<li><a href=""https://github.com/ethz-asl/variant"">variant_topic_tools</a></li>\n</ul>\n\n<p>Consult the <a href=""https://github.com/ethz-asl/variant/blob/master/README.md#installation"">installation instructions</a> provided by this project.</p>\n\n<ul>\n<li><a href=""http://qwt.sourceforge.net/"">qwt</a></li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">    sudo apt-get install libqwt-dev\n\n</code></pre></div>\n<h3 id=""building"">Building</h3>\n\n<p>Create a symlink in your catkin source folder, e.g.:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">ln -s ~/git/rqt_multiplot_plugin ~/catkin_ws/src\n<span class=""nb"">cd</span> ~/catkin_ws\ncatkin_make\n\n</code></pre></div>\n<h3 id=""debian-package"">Debian Package</h3>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">sudo add-apt-repository ppa:ethz-asl/ros\nsudo apt-get update\nsudo apt-get install ros-indigo-rqt-multiplot\n\n</code></pre></div>\n<h2 id=""usage"">Usage</h2>\n\n<p>To launch the standalone rqt plugin, run</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rosrun rqt_multiplot rqt_multiplot\n\n</code></pre></div>\n<p>To launch the rqt GUI without a perspective, run</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rqt --force-discover\n\n</code></pre></div>\n<p>This will discover all plugins, which can then be loaded manually.</p>\n\n<p>To delete the default configuration files (in case of problems):</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rqt --clear-config\n\n</code></pre></div>\n<h3 id=""example-views"">Example Views</h3>\n\n<p><img src=""https://lh3.googleusercontent.com/-EF4aCvEV3ZU/V0Vku40VueI/AAAAAAAAajg/rdRvc-YWkPw50gPOGbGrtMtzMjgmBANfACLcB/s700/multiplot_1_legend.png"" alt=""enter image description here"" title=""Overview""></p>\n\n<h4 id=""configure-plot"">Configure Plot</h4>\n\n<p><img src=""https://lh3.googleusercontent.com/-E14yRrgKars/V0VlFJdDX5I/AAAAAAAAajo/2Nfo_ovj5dABrF7OQPExlMJY1gMAKK43QCLcB/s700/multiplot_configure_plot.png"" alt=""enter image description here"" title=""Configure plot""></p>\n\n<h4 id=""edit-curve"">Edit Curve</h4>\n\n<p><img src=""https://lh3.googleusercontent.com/-Ei_j84gwJ7U/V0VlWrjUumI/AAAAAAAAaj0/dEB0dkE2YJ8rCWpmql6ZW4f6iMlJgxv8ACLcB/s700/multiplot_edit_curve.png"" alt=""enter image description here"" title=""Edit curve""></p>\n\n<h2 id=""bugs-amp-feature-requests"">Bugs &amp; Feature Requests</h2>\n\n<p>Please report bugs and feature requests on the <a href=""https://github.com/ethz-asl/rqt_multiplot_plugin"">Issue Tracker</a>.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<h3 id=""devel-job-status"">Devel Job Status</h3>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Indigo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rqt_multiplot_plugin</td>\n<td><a href=""http://build.ros.org/job/Idev__rqt_multiplot_plugin__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__rqt_multiplot_plugin__ubuntu_trusty_amd64"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""release-job-status"">Release Job Status</h3>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Indigo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rqt_multiplot</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__rqt_multiplot__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__rqt_multiplot__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n\n            \n          </div>'"
rtt_ros_integration,http://rosindex.github.io/r/rtt_ros_integration/,"hydro,fuerte,electric,groovy,jade,indigo","rtt_actionlib,rtt_dynamic_reconfigure,rtt_ros,rtt_ros_integration,rtt_ros_msgs,rtt_rosclock,rtt_roscomm,rtt_rosdeployment,rtt_rosnode,rtt_rospack,rtt_rosparam,rtt_tf,rtt_dynamic_reconfigure_tests,rtt_ros_tests,rtt_rosbuild_tests,rtt_roscomm_tests,rtt_rospack_tests,rtt_actionlib_msgs,rtt_common_msgs,rtt_diagnostic_msgs,rtt_geometry_msgs,rtt_kdl_conversions,rtt_nav_msgs,rtt_ros_comm,rtt_rosgraph_msgs,rtt_sensor_msgs,rtt_shape_msgs,rtt_std_msgs,rtt_std_srvs,rtt_stereo_msgs,rtt_trajectory_msgs,rtt_visualization_msgs,rtt_ros_integration_example","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""orocos-rtt-ros-integration-packages"">Orocos RTT / ROS Integration Packages</h1>\n\n<h2 id=""introduction"">Introduction</h2>\n\n<p>This repository contains ROS packages necessary for building OROCOS libraries,\nplugins, and components which communicate with the ROS messaging system and the\nROS parameter server.</p>\n\n<h2 id=""changelog"">Changelog</h2>\n\n<p>See the metapackage <a href=""rtt_ros_integration/CHANGELOG.rst"">rtt_ros_integration/CHANGELOG.rst</a> for a\ncomprehensive changelog.</p>\n\n<h2 id=""packages"">Packages</h2>\n\n<p>The packages in this repository provide:</p>\n\n<ul>\n<li>\n<a href=""rtt_ros""><strong>rtt_ros</strong></a> ROS package import plugin as well as wrapper scripts\nand launchfiles for using Orocos with ROS.</li>\n<li>\n<a href=""rtt_rosclock""><strong>rtt_rosclock</strong></a> Realtime-Safe NTP clock measurement and ROS\n<code>Time</code> structure construction as well as a simulation-clock-based periodic\nRTT activity.</li>\n<li>\n<a href=""rtt_rosnode""><strong>rtt_rosnode</strong></a> Plugin for ROS node instantiation inside an\nOrocos program.</li>\n<li>\n<a href=""rtt_rosparam""><strong>rtt_rosparam</strong></a> Plugin for synchronizing ROS parameters\nwith Orocos component properties.</li>\n<li>\n<a href=""rtt_roscomm""><strong>rtt_roscomm</strong></a> ROS message typekit generation and Orocos\nplugin for publishing and subscribing to ROS topics as well as calling and\nresponding to ROS services.</li>\n<li>\n<a href=""rtt_rosdeployment""><strong>rtt_rosdeployment</strong></a> An RTT service which advertises\ncommon DeploymentComponent operations as ROS services.</li>\n<li>\n<a href=""rtt_rospack""><strong>rtt_rospack</strong></a> Plugin for locating ROS resources.</li>\n<li>\n<a href=""rtt_tf""><strong>rtt_tf</strong></a> RTT-Plugin which uses <a href=""http://ros.org/wiki/tf"">tf</a> to\nallow RTT components to lookup and publish transforms.</li>\n<li>\n<a href=""rtt_actionlib""><strong>rtt_actionlib</strong></a> RTT-Enabled\n<a href=""http://ros.org/wiki/actionlib"">actionlib</a> action server for providing\nactions from ROS-integrated RTT components.</li>\n<li>\n<a href=""rtt_dynamic_reconfigure""><strong>rtt_dynamic_reconfigure</strong></a> A service plugin\nthat implements a <a href=""http://wiki.ros.org/dynamic_reconfigure"">dynamic_reconfigure</a> server to\nupdate properties dynamically during runtime.</li>\n<li>\n<a href=""rtt_ros_msgs""><strong>rtt_ros_msgs</strong></a> ROS .msg and .srv types for use with these\nplugins.</li>\n<li>\n<a href=""rtt_ros_integration""><strong>rtt_ros_integration</strong></a> Catkin\n<a href=""http://ros.org/wiki/catkin/package.xml#Metapackages"">metapackage</a> for this\nrepository.</li>\n</ul>\n\n<p><strong><em>See each package\'s README.md file for more information.</em></strong></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>For numerous examples of usage, see the\n<a href=""http://github.com/jhu-lcsr/rtt_ros_examples""><strong>rtt_ros_examples</strong></a>\nstack.</p>\n\n<h3 id=""installing-orocos-from-binary-packages"">Installing Orocos From Binary Packages</h3>\n\n<p>The Orocos toolchain and the rtt_ros_integration packages are available as \nbinary packages hosted by the Open Source Robotics Foundation (OSRF) and can be\ninstalled on supported operating systems.</p>\n\n<h3 id=""building-orocos-from-source"">Building Orocos From Source</h3>\n\n<p>The <a href=""http://www.orocos.org/orocos/toolchain"">Orocos Toolchain</a> can be built from\nsource in a Catkin workspace using <code>catkin_build_isolated</code> since Orocos packages\nnow contain Catkin <code>package.xml</code> files. </p>\n\n<p>First, create an isolated underlay for building plain CMake-based packages like\nOrocos:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""nb"">export </span><span class=""nv"">OROCOS_TARGET</span><span class=""o"">=</span>gnulinux\nmkdir -p ~/ws/underlay_isolated/src/orocos\n<span class=""nb"">cd</span> ~/ws/underlay_isolated\ngit clone --recursive git://gitorious.org/orocos-toolchain/orocos_toolchain.git -b toolchain-2.7 src/orocos/orocos_toolchain\ncatkin_make_isolated --install\n<span class=""nb"">source </span>install_isolated/setup.sh\n\n</code></pre></div>\n<p>Then, in the same shell, create an underlay for building Catkin-based packages:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">mkdir -p ~/ws/underlay/src\n<span class=""nb"">cd</span> ~/ws/underlay\ngit clone https://github.com/orocos/rtt_ros_integration.git src/rtt_ros_integration\ncatkin_make\n<span class=""nb"">source </span>devel/setup.sh\n\n</code></pre></div>\n<p>At this point you can create Catkin or rosbuild packages which use the\nrtt_ros_integration tools.</p>\n\n<h3 id=""creating-an-orocos-ros-package"">Creating an Orocos-ROS Package</h3>\n\n<p>The Orocos and ROS communities have both standardized on using CMake for building source code, and have also both developed independent CMake macros for assisting the process. The ROS community has developed <a href=""http://github.com/ros/catkin"">catkin</a> and the Orocos toolchain uses Orocos-specific macros. These macros are used for exporting (declaring) and retreiving inter-package dependencies. It\'s a good, conflict-preventing, practice to decide when a package should be characterized by Catkin-based or Orocos-based macros.</p>\n\n<p>Any package that builds orocos targets (plugins, components, executables, etc) <em>needs_to call the <code>orocos_generate_package()</code> macro so that the appropriate platform-specific pkg-config .pc files are generated. These packages can _depend</em> on ROS libraries, but they should avoid <em>exporting</em> headers, libraries, or other resources via the <code>catkin_package()</code> macro.</p>\n\n<p>A simple Orocos-ROS package looks like the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">my_orocos_pkg\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 README.md\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 CMakeLists.txt\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 package.xml\n\xe2\x94\x9c\xe2\x94\x80\xe2\x94\x80 include\n\xe2\x94\x82   \xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 my_orocos_pkg\n\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80 src\n\n</code></pre></div>\n<p>Where the CMakeLists.txt has the following directives:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">cmake_minimum_required</span><span class=""p"">(</span>VERSION 2.8.3<span class=""p"">)</span>\n<span class=""nb"">project</span><span class=""p"">(</span>my_orocos_pkg<span class=""p"">)</span>\n\n<span class=""c1"">### ROS Dependencies ###</span>\n<span class=""c1""># Find the RTT-ROS package (this transitively includes the Orocos CMake macros)</span>\n<span class=""nb"">find_package</span><span class=""p"">(</span>catkin REQUIRED COMPONENTS\n  rtt_ros\n  <span class=""c1""># ADDITIONAL ROS PACKAGES</span>\n  <span class=""p"">)</span>\n\n<span class=""nb"">include_directories</span><span class=""p"">(</span><span class=""si"">${</span><span class=""nv"">catkin_INCLUDE_DIRS</span><span class=""si"">}</span><span class=""p"">)</span>\n\n<span class=""c1"">### Orocos Dependencies ###</span>\n<span class=""c1""># Note that orocos_use_package() does not need to be called for any dependency</span>\n<span class=""c1""># listed in the package.xml file</span>\n\n<span class=""nb"">include_directories</span><span class=""p"">(</span><span class=""si"">${</span><span class=""nv"">USE_OROCOS_INCLUDE_DIRS</span><span class=""si"">}</span><span class=""p"">)</span>\n\n<span class=""c1"">### Orocos Targets ###</span>\n\n<span class=""c1""># orocos_component(my_component src/my_component.cpp)</span>\n<span class=""c1""># target_link_libraries(my_component ${catkin_LIBRARIES} ${USE_OROCOS_LIBRARIES})</span>\n\n<span class=""c1""># orocos_library(my_library src/my_library.cpp)</span>\n<span class=""c1""># target_link_libraries(my_library ${catkin_LIBRARIES} ${USE_OROCOS_LIBRARIES})</span>\n\n<span class=""c1""># orocos_service(my_service src/my_service.cpp)</span>\n<span class=""c1""># target_link_libraries(my_service ${catkin_LIBRARIES} ${USE_OROCOS_LIBRARIES})</span>\n\n<span class=""c1""># orocos_plugin(my_plugin src/my_plugin.cpp)</span>\n<span class=""c1""># target_link_libraries(my_plugin ${catkin_LIBRARIES} ${USE_OROCOS_LIBRARIES})</span>\n\n<span class=""c1""># orocos_typekit(my_typekit src/my_typekit.cpp)</span>\n<span class=""c1""># target_link_libraries(my_typekit ${catkin_LIBRARIES} ${USE_OROCOS_LIBRARIES})</span>\n\n<span class=""c1"">### Orocos Package Exports and Install Targets ###</span>\n\n<span class=""c1""># Generate install targets for header files</span>\n\n<span class=""nf"">orocos_install_headers</span><span class=""p"">(</span>DIRECTORY include/<span class=""si"">${</span><span class=""nv"">PROJECT_NAME</span><span class=""si"">}</span><span class=""p"">)</span>\n\n<span class=""c1""># Export package information (replaces catkin_package() macro) </span>\n<span class=""nf"">orocos_generate_package</span><span class=""p"">(</span>\n  INCLUDE_DIRS include\n  DEPENDS rtt_ros\n<span class=""p"">)</span>\n\n</code></pre></div>\n<p>The package.xml file is a normal Catkin package.xml file, with some additional export flags for ROS plugin auto-loading:</p>\n<div class=""highlight""><pre><code class=""language-xml"" data-lang=""xml""><span class=""nt"">&lt;package&gt;</span>\n  <span class=""nt"">&lt;name&gt;</span>my_orocos_package<span class=""nt"">&lt;/name&gt;</span>\n  <span class=""nt"">&lt;version&gt;</span>0.1.0<span class=""nt"">&lt;/version&gt;</span>\n  <span class=""nt"">&lt;license&gt;</span>BSD<span class=""nt"">&lt;/license&gt;</span>\n  <span class=""nt"">&lt;maintainer</span> <span class=""na"">email=</span><span class=""s"">""name@domain.com""</span><span class=""nt"">&gt;</span>Firstname Lastname<span class=""nt"">&lt;/maintainer&gt;</span>\n  <span class=""nt"">&lt;description&gt;</span>\n    Package description.\n  <span class=""nt"">&lt;/description&gt;</span>\n\n  <span class=""nt"">&lt;buildtool_depend&gt;</span>catkin<span class=""nt"">&lt;/buildtool_depend&gt;</span>\n\n  <span class=""c"">&lt;!-- Build deps are queried automatically with orocos_use_package() --&gt;</span>\n  <span class=""nt"">&lt;build_depend&gt;</span>rtt<span class=""nt"">&lt;/build_depend&gt;</span>\n  <span class=""nt"">&lt;build_depend&gt;</span>ocl<span class=""nt"">&lt;/build_depend&gt;</span>\n  <span class=""nt"">&lt;build_depend&gt;</span>rtt_ros<span class=""nt"">&lt;/build_depend&gt;</span>\n\n  <span class=""nt"">&lt;run_depend&gt;</span>rtt<span class=""nt"">&lt;/run_depend&gt;</span>\n  <span class=""nt"">&lt;run_depend&gt;</span>ocl<span class=""nt"">&lt;/run_depend&gt;</span>\n  <span class=""nt"">&lt;run_depend&gt;</span>rtt_ros<span class=""nt"">&lt;/run_depend&gt;</span>\n\n  <span class=""c"">&lt;!-- ROS Msg Typekits and Srv Proxies --&gt;</span>\n  <span class=""nt"">&lt;build_depend&gt;</span>rtt_sensor_msgs<span class=""nt"">&lt;/build_depend&gt;</span>\n  <span class=""nt"">&lt;run_depend&gt;</span>rtt_sensor_msgs<span class=""nt"">&lt;/run_depend&gt;</span>\n\n  <span class=""nt"">&lt;export&gt;</span>\n    <span class=""nt"">&lt;rtt_ros&gt;</span>\n      <span class=""c"">&lt;!-- Plugin deps are loaded automatically by the rtt_ros import service --&gt;</span>\n      <span class=""nt"">&lt;plugin_depend&gt;</span>rtt_sensor_msgs<span class=""nt"">&lt;/plugin_depend&gt;</span>\n    <span class=""nt"">&lt;/rtt_ros&gt;</span>\n  <span class=""nt"">&lt;/export&gt;</span>\n<span class=""nt"">&lt;/package&gt;</span>\n\n</code></pre></div>\n<h3 id=""building-ros-based-orocos-components"">Building ROS-Based Orocos Components</h3>\n\n<p>While the ROS community has standardized on the rosbuild (ROS Hydro and earlier)\nand Catkin (ROS Groovy and later) buildsystems, Orocos has its own\nCMake/PkgConfig-based package description system which uses\n<a href=""http://rock-robotics.org/stable/documentation/autoproj/"">Autoproj</a> manifest.xml\nfiles similar to rosbuild manifest.xml files. </p>\n\n<p>This is primarily because Orocos builds its libraries with respect to a given\n<code>$OROCOS_TARGET</code> (gnulinux/xenomai/macosx/etc) so that you can build multiple\nversions of the same library in place without having to rebuild everything\nwhenever you change targets.</p>\n\n<p>So in order to build Orocos components in a rosbuild or Catkin package, you need\nto first include the RTT CMake macros. This is done automatically when you find\nthe <code>rtt_ros</code> package:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>catkin REQUIRED COMPONENTS rtt_ros<span class=""p"">)</span>\n\n</code></pre></div>\n<p>If you need other RTT libraries like the CORBA transport etc, you can use the\n<code>use_orocos()</code> macro provided by the <code>rtt_ros</code> package:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nf"">use_orocos</span><span class=""p"">(</span>rtt-transport-corba<span class=""p"">)</span>\n\n</code></pre></div>\n<p>The above is equivalent to calling the following:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>OROCOS-RTT REQUIRED COMPONENTS rtt-scripting rtt-transport-corba<span class=""p"">)</span>\n<span class=""nb"">include</span><span class=""p"">(</span><span class=""si"">${</span><span class=""nv"">OROCOS-RTT_USE_FILE_PATH</span><span class=""si"">}</span>/UseOROCOS-RTT.cmake <span class=""p"">)</span>\n\n</code></pre></div>\n<p>When this file is included, it both defines and executes several macros.\nSpecifically, it parses the package.xml or manifest.xml of the including\npackage, and executes <code>orocos_use_package(pkg-name)</code> on all build dependencies.\nThis populates several variables including, but not limited to\n<code>${OROCOS_USE_INCLUDE_DIRS}</code> and  <code>${OROCOS_USE_LIBRARIES}</code> which are used by\nOrocos target- and package-definition macros like <code>orocos_executable()</code>,\n<code>orocos_library()</code> and <code>orocos_generate_package()</code>.</p>\n\n<p>Also, while the <code>orocos_use_package()</code> macro can be used to find both\nOrocos-based packages and normal pkg-config-based packages, you should only use\nit for Orocos-based packages. You should use the normal CMake and Catkin\nmechanisms for all non-Orocos dependencies. As long as the names of <em>orocos</em>\npackages are listed as <code>&lt;build_depend&gt;</code> dependencies in your package.xml file,\ntheir build flags will automatically be made available when building your\npackage. <em>Do not</em> use <code>find_package(catkin COMPONENTS)</code> to find orocos packages,\nsince catkin doesn\'t properly handle the orocos-target-specific packages. Listing \nthem in the package.xml file will also enforce proper build ordering.</p>\n\n<p>To build components, libraries, typekits, and other Orocos plugins, use the\nstandard <code>orocos_*()</code> CMake macros. Then to make these available to other\npackages at build-time (through <code>orocos_use_package()</code>), declare an Orocos\npackage at the end of your CMakeLists.txt file:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nf"">orocos_generate_package</span><span class=""p"">(</span>DEPENDS some-other-oro-pkg<span class=""p"">)</span>\n\n</code></pre></div>\n<p>See the Orocos RTT documentation (or <a href=""http://www.orocos.org/stable/documentation/rtt/v2.x/doc-xml/rtt_cheat_sheet.pdf"">cheat\nsheet</a>)\nfor more info on these macros.</p>\n\n<p><strong>NOTE:</strong> You still need to call <code>find_package(catkin ...)</code> and\n<code>catkin_package(...)</code> for non-orocos dependencies and targets, but you shuold\nuse the <code>orocos_*()</code> CMake macros for Orocos-based code.</p>\n\n<h3 id=""dynamically-loading-ros-based-orocos-plugins"">Dynamically Loading ROS-Based Orocos Plugins</h3>\n\n<p>Orocos plugins (components, typekits, plugins, etc.) are now built into the\nCatkin develspace lib directory.  Specificallly, they are built under\n<code>devel/lib/orocos/$OROCOS_TARGET/PKG_NAME/</code>. These directories should be on the \ndefault Orocos search path as long as <code>devel/lib/orocos</code> is in the <code>$RTT_COMPONENT_PATH</code>\n(which happens automatically through the env-hooks supplied by <strong>rtt_ros</strong>).</p>\n\n<p>In order to import Orocos plugins built in a ROS package and all of that plugin\'s\ndependencies, no matter where it is, you can use the <code>ros.import()</code> service:</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""n"">import</span><span class=""p"">(</span><span class=""s"">""rtt_ros""</span><span class=""p"">)</span>\n<span class=""n"">ros</span><span class=""o"">.</span><span class=""n"">import</span><span class=""p"">(</span><span class=""s"">""my_pkg_name""</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>In this example, first the <code>rtt_ros</code> package is imported using the normal\nmechanism. This loads the <code>ros</code> service, which provides a ROS import\nfunction, <code>ros.import()</code>, which will parse ROS package metadata and import the\nOrocos plugins from the named package <em>and</em> all packages listed in\n<code>&lt;rtt_ros&gt;&lt;plugin_depend&gt;PKG_NAME&lt;/plugin_depend&gt;&lt;/rtt_ros&gt;</code> tags in the\n<code>&lt;export&gt;</code> section of the package.xml files.</p>\n\n<p>A single ROS package with orocos plugins can still be imported\nwith the standard deployer <code>import()</code> function. However, this will only work\nif the named package is built in the same workspace as <code>rtt_ros</code> or a \nworkspace which <code>rtt_ros</code> extends. Additionally, Orocos RTT 2.7 no\nlonger parses ROS package metadata in order to import all of a plugin\'s\ndependencies, so only the named package will be imported.</p>\n\n<p>For more information on specifying RTT plugin dependencies in ROS packages, see\nthe README in the <a href=""rtt_ros"">rtt_ros</a> package.</p>\n\n<h3 id=""bulding-ros-based-orocos-plugins"">Bulding ROS-Based Orocos Plugins</h3>\n\n<p>Orocos plugins are built normally, with Orocos CMake macros. See\n<a href=""rtt_actionlib/CMakeLists.txt"">rtt_actionlib</a> for \nan example of an Orocos RTT service plugin.</p>\n\n<h3 id=""running-orocos-programs"">Running Orocos Programs</h3>\n\n<p>The <code>rtt_ros</code> package provides several launchfiles and wrapper scripts for\nmaking it easier to Orocos programs in a ROS environment. See\n<a href=""rtt_ros"">rtt_ros</a> for more information.</p>\n\n<h3 id=""connecting-orocos-ports-to-ros-topics"">Connecting Orocos Ports to ROS Topics</h3>\n\n<p>The <code>rtt_roscomm</code> package provides a typekit for the the ROS Message \nprimitives, as well as a plugin which manages construction of ROS publishers\nand subscribers. See <a href=""rtt_roscomm"">rtt_roscomm</a> for more \ninformation. </p>\n\n<h3 id=""connecting-orocos-operations-to-ros-services"">Connecting Orocos Operations to ROS Services</h3>\n\n<p>The <code>rtt_roscomm</code> package provides RTT services for binding an Orocos RTT\noperation or operation caller to the ROS service server or client,\nrespectively. See <a href=""rtt_roscomm"">rtt_roscomm</a> for more information.</p>\n\n<h3 id=""running-an-actionlib-action-server-in-an-orocos-component"">Running an Actionlib Action Server in an Orocos Component</h3>\n\n<p>The <code>rtt_actionlib</code> package provides a C++ API and an RTT service for\nimplementing <a href=""http://www.ros.org/wiki/actionlib"">actionlib</a> actions with Orocos\nRTT components. See <a href=""rtt_actionlib"">rtt_actionlib</a> for more information.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bta_ros,http://rosindex.github.io/r/bta_ros/,"hydro,jade,indigo",bta_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bta_ros"">bta_ros</h1>\n\n<h3 id=""ros-integration-for-bluetechnix-devices-operated-by-the-bluetechnix-39-time-of-flight-39-btatofapi-library"">ROS integration for Bluetechnix devices operated by the Bluetechnix \'Time of Flight\' BtaTofApi library.</h3>\n\n<h2 id=""bta_ros-package-is-set-to-end-of-life"">bta_ros package is set to end-of-life.</h2>\n\n<p>The package has changed its name to bta_tof_driver <a href=""https://github.com/voxel-dot-at/bta_tof_driver"">https://github.com/voxel-dot-at/bta_tof_driver</a>.</p>\n\n<p>It will not be updated with the last changes. Please use <a href=""http://wiki.ros.org/bta_tof_driver"">http://wiki.ros.org/bta_tof_driver</a> instead of this package. </p>\n\n<h1 id=""summary"">Summary</h1>\n\n<p>This driver allows to configure your system and ROS to use all Bluetechnix Time of Flight cameras supported by the BltToFApi. It includes an example allowing you to visualize depth data using the rviz viewer included in ROS. It shows you how to use the ToF devices together with ROS and how you can modify operating parameters. Besides the ToF data, we have included a nodelet to capture rgb video from those devices that include a 2D sensor, such as the Argos 3D P320 or Sentis TOF P510. </p>\n\n<p>To read the docummentation of bta_ros, please visit the wiki page on ROS: <a href=""http://wiki.ros.org/bta_ros"">http://wiki.ros.org/bta_ros</a></p>\n</div>\n\n            \n          </div>'"
nao_robot,http://rosindex.github.io/r/nao_robot/,"hydro,jade,kinetic,indigo","nao_apps,nao_bringup,nao_description,nao_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nao_robot"">nao_robot</h1>\n\n<p>ROS stack for the NAO robot, see <a href=""http://www.ros.org/wiki/nao_robot"">http://www.ros.org/wiki/nao_robot</a></p>\n</div>\n\n            \n          </div>'"
rosserial,http://rosindex.github.io/r/rosserial/,"hydro,fuerte,groovy,jade,indigo","rosserial,rosserial_arduino,rosserial_client,rosserial_embeddedlinux,rosserial_mbed,rosserial_msgs,rosserial_python,rosserial_server,rosserial_tivac,rosserial_windows,rosserial_xbee","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""rosserial-for-hydro"">ROSserial for Hydro</h2>\n\n<p>This repo is ported from <a href=""https://kforge.ros.org/rosserial/hg"">https://kforge.ros.org/rosserial/hg</a>. It has been catkinized and updated for ROS Groovy and newer.</p>\n\n<h2 id=""changes-for-hydro"">Changes for Hydro</h2>\n\n<p>0.5.5\n * Add support for Arduino Yum\n * Release rosserial_server</p>\n\n<p>0.5.4\n * Fix a bug in string deserialization where part of length field could be uninitialized\n(issues 74 &amp; 76)</p>\n\n<p>0.5.3\n * Add rosserial_server - a C++ server implementation\n * Fix misc bugs including adding fixes for alignment issues on ARM processors\n0.5.2\n * Wire protocol change to add checksum to message length\n * Support empty requests\n * Re-integrate rosserial_xbee</p>\n\n<h2 id=""changes-for-groovy-catkin"">Changes for Groovy/Catkin</h2>\n\n<ul>\n<li>Moved to catkin build system </li>\n<li>Moved rosserial_xbee to experimential stack</li>\n<li>Created new rosserial metapackage, with depends only on python, client and msgs.</li>\n<li>Closed, integrated and/or moved all tickets to github.</li>\n<li>New message generation and workflow:\n\n<ul>\n<li>no longer uses roslib.rospack, or roslib.gentools (and is way, WAY faster)</li>\n<li>messages are no longer built at built-time (yeah, sounds ridiculous, but is true, see below for new workflow)</li>\n<li>beginnings of easier porting to new platforms (the lookup table is now found in architecture-dependent packages, etc)</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""usage-workflow"">Usage/Workflow</h2>\n\n<p>Workflow is a bit different from in the past. Rather than running the library generator over each package you want to use, you run it once and generate libraries for all installed messages:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  cd &lt;ws&gt;/src\n  git clone https://github.com/ros-drivers/rosserial\n  cd &lt;ws&gt;\n  catkin_make\n  catkin_make install\n  source &lt;ws&gt;/install/setup.bash\n  cd &lt;sketchbook&gt;/libraries\n  rosrun rosserial_arduino make_libraries.py .\n</code></pre></div>\n<p>Note: currently you will HAVE to run catkin_make install, otherwise portions of the ros_lib directory will be missing. This will hopefully be fixed soon. Also note: you may have to delete <sketchbook>/libraries/ros_lib in order to regenerate as its existence may cause an error.</sketchbook></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>This branch supports ROS Fuerte and ROS Electric using rosmake.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""rosserial"">rosserial</h2>\n\n<p>This repo is ported from <a href=""https://kforge.ros.org/rosserial/hg"">https://kforge.ros.org/rosserial/hg</a>. It has been catkinized and updated for ROS Groovy and onward.</p>\n\n<h3 id=""changes-for-indigo"">Changes for Indigo</h3>\n\n<p>Changes are being tracked on a per-package basis; please see the individual package folders,\nor use the ""Changes"" link on the right side of the package pages on the ROS wiki.</p>\n\n<h3 id=""changes-for-hydro"">Changes for Hydro</h3>\n\n<p>0.5.5\n * Add support for Arduino Yum\n * Release rosserial_server</p>\n\n<p>0.5.4\n * Fix a bug in string deserialization where part of length field could be uninitialized\n(issues 74 &amp; 76)</p>\n\n<p>0.5.3\n * Add rosserial_server - a C++ server implementation\n * Fix misc bugs including adding fixes for alignment issues on ARM processors\n0.5.2\n * Wire protocol change to add checksum to message length\n * Support empty requests\n * Re-integrate rosserial_xbee</p>\n\n<h3 id=""changes-for-groovy-catkin"">Changes for Groovy/Catkin</h3>\n\n<ul>\n<li>Moved to catkin build system </li>\n<li>Moved rosserial_xbee to experimential stack</li>\n<li>Created new rosserial metapackage, with depends only on python, client and msgs.</li>\n<li>Closed, integrated and/or moved all tickets to github.</li>\n<li>New message generation and workflow:\n\n<ul>\n<li>no longer uses roslib.rospack, or roslib.gentools (and is way, WAY faster)</li>\n<li>messages are no longer built at built-time (yeah, sounds ridiculous, but is true, see below for new workflow)</li>\n<li>beginnings of easier porting to new platforms (the lookup table is now found in architecture-dependent packages, etc)</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=""usage-workflow"">Usage/Workflow</h3>\n\n<p>Please see the <a href=""http://wiki.ros.org/rosserial_arduino/Tutorials"">rosserial Tutorials on the ROS wiki</a> to get started.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""rosserial-for-groovy"">ROSserial for Groovy+</h2>\n\n<p>This repo is ported from <a href=""https://kforge.ros.org/rosserial/hg"">https://kforge.ros.org/rosserial/hg</a>. It is in the process of being catkinized and updated for ROS Groovy and newer.</p>\n\n<h2 id=""changes-for-groovy-catkin"">Changes for Groovy/Catkin</h2>\n\n<ul>\n<li>Moved to catkin build system </li>\n<li>Moved rosserial_xbee to experimential stack</li>\n<li>Created new rosserial metapackage, with depends only on python, client and msgs.</li>\n<li>Closed, integrated and/or moved all tickets to github.</li>\n<li>New message generation and workflow:\n\n<ul>\n<li>no longer uses roslib.rospack, or roslib.gentools (and is way, WAY faster)</li>\n<li>messages are no longer built at built-time (yeah, sounds ridiculous, but is true, see below for new workflow)</li>\n<li>beginnings of easier porting to new platforms (the lookup table is now found in architecture-dependent packages, etc)</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""usage-workflow"">Usage/Workflow</h2>\n\n<p>Workflow is a bit different from in the past. Rather than running the library generator over each package you want to use, you run it once and generate libraries for all installed messages:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  cd &lt;ws&gt;/src\n  git clone https://github.com/ros-drivers/rosserial\n  cd &lt;ws&gt;\n  catkin_make\n  catkin_make install\n  source &lt;ws&gt;/install/setup.bash\n  cd &lt;sketchbook&gt;/libraries\n  rosrun rosserial_arduino make_libraries.py .\n</code></pre></div>\n<p>Note: currently you will HAVE to run catkin_make install, otherwise portions of the ros_lib directory will be missing. This will hopefully be fixed soon. Also note: you may have to delete <sketchbook>/libraries/ros_lib in order to regenerate as its existence may cause an error.</sketchbook></p>\n</div>\n\n            \n          </div>'"
schunk_modular_robotics,http://rosindex.github.io/r/schunk_modular_robotics/,"hydro,groovy,indigo","schunk_description,schunk_libm5api,schunk_modular_robotics,schunk_powercube_chain,schunk_sdh,schunk_sdhx,schunk_simulated_tactile_sensors","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/schunk_modular_robotics""><img src=""https://travis-ci.org/ipa320/schunk_modular_robotics.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
ueye_cam,http://rosindex.github.io/r/ueye_cam/,"hydro,fuerte,groovy,kinetic,jade,indigo",ueye_cam,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><strong>DISCLAMER:</strong></p>\n\n<p>This project was created within an academic research setting, and thus should\nbe considered as EXPERIMENTAL code. There may be bugs and deficiencies in the\ncode, so please adjust expectations accordingly. With that said, we are\nintrinsically motivated to ensure its correctness (and often its performance).\nPlease use the corresponding web repository tool (e.g. github, bitbucket, etc)\nto file bugs, suggestions, pull requests; we will do our best to address them\nin a timely manner.</p>\n\n<p><strong>LAYOUT:</strong>\n- ueye_cam/\n  - cfg/:                 dynamic_reconfigure configuration files\n  - include/:             header files\n  - launch/:              roslaunch files\n  - src/:                 source files\n  - CMakeLists.txt:       CMake project configuration file\n  - LICENSES:             license agreement\n  - package.xml:          ROS/Catkin package file\n  - nodelet_plugins.xml:  ROS nodelet specification file\n  - README.md:            this file\n- ~/.ros/camera_info/:    camera calibration yaml files\n                          (see documentation for camera_calibration ROS package\n                          for more details)\n- ~/.ros/camera_conf/:    UEye camera parameter configuration files\n                          (generatable using ueyedemo executable:\n                          File -&gt; save parameter -&gt; to file...)</p>\n\n<p><strong>DOCUMENTATION:</strong></p>\n\n<p><a href=""http://www.ros.org/wiki/ueye_cam"">www.ros.org/wiki/ueye_cam</a></p>\n\n<p>Copyright (c) 2013, Anqi Xu</p>\n\n<p>All rights reserved.</p>\n\n<p>BSD3 license: see LICENSE file</p>\n</div>\n\n            \n          </div>'"
argos3d_p100,http://rosindex.github.io/r/argos3d_p100/,"hydro,groovy,indigo",argos3d_p100,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""argos3d_p100_ros_pkg"">argos3d_p100_ros_pkg</h1>\n\n<hr>\n\n<p>This ROS package uses an old api for the Bluetechnix Argos 3d p100 sensor.</p>\n\n<p>There is a new package (<a href=""https://github.com/voxel-dot-at/bta_tof_driver"">https://github.com/voxel-dot-at/bta_tof_driver</a>) that uses the new <a href=""https://support.bluetechnix.at/wiki/Bluetechnix_\'Time_of_Flight\'_API"">BltToFApi</a> developed by Bluetechnix for interacting with their sensors.</p>\n\n<p>We recommend to use the new bta_tof_driver package.</p>\n\n<hr>\n\n<h3 id=""ros-package-for-bluetechnix-argos3d-p100-tof-camera"">ROS package for Bluetechnix Argos3D P100 ToF camera.</h3>\n\n<h1 id=""summary"">Summary</h1>\n\n<p>This package explains how to configure your system and ROS to use the Argos3D P100 ToF camera.\nThe package includes an example allowing you to visualize images using the rviz viewer included in ROS.\nIt demostrates how to use the camera within ROS and the different parameter configurations of the P100\nas well as its capabilities.</p>\n\n<p>To get more information about the Time of Flight camera Argos3D P100 please visit Bluetechnix website:\n<a href=""http://ww2.bluetechnix.com/en/products/depthsensing/product/argos3d-p100/"">http://ww2.bluetechnix.com/en/products/depthsensing/product/argos3d-p100/</a></p>\n\n<h2 id=""first-step-get-ros"">First step: Get ROS</h2>\n\n<p>The argos3d_p100_ros_kg works with ROS versions groovy and hydro. \nYou can use catkin workspaces or the previous rosbuild to configure, compile and get ready ROS.</p>\n\n<p>We will point in the above lines how to get ros_hydro and catkin workspace ready \nfrom the tutorials of the ROS web site.</p>\n\n<p>In Ubuntu follow the ROS installation tutorial: </p>\n\n<blockquote>\n<p><a href=""http://wiki.ros.org/hydro/Installation/Ubuntu"">http://wiki.ros.org/hydro/Installation/Ubuntu</a>.</p>\n</blockquote>\n\n<p>Why to use catkin workspaces:</p>\n\n<blockquote>\n<p><a href=""http://wiki.ros.org/catkin"">http://wiki.ros.org/catkin</a> </p>\n\n<p><a href=""http://wiki.ros.org/catkin_or_rosbuild"">http://wiki.ros.org/catkin_or_rosbuild</a></p>\n\n<p><a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">http://wiki.ros.org/catkin/Tutorials/create_a_workspace</a></p>\n</blockquote>\n\n<p>To configure a catkin workspace in your ROS installation, follow this: </p>\n\n<blockquote>\n<p>ROS tutorial: <a href=""http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment"">http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment</a></p>\n</blockquote>\n\n<h2 id=""known-problems"">Known Problems</h2>\n\n<p>Be sure your libboost library version is &gt;= 1.49.\nPrevious versions as 1.46 generate errors while compiling argos3d_p100-ros-pkg.</p>\n\n<h1 id=""1-configuration"">1. Configuration</h1>\n\n<h2 id=""setup-p100-usb-rules-and-native-libraries"">Setup P100 USB rules and native libraries</h2>\n\n<p>The first step is to add the PMDSDK to our system. \n(The PMDSDK is copyrighted software and it is distributed with your Argos3D P100)</p>\n\n<h4 id=""1-1-usb-device-rules"">1.1 Usb Device rules</h4>\n\n<p>After unziping the software distributed with your Argos3D P100 camera, browse to the directory \nof your operating system version. </p>\n\n<p>Install the driver for using the ToF camera:</p>\n\n<p>In Ubuntu/linux copy the file from the driver folder to <strong>/etc/udev/rules.d/</strong>\n</p>\n<pre><code>cd driver\nsudo cp 10-pmd-ubuntu.rules /etc/udev/rules.d/\n</code></pre>\nThis will set the right permissions to allow not sudo users to use the camera.\n\n<h4 id=""1-2-libraries-setup"">1.2 Libraries setup</h4>\n\n<p>Add PMDSDK to your system (use the right version for your system 32 or 64 bits).</p>\n\n<ol>\n<li>Add the dynamically linked shared object library libpmdaccess2. Use one of the following options:</li>\n</ol>\n\n<p>You have different ways to add it to the <strong>LD_LIBRARY_PATH</strong>.\n- You can simply copy the libpmdaccess2.so file to <strong>/usr/local/lib</strong> as root (or the defauld search library path of your system)\n- Add a .conf file (like pmd_camera_L64.conf) with the path of your library in <strong>/etc/ld.so.conf.d</strong>. The file must contaning the following lines:</p>\n\n<pre><code>#PMD camera support\n/.../PMDSDK/bin\n/.../PMDSDK/include\n</code></pre>\n\n<p><em>replace the dots with the absolute path to the PMDSDK directory</em></p>\n\n<ol>\n<li>Add includes and dynamic plugin libraries</li>\n</ol>\n\n<ul>\n<li>Move the PMDSDK folder to a directory where the operating system can find it (/usr/include)</li>\n<li>or set an environment variable called $PMDDIR to the path where there is the PMDSDK.</li>\n</ul>\n\n<p>After adding libraries, update the links and cache of the share libraries with:</p>\n\n<pre><code>ldconfig\n</code></pre>\n\n<h1 id=""2-installation"">2. Installation</h1>\n\n<h4 id=""2-1-install-dependencies"">2.1 Install dependencies</h4>\n\n<p>Make sure you have the following dependencies already installed:\n</p>\n<pre><code> apt-get install ros-hydro-pcl-ros ros-hydro-pcl-conversions ros-hydro-perception-pcl \n</code></pre>\n\n<h4 id=""2-2-install-the-package"">2.2 Install the package</h4>\n\n<p>Clone from repository: <a href=""https://github.com/voxel-dot-at/argos3d_p100_ros_pkg.git"">https://github.com/voxel-dot-at/argos3d_p100_ros_pkg.git</a>\nto your src/ folder in your catkin workspace.\nand compile it with:\n</p>\n<pre><code>cd catkin_ws\nsource devel/setup.bash ## initialize search path to include local workspace\ncd src/\ngit clone <a href=""https://github.com/voxel-dot-at/argos3d_p100_ros_pkg.git"">https://github.com/voxel-dot-at/argos3d_p100_ros_pkg.git</a>\ncd ..\ncatkin_make\n</code></pre>\n\n<h1 id=""3-usage"">3. Usage</h1>\n\n<h4 id=""watch-our-demo-video"">* Watch our demo video:</h4>\n\n<blockquote>\n<p><a href=""http://youtu.be/1yVNbUQoMrU"">http://youtu.be/1yVNbUQoMrU</a></p>\n</blockquote>\n\n<h4 id=""3-1-start-the-ros-core"">3.1 Start the ROS core</h4>\n\n<pre><code>roscore &amp;\n</code></pre>\n\n<h4 id=""3-2-start-capturing"">3.2 Start capturing</h4>\n\n<pre><code>cd catkin_ws\nsource devel/setup.bash\nrosrun argos3d_p100 argos3d_p100_node \n</code></pre>\n\n<p><em>You can change the camera parameters through command option when initializing the node</em></p>\n\n<p><em>Use --help parameter to display parameter initialization usage</em></p>\n\n<pre><code>\n Using help for argos3d_p100_ros_pkg\n You can set default configuration values for the camera with the following options: \n\n Usage:\n rosrun argos3d_p100 argos3d_p100_node \n    -it *Integration_Time* \n      Integration time(in msec) for the sensor \n      (min: 100 | max: 2700 | default: 1500) \n    -mf  *Modulation_Frequency* \n      Set the modulation frequency(Hz) of the sensor \n      (min: 5000000 | max: 30000000 | default: 30000000) \n    -bf *Bilateral_Filter* \n      Turns bilateral filtering on or off \n      (ON: if set | OFF: default) \n    -fr *Frame_Rate* \n      Set the frame rate of the camera by setting the Phase Time (Please be careful when setting values higher than 40 FPS without using an extra cooling system. The camera can stress by overheating and be damaged). \n      (min: 1 | max: 160 | default: 40)\n    -flip_x *flip_x* \n      Flip images in the x coordinate. \n      (ON: if set | OFF: default)\n    -flip_y *flip_y* \n      Flip images in the y coordinate. \n      (ON: if set | OFF: default)\n    -af *Amplitude_Filter_On* \n      Whether to apply amplitude filter or not. Image pixels with amplitude values less than the threshold will be filtered out \n      (ON: if set | OFF: odefault) \n    -at *Amplitude_Threshold* \n      What should be the amplitude filter threshold. Image pixels with lesser aplitude values will be filtered out. Amplitude Filter Status should be true to use this filter \n      (min: 0 | max: 2500 | default: 0) \n     \n\n Example:\n rosrun argos3d_p100 argos3d_p100_node -it 1500 -mf 30000000 \n</code></pre>\n\n<h4 id=""use-calibration-file"">* Use calibration file</h4>\n\n<p>In the software distibuted with your camera there is a calibration file that provides precise 3D position calculation.\nThe file is load when the connection with you Argos3D is established.</p>\n\n<p>In order to use it, just copy this file to the folder where you will execute the node:</p>\n\n<pre><code>cp argos3d.cal catkin_ws\ncd catkin_ws\nrosrun argos3d_p100 argos3d_p100_node \n</code></pre>\n\n<p>The argos3d_p100_node will show a message that confirmes you if the calibration file was loaded successfully.</p>\n\n<h4 id=""3-3-visualization-in-rviz"">3.3 Visualization in rviz</h4>\n\n<pre><code>rosrun rviz rviz \n</code></pre>\n\n<p><em>After the rviz window comes up, set the following options</em></p>\n\n<p>Add a Pointcloud2 topic to visualize the depth clouds. \nTwo different point sets are published with following topic names:</p>\n\n<blockquote>\n<ul>\n<li>\n<strong>/depth_non_filtered :</strong> raw data from the pmd camera.</li>\n<li>\n<strong>/depth_filtered :</strong> after applying amplitude threshold, if selected.</li>\n</ul>\n</blockquote>\n\n<p>To do this please perform the following steps:</p>\n\n<ol>\n<li>In the ""Display"" panel on the left, open the first group of settings called ""Global Options"", set the option ""Fixed frame"" to <strong>/tf_argos3d</strong>\n</li>\n<li>At the bottom in ""Display"" click on the button <strong>add</strong> to open a dialog titled ""Create visualization""</li>\n<li>In the dialog opened after, choose the tab ""By topic"" and select the <strong>/depth_non_filtered</strong> topic.</li>\n</ol>\n\n<h4 id=""3-4-using-filters-and-parameters-configuration"">3.4 Using filters and parameters configuration</h4>\n\n<p>To apply point filters and change camera parameters, use dynamic_reconfigure from ros. \nTo use, it run the configuration interface (after launching argos3d_p100_ros_pkg)</p>\n\n<pre><code>rosrun rqt_reconfigure rqt_reconfigure \n</code></pre>\n\n<p><em>Select /argos3d_p100 to view the options available for modifications.</em></p>\n\n<p>Following camera parameters and filtering methods can be accessed using the dynamic reconfigure</p>\n\n<ul>\n<li>\n<strong>Integration_Time :</strong> Modifies the integration time of the sensor.</li>\n<li>\n<strong>Modulation_Frequency :</strong> Modifies the modulation frequency of the sensor.</li>\n<li>\n<strong>Bilateral_Filter :</strong> Turns bilateral filtering on or off.</li>\n<li>\n<strong>Frame_Rate :</strong> Sets the frame rate by changing the Phase Time. <strong>NOTE</strong>  (Please be careful when setting values higher than 40 FPS without using an extra cooling system. The camera can stress by overheating and be damaged).</li>\n<li>\n<strong>Flip_X :</strong> Flip 3d data in the x coordinate.</li>\n<li>\n<strong>Flip_Y :</strong> Flip 3d data in the y coordinate.</li>\n<li>\n<strong>Amplitude_Filter_On :</strong> Use the amplitude filter or not</li>\n<li>\n<strong>Amplitude_Threshold :</strong> Image pixels with smaller amplitude values will be filtered out. Amplitude_Filter_On status needs to be true to apply this filter value.</li>\n</ul>\n</div>\n\n            \n          </div>'"
rospeex,http://rosindex.github.io/r/rospeex/,"hydro,jade,indigo","rospeex,rospeex_audiomonitor,rospeex_core,rospeex_if,rospeex_launch,rospeex_msgs,rospeex_samples,rospeex_webaudiomonitor","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""introduction"">Introduction</h1>\n\n<p>Rospeex is a cloud-based multilingual communication toolkit for ROS. Rospeex provides an easy-to-use interface for speech recognition and speech synthesis in English, Chinese, Japanese, and Korean. Switching to third-party\'s cloud engines is also possible with rospeex. Official website: <a href=""http://rospeex.org/"">http://rospeex.org/</a></p>\n\n<h1 id=""licensing"">Licensing</h1>\n\n<p>Please check following website.\n<a href=""http://rospeex.org/license-en/"">http://rospeex.org/license-en/</a></p>\n</div>\n\n            \n          </div>'"
sentis_tof_m100,http://rosindex.github.io/r/sentis_tof_m100/,"hydro,groovy,indigo",sentis_tof_m100,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""sentis_tof_m100_ros_pkg"">sentis_tof_m100_ros_pkg</h1>\n\n<hr>\n\n<p>This ROS package uses an old api for the Bluetechnix Sentis ToF m100 sensor.</p>\n\n<p>There is a new package (<a href=""https://github.com/voxel-dot-at/bta_tof_driver"">https://github.com/voxel-dot-at/bta_tof_driver</a>) that uses the new <a href=""https://support.bluetechnix.at/wiki/Bluetechnix_\'Time_of_Flight\'_API"">BltToFApi</a> developed by Bluetechnix for interacting with their sensors.</p>\n\n<p>We recommend to use the new bta_tof_driver package.</p>\n\n<hr>\n\n<h3 id=""ros-package-for-bluetechnix-sentis-tof-m100-camera"">ROS package for Bluetechnix Sentis ToF M100 camera.</h3>\n\n<h1 id=""summary"">Summary</h1>\n\n<p>This package explains how to configure your system and ROS to use the Sentis ToF M100 camera.\nIt includes an example allowing you to visualize point clouds using the rviz viewer included in ROS.\nIt shows you how to use the camera together with ROS and how you can modify different parameters of the Sentis ToF M100.</p>\n\n<h2 id=""first-step-get-ros"">First step: Get Ros</h2>\n\n<p>The sentis_tof_m100_ros_pkg works with ROS versions groovy and hydro. You can use catkin workspaces or the previous rosbuild to configure, compile and get ready ROS.</p>\n\n<p>The following ROS tutorial links describe how to get ros_hydro and catkin workspace.</p>\n\n<p>In Ubuntu:\nFollow the ROS installation tutorial: </p>\n\n<blockquote>\n<p><a href=""http://wiki.ros.org/hydro/Installation/Ubuntu"">http://wiki.ros.org/hydro/Installation/Ubuntu</a>.</p>\n</blockquote>\n\n<p>Use catkin workspaces:</p>\n\n<blockquote>\n<p><a href=""http://wiki.ros.org/catkin"">http://wiki.ros.org/catkin</a> </p>\n\n<p><a href=""http://wiki.ros.org/catkin_or_rosbuild"">http://wiki.ros.org/catkin_or_rosbuild</a></p>\n\n<p><a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">http://wiki.ros.org/catkin/Tutorials/create_a_workspace</a></p>\n</blockquote>\n\n<p>To configure a catkin workspace in your ROS installation, follow this; </p>\n\n<blockquote>\n<p>ROS tutorial: <a href=""http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment"">http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment</a></p>\n</blockquote>\n\n<h2 id=""known-problems"">Known Problems</h2>\n\n<p>Be sure your libboost library version is &gt;= 1.49.\nPrevious versions as 1.46 generate error while compiling sentis_tof_m100_ros_pkg.</p>\n\n<h1 id=""1-installing-the-sentis_m100-api"">1. Installing the sentis_m100 API</h1>\n\n<p>With your M100 camera you will get the developer API for Linux systems in both versions, amd64 and i386. If you are using Ubuntu or a Debian-derived distribution simply install the deb package corresponding to your system. </p>\n\n<p>You can also manually install the libraries and headers of the API. Please read the API instructions to get help for installing them.</p>\n\n<h1 id=""2-compiling-the-package"">2. Compiling the package</h1>\n\n<h4 id=""2-1-install-dependencies"">2.1 Install dependencies</h4>\n\n<p>Make sure you have the following ROS dependencies already installed:\n</p>\n<pre><code> apt-get install ros-hydro-pcl-ros ros-hydro-pcl-conversions ros-hydro-perception-pcl \n</code></pre>\n\n<h4 id=""2-2-install-the-package"">2.2 Install the package</h4>\n\n<p>Clone from repository: <a href=""https://github.com/voxel-dot-at/sentis_tof_m100_pkg.git"">https://github.com/voxel-dot-at/sentis_tof_m100_pkg.git</a>\nto the src/ folder in your catkin workspace.\nNow compile it with:\n</p>\n<pre><code>cd catkin_ws\nsource devel/setup.bash ## initialize search path to include local workspace\ncd src/\ngit clone <a href=""https://github.com/voxel-dot-at/sentis_tof_m100_ros_pkg.git"">https://github.com/voxel-dot-at/sentis_tof_m100_ros_pkg.git</a>\ncd ..\ncatkin_make\n</code></pre>\n\n<h1 id=""3-usage"">3. Usage</h1>\n\n<p>We have included a .launch file to help you to get the camera working in a very simple way. We coded this ROS package to use the ROS parameter server. We will explain you in the following lines how you can write your own configuration for the Sentis ToF Camera. You can also run the package node standalone and set the camera configuration by line commands.</p>\n\n<h3 id=""watch-our-demo-video"">* Watch our demo video:</h3>\n\n<blockquote>\n<p><a href=""http://youtu.be/3xegxf5VFWc"">http://youtu.be/3xegxf5VFWc</a></p>\n</blockquote>\n\n<h3 id=""3-1-use-roslaunch"">3.1 Use roslaunch</h3>\n\n<p>To easily start using the sentis_tof_m100 ROS package you can use the roslaunch config_file we have included. It will launch the ROS core, start the camera node loading the parameter configuration, start the run-time reconfiguration gui and the ROS viewer rviz already configured to show the depth information readed by the ToF camera.</p>\n\n<p>In order to execute it you have just to type the following:</p>\n\n<pre><code>roslaunch sentis_tof_m100 start.launch\n</code></pre>\n\n<h4 id=""3-1-1-write-you-own-configuration-to-the-parameter-server"">3.1.1 Write you own configuration to the parameter server</h4>\n\n<p>As we pointed out before, you can load the camera configuration to the parameter server. The file ""launch/start.launch"" includes, inside the tag ""node"", the tag ""rosparam"" in which you can indicate a file containing the server parameters. We have include the configuration file ""/launch/sentis_tof_m100_1.yaml"" that defines default configuration values for the camera. You may modify this file or add yours to load your own configuration.</p>\n\n<p>To get more information about the Sentis_ToF_M100 camera parameter, please refer to the section 4. </p>\n\n<h3 id=""3-2-running-the-package-without-roslaunch"">3.2 running the package without roslaunch</h3>\n\n<p>You can start up the camera without the help of roslaunch with the following steps.</p>\n\n<h4 id=""3-2-1-start-the-ros-core"">3.2.1 Start the ROS core</h4>\n\n<pre><code>roscore &amp;\n</code></pre>\n\n<h4 id=""3-2-2-start-capturing"">3.2.2 Start capturing</h4>\n\n<pre><code>rosrun sentis_tof_m100 sentis_tof_m100_node #[options]\n</code></pre>\n\n<p><em>Use --help parameter to display parameter initialization usage</em></p>\n\n<pre><code> Using help for sentis_tof_m100_ros_pkg\n You can set the configuration values for the camera. If any option is missing the value of the parameter server or the default value will be used: \n\n Usage:\n rosrun sentis_tof_m100 sentis_tof_m100_node <options> \n-tcp_ip *TCP IP Addresss* \n    Ip address for the control connection \n    (string, i.e: 192.168.0.10) \n-tcp_port *Port for tcp* \n    Defines the port used for the control connection \n    (unsigned short, i.e: 10001) \n-udp_ip *UDP IP Addresss* \n    Multicast ip address for the data connection \n    (string, i.e: 224.0.0.1) \n-udp_port *Port for udp* \n    Defines the port used for the data connection \n    (unsigned short, i.e: 10001) \n-it *Integration_Time* \n    Integration time(in usec) for the sensor \n    (min: 50 | max: 7000 | default: 1500) \n-mf  *Modulation_Frequency* \n    Sets the modulation frequency(Hz) of the sensor \n    (min: 5000 | max: 30000 | default: 20000) \n-fr *Frame_Rate* \n    Sets the frame rate of the camera \n    (min: 1 | max: 45 | default: 40)\n-mef *MedianFilter* \n    Sets on or off the Median Filter. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-avf *AverageFilter* \n    Sets on or off the Average Filter. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-gaf *GaussFilter* \n    Sets on or off the Gauss Filter. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-sla *SlidingAverage* \n    Sets on or off the Sliding Average. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-wic *WigglingCompensation* \n    Sets on or off the Wiggling Compensation. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-fppnc *FPPNCompensation* \n    Sets on or off the FPPN Compensation. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-mfs *ModFreqScaling* \n    Sets on or off the ModFreq Scaling. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-smm *Scalingmm* \n    Sets on or off the Scaling to [mm]. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-aos *AdditiveOffset* \n    Sets on or off the Additive Offset. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-tmc *TemperatureCompensation* \n    Sets on or off the Temperature Compensation. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-sdcg *ScalingDistCalibGradient* \n    Sets on or off the Scaling via register DistCalibGradient. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-sdco *ScalingDistCalibOffset* \n    Sets on or off the Scaling via register DistCalibOffset. \n    (OFF: 0 | ON: any other integer value |  ON if not set ) \n-mefite *FilterMedian_Config* \n    Sets the n\xc2\xba of iteration for the Media filter. \n    (min: 1 | max: 255 | default: 1) \n-avfpix *FilterAverage_Config_Pixels* \n    Sets pixel matrix for the Average filter. \n    (3x3: 0 | 5x5: 1 | Default: 3x3 ) \n-avfite *FilterAverage_Config_Iters* \n    Sets the n\xc2\xba of iteration for the Average filter. \n    (min: 1 | max: 255 | default: 1) \n-gafpix *FilterGauss_Config_Pixels* \n    Sets pixel matrix for the Gauss filter. \n    (3x3: 0 | 5x5: 1 | Default: 3x3 ) \n-gafite *FilterGauss_Config_Iters* \n    Sets the n\xc2\xba of iteration for the Gauss filter. \n    (min: 1 | max: 255 | default: 1) \n-slacw *FilterSLAF_config* \n    Sets the SLAF filter windows size. \n    (min: 1 | max: 255 | default: 1) \n-af *Amplitude_Filter_On* \n    Whether to apply amplitude filter or not. Image pixels with amplitude values less than the threshold will be filtered out \n    (ON: if set | OFF: default) \n-at *Amplitude_Threshold* \n    What should be the amplitude filter threshold. Image pixels with smaller amplitude values will be filtered out. Amplitude Filter Status should be true to use this filter \n    (min: 0 | max: 2500 | default: 0) \n\n Example:\nrosrun sentis_tof_m100 sentis_tof_m100_node -tcp_ip 192.168.0.10 -tcp_port 10001 -it 1500 -mf 20000 -fr 20 \n</options></code></pre>\n\n<h4 id=""3-2-3-visualization-in-rviz"">3.2.3 Visualization in rviz</h4>\n\n<pre><code>rosrun rviz rviz\n</code></pre>\n\n<p><em>After the rviz window comes up, set the following options:</em></p>\n\n<ol>\n<li>In the ""Display"" sidebar on the left, set in the ""Global Option"" section the fixed_frame to <strong>/tf_sentis_tof</strong>\n</li>\n<li>At the bottom in the ""Display"" sidebar click on the <strong>add</strong> Button</li>\n<li>In the ""Create visualization"" dialog that opens, select the ""By topic"" tab and select the <strong>/depth_non_filtered</strong> topic.</li>\n</ol>\n\n<p>Add a Pointcloud2 topic to visualize the clouds. Two different point sets are published with following topic names:</p>\n\n<blockquote>\n<ul>\n<li>\n<strong>/depth_non_filtered :</strong> raw data from the tof camera</li>\n<li>\n<strong>/depth_filtered : after</strong> applying statistical outlier detection from pcl</li>\n</ul>\n</blockquote>\n\n<h4 id=""3-2-4-using-filters-and-parameters-configuration"">3.2.4 Using filters and parameters configuration</h4>\n\n<p>To use the filters and change camera parameters at runtime, use rqt_reconfigure from ROS. To use it just run (after launching sentis_tof_m100_ros_pkg):</p>\n\n<pre><code>rosrun rqt_reconfigure rqt_reconfigure \n</code></pre>\n\n<p><em>Select /sentis_tof_m100 to view the available options for modifications.</em></p>\n\n<h4 id=""4-camera-parameters-description"">4 Camera parameters description</h4>\n\n<p>Here you will find a quick description of the camera parameter that can be set in this package:</p>\n\n<ul>\n<li>Network options</li>\n</ul>\n\n<blockquote>\n<p><strong>Note1:</strong> Make sure your network is correctly configured. We recommend you to follow the API instructions to check whether the camera and your network are working without any problem.</p>\n\n<p><strong>Note2:</strong> Network parameters cannot be changed at runtime.</p>\n</blockquote>\n\n<ul>\n<li>* <strong>TCP_IP_Address :</strong> The control connection with your sentis_tof_m100 camera.</li>\n<li>* <strong>TCP_IP_Port :</strong> The port used by the control connection.</li>\n<li>* <strong>UDP_IP_Address :</strong> The multicast data connection.</li>\n<li>* <strong>UDP_IP_Port :</strong> The port used by the data connection.</li>\n</ul>\n\n<blockquote>\n<p><strong>Note3 :</strong> Following camera parameters and filtering methods can be accessed in runtime using the rqt_reconfigure. </p>\n</blockquote>\n\n<ul>\n<li>Basic options</li>\n<li>* <strong>Integration_Time :</strong> Modifies the integration time of the sensor (in usec).</li>\n<li>* <strong>Modulation_Frequency :</strong> Modifies the modulation frequency of the sensor (in Hz).</li>\n<li><ul>\n<li>\n<strong>Frame_Rate :</strong> Changes the camera capturing frame rate (in frames/s).</li>\n</ul></li>\n<li><p>Camera filters</p></li>\n<li><ul>\n<li>\n<strong>Median_Filter :</strong> Activates the median filter.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Average_Filter :</strong> Activates the average filter.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Gauss_Filter :</strong> Activates the gauss filter.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Wiggling_Compensation :</strong> Activates the wiggling compensation.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>FPPN_Compensation :</strong> Activates the FPPN compensation.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>ModFreq_Scaling :</strong> Activates the ModFreq scaling.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Scaling_to_MM :</strong> Activates scaling to millimeters.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Additive_Offset :</strong> Activates the additive offset.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Temperature_Compensation :</strong> Activates the temperature compensation.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Scaling_DistCalibGradient :</strong> Activates scaling via the register DistCalibGradient.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Scaling_DistCalibOffset :</strong> Activates scaling via the register DistCalibOffset.</li>\n</ul></li>\n<li><p>Camera filters options</p></li>\n<li><ul>\n<li>\n<strong>Median_Filter_Iterations :</strong> Defines the number of iterations for the median filter. A high value will decrease the frame time.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Average_filter_Pixels :</strong> Defines the pixel matrix for the average filter. 3x3 or 5x5 pixels.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Average_Filter_Iterations :</strong> Defines the number of iterations for the average filter. A high value will decrease the frame time..</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Gauss_filter_Pixels :</strong> Defines the pixel matrix for the gauss filter. 3x3 or 5x5 pixels.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Gauss_Filter_Iterations :</strong> Defines the number of iterations for the gauss filter.</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>SLAF_Filter_Windows_Size :</strong> Defines the windows size for the SLAF filter.</li>\n</ul></li>\n<li><p>PCL filter</p></li>\n<li><ul>\n<li>\n<strong>Amplitude_Filter_On :</strong> Indicates if the amplitude filter should be used or not</li>\n</ul></li>\n<li><ul>\n<li>\n<strong>Amplitude_Threshold :</strong> Image pixels with smaller amplitude values will be filtered out. Amplitude_Filter_On status should be true to apply this filter.</li>\n</ul></li>\n</ul>\n</div>\n\n            \n          </div>'"
camera_pose_calibration,http://rosindex.github.io/r/camera_pose_calibration/,"kinetic,indigo",camera_pose_calibration,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""camera-pose-calibration"">Camera Pose Calibration</h1>\n\n<h2 id=""table-of-contents"">Table of contents</h2>\n\n<ul>\n<li><a href=""#description"">Description</a></li>\n<li><a href=""#assumptions"">Assumptions</a></li>\n<li><a href=""#usage"">Usage</a></li>\n</ul>\n\n<h2 id=""description"">Description</h2>\n\n<p>This package calculates the pose of a camera to a fixed frame.\nThe tf between the camera and fixed frame is optionally published on the ROS server.\nThis package works only for the asymmetric circle pattern because the pose of an asymmetric circle pattern is uniquely defined.\nOther standard calibration patterns such as chessboard pattern and circles pattern do not have this property.\nThe tf tree is connected by recognizing the pose of the asymmetric circles calibration pattern with an image and a point cloud.</p>\n\n<p>This package contains only a subset of the functionality of other calibration packages and is not meant as a replacement for - or addition to - these packages.\nThere are other, more advanced, calibration packages available than this package.\nA good example is industrial_extrinsic_cal.\nThe only advantage of this package is that it requires minimal configuration and is easy to set up.\nEspecially if your camera driver gives you an image and a point cloud, which is often the case for time-of-flight cameras.</p>\n\n<h2 id=""assumptions"">Assumptions</h2>\n\n<ul>\n<li>The tf between camera and asymmetric circle pattern is static (does not change over time)</li>\n<li>The tf of the asymetric circle pattern and the fixed frame is published on the ROS server</li>\n<li>The asymmetric circle pattern can be detected in the image, and point cloud data is available for the corresponding points</li>\n</ul>\n\n<h2 id=""usage"">Usage</h2>\n\n<h4 id=""defining-the-calibration_tag-frame-for-asymmetric-circles-calibration-plate"">Defining the calibration_tag frame for asymmetric circles calibration plate</h4>\n\n<p>The asymmetric cicles calibration node in this package assumes this definition of the calibration tag to be present as a tf transform and connected to the fixed frame.</p>\n\n<p>Make sure the calibration_tag conforms to the definition given below, or you might get unexpected results.\nImagine the square which circumscribes the calibration plate.\nPosition the calibration plate on a table such that the two corner points of this square which have calibration dots on them are towards you.\nThe lower left dot then represents the zero point of the calibration_tag frame.</p>\n\n<ul>\n<li>The X axis points to the right.</li>\n<li>The Y axis points forwards away from you.</li>\n<li>The Z-axis points upwards, out of the calibration plate.</li>\n</ul>\n\n<p>The tf from calibration tag to the fixed frame could for example be written in the URDF to get the tf on the ROS server.</p>\n\n<h4 id=""services"">Services</h4>\n\n<p>Three services are provided:\nAll three of them perform the same calibration.\nThey differ only in the way the image and point cloud is received.\n- /calibrate_call: The image and point cloud data is given in the service call request.\n- /calibrate_file: The image and point cloud path is given, the calibration is performed with these files.\n- /calibrate_topic: The image and point cloud are received from the ROS server.</p>\n\n<p>Configuration parameters are given in the service call request.\nThe detectopm of the asymmetric circle pattern will commence after calling the service.\nThe pose of the camera to the fixed frame will then be returned and optionally published.</p>\n\n<p>Remaining service call request arguments:\n- tag frame: Name of the asymmetric circle frame on the ROS server\n- target frame: Tf frame to connect camera to\n- point_cloud_scale_x: Scale factor between image and point cloud (default 1)\n- point_cloud_scale_y: Scale factor between image and point cloud (default 1)\n- pattern: Pattern msg type with distance and size of the asymmetric circles pattern.\n- neighbor_distance: Find neighboring pixels within a certain distance in pixels and average their x, y, z values\n- valid_pattern_ratio_threshold: Acceptance threshold for the ratio of valid points to NaN values</p>\n\n<h4 id=""planned-features"">Planned features</h4>\n\n<ul>\n<li>Correction for perspective in determining the blob center.</li>\n<li>Create services for calibrating with two intensity images and the reprojection matrix</li>\n</ul>\n</div>\n\n            \n          </div>'"
ximea_camera,http://rosindex.github.io/r/ximea_camera/,"hydro,indigo",ximea_camera,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ximea_camera"">ximea_camera</h1>\n\n<h1 id=""1-license"">1) License</h1>\n\n<p>Copyright 2015  </p>\n\n<ul>\n<li>Abdelhamid El-Bably (University of Waterloo) [<a href=""mailto:ahelbably@uwaterloo.ca"">ahelbably@uwaterloo.ca</a>]</li>\n<li>Arun Das (University of Waterloo) [<a href=""mailto:adas@uwaterloo.ca"">adas@uwaterloo.ca</a>]</li>\n<li>Michael Tribou (University of Waterloo) [<a href=""mailto:mjtribou@uwaterloo.ca"">mjtribou@uwaterloo.ca</a>]</li>\n</ul>\n\n<p>All rights reserved.</p>\n\n<p>This software is distributed under the BSD three-clause license.</p>\n\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n* Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n* Neither the name of the University of Waterloo nor the\nnames of its contributors may be used to endorse or promote products\nderived from this software without specific prior written permission.</p>\n\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL <copyright holder> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</copyright></p>\n\n<h1 id=""2-dependencies"">2) Dependencies</h1>\n\n<p>This software requires the Ximea Linux Software Package.  See <a href=""http://www.ximea.com/support/wiki/apis/XIMEA_Linux_Software_Package"">http://www.ximea.com/support/wiki/apis/XIMEA_Linux_Software_Package</a> for details.</p>\n\n<h1 id=""3-basic-usage"">3) Basic Usage</h1>\n\n<p>This software provides ROS drivers for the ximea xiQ USB 3.0 Cameras.  This driver supports image acquisition from an arbitrary number of cameras, so long as there is sufficient bandwidth on the USB 3.0 bus to perform the data transfer. In order to operate the cameras, the serial numbers of the devices must be known.</p>\n\n<p>1) create a configuration file for each camera.  The configuration file should be kept in the <code>/config</code> folder.  A configuration file will look as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">serial_no: 32301951\ncam_name: ""camera1""\nyaml_url: ""package://mcptam/calibrations/camera1.yaml""\nexposure_time: 30000\nrect_left: 200\nrect_top: 200\nrect_height: 600\nrect_width: 900\nimage_data_format: ""XI_MONO8""\n\n</code></pre></div>\n<ul>\n<li>\n<code>serial_no</code> refers to the serial number of the camera</li>\n<li>\n<code>cam_name</code> is the name you wish to give to the camera</li>\n<li>\n<code>yaml_url</code> is the location of the calibration information file, which is used by the camera info manager to publish the calibration parameters</li>\n<li>\n<code>exposure_time</code> refers to the image exposure time in microseconds</li>\n<li>\n<code>rect_left, rect_top, rect_height, rect_width</code> are used to set the image region of interest (ROI). See the Ximea xiQ API for more information (<a href=""http://www.ximea.com/support/wiki/apis/XiAPI_Manual"">http://www.ximea.com/support/wiki/apis/XiAPI_Manual</a>).</li>\n<li>\n<code>image_data_format</code>: sets the data format for the image. Currently, formats <code>XI_MONO16</code>, <code>XI_RGB24</code>, <code>XI_RGB32</code>, <code>XI_RAW8</code>, <code>XI_RAW16</code>, and <code>XI_MONO8</code> are supported<br>\n</li>\n</ul>\n\n<p>2) Create a launch file for your camera configuration.  A typical launch file will look as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;launch&gt;\n&lt;!-- Camera Node --&gt;\n&lt;node name=""ximea"" pkg=""ximea_camera"" type=""ximea_camera_node"" output=""screen"" &gt;\n  &lt;param name=""frame_rate"" type=""int"" value=""60"" /&gt;\n\n  &lt;rosparam param=""camera_param_file_paths"" subst_value=""true""&gt;[$(find ximea_camera)/config/ximea1.yaml, $(find ximea_camera)/config/ximea2.yaml]&lt;/rosparam&gt;\n\n&lt;/node&gt;\n\n&lt;/launch&gt;\n\n</code></pre></div>\n<p>The main parameters of interest are the frame rate and the file paths.</p>\n\n<ul>\n<li>\n<code>frame_rate</code> corresponds to the frame rate for all of the cameras in the group.</li>\n<li>\n<code>camera_param_file_paths</code> is a list of file names corresponding to the configuration files made for each camera in step 1.  For a single camera setup, the <code>camera_param_file_paths</code> parameter would look something like:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;rosparam param=""camera_param_file_paths"" subst_value=""true""&gt;[$(find ximea_camera)/config/ximea1.yaml]&lt;/rosparam&gt;\n\n</code></pre></div>\n<p>while a three camera setup would have a list containing the file names for the configuration files of all three cameras, separated by commas:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;rosparam param=""camera_param_file_paths"" subst_value=""true""&gt;[$(find ximea_camera)/config/ximea1.yaml, $(find ximea_camera)/config/ximea2.yaml, $(find ximea_camera)/config/ximea3.yaml]&lt;/rosparam&gt;\n\n</code></pre></div>\n<p>3) You should now be able to plug in the cameras and launch the file created in step 2.</p>\n\n<h1 id=""4-published-topics"">4) Published Topics</h1>\n\n<p>Each set of published topics will be under the namespace corresponding to the camera name. Each camera will publish:</p>\n\n<ul>\n<li><p><code>/camera_info</code>, which is of ROS message type <code>sensor_msgs/CameraInfo</code>. This message carries all of the camera specific calibration information.</p></li>\n<li><p><code>/image_raw/</code>, which of of ROS message type <code>sensor_msgs/Image</code>.  This message carries the image data.  </p></li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jsk_roseus,http://rosindex.github.io/r/jsk_roseus/,"hydro,electric,groovy,diamondback,jade,indigo","jsk_roseus,roseus,roseus_mongo,roseus_smach,roseus_tutorials,euslisp","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_roseus"">jsk_roseus</h1>\n\n<p><a href=""https://travis-ci.org/jsk-ros-pkg/jsk_roseus""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_roseus.png?branch=master"" alt=""Build Status""></a>\n<a href=""http://euslisp-docs.readthedocs.org/en/latest/roseus/""><img src=""https://readthedocs.org/projects/euslisp-docs/badge/?version=latest"" alt=""Documentation Status""></a></p>\n\n<h2 id=""tips"">Tips</h2>\n\n<h3 id=""run-roseus-on-gdb"">Run roseus on gdb</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">gdb --args bash roseus foo.l\n\n</code></pre></div>\n<h2 id=""deb-status"">Deb Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Indigo (Saucy)</th>\n<th>Indigo (Trusty)</th>\n<th>Jade (Trusty)</th>\n<th>Jade (Vivid)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>euslisp (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__euslisp__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uS32__euslisp__ubuntu_saucy_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__euslisp__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uT32__euslisp__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__euslisp__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uT32__euslisp__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__euslisp__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uV32__euslisp__ubuntu_vivid_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>euslisp (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__euslisp__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uS64__euslisp__ubuntu_saucy_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__euslisp__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uT64__euslisp__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__euslisp__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uT64__euslisp__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__euslisp__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uV64__euslisp__ubuntu_vivid_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>jskeus (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__jskeus__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uS32__jskeus__ubuntu_saucy_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__jskeus__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uT32__jskeus__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__jskeus__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uT32__jskeus__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__jskeus__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uV32__jskeus__ubuntu_vivid_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>jskeus (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__jskeus__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uS64__jskeus__ubuntu_saucy_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__jskeus__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uT64__jskeus__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__jskeus__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uT64__jskeus__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__jskeus__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uV64__jskeus__ubuntu_vivid_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>jsk_roseus (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__jsk_roseus__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uS32__jsk_roseus__ubuntu_saucy_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__jsk_roseus__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Ibin_uT32__jsk_roseus__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__jsk_roseus__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uT32__jsk_roseus__ubuntu_trusty_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__jsk_roseus__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/job/Jbin_uV32__jsk_roseus__ubuntu_vivid_i386__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>jsk_roseus (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__jsk_roseus__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uS64__jsk_roseus__ubuntu_saucy_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__jsk_roseus__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Ibin_uT64__jsk_roseus__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__jsk_roseus__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uT64__jsk_roseus__ubuntu_trusty_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__jsk_roseus__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/job/Jbin_uV64__jsk_roseus__ubuntu_vivid_amd64__binary/badge/icon"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosjava_dynamic_reconfigure,http://rosindex.github.io/r/rosjava_dynamic_reconfigure/,indigo,rosjava_dynamic_reconfigure,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Readme.md</p>\n\n<p>=== Unofficial dynamic_reconfigure for Java ===</p>\n\n<p>h1. Doc.</p>\n\n<p>h2. Clone this repository into your workspace</p>\n\n<p>h2. Add dependancy of RosJava_dynamic_reconfiguration to your project</p>\n\n<p>Build.gradle\n    compile project(\'..:rosjava_dynamic_reconfigure\')</p>\n\n<p>setting.gradle\n    include \'..:rosjava_dynamic_reconfigure\'</p>\n\n<p>h2. Implement in your code</p>\n\n<p>Rosjava_dynamic_reconfigure has only a engine for dynamic_reconfigure runtime stack.\nNo catkin generation is available !!!</p>\n\n<p>You does implement in your project the configuration of the parameter.</p>\n\n<p>create in your projet a XxxxxConfig (""xxxxx"" has a name of your project) and extends from BaseParam of rosjava_dynamic_reconfiguration.\nin you node constructor use ""add"" function to param your config</p>\n\n<p>After then, call in your node :\nnew Server<xxxxxxconfig>(\n    conectedNode, \n    new XxxxxxConfig(conectedNode), \n    new ReconfigureListener<xxxxxxconfig>() {\n        @Override\n        public XxxxxxConfig onReconfigure(XxxxxxConfig config, int level) {\n            // TODO Read or update the current configuration\n            return config;\n        }\n    });</xxxxxxconfig></xxxxxxconfig></p>\n</div>\n\n            \n          </div>'"
swri_console,http://rosindex.github.io/r/swri_console/,indigo,swri_console,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""swri_console"">swri_console</h1>\n\n<p><img src=""https://raw.githubusercontent.com//swri-robotics/swri_console/master//doc/images/screenshot.png"" alt=""screenshot""></p>\n\n<p>swri_console is an alternative to rqt_console for viewing the ROS console output.  swri_console was written to scale well to large systems with heavy console output.  It stays responsive under fire and allows users to quickly find information to track down problems.</p>\n\n<p><a href=""https://travis-ci.org/swri-robotics/swri_console""><img src=""https://travis-ci.org/swri-robotics/swri_console.svg?branch=master"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
astra_launch,http://rosindex.github.io/r/astra_launch/,"kinetic,indigo",astra_launch,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
blink1,http://rosindex.github.io/r/blink1/,indigo,blink1,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""blink-1-ros-node"">Blink(1) ROS node</h1>\n\n<h3 id=""what-is-this-repository-for"">What is this repository for?</h3>\n\n<p>This node provides a ROS service that manipulates <a href=""https://blink1.thingm.com/"">Blink(1)</a>. Accompanies the node a API that facilitates the use of the service.</p>\n\n<h3 id=""how-do-i-get-set-up"">How do I get set up?</h3>\n\n<p>The code depends on libUSB. To install libUSB:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""c"">#!bash</span>\n\nsudo apt-get install libusb-dev\n\n\n</code></pre></div>\n<p>To install the Blink1 package:</p>\n\n<p>Create a catkin workspace. For instructions on how to create the workspace go <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">here</a>.\nDownload and compile the package:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""c"">#!bash</span>\n\n<span class=""nb"">cd </span>catkin_ws/src\ngit clone git@bitbucket.org:castacks/blink1_node.git\n<span class=""nb"">cd</span> ..\ncatkin_make\n\n</code></pre></div>\n<p>To run and test the node you must have permission to access the Blink(1) device. For a first test you may change to root (<code>sudo -s</code>) and run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""c"">#!bash</span>\n\n<span class=""nb"">source </span>devel/setup.bash\nroslaunch blink1 blink1.launch\n\n</code></pre></div>\n<p>In another terminal:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""c"">#!bash</span>\n\n<span class=""nb"">source </span>devel/setup.bash\nrosrun blink1 blink1_example\n\n</code></pre></div>\n<p>The led should turn on and blink with several colors. See the examples folder to the code of this example.</p>\n\n<p>To permanently change the permissions of the device and run the node in the user mode, please refer to the <a href=""https://github.com/todbot/blink1/blob/master/commandline/hidapi/udev/99-hid.rules"">instructions of the device\'s manufacturer</a>.</p>\n\n<h3 id=""who-do-i-talk-to"">Who do I talk to?</h3>\n\n<ul>\n<li>Guilherme Pereira (<a href=""mailto:gpereira@ufmg.br"">gpereira@ufmg.br</a>)</li>\n</ul>\n\n<h3 id=""license"">License</h3>\n\n<p><a href=""http://opensource.org/licenses/BSD-3-Clause"">This software is BSD licensed.</a></p>\n\n<p>Copyright (c) 2015, Carnegie Mellon University\nAll rights reserved.</p>\n\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n\n<ol>\n<li><p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p></li>\n<li><p>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p></li>\n<li><p>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p></li>\n</ol>\n\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n            \n          </div>'"
bta_tof_driver,http://rosindex.github.io/r/bta_tof_driver/,"jade,kinetic,indigo",bta_tof_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bta_tof_driver"">bta_tof_driver</h1>\n\n<h3 id=""ros-integration-for-bluetechnix-devices-operated-by-the-bluetechnix-39-time-of-flight-39-btatofapi-library"">ROS integration for Bluetechnix devices operated by the Bluetechnix \'Time of Flight\' BtaTofApi library.</h3>\n\n<h1 id=""summary"">Summary</h1>\n\n<p>This driver allows to configure your system and ROS to use all Bluetechnix Time of Flight cameras supported by the BltToFApi. It includes an example allowing you to visualize depth data using the rviz viewer included in ROS. It shows you how to use the ToF devices together with ROS and how you can modify operating parameters. Besides the ToF data, we have included a nodelet to capture rgb video from those devices that include a 2D sensor, such as the Argos 3D P320 or Sentis TOF P510. </p>\n\n<p>To read the docummentation of bta_ros, please visit the wiki page on ROS: <a href=""http://wiki.ros.org/bta_tof_driver"">http://wiki.ros.org/bta_tof_driver</a></p>\n</div>\n\n            \n          </div>'"
icart_mini,http://rosindex.github.io/r/icart_mini/,indigo,"icart_mini,icart_mini_control,icart_mini_description,icart_mini_driver,icart_mini_gazebo","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""icart"">icart</h1>\n\n<p><a href=""http://waffle.io/open-rdc/icart_mini""><img src=""https://badge.waffle.io/open-rdc/icart_mini.svg?label=in%20progress&amp;title=In%20Progress"" alt=""Stories in Progress""></a></p>\n\n<p><a href=""https://waffle.io/open-rdc/icart_mini/metrics""><img src=""https://graphs.waffle.io/open-rdc/icart_mini/throughput.svg"" alt=""Throughput Graph""></a> </p>\n\n<h2 id=""about"">About</h2>\n\n<p>icart packages provides robot models regarding i-Cart series, simulation environments and ypspur control bridge on ROS.</p>\n\n<p><img src=""http://wiki.ros.org/Robots/icart_mini?action=AttachFile&amp;do=get&amp;target=icart_mini.png"" alt=""i-Cart mini""></p>\n\n<h2 id=""teleoperation-with-a-joystick"">Teleoperation with a joystick</h2>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""gp"">$ </span>roslaunch icart_mini_driver teleop_joy.launch\n\n</code></pre></div>\n<h2 id=""license"">License</h2>\n\n<p>Copyright (c) 2014 - 2015, <a href=""https://github.com/DaikiMaekawa"">Daiki Maekawa</a> and Chiba Institute of Technology. (BSD License)</p>\n</div>\n\n            \n          </div>'"
openrave_planning,http://rosindex.github.io/r/openrave_planning/,"diamondback,electric,indigo","arm_navigation_msgs,collada_robots,openrave,openrave_actionlib,openrave_calibration,openrave_database,openrave_msgs,openrave_planning,openrave_robot_control,openrave_robot_filter,openrave_sensors,openraveros_tutorials,session_tutorials,openraveros,orrosplanning,roscpp_sessions,soqt","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
freenect_stack,http://rosindex.github.io/r/freenect_stack/,"hydro,fuerte,groovy,kinetic,indigo","freenect_camera,freenect_launch,freenect_stack","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""freenect_stack"">freenect_stack</h1>\n\n<p>Build status on Travis CI <a href=""http://travis-ci.org/ros-drivers/freenect_stack""><img src=""https://travis-ci.org/ros-drivers/freenect_stack.svg?branch=master"" alt=""Build Status""></a></p>\n\n<p>libfreenect based ROS driver</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""freenect_stack"">freenect_stack</h1>\n\n<p>libfreenect based ROS driver</p>\n</div>\n\n            \n          </div>'"
orocos_controllers,http://rosindex.github.io/r/orocos_controllers/,"hydro,electric,groovy,fuerte","common_headers,ec_hw_model,fake_servo,force_control,force_control_msgs,internal_space_spline_trajectory_action,internal_space_spline_trajectory_generator,limit_detector,oro_joint_state_publisher,port_operations,rtt_force_control_msgs,joint_spline_trajectory_generator,oro_controllers_manager,oro_joint_trajectory_action","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rqt_ez_publisher,http://rosindex.github.io/r/rqt_ez_publisher/,"hydro,jade,kinetic,indigo",rqt_ez_publisher,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rqt_ez_publisher"">rqt_ez_publisher</h1>\n\n<p>read <a href=""http://wiki.ros.org/rqt_ez_publisher"">http://wiki.ros.org/rqt_ez_publisher</a></p>\n</div>\n\n            \n          </div>'"
mav_comm,http://rosindex.github.io/r/mav_comm/,"jade,indigo","mav_comm,mav_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mav_comm"">mav_comm</h1>\n\n<p>This repository contains message and service definitions used for mavs. All future message definitions go in here, existing ones in other stacks should be moved here where possible.</p>\n</div>\n\n            \n          </div>'"
underwater_simulation,http://rosindex.github.io/r/underwater_simulation/,"jade,groovy,kinetic,indigo","underwater_sensor_msgs,underwater_vehicle_dynamics,uwsim","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""underwater_simulation"">underwater_simulation</h1>\n\n<p>UWSim, the Underwater Simulator</p>\n\n<p>Installation instructions here:</p>\n\n<p><a href=""http://www.irs.uji.es/uwsim/wiki/index.php?title=Installing_UWSim"">http://www.irs.uji.es/uwsim/wiki/index.php?title=Installing_UWSim</a></p>\n\n<p>Project website:</p>\n\n<p><a href=""http://www.irs.uji.es/uwsim"">http://www.irs.uji.es/uwsim</a></p>\n\n<p>Please join our mailing list:</p>\n\n<p><a href=""https://groups.google.com/a/uji.es/forum/#!forum/uji-ros-pkg-support"">https://groups.google.com/a/uji.es/forum/#!forum/uji-ros-pkg-support</a></p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/uji-ros-pkg/underwater_simulation""><img src=""https://travis-ci.org/uji-ros-pkg/underwater_simulation.png?branch=jade-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""underwater_simulation"">underwater_simulation</h1>\n\n<p>UWSim, the Underwater Simulator</p>\n\n<p>Installation instructions here:</p>\n\n<p><a href=""http://www.irs.uji.es/uwsim/wiki/index.php?title=Installing_UWSim"">http://www.irs.uji.es/uwsim/wiki/index.php?title=Installing_UWSim</a></p>\n\n<p>Project website:</p>\n\n<p><a href=""http://www.irs.uji.es/uwsim"">http://www.irs.uji.es/uwsim</a></p>\n\n<p>Please join our mailing list:</p>\n\n<p><a href=""https://groups.google.com/a/uji.es/forum/#!forum/uji-ros-pkg-support"">https://groups.google.com/a/uji.es/forum/#!forum/uji-ros-pkg-support</a></p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/uji-ros-pkg/underwater_simulation""><img src=""https://travis-ci.org/uji-ros-pkg/underwater_simulation.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""underwater_simulation"">underwater_simulation</h1>\n\n<p>UWSim, the Underwater Simulator</p>\n\n<p>Installation instructions here:</p>\n\n<p><a href=""http://www.irs.uji.es/uwsim/wiki/index.php?title=Installing_UWSim"">http://www.irs.uji.es/uwsim/wiki/index.php?title=Installing_UWSim</a></p>\n\n<p>Project website:</p>\n\n<p><a href=""http://www.irs.uji.es/uwsim"">http://www.irs.uji.es/uwsim</a></p>\n\n<p>Please join our mailing list:</p>\n\n<p><a href=""https://groups.google.com/a/uji.es/forum/#!forum/uji-ros-pkg-support"">https://groups.google.com/a/uji.es/forum/#!forum/uji-ros-pkg-support</a></p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/uji-ros-pkg/underwater_simulation""><img src=""https://travis-ci.org/uji-ros-pkg/underwater_simulation.png?branch=indigo-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
marti_messages,http://rosindex.github.io/r/marti_messages/,"hydro,fuerte,groovy,kinetic,jade,indigo","marti_can_msgs,marti_common_msgs,marti_nav_msgs,marti_perception_msgs,marti_sensor_msgs,marti_visualization_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""marti_messages"">marti_messages</h1>\n\n<p>This repository provides various messages created at <a href=""http://www.swri.org"">Southwest Reseach Institute</a>\'s <a href=""http://www.swri.org/4org/d10/isd/ivs/default.htm"">Intelligent Vehicle Systems</a> section for working with <a href=""http://www.ros.org"">Robot Operating System(ROS)</a>.</p>\n\n<h2 id=""installation-ros-indigo-jade"">Installation (ROS Indigo, Jade)</h2>\n\n<p>If you have installed ROS Indigo or Jade, you can install any of the packages in this repository with apt-get:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-&lt;distro&gt;-&lt;package&gt;\n</code></pre></div>\n<h2 id=""build-status"">Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Indigo (Saucy)</th>\n<th>Indigo (Trusty)</th>\n<th>Jade (Trusty)</th>\n<th>Jade (Utopic)</th>\n<th>Jade (Vivid)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>marti_can_msgs (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__marti_can_msgs__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__marti_can_msgs__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__marti_can_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__marti_can_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__marti_can_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__marti_can_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__marti_can_msgs__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__marti_can_msgs__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__marti_can_msgs__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__marti_can_msgs__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_can_msgs (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__marti_can_msgs__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__marti_can_msgs__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__marti_can_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__marti_can_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__marti_can_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__marti_can_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__marti_can_msgs__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__marti_can_msgs__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__marti_can_msgs__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__marti_can_msgs__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_common_msgs (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__marti_common_msgs__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__marti_common_msgs__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__marti_common_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__marti_common_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__marti_common_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__marti_common_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__marti_common_msgs__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__marti_common_msgs__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__marti_common_msgs__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__marti_common_msgs__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_common_msgs (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__marti_common_msgs__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__marti_common_msgs__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__marti_common_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__marti_common_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__marti_common_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__marti_common_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__marti_common_msgs__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__marti_common_msgs__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__marti_common_msgs__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__marti_common_msgs__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_nav_msgs (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__marti_nav_msgs__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__marti_nav_msgs__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__marti_nav_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__marti_nav_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__marti_nav_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__marti_nav_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__marti_nav_msgs__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__marti_nav_msgs__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__marti_nav_msgs__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__marti_nav_msgs__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_nav_msgs (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__marti_nav_msgs__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__marti_nav_msgs__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__marti_nav_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__marti_nav_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__marti_nav_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__marti_nav_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__marti_nav_msgs__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__marti_nav_msgs__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__marti_nav_msgs__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__marti_nav_msgs__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_perception_msgs (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__marti_perception_msgs__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__marti_perception_msgs__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__marti_perception_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__marti_perception_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__marti_perception_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__marti_perception_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__marti_perception_msgs__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__marti_perception_msgs__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__marti_perception_msgs__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__marti_perception_msgs__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_perception_msgs (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__marti_perception_msgs__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__marti_perception_msgs__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__marti_perception_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__marti_perception_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__marti_perception_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__marti_perception_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__marti_perception_msgs__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__marti_perception_msgs__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__marti_perception_msgs__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__marti_perception_msgs__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_sensor_msgs (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__marti_sensor_msgs__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__marti_sensor_msgs__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__marti_sensor_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__marti_sensor_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__marti_sensor_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__marti_sensor_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__marti_sensor_msgs__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__marti_sensor_msgs__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__marti_sensor_msgs__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__marti_sensor_msgs__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_sensor_msgs (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__marti_sensor_msgs__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__marti_sensor_msgs__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__marti_sensor_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__marti_sensor_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__marti_sensor_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__marti_sensor_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__marti_sensor_msgs__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__marti_sensor_msgs__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__marti_sensor_msgs__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__marti_sensor_msgs__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_visualization_msgs (32-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS32__marti_visualization_msgs__ubuntu_saucy_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS32__marti_visualization_msgs__ubuntu_saucy_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT32__marti_visualization_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT32__marti_visualization_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT32__marti_visualization_msgs__ubuntu_trusty_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT32__marti_visualization_msgs__ubuntu_trusty_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU32__marti_visualization_msgs__ubuntu_utopic_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU32__marti_visualization_msgs__ubuntu_utopic_i386__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV32__marti_visualization_msgs__ubuntu_vivid_i386__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV32__marti_visualization_msgs__ubuntu_vivid_i386__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_visualization_msgs (64-bit)</td>\n<td><a href=""http://build.ros.org/job/Ibin_uS64__marti_visualization_msgs__ubuntu_saucy_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uS64__marti_visualization_msgs__ubuntu_saucy_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__marti_visualization_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__marti_visualization_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__marti_visualization_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__marti_visualization_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uU64__marti_visualization_msgs__ubuntu_utopic_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uU64__marti_visualization_msgs__ubuntu_utopic_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uV64__marti_visualization_msgs__ubuntu_vivid_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uV64__marti_visualization_msgs__ubuntu_vivid_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""travis-ci-build-status"">Travis CI Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Indigo</th>\n<th>Jade</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=""https://travis-ci.org/swri-robotics/marti_messages""><img src=""https://travis-ci.org/swri-robotics/marti_messages.svg?branch=indigo-devel"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/swri-robotics/marti_messages""><img src=""https://travis-ci.org/swri-robotics/marti_messages.svg?branch=jade-devel"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""building-from-source-ros-indigo-jade"">Building From Source (ROS Indigo, Jade)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add this repository to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace &lt;ros_distro&gt; with indigo or jade as appropriate\nwstool set mapviz --git https://github.com/swri-robotics/marti_messages.git -v &lt;ros_distro&gt;-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace &lt;ros_distro&gt; with indigo or jade as appropriate\ngit clone https://github.com/swri-robotics/marti_messages.git --branch &lt;ros_distro&gt;-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies using rosdep by running the following command from the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""marti_messages"">marti_messages</h1>\n\n<p>This repository provides various messages created at <a href=""http://www.swri.org"">Southwest Reseach Institute</a>\'s <a href=""http://www.swri.org/4org/d10/isd/ivs/default.htm"">Intelligent Vehicle Systems</a> section for working with <a href=""http://www.ros.org"">Robot Operating System(ROS)</a>.</p>\n\n<h2 id=""installation-ros-indigo-jade"">Installation (ROS Indigo, Jade)</h2>\n\n<p>If you have installed ROS Indigo or Jade, you can install any of the packages in this repository with apt-get:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-&lt;distro&gt;-&lt;package&gt;\n</code></pre></div>\n<h2 id=""build-status"">Build Status</h2>\n\n<table>\n<thead>\n<tr>\n<th>Package</th>\n<th>Indigo (Saucy)</th>\n<th>Indigo (Trusty)</th>\n<th>Jade (Trusty)</th>\n<th>Jade (Utopic)</th>\n<th>Jade (Vivid)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>marti_can_msgs (32-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-can-msgs_binarydeb_saucy_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-can-msgs_binarydeb_saucy_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-can-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-can-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-can-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-can-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-can-msgs_binarydeb_utopic_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-can-msgs_binarydeb_utopic_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-can-msgs_binarydeb_vivid_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-can-msgs_binarydeb_vivid_i386"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_can_msgs (64-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-can-msgs_binarydeb_saucy_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-can-msgs_binarydeb_saucy_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-can-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-can-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-can-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-can-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-can-msgs_binarydeb_utopic_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-can-msgs_binarydeb_utopic_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-can-msgs_binarydeb_vivid_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-can-msgs_binarydeb_vivid_amd64"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_common_msgs (32-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-common-msgs_binarydeb_saucy_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-common-msgs_binarydeb_saucy_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-common-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-common-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-common-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-common-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-common-msgs_binarydeb_utopic_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-common-msgs_binarydeb_utopic_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-common-msgs_binarydeb_vivid_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-common-msgs_binarydeb_vivid_i386"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_common_msgs (64-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-common-msgs_binarydeb_saucy_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-common-msgs_binarydeb_saucy_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-common-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-common-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-common-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-common-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-common-msgs_binarydeb_utopic_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-common-msgs_binarydeb_utopic_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-common-msgs_binarydeb_vivid_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-common-msgs_binarydeb_vivid_amd64"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_nav_msgs (32-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-nav-msgs_binarydeb_saucy_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-nav-msgs_binarydeb_saucy_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-nav-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-nav-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-nav-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-nav-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-nav-msgs_binarydeb_utopic_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-nav-msgs_binarydeb_utopic_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-nav-msgs_binarydeb_vivid_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-nav-msgs_binarydeb_vivid_i386"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_nav_msgs (64-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-nav-msgs_binarydeb_saucy_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-nav-msgs_binarydeb_saucy_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-nav-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-nav-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-nav-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-nav-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-nav-msgs_binarydeb_utopic_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-nav-msgs_binarydeb_utopic_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-nav-msgs_binarydeb_vivid_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-nav-msgs_binarydeb_vivid_amd64"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_perception_msgs (32-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-perception-msgs_binarydeb_saucy_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-perception-msgs_binarydeb_saucy_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-perception-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-perception-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-perception-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-perception-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-perception-msgs_binarydeb_utopic_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-perception-msgs_binarydeb_utopic_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-perception-msgs_binarydeb_vivid_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-perception-msgs_binarydeb_vivid_i386"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_perception_msgs (64-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-perception-msgs_binarydeb_saucy_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-perception-msgs_binarydeb_saucy_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-perception-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-perception-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-perception-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-perception-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-perception-msgs_binarydeb_utopic_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-perception-msgs_binarydeb_utopic_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-perception-msgs_binarydeb_vivid_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-perception-msgs_binarydeb_vivid_amd64"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_sensor_msgs (32-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-sensor-msgs_binarydeb_saucy_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-sensor-msgs_binarydeb_saucy_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-sensor-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-sensor-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-sensor-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-sensor-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-sensor-msgs_binarydeb_utopic_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-sensor-msgs_binarydeb_utopic_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-sensor-msgs_binarydeb_vivid_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-sensor-msgs_binarydeb_vivid_i386"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_sensor_msgs (64-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-sensor-msgs_binarydeb_saucy_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-sensor-msgs_binarydeb_saucy_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-sensor-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-sensor-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-sensor-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-sensor-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-sensor-msgs_binarydeb_utopic_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-sensor-msgs_binarydeb_utopic_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-sensor-msgs_binarydeb_vivid_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-sensor-msgs_binarydeb_vivid_amd64"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_visualization_msgs (32-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-visualization-msgs_binarydeb_saucy_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-visualization-msgs_binarydeb_saucy_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-visualization-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-visualization-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-visualization-msgs_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-visualization-msgs_binarydeb_trusty_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-visualization-msgs_binarydeb_utopic_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-visualization-msgs_binarydeb_utopic_i386"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-visualization-msgs_binarydeb_vivid_i386/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-visualization-msgs_binarydeb_vivid_i386"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>marti_visualization_msgs (64-bit)</td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-visualization-msgs_binarydeb_saucy_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-visualization-msgs_binarydeb_saucy_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-indigo-marti-visualization-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-marti-visualization-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-visualization-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-visualization-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-visualization-msgs_binarydeb_utopic_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-visualization-msgs_binarydeb_utopic_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/ros-jade-marti-visualization-msgs_binarydeb_vivid_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-marti-visualization-msgs_binarydeb_vivid_amd64"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""building-from-source-ros-indigo-jade"">Building From Source (ROS Indigo, Jade)</h2>\n\n<p>These directions assume you have already set up a catkin workspace. See <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">this tutorial</a> on the ROS Wiki for help setting up a catkin workspace.</p>\n\n<h3 id=""checking-out-the-source-code-wstool"">Checking out the source code (wstool)</h3>\n\n<p>If you\'re using wstool, add this repository to your wstool workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace &lt;ros_distro&gt; with indigo or jade as appropriate\nwstool set mapviz --git https://github.com/swri-robotics/marti_messages.git -v &lt;ros_distro&gt;-devel\n</code></pre></div>\n<h3 id=""checking-out-the-source-code-git"">Checking out the source code (git)</h3>\n\n<p>If you\'re not using wstool, you can check out the repositories with git:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># Replace &lt;ros_distro&gt; with indigo or jade as appropriate\ngit clone https://github.com/swri-robotics/marti_messages.git --branch &lt;ros_distro&gt;-devel\n</code></pre></div>\n<h3 id=""installing-dependencies-and-building"">Installing dependencies and building</h3>\n\n<p>Install all of the dependencies using rosdep by running the following command from the root of your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src\n</code></pre></div>\n<p>Build the workspace with catkin_make:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""marti_messages"">marti_messages</h1>\n\n<p>This repository provides supplemental ROS messages for MARTI.</p>\n</div>\n\n            \n          </div>'"
slam_karto,http://rosindex.github.io/r/slam_karto/,"hydro,indigo",slam_karto,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
optris_drivers,http://rosindex.github.io/r/optris_drivers/,"hydro,fuerte,electric,groovy,indigo",optris_drivers,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""optris_drivers"">optris_drivers</h1>\n\n<p>ROS drivers for Optris thermal imagers</p>\n</div>\n\n            \n          </div>'"
ridgeback_desktop,http://rosindex.github.io/r/ridgeback_desktop/,indigo,"ridgeback_desktop,ridgeback_viz","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ridgeback_simulator,http://rosindex.github.io/r/ridgeback_simulator/,indigo,"mecanum_gazebo_plugin,ridgeback_gazebo,ridgeback_gazebo_plugins,ridgeback_simulator","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_control,http://rosindex.github.io/r/ros_control/,"hydro,fuerte,groovy,kinetic,jade,indigo","combined_robot_hw,combined_robot_hw_tests,controller_interface,controller_manager,controller_manager_msgs,controller_manager_tests,hardware_interface,joint_limits_interface,ros_control,rqt_controller_manager,transmission_interface,control_toolbox,realtime_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_control"">ros_control</h1>\n\n<p>See <a href=""http://ros.org/wiki/ros_control"">ros_control documentation</a> on ros.org</p>\n\n<h3 id=""build-status"">Build Status</h3>\n\n<p><a href=""https://travis-ci.org/ros-controls/ros_control""><img src=""https://travis-ci.org/ros-controls/ros_control.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ethzasl_icp_mapping,http://rosindex.github.io/r/ethzasl_icp_mapping/,"hydro,groovy,fuerte,indigo","ethzasl_extrinsic_calibration,ethzasl_gridmap_2d,ethzasl_icp_mapper,ethzasl_icp_mapper_experiments,ethzasl_icp_mapping,ethzasl_point_cloud_vtk_tools,libpointmatcher_ros,libnabo,libpointmatcher","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>This <a href=""http://www.ros.org"">ROS</a> stack provides a real-time 2D and 3D <a href=""http://en.wikipedia.org/wiki/Iterative_Closest_Point"">ICP</a>-based SLAM system that\ncan fit a large variety of robots and application scenarios, without any code\nchange or recompilation.</p>\n\n<p>Information about this stack, including installation and compilation, is available on the <a href=""http://www.ros.org"">ROS</a> wiki at <a href=""http://www.ros.org/wiki/ethzasl_icp_mapping"">http://www.ros.org/wiki/ethzasl_icp_mapping</a>.</p>\n</div>\n\n            \n          </div>'"
realtime_tools,http://rosindex.github.io/r/realtime_tools/,"hydro,jade,kinetic,indigo",realtime_tools,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""realtime_tools"">realtime_tools</h1>\n\n<p>See <a href=""http://ros.org/wiki/ros_control"">ros_control documentation</a> on ros.org</p>\n\n<h3 id=""build-status"">Build Status</h3>\n\n<p><a href=""https://travis-ci.org/ros-controls/realtime_tools""><img src=""https://travis-ci.org/ros-controls/realtime_tools.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
teb_local_planner_tutorials,http://rosindex.github.io/r/teb_local_planner_tutorials/,"jade,kinetic,indigo",teb_local_planner_tutorials,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teb_local_planner_tutorials"">teb_local_planner_tutorials</h1>\n\n<p>This package contains supplementary material and examples for <a href=""http://wiki.ros.org/teb_local_planner"">teb_local_planner</a> tutorials.</p>\n\n<p>The tutorials package mainly contains fully working robot navigation examples in combination with the teb_local_planner.\nCurrently it provides a differential drive and a carlike robot simulation setup.\nIn order to depend on as few dependencies as possible, the simulations are performed with <a href=""http://wiki.ros.org/stage_ros"">stage_ros</a>\nand without any URDF models. However, they are easily extendable and integrable (e.g. Gazebo, URDF models, voxel costmaps, robot hardware nodes, ...).</p>\n\n<p>Refer to the <a href=""http://wiki.ros.org/teb_local_planner"">teb_local_planner</a> ROS wiki page for more information.</p>\n\n<p><strong>Dependencies:</strong></p>\n\n<ul>\n<li>\n<em>navigation stack</em> and <em>teb_local_planner</em> package</li>\n<li>\n<em>stage</em>: <code>sudo apt-get install ros-indigo-stage-ros</code>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
laser_filters,http://rosindex.github.io/r/laser_filters/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo",laser_filters,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
web_video_server,http://rosindex.github.io/r/web_video_server/,"hydro,jade,indigo",web_video_server,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""web_video_server"">web_video_server <a href=""https://travis-ci.org/RobotWebTools/web_video_server""><img src=""https://api.travis-ci.org/RobotWebTools/web_video_server.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""http-streaming-of-ros-image-topics-in-multiple-formats"">HTTP Streaming of ROS Image Topics in Multiple Formats</h4>\n\n<p>This node combines the capabilities of <a href=""https://github.com/RobotWebTools/ros_web_video"">ros_web_video</a> and <a href=""https://github.com/RobotWebTools/mjpeg_server"">mjpeg_server</a> into a single node.</p>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/web_video_server"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/web_video_server/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<p>This project is released as part of the <a href=""http://robotwebtools.org/"">Robot Web Tools</a> effort.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>web_video_server is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
m_explore,http://rosindex.github.io/r/m_explore/,jade,"explore_lite,multirobot_map_merge","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""m-explore"">m-explore</h1>\n\n<p><a href=""http://build.ros.org/job/Jdev__m_explore__ubuntu_trusty_amd64/1/""><img src=""http://build.ros.org/job/Jdev__m_explore__ubuntu_trusty_amd64/1/badge/icon"" alt=""Build Status""></a></p>\n\n<p>ROS packages for multi robot exploration.</p>\n\n<h2 id=""installing"">Installing</h2>\n\n<p>Packages are released for ROS jade.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    sudo apt install ros-jade-multirobot-map-merge ros-jade-explore-lite\n\n</code></pre></div>\n<h2 id=""building"">Building</h2>\n\n<p>Build as standard catkin packages. There are no special dependencies needed\n(use rosdep to resolve dependencies in ROS). You should use brach specific for\nyour release i.e. <code>jade-devel</code> for jade. Master branch is for latest ROS.</p>\n\n<h2 id=""wiki"">WIKI</h2>\n\n<p>Packages are documented at ROS wiki.\n* <a href=""http://wiki.ros.org/explore_lite"">explore_lite</a>\n* <a href=""http://wiki.ros.org/multirobot_map_merge"">multirobot_map_merge</a></p>\n\n<h2 id=""copyright"">COPYRIGHT</h2>\n\n<p>Packages are licensed under BSD license. See respective files for details.</p>\n</div>\n\n            \n          </div>'"
rail_pick_and_place,http://rosindex.github.io/r/rail_pick_and_place/,"jade,indigo","graspdb,rail_grasp_collection,rail_pick_and_place,rail_pick_and_place_msgs,rail_pick_and_place_tools,rail_recognition","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rail_pick_and_place"">rail_pick_and_place <a href=""https://travis-ci.org/GT-RAIL/rail_pick_and_place""><img src=""https://api.travis-ci.org/GT-RAIL/rail_pick_and_place.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""grasp-training-and-pick-and-place-methods-developed-by-the-rail-lab"">Grasp Training and Pick and Place Methods Developed by the RAIL Lab</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rail_pick_and_place"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>rail_pick_and_place is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS.md</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
variant,http://rosindex.github.io/r/variant/,indigo,"variant,variant_msgs,variant_topic_test,variant_topic_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""variant"">variant</h1>\n\n<h2 id=""synopsis"">Synopsis</h2>\n\n<p>Topic tools for treating ROS messages as type-erased variants.</p>\n\n<p><strong>Author(s):</strong> Ralf Kaestner</p>\n\n<p><strong>Maintainer:</strong> Ralf Kaestner <a href=""mailto:ralf.kaestner@gmail.com"">ralf.kaestner@gmail.com</a></p>\n\n<p><strong>Licsense:</strong> GNU Lesser General Public License (LGPL)</p>\n\n<p><strong>Operating system(s):</strong> Debian-based Linux, Mac OS X</p>\n\n<p><strong>Package PPA:</strong> Not available</p>\n\n<h2 id=""description"">Description</h2>\n\n<p>This project provides a partially templated C++ API for treating ROS messages\nas type-erased variants. Similar to the Python API of ROS, it thus renders ROS\nmessages and their members accessible without the requirement for including any\nmessage headers at compile time. The goal of this functionality is to encourage\ndevelopers to contribute more C++ packages which are intended to inspect and\noperate on any message type.</p>\n\n<p>This project further provides a test package which practically demonstrates\nAPI usage by example.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""installing-from-packages-recommended-for-ubuntu-lts-users"">Installing from packages (recommended for Ubuntu LTS users)</h3>\n\n<p>The maintainers of this project do not yet provide binary packages.</p>\n\n<h3 id=""building-from-source"">Building from source</h3>\n\n<p>This project may be built from source using catkin.</p>\n\n<p>Here, we assume you intend to build the project for the ROS distribution\nnamed <code>ROS_DISTRO</code>.</p>\n\n<h4 id=""installing-build-dependencies"">Installing build dependencies</h4>\n\n<p>The build dependencies of this project are available from the standard\npackage repositories of recent Ubuntu and ROS releases. To install them,\nsimply use the command</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">sudo apt-get install ros-ROS_DISTRO-roscpp, ros-ROS_DISTRO-std-msgs\n\n</code></pre></div>\n<h4 id=""building-with-catkin-recommended-for-ros-developers"">Building with catkin (recommended for ROS developers)</h4>\n\n<p>Assuming that you have cloned the project sources into <code>PROJECT_DIR</code>, you\nmay attempt to build this project using catkin as follows:</p>\n\n<ul>\n<li>Create the directory structure for your catkin workspace by issuing</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">  mkdir -p CATKIN_WS_DIR/src\n\n</code></pre></div>\n<ul>\n<li>Assuming that your ROS environment has been set up properly, initialize the\ncatkin workspace using the command</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">  catkin_init_workspace CATKIN_WS_DIR/src\n\n</code></pre></div>\n<ul>\n<li>Individually link the directories containing the project\'s package source\ntrees into your catkin workspace source directory through</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">  ln -sf PROJECT_DIR/roscpp_nodewrap<span class=""k"">*</span> CATKIN_WS_DIR/src\n\n</code></pre></div>\n<ul>\n<li>Switch into the catkin workspace directory by </li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">  <span class=""nb"">cd </span>CATKIN_WS_DIR\n\n</code></pre></div>\n<ul>\n<li>In the catkin workspace directory, run </li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">  catkin_make\n\n</code></pre></div>\n<p>to start the build</p>\n\n<h2 id=""api-documentation"">API documentation</h2>\n\n<p>This project does not yet build its API documentation. Some basic documentation\nis however inlined with the interface definitions and can thus be found in the\nsource headers.</p>\n\n<h2 id=""feature-requests-and-bug-reports"">Feature requests and bug reports</h2>\n\n<p>If you would like to propose a feature for this project, please consider\ncontributing or send a feature request to the project authors. Bugs may be\nreported through the project\'s issue page.</p>\n\n<h2 id=""further-reading"">Further reading</h2>\n\n<p>For additional information of the Robot Operating System (ROS), please refer\nto the official <a href=""http://wiki.ros.org"">ROS documentation</a>.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<h3 id=""devel-job-status"">Devel Job Status</h3>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Indigo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>variant</td>\n<td><a href=""http://build.ros.org/job/Idev__variant__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__variant__ubuntu_trusty_amd64"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""release-job-status"">Release Job Status</h3>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Indigo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>variant</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__variant__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__variant__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>variant_msgs</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__variant_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__variant_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>variant_topic_test</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__variant_topic_test__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__variant_topic_test__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>variant_topic_tools</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__variant_topic_tools__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__variant_topic_tools__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n\n            \n          </div>'"
camera1394,http://rosindex.github.io/r/camera1394/,"hydro,groovy,fuerte,indigo",camera1394,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p><a href=""http://www.ros.org/wiki/camera1394"">Camera1394</a> is a\n<a href=""http://www.ros.org"">ROS</a> driver for devices supporting the IEEE 1394\nDigital Camera (IIDC) protocol. It supports the ROS\n<a href=""http://www.ros.org/wiki/image_pipeline"">image_pipeline</a>, using\n<a href=""http://damien.douxchamps.net/ieee1394/libdc1394/"">libdc1394</a> for device\naccess.</p>\n\n<p>This package has no released code API.</p>\n\n<p><strong>Warning</strong>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">The master branch normally contains code being tested for the next\nROS release.  It will not always work with all previous releases.\nSometimes, it may not work at all.\n</code></pre></div>\n<p>The current <code>master</code> branch works with Hydro and Indigo. To build for\nFuerte or Groovy, check out the <code>fuerte-devel</code> or <code>groovy-devel</code> branch\ninstead.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""camera1394"">camera1394</h1>\n\n<p>ROS driver for devices supporting the IEEE 1394 Digital Camera (IIDC)\nprotocol. Supports the ROS image_pipeline, using libdc1394 for device\naccess.</p>\n\n<h2 id=""api"">API</h2>\n\n<p>This package has no released code API.</p>\n\n<p>ROS documentation: <a href=""http://www.ros.org/wiki/camera1394"">http://www.ros.org/wiki/camera1394</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p><a href=""http://www.ros.org/wiki/camera1394"">Camera1394</a> is a\n<a href=""http://www.ros.org"">ROS</a> driver for devices supporting the IEEE 1394\nDigital Camera (IIDC) protocol. It supports the ROS\n<a href=""http://www.ros.org/wiki/image_pipeline"">image_pipeline</a>, using\n<a href=""http://damien.douxchamps.net/ieee1394/libdc1394/"">libdc1394</a> for device\naccess.</p>\n\n<p>This package has no released code API.</p>\n\n<p><strong>Warning</strong>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">The master branch normally contains code being tested for the next\nROS release.  It will not always work with all previous releases.\nSometimes, it may not work at all.\n</code></pre></div>\n<p>The current master works with Hydro and Groovy. To build for Fuerte,\ncheck out the fuerte-devel branch instead of master.</p>\n</div>\n\n            \n          </div>'"
ecl_tools,http://rosindex.github.io/r/ecl_tools/,"hydro,groovy,kinetic,jade,indigo","ecl_build,ecl_license,ecl_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecl_tools"">ecl_tools</h1>\n\n<p>Build environment tools and utilities for the embedded control libraries.</p>\n</div>\n\n            \n          </div>'"
vision_visp,http://rosindex.github.io/r/vision_visp/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","vision_visp,visp_auto_tracker,visp_bridge,visp_camera_calibration,visp_hand2eye_calibration,visp_tracker,visp","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visp-stack-for-ros"">ViSP stack for ROS</h1>\n\n<p>This repository provides a ViSP stack for ROS. <a href=""http://www.irisa.fr/lagadic/visp/visp.html"">ViSP</a> is the\nVisual Servoing Platform and <a href=""http://www.ros.org"">ROS</a> a robotics middleware.</p>\n\n<p>This package contains a Git submodule. To clone it, run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone --recursive git://github.com/laas/vision_visp.git\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visp-stack-for-ros"">ViSP stack for ROS</h1>\n\n<p><a href=""https://travis-ci.org/laas/vision_visp""><img src=""https://travis-ci.org/laas/vision_visp.png?branch=master"" alt=""Build Status""></a></p>\n\n<p>This repository provides a ViSP stack for ROS. <a href=""http://www.irisa.fr/lagadic/visp/visp.html"">ViSP</a> is the\nVisual Servoing Platform and <a href=""http://www.ros.org"">ROS</a> a robotics middleware.</p>\n\n<p>This package contains Git submodules. To clone it, run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone --recursive git://github.com/laas/vision_visp.git\n</code></pre></div>\n<h3 id=""setup-with-rosbuild"">Setup with rosbuild</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roscd\n$ rosws set vision_visp --git https://github.com/lagadic/vision_visp.git -v fuerte-devel\n$ rosws update vision_visp\n$ source setup.bash\n$ rosdep install vision_visp\n$ rosmake vision_visp\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visp-stack-for-ros"">ViSP stack for ROS</h1>\n\n<p><img src=""https://www.gnu.org/graphics/gplv3-127x51.png"" alt=""GPL-2""></p>\n\n<p><code>vision_visp</code> provides ViSP algorithms as ROS components. <a href=""http://www.irisa.fr/lagadic/visp/visp.html"">ViSP</a> is the Visual Servoing Platform and <a href=""http://www.ros.org"">ROS</a> a robotics\nmiddleware.</p>\n\n<p>These packages are released under the <a href=""COPYING"">GPL-2</a> license.</p>\n\n<p>Components documentation is hosted on the <a href=""http://wiki.ros.org/vision_visp"">ros.org wiki</a>.</p>\n\n<p>Support is provided through <a href=""http://answers.ros.org/questions/scope:all/sort:activity-desc/tags:vision_visp/page:1/"">ROS Answers</a> .</p>\n\n<h2 id=""which-branch-should-i-use"">Which branch should I use?</h2>\n\n<p>Branches come in two flavors:</p>\n\n<ul>\n<li>development branch,</li>\n<li>release branch</li>\n</ul>\n\n<p>Package for each ROS release is maintained on separate\nbranches. I.e. <code>hydro-devel</code> is the Hydro development branch whereas\n<code>hydro</code> is the hydro release branch.</p>\n\n<p><code>master</code> means the next ROS release.</p>\n\n<p>If you are a user you should use a release branch as they contain\nstable and tested versions of the packages. If you are a developper\nyou must provide new patches against <code>master</code>. You may also provide\nversion-specific bug fix again older releases.</p>\n\n<ul>\n<li>Never implement new features in old branches (i.e. not\nmaster). These Pull Requests will not be accepted. If you provide a\nbug fix then you may ask for it to be backported. ABI/API breakage\nprevent patches from being backported.</li>\n<li>The <em>only</em> action allowed in release branches is merging the\ndevelopment branch in the current branch.</li>\n</ul>\n\n<p><em>Warning:</em> the Fuerte branches still rely on the legacy <code>rosbuild</code>\n build system. We recommend you to update to a newer ROS release. Only\n minimum maintained will be done for this release.</p>\n\n<p>Additional development guidelines are provided in\n<a href=""CONTRIBUTING.md"">CONTRIBUTING.md</a>.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>This stack supports the following ROS releases:</p>\n\n<ul>\n<li>Hydro</li>\n<li>Groovy</li>\n<li>Fuerte</li>\n<li>Indigo</li>\n</ul>\n\n<p>The master branch holds the development that will be available in the\nnext ROS release.</p>\n\n<table>\n<thead>\n<tr>\n<th>ROS Release</th>\n<th>Development Branch</th>\n<th>Development branch (ros.org)</th>\n<th>Release Branch</th>\n<th>Documentation (ros.org)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Master</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=master"" alt=""Build Status""></a></td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Indigo</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=indigo-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-indigo-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=indigo"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-indigo-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-indigo-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Hydro</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=hydro-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-hydro-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-hydro-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=hydro"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-hydro-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-hydro-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Groovy</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=groovy-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-groovy-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-groovy-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=groovy"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-groovy-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-groovy-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Fuerte</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=fuerte-devel"" alt=""Build Status""></a></td>\n<td>N/A</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=fuerte"" alt=""Build Status""></a></td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visp-stack-for-ros"">ViSP stack for ROS</h1>\n\n<p><img src=""https://www.gnu.org/graphics/gplv3-127x51.png"" alt=""GPL-2""></p>\n\n<p><code>vision_visp</code> provides ViSP algorithms as ROS components. <a href=""http://www.irisa.fr/lagadic/visp/visp.html"">ViSP</a> is the Visual Servoing Platform and <a href=""http://www.ros.org"">ROS</a> a robotics\nmiddleware.</p>\n\n<p>These packages are released under the <a href=""COPYING"">GPL-2</a> license.</p>\n\n<p>Components documentation is hosted on the <a href=""http://wiki.ros.org/vision_visp"">ros.org wiki</a>.</p>\n\n<p>Support is provided through <a href=""http://answers.ros.org/questions/scope:all/sort:activity-desc/tags:vision_visp/page:1/"">ROS Answers</a> .</p>\n\n<h2 id=""which-branch-should-i-use"">Which branch should I use?</h2>\n\n<p>Branches come in two flavors:</p>\n\n<ul>\n<li>development branch,</li>\n<li>release branch</li>\n</ul>\n\n<p>Package for each ROS release is maintained on separate\nbranches. I.e. <code>kinetic-devel</code> is the Kinetic Kade development branch whereas\n<code>kinetic</code> is the Kinetic Kame release branch.</p>\n\n<p><code>master</code> means the next ROS release.</p>\n\n<p>If you are a user you should use a release branch as they contain\nstable and tested versions of the packages. If you are a developper\nyou must provide new patches against <code>master</code>. You may also provide\nversion-specific bug fix again older releases.</p>\n\n<ul>\n<li>Never implement new features in old branches (i.e. not\nmaster). These Pull Requests will not be accepted. If you provide a\nbug fix then you may ask for it to be backported. ABI/API breakage\nprevent patches from being backported.</li>\n<li>The <em>only</em> action allowed in release branches is merging the\ndevelopment branch in the current branch.</li>\n</ul>\n\n<p><em>Warning:</em> the Fuerte branches still rely on the legacy <code>rosbuild</code>\n build system. We recommend you to update to a newer ROS release. Only\n minimum maintained will be done for this release.</p>\n\n<p>Additional development guidelines are provided in\n<a href=""CONTRIBUTING.md"">CONTRIBUTING.md</a>.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>This stack supports the following ROS releases:</p>\n\n<ul>\n<li>Hydro</li>\n<li>Groovy</li>\n<li>Fuerte</li>\n<li>Indigo</li>\n<li>Jade</li>\n<li>Kinetic</li>\n</ul>\n\n<p>The master branch holds the development that will be available in the\nnext ROS release.</p>\n\n<table>\n<thead>\n<tr>\n<th>ROS Release</th>\n<th>Development Branch</th>\n<th>Development branch (ros.org)</th>\n<th>Release Branch</th>\n<th>Documentation (ros.org)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Master</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=master"" alt=""Build Status""></a></td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Jade</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=jade-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-jade-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-jade-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=jade"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-jade-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-jade-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Indigo</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=indigo-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-indigo-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=indigo"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-indigo-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-indigo-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Hydro</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=hydro-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-hydro-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-hydro-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=hydro"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-hydro-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-hydro-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Groovy</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=groovy-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-groovy-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-groovy-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=groovy"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-groovy-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-groovy-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Fuerte</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=fuerte-devel"" alt=""Build Status""></a></td>\n<td>N/A</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=fuerte"" alt=""Build Status""></a></td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visp-stack-for-ros"">ViSP stack for ROS</h1>\n\n<p><a href=""https://travis-ci.org/laas/vision_visp""><img src=""https://travis-ci.org/laas/vision_visp.png?branch=master"" alt=""Build Status""></a></p>\n\n<p>This repository provides a ViSP stack for ROS. <a href=""http://team.inria.fr/lagadic/visp/visp.html"">ViSP</a> is the\nVisual Servoing Platform and <a href=""http://www.ros.org"">ROS</a> a robotics middleware.</p>\n\n<h2 id=""setup"">Setup</h2>\n\n<p>This package contains submodules. It can be compiled like any other ROS package using <code>catkin_make</code>. In that case you have to consider the <code>groovy-devel</code> branch.</p>\n\n<p>Supposed you have a catkin work space just run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_ws/src \n$ git clone -b groovy-devel --recursive https://github.com/lagadic/vision_visp.git\n$ cd ..\n$ catkin_make \n</code></pre></div>\n<p>If you want to build a specific package (like visp_bridge) run either:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ catkin_make --pkg visp_bridge\n</code></pre></div>\n<h2 id=""documentation"">Documentation</h2>\n\n<p>The documentation is available on the project <a href=""http://www.ros.org/wiki/vision_visp"">ROS homepage</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visp-stack-for-ros"">ViSP stack for ROS</h1>\n\n<p><img src=""https://www.gnu.org/graphics/gplv3-127x51.png"" alt=""GPL-2""></p>\n\n<p><code>vision_visp</code> provides ViSP algorithms as ROS components. <a href=""http://www.irisa.fr/lagadic/visp/visp.html"">ViSP</a> is the Visual Servoing Platform and <a href=""http://www.ros.org"">ROS</a> a robotics\nmiddleware.</p>\n\n<p>These packages are released under the <a href=""COPYING"">GPL-2</a> license.</p>\n\n<p>Components documentation is hosted on the <a href=""http://wiki.ros.org/vision_visp"">ros.org wiki</a>.</p>\n\n<p>Support is provided through <a href=""http://answers.ros.org/questions/scope:all/sort:activity-desc/tags:vision_visp/page:1/"">ROS Answers</a> .</p>\n\n<h2 id=""which-branch-should-i-use"">Which branch should I use?</h2>\n\n<p>Branches come in two flavors:</p>\n\n<ul>\n<li>development branch,</li>\n<li>release branch</li>\n</ul>\n\n<p>Package for each ROS release is maintained on separate\nbranches. I.e. <code>jade-devel</code> is the Jade development branch whereas\n<code>jade</code> is the Jade release branch.</p>\n\n<p><code>master</code> means the next ROS release.</p>\n\n<p>If you are a user you should use a release branch as they contain\nstable and tested versions of the packages. If you are a developper\nyou must provide new patches against <code>master</code>. You may also provide\nversion-specific bug fix again older releases.</p>\n\n<ul>\n<li>Never implement new features in old branches (i.e. not\nmaster). These Pull Requests will not be accepted. If you provide a\nbug fix then you may ask for it to be backported. ABI/API breakage\nprevent patches from being backported.</li>\n<li>The <em>only</em> action allowed in release branches is merging the\ndevelopment branch in the current branch.</li>\n</ul>\n\n<p><em>Warning:</em> the Fuerte branches still rely on the legacy <code>rosbuild</code>\n build system. We recommend you to update to a newer ROS release. Only\n minimum maintained will be done for this release.</p>\n\n<p>Additional development guidelines are provided in\n<a href=""CONTRIBUTING.md"">CONTRIBUTING.md</a>.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>This stack supports the following ROS releases:</p>\n\n<ul>\n<li>Hydro</li>\n<li>Groovy</li>\n<li>Fuerte</li>\n<li>Indigo</li>\n<li>Jade</li>\n</ul>\n\n<p>The master branch holds the development that will be available in the\nnext ROS release.</p>\n\n<table>\n<thead>\n<tr>\n<th>ROS Release</th>\n<th>Development Branch</th>\n<th>Development branch (ros.org)</th>\n<th>Release Branch</th>\n<th>Documentation (ros.org)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Master</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=master"" alt=""Build Status""></a></td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>Jade</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=jade-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-jade-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-jade-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=jade"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-jade-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-jade-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Indigo</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=indigo-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-indigo-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=indigo"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-indigo-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-indigo-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Hydro</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=hydro-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-hydro-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-hydro-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=hydro"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-hydro-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-hydro-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Groovy</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=groovy-devel"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/devel-groovy-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-groovy-vision_visp"" alt=""Build Status""></a></td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=groovy"" alt=""Build Status""></a></td>\n<td><a href=""http://jenkins.ros.org/job/doc-groovy-vision_visp/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=doc-groovy-vision_visp"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Fuerte</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=fuerte-devel"" alt=""Build Status""></a></td>\n<td>N/A</td>\n<td><a href=""https://travis-ci.org/lagadic/vision_visp""><img src=""https://travis-ci.org/lagadic/vision_visp.png?branch=fuerte"" alt=""Build Status""></a></td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n            \n          </div>'"
fzi_icl_can,http://rosindex.github.io/r/fzi_icl_can/,"jade,kinetic,indigo",fzi_icl_can,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
costmap_converter,http://rosindex.github.io/r/costmap_converter/,"jade,kinetic,indigo",costmap_converter,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""costmap_converter-ros-package"">costmap_converter ROS Package</h1>\n\n<p>A ros package that includes plugins and nodes to convert occupied costmap2d cells to primitive types</p>\n\n<p>Build status of the <em>master</em> branch:\n- ROS Buildfarm Jade: <a href=""http://build.ros.org/job/Jdev__costmap_converter__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Jdev__costmap_converter__ubuntu_trusty_amd64"" alt=""Jade Build Status""></a>\n- ROS Buildfarm Indigo: <a href=""http://build.ros.org/job/Idev__costmap_converter__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__costmap_converter__ubuntu_trusty_amd64"" alt=""Indigo Build Status""></a>\n- Travis Indigo &amp; Jade: <a href=""https://travis-ci.org/rst-tu-dortmund/costmap_converter""><img src=""https://travis-ci.org/rst-tu-dortmund/costmap_converter.svg?branch=master"" alt=""Build Status""></a></p>\n\n<h3 id=""license"">License</h3>\n\n<p>The <em>costmap_converter</em> package is licensed under the BSD license.\nIt depends on other ROS packages, which are listed in the package.xml. They are also BSD licensed.</p>\n\n<p>All packages included are distributed in the hope that they will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the licenses for more details.</p>\n</div>\n\n            \n          </div>'"
cob_android,http://rosindex.github.io/r/cob_android/,"electric,groovy,fuerte,indigo","cob_android,cob_android_msgs,cob_android_resource_server,cob_android_script_server,cob_android_settings","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_android""><img src=""https://travis-ci.org/ipa320/cob_android.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<h1 id=""cob_android"">cob_android</h1>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cob_android"">cob_android</h1>\n</div>\n\n            \n          </div>'"
gennodejs,http://rosindex.github.io/r/gennodejs/,kinetic,gennodejs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gennodejs"">gennodejs</h1>\n</div>\n\n            \n          </div>'"
naoqi_driver,http://rosindex.github.io/r/naoqi_driver/,kinetic,naoqi_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""description"">Description</h1>\n\n<p>This is a naoqi driver module that bridges with ROS. It publishes\nseveral sensor data as well as the robot position.</p>\n\n<p>On the other hand it enables ROS to call parts of the NAOqi API.</p>\n\n<h1 id=""what-it-does"">What it does</h1>\n\n<p>The <strong>naoqi_driver</strong> module is in charge of providing some bridge\ncapabilities between ROS and NAOqiOS.</p>\n\n<h1 id=""how-it-works"">How it works</h1>\n\n<p>The <strong>naoqi_driver</strong> module is a NAOqi module that also acts as a ROS\nnode. As there is no <strong>roscore</strong> on the robot, it needs to be given the\nIP of the <strong>roscore</strong> in order to be registered as a node in the ROS\nprocessing graph. Usually, you will start your <strong>roscore</strong> on your local\ndesktop.</p>\n\n<p>Once connected, normal ROS communication is happening between your\nrobot, running NAOqi OS, and your desktop, running ROS.</p>\n\n<p>For further information, you can go\n<a href=""http://ros-naoqi.github.io/naoqi_driver/"">here</a> or build the doc:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .sh"" data-lang="".sourceCode .sh"">cd doc\ndoxygen Doxyfile\nsphinx-build -b html ./source/ ./build/\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
ric,http://rosindex.github.io/r/ric/,"hydro,indigo","komodo_2dnav,komodo_2_moveit_config,komodo_arm_moveit_config,ric,ric_base_station,ric_board,ric_description,ric_gazebo,ric_mc,ric_moveit,ric_moveit_ik_plugin,ric_navigation,ric_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ric"">ric</h1>\n\n<p>ric repository</p>\n</div>\n\n            \n          </div>'"
angles,http://rosindex.github.io/r/angles/,"hydro,groovy,kinetic,jade,indigo",angles,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jackal_robot,http://rosindex.github.io/r/jackal_robot/,indigo,"jackal_base,jackal_bringup,jackal_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jackal_robot"">jackal_robot</h1>\n\n<p>Robot packages for Jackal</p>\n</div>\n\n            \n          </div>'"
schunk_canopen_driver,http://rosindex.github.io/r/schunk_canopen_driver/,"jade,kinetic,indigo",schunk_canopen_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is the driver package for the SCHUNK LWA4P and other CanOpen enabled devices.\nIt was developed on behalf of SCHUNK GmbH, Lauffen/Neckar, Germany\nat the FZI Research Center for Information Technology in Karlsruhe, Germany.\n\nThe package contains the following core components:\n- The independent C++ CanOpen driver library\n- The ROS abstraction layer for it\n- 3D model and kinematics description for visualization and planning\nThese main components are distributed under a LGPL license.\n\nFurthermore this package contains a build system that is not\npart of the CanOpen Driver but which is needed to build it:\n- icmaker  (BSD License)\nand depends on two other packages:\n-fzi_icl_core  containing the icl_core (LGPL License)\n-fzi_icl_can containing the icl_can (LGPL License)\n\nThese components were independently developed at the\nFZI Research Center for Information Technology in Karlsruhe, Germany.\n\nPlease refer to the wiki page for installation and usage.\n\nSee license folder for the license texts.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
jsk_model_tools,http://rosindex.github.io/r/jsk_model_tools/,"jade,groovy,indigo","eus_assimp,euscollada,euslisp_model_conversion_tester,eusurdf,jsk_model_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_model_tools"">jsk_model_tools <a href=""https://travis-ci.org/jsk-ros-pkg/jsk_model_tools""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_model_tools.png?branch=master"" alt=""Build Status""></a>\n</h1>\n</div>\n\n            \n          </div>'"
object_recognition_core,http://rosindex.github.io/r/object_recognition_core/,"hydro,groovy,kinetic,jade,indigo",object_recognition_core,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""object-recognition"">Object Recognition</h1>\n\n<p>Please see <a href=""http://ecto.willowgarage.com/recognition"">http://ecto.willowgarage.com/recognition</a>.</p>\n</div>\n\n            \n          </div>'"
object_recognition_ros_visualization,http://rosindex.github.io/r/object_recognition_ros_visualization/,"hydro,jade,kinetic,indigo",object_recognition_ros_visualization,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pointgrey_camera_driver,http://rosindex.github.io/r/pointgrey_camera_driver/,"hydro,jade,indigo","image_exposure_msgs,pointgrey_camera_description,pointgrey_camera_driver,statistics_msgs,wfov_camera_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pointgrey_camera_driver"">pointgrey_camera_driver</h1>\n\n<p><a href=""https://travis-ci.org/ros-drivers/pointgrey_camera_driver""><img src=""https://travis-ci.org/ros-drivers/pointgrey_camera_driver.png?branch=master"" alt=""Build Status""></a></p>\n\n<p>ROS-compatible Camera drivers originally provided by NREC, part of Carnegie Mellon University\'s robotics institute.\nThese drives are included along with modifications of the standard ros image messages that enable HDR and physics based vision.</p>\n\n<p>This code was originally developed by the National Robotics Engineering Center (NREC), part of the Robotics Institute at Carnegie Mellon University. Its development was funded by DARPA under the LS3 program and submitted for public release on June 7th, 2012. Release was granted on August, 21st 2012 with Distribution Statement ""A"" (Approved for Public Release, Distribution Unlimited).</p>\n\n<p>This software is released under a BSD license:</p>\n\n<p>Copyright (c) 2012, Carnegie Mellon University. All rights reserved.</p>\n\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n\n<p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the Carnegie Mellon University nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n            \n          </div>'"
youbot_driver_ros_interface,http://rosindex.github.io/r/youbot_driver_ros_interface/,"hydro,indigo",youbot_driver_ros_interface,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""youbot_driver_ros_interface"">youbot_driver_ros_interface</h1>\n\n<p>Interface classes for ROS to the youBot driver.</p>\n</div>\n\n            \n          </div>'"
uavc_v4lctl,http://rosindex.github.io/r/uavc_v4lctl/,"jade,kinetic,indigo",uavc_v4lctl,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""uavc_v4lctl"">uavc_v4lctl</h1>\n\n<p>This ROS node is a wrapper for the v4lctl tool.\nIt provides two services to set or get particular bttv parameter.\nIf a yaml file will be provided a save and restore capability will be enabled.\nParameter are then loaded and set automatically in the capture card when starting the node.\nChanged parameter are stored to a yaml file when the program ends.\nAdditionally a dynamic reconfigure rqt gui is available to manipulate bttv parameter.</p>\n\n<p>For additional documentation see <a href=""http://wiki.ros.org/uavc_v4lctl"">http://wiki.ros.org/uavc_v4lctl</a></p>\n</div>\n\n            \n          </div>'"
flir_ptu,http://rosindex.github.io/r/flir_ptu/,"hydro,indigo","flir_ptu_description,flir_ptu_driver,flir_ptu_viz","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""flir_ptu"">flir_ptu</h1>\n\n<p>Basic serial ROS driver for FLIR PTUs. Currently tested with:</p>\n\n<ul>\n<li><a href=""http://www.flir.com/mcs/view/?id=53707"">FLIR D46</a></li>\n</ul>\n\n<h1 id=""license"">License</h1>\n\n<p>This repo originated at <a href=""https://wu-robotics.googlecode.com/svn/branches/stable/wu_ptu"">Washington University</a>,\nwhere the code was licensed as GPLv2. The initial copy was made at svn revision r2226.</p>\n\n<p>Thanks to Nick Hawes (@hawesie) for the first pass at catkinizing this repo.</p>\n</div>\n\n            \n          </div>'"
youbot_driver,http://rosindex.github.io/r/youbot_driver/,"hydro,jade,indigo",youbot_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""youbot-api"">youBot API</h2>\n\n<p><a href=""http://janpaulus.github.com"">API documentation</a></p>\n\n<p>The basic idea of the youBot API is to represent a robot system as a combination of decoupled functional sub-systems. That is, this API represents manipulator arm and base platform as the combination of several joints. At the same time each joint is defined as a combination of a motor and a gearbox.</p>\n\n<p>There are three main classes in the youBot API that a user should be aware of.</p>\n\n<ul>\n<li>YouBotManipulator class that represents youBot arm as the aggregation of several joints and a gripper</li>\n<li>YouBotBase class that represents youBot base platform</li>\n<li>YouBotJoint class that represents joints which make up both the manipulator and the base</li>\n</ul>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""system-requirements"">System requirements:</h3>\n\n<ul>\n<li>Linux </li>\n<li>Ethernet adapter </li>\n<li>Root access to the Ethernet adapter </li>\n</ul>\n\n<p>These libraries are required by the youBot API: </p>\n\n<ul>\n<li>\n<a href=""http://soem.berlios.de"">Simple Open EtherCAT master</a> (included in the driver)</li>\n<li><a href=""http://www.boost.org"">Boost C++ Libraries</a></li>\n</ul>\n\n<h3 id=""installation-with-rosmake"">Installation with rosmake:</h3>\n\n<p>Install a minimal installation of ROS. (see ros.org)</p>\n\n<p>Clone the youBot API sources:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone git://github.com/youbot/youbot_driver.git\n</code></pre></div>\n<p>Add the repository folder to the ROS_PACKAGE_PATH environment variable.</p>\n\n<p>Compile the youbot driver by typing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosmake youbot_driver --rosdep-install\n</code></pre></div>\n<h3 id=""manual-installation"">Manual installation:</h3>\n\n<p>First, make sure that you have the gnu-make software available on your system (version 3.81 or later required), as well as a working C compiler chain.\nThe console commands below are exemplary for a Ubuntu Linux.\nYou will need a git version control software:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git git-core\n</code></pre></div>\n<p>Cmake a cross platform make is also necessary:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install cmake\n</code></pre></div>\n<p>To download the youBot API sources type:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone git://github.com/youbot/youbot_driver.git\n</code></pre></div>\n<p>Install boost.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install libboost-all-dev\n</code></pre></div>\n<p>Now you should be able to compile the youBot API.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd &lt;your_folder&gt;/youbot_driver\nmkdir build\ncd build\ncmake ..\nmake\n</code></pre></div>\n<p>The library will be generated in the folder ~/youbot_driver/lib.</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>The youBot API give you complete joint level access to the youBot joints. Every youBot joint is represented as a youbot::YouBotJoint class in the API.\nAt this stage we make no difference if it is a base joint which powers a wheel or a manipulator joint.</p>\n\n<p>By the classes youbot::YouBotBase and youbot::YouBotManipulator it is possible to get access to a youbot::YouBotJoint instance for a particular joint.</p>\n\n<p>To set a setpoint or read some sensor values form the joints you have to use the youbot::JointData classes.\nWhich could be for instance youbot::JointVelocitySetpoint or youbot::JointSensedCurrent.</p>\n\n<p>To configure parameters of a joint, you have to use the youbot::JointParameter classes.\nWhich could be for instance youbot::MaximumPositioningVelocity.</p>\n\n<h2 id=""example-programs"">Example Programs</h2>\n\n<p>You can find example programs in the <a href=""https://github.com/youbot/youbot_applications"">youbot_applications</a> repository.</p>\n\n<h2 id=""documentation"">Documentation</h2>\n\n<p>For more detailed information on class and methods please refer to the <a href=""http://janpaulus.github.com"">API documentation</a>.</p>\n\n<p>To generate the documentation from the source code type: </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install doxygen\ncd build\nmake doc \n</code></pre></div>\n<h2 id=""run-without-sudo"">Run without sudo</h2>\n\n<p>The youBot Driver needs access to the raw ethernet device. Under Linux a normal user does not have access to the raw ethernet device. You can grand this capability to a program by the tool setcap. To install setcap use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install libcap2-bin\n</code></pre></div>\n<p>To provide a program with raw access to a ethernet device use: (replace the ./YouBot_KeyboardRemoteControl with your program.)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo setcap cap_net_raw+ep ./YouBot_KeyboardRemoteControl\n</code></pre></div>\n<p>This have to be done whenever the executable is created or replaces e.g. after building.</p>\n\n<h2 id=""license"">License</h2>\n\n<p>This software is published under a dual-license: GNU Lesser General Public\nLicense LGPL 2.1 and BSD license. The dual-license implies that users of this\ncode may choose which terms they prefer.</p>\n</div>\n\n            \n          </div>'"
ekf_localization,http://rosindex.github.io/r/ekf_localization/,indigo,ekf_localization,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ekf_localization"">ekf_localization</h1>\n\n<p>A ROS package for mobile robot localization using an extended Kalman Filter</p>\n\n<h2 id=""description"">Description</h2>\n\n<p>This repository contains a ROS package for solving the mobile robot localization problem with an extended Kalman Filter. </p>\n\n<p>In this methodology, the Iterative Closest Point (ICP) algorithm is employed for matching laser scans to a grid-based map. \nThe obtained alignment transformation is directly employed to obtain the residual measurement and covariance matrices.</p>\n\n<p>This implementation employs a landmark-free EKF localization algorithm which relies on the transformation obtained by an ICP scan-matcher (between a known map and the laser measurements) as the residual to perform correction after the prediction step.<br>\nFurthermore, the method uses the well-studied odometry motion model detailed in [Thrun et al. 2005].</p>\n</div>\n\n            \n          </div>'"
linux_peripheral_interfaces,http://rosindex.github.io/r/linux_peripheral_interfaces/,kinetic,"laptop_battery_monitor,libsensors_monitor,linux_peripheral_interfaces","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nao_virtual,http://rosindex.github.io/r/nao_virtual/,"hydro,indigo","nao_control,nao_gazebo_plugin","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nao_simulation"">nao_simulation</h1>\n\n<p>all tools to simulate nao robot</p>\n</div>\n\n            \n          </div>'"
romeo_moveit_config,http://rosindex.github.io/r/romeo_moveit_config/,"hydro,jade,indigo",romeo_moveit_config,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""romeo_moveit_config"">romeo_moveit_config</h1>\n\n<p>This is a MoveIt! config package generated by the MoveIt! wizard. It\nrequires a ROMEO model which you can get from here:</p>\n\n<p><a href=""https://github.com/ros-aldebaran/romeo_robot/tree/master/romeo_description"">https://github.com/ros-aldebaran/romeo_robot/tree/master/romeo_description</a>\nor from the binary package : ros-indigo-romeo-description</p>\n\n<p>The moveit package must be run on a remote computer and not directly on\nyour robot.</p>\n\n<h1 id=""1-compile-the-package"">1 Compile the package</h1>\n\n<p>romeo_moveit_config package doesn\'t need any compilation so running\nrospack profile should be enough</p>\n\n<p>For the dcm packages you need to compile the C++ nodes. In order to\ncompile romeo_dcm packages, you need to set the environment variable\nAL_DIR to the path to naoqiSDK-c++ on your computer.</p>\n\n<p>Then you can run the usual</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">catkin_make\n\n</code></pre></div>\n<p>And your ready to play with your romeo</p>\n\n<h1 id=""2-run-moveit"">2 Run MoveIt</h1>\n\n<h2 id=""without-robot"">Without robot</h2>\n\n<p>You can run this moveit package either unconnected to any robot or\nattached to a robot (real or simulated): For a standalone execution :</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch romeo_moveit_config demo.launch\n\n</code></pre></div>\n<p>Once launching the demo, you should see Romeo in MoveIt! GUI like this:</p>\n\n<p><img src=""https://raw.githubusercontent.com//ros-aldebaran/romeo_moveit_config/master//tuto/moveit_launch.png"" alt=""image"">{width=""100%""}</p>\n\n<h2 id=""on-a-real-romeo"">On a real ROMEO</h2>\n\n<p>To use moveit on a real robot you need to instanciate ros controllers on\nyour Romeo. To do so you need the romeo_dcm packages (in the\nmetapackage romeo_robot :\n<a href=""https://github.com/ros-aldebaran/romeo_robot"">https://github.com/ros-aldebaran/romeo_robot</a>)</p>\n\n<p>To launch it on a real Romeo :</p>\n\n<p>(First, set the NAO_IP environment variable to your Romeo\'s ip.) Modify\nthe bringup configuration file :\nromeo_dcm_bringup/config/romeo_dcm.yaml Set the rosparam ""RobotIP"" to\nyour Romeo\'s IP address</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch romeo_dcm_bringup romeo_dcm_bringup_remote.launch\n\n</code></pre></div>\n<p>Wait until romeo_dcm_bringup node is ready, then run:</p>\n<div class=""highlight""><pre><code class=""language-.sourceCode .bash"" data-lang="".sourceCode .bash"">roslaunch romeo_moveit_config moveit_planner.launch\n\n</code></pre></div>\n<h1 id=""3-use-moveit"">3 Use Moveit:</h1>\n\n<p>RVIZ has been open: you can see that a MotionPlanning plugin has been\nlaunched. First check the box ""Allow approximate IK Solutions"" on the\nbottom of the left column. Then click on the Planning tab.</p>\n\n<p>Select which part of the robot you want to move: In the plugin list on\nthe upper part of the left column, you can select a group under\nMotionPlanning/Planning Request/Planning Group</p>\n\n<p>Now you can define your motion by drag and dropping the interactive\nmarkers. You can compute a trajectory by clicking the \'planning\' button\nOnce the motion is satisfying you can try it on your real robot using\n\'execute\' or \'plan and execute\'.</p>\n\n<p>NOTE: The start state is not updated automatically, you have to go to\n\'Select Start State\' select \'Current\' and click \'Update\'.</p>\n</div>\n\n            \n          </div>'"
grid_map,http://rosindex.github.io/r/grid_map/,"jade,kinetic,indigo","grid_map,grid_map_core,grid_map_cv,grid_map_demos,grid_map_filters,grid_map_loader,grid_map_msgs,grid_map_ros,grid_map_visualization","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""grid-map"">Grid Map</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>This is a C++ library with <a href=""http://www.ros.org"">ROS</a> interface to manage two-dimensional grid maps with multiple data layers. It is designed for mobile robotic mapping to store data such as elevation, variance, color, friction coefficient, foothold quality, surface normal, traversability etc. It is used in the <a href=""https://github.com/ethz-asl/elevation_mapping"">Robot-Centric Elevation Mapping</a> package designed for rough terrain navigation.</p>\n\n<p>Features:</p>\n\n<ul>\n<li>\n<strong>Multi-layered:</strong> Developed for universal 2.5-dimensional grid mapping with support for any number of layers.</li>\n<li>\n<strong>Efficient map re-positioning:</strong> Data storage is implemented as two-dimensional circular buffer. This allows for non-destructive shifting of the map\'s position (e.g. to follow the robot) without copying data in memory.</li>\n<li>\n<strong>Based on Eigen:</strong> Grid map data is stored as <a href=""http://eigen.tuxfamily.org"">Eigen</a> data types. Users can apply available Eigen algorithms directly to the map data for versatile and efficient data manipulation.</li>\n<li>\n<strong>Convenience functions:</strong> Several helper methods allow for convenient and memory safe cell data access. For example, iterator functions for rectangular, circular, polygonal regions and lines are implemented.</li>\n<li>\n<strong>ROS interface:</strong> Grid maps can be directly converted to ROS message types such as PointCloud2, OccupancyGrid, GridCells, and our custom GridMap message.</li>\n<li>\n<strong>OpenCV interface:</strong> Grid maps can be seamlessly converted from and to <a href=""http://opencv.org/"">OpenCV</a> image types to make use of the tools provided by <a href=""http://opencv.org/"">OpenCV</a>.</li>\n<li>\n<strong>Visualizations:</strong> The <em>grid_map_visualization</em> package helps to visualize grid maps in various form in <a href=""http://wiki.ros.org/rviz"">RViz</a>.</li>\n</ul>\n\n<p>The grid map package has been tested with <a href=""http://www.ros.org"">ROS</a> Indigo, Jade (under Ubuntu 14.04) and Kinetic (under Ubuntu 16.04). This is research code, expect that it changes often and any fitness for a particular purpose is disclaimed.</p>\n\n<p>The source code is released under a <a href=""LICENSE"">BSD 3-Clause license</a>.</p>\n\n<p><strong>Author: P\xc3\xa9ter Fankhauser<br>\nMaintainer: P\xc3\xa9ter Fankhauser, <a href=""mailto:pfankhauser@ethz.ch"">pfankhauser@ethz.ch</a><br>\nWith contributions by: Martin Wermelinger, Remo Diethelm, Ralph Kaestner, Elena Stumm, Dominic Jud, Daniel Stonier, Christos Zalidis<br>\nAffiliation: Autonomous Systems Lab, ETH Zurich</strong></p>\n\n<p><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_visualization/doc/point_cloud.jpg"" alt=""Grid map example in rviz""></p>\n\n<h2 id=""publications"">Publications</h2>\n\n<p>If you use this work in an academic context, please cite the following publication(s):</p>\n\n<ul>\n<li>\n<p>P. Fankhauser and M. Hutter,\n<strong>""A Universal Grid Map Library: Implementation and Use Case for Rough Terrain Navigation""</strong>,\nin Robot Operating System (ROS) \xe2\x80\x93 The Complete Reference (Volume 1), A. Koubaa (Ed.), Springer, 2016. (<a href=""http://www.researchgate.net/publication/284415855"">PDF</a>)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">@incollection{Fankhauser2016GridMapLibrary,\n    author = {Fankhauser, P\xc3\xa9ter and Hutter, Marco},\n    booktitle = {Robot Operating System (ROS) \xe2\x80\x93 The Complete Reference (Volume 1)},\n    title = {{A Universal Grid Map Library: Implementation and Use Case for Rough Terrain Navigation}},\n    chapter = {5},\n    editor = {Koubaa, Anis},\n    publisher = {Springer},\n    year = {2016},\n    isbn = {978-3-319-26052-5},\n    doi = {10.1007/978-3-319-26054-9{\\_}5},\n    url = {http://www.springer.com/de/book/9783319260525}\n}\n</code></pre></div>\n</li>\n</ul>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""installation-from-packages"">Installation from Packages</h3>\n\n<p>To install all packages from the grid map library as Debian packages use</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-grid-map\n</code></pre></div>\n<h3 id=""building-from-source"">Building from Source</h3>\n\n<h4 id=""dependencies"">Dependencies</h4>\n\n<p>The <em>grid_map_core</em> package depends only on the linear algebra library <a href=""http://eigen.tuxfamily.org"">Eigen</a>.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install libeigen3-dev\n</code></pre></div>\n<p>The <em>grid_map_cv</em> package depends additionally on <a href=""http://opencv.org/"">OpenCV</a>.</p>\n\n<p>The other packages depend additionally on the <a href=""http://www.ros.org"">ROS</a> standard installation (<em>roscpp</em>, <em>tf</em>, <em>filters</em>, <em>sensor_msgs</em>, <em>nav_msgs</em>, and <em>cv_bridge</em>).</p>\n\n<h4 id=""building"">Building</h4>\n\n<p>To build from source, clone the latest version from this repository into your catkin workspace and compile the package using</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd catkin_ws/src\ngit clone https://github.com/ethz-asl/grid_map.git\ncd ../\ncatkin_make\n</code></pre></div>\n<p>To maximize performance, make sure to build in <em>Release</em> mode. You can specify the build type by setting</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make -DCMAKE_BUILD_TYPE=Release\n</code></pre></div>\n<h3 id=""packages-overview"">Packages Overview</h3>\n\n<p>This repository consists of following packages:</p>\n\n<ul>\n<li>\n<strong><em>grid_map</em></strong> is the meta-package for the grid map library.</li>\n<li>\n<strong><em>grid_map_core</em></strong> implements the algorithms of the grid map library. It provides the <code>GridMap</code> class and several helper classes such as the iterators. This package is implemented without <a href=""http://www.ros.org"">ROS</a> dependencies.</li>\n<li>\n<strong><em>grid_map_ros</em></strong> is the main package for <a href=""http://www.ros.org"">ROS</a> dependent projects using the grid map library. It provides the interfaces to convert the base classes to several <a href=""http://www.ros.org"">ROS</a> message types.</li>\n<li>\n<strong><em>grid_map_cv</em></strong> provides conversions of grid maps from and to <a href=""http://opencv.org/"">OpenCV</a> image types.</li>\n<li>\n<strong><em>grid_map_msgs</em></strong> holds the <a href=""http://www.ros.org"">ROS</a> message and service definitions around the [grid_map_msg/GridMap] message type.</li>\n<li>\n<strong><em>grid_map_visualization</em></strong> contains a node written to convert GridMap messages to other <a href=""http://www.ros.org"">ROS</a> message types for visualization in <a href=""http://wiki.ros.org/rviz"">RViz</a>. The visualization parameters are configurable through <a href=""http://www.ros.org"">ROS</a> parameters.</li>\n<li>\n<strong><em>grid_map_filters</em></strong> builds on the ROS <a href=""http://wiki.ros.org/filters"">filters</a> package to process grid maps as a sequence of filters.</li>\n<li>\n<strong><em>grid_map_demos</em></strong> contains several nodes for demonstration purposes.</li>\n</ul>\n\n<h3 id=""unit-tests"">Unit Tests</h3>\n\n<p>Run the unit tests with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make run_tests_grid_map_core run_tests_grid_map_ros\n</code></pre></div>\n<p>or</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build grid_map --no-deps --verbose --catkin-make-args run_tests\n</code></pre></div>\n<p>if you are using <a href=""http://catkin-tools.readthedocs.org/"">catkin tools</a>.</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<h3 id=""demonstrations"">Demonstrations</h3>\n\n<p>The <em>grid_map_demos</em> package contains several demonstration nodes. Use this code to verify your installation of the grid map packages and to get you started with your own usage of the library.</p>\n\n<ul>\n<li>\n<p><em><a href=""grid_map_demos/src/simple_demo_node.cpp"">simple_demo</a></em> demonstrates a simple example for using the grid map library. This ROS node creates a grid map, adds data to it, and publishes it. To see the result in RViz, execute the command</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch grid_map_demos simple_demo.launch\n</code></pre></div>\n</li>\n<li>\n<p><em><a href=""grid_map_demos/src/tutorial_demo_node.cpp"">tutorial_demo</a></em> is an extended demonstration of the library\'s functionalities. Launch the <em>tutorial_demo</em> with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch grid_map_demos tutorial_demo.launch\n</code></pre></div>\n</li>\n<li>\n<p><em><a href=""grid_map_demos/src/IteratorsDemo.cpp"">iterators_demo</a></em> showcases the usage of the grid map iterators. Launch it with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch grid_map_demos iterators_demo.launch\n</code></pre></div>\n</li>\n<li>\n<p><em><a href=""grid_map_demos/src/ImageToGridmapDemo.cpp"">image_to_gridmap_demo</a></em> demonstrates how to convert data from an <a href=""grid_map_demos/scripts/example_image.png"">image</a> to a grid map. Start the demonstration with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch grid_map_demos image_to_gridmap_demo.launch\n</code></pre></div>\n<p><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_demos/doc/image_to_grid_map_demo_result.png"" alt=""Image to grid map demo result""></p>\n</li>\n<li>\n<p><em><a href=""grid_map_demos/src/opencv_demo_node.cpp"">opencv_demo</a></em> demonstrates map manipulations with help of <a href=""http://opencv.org/"">OpenCV</a> functions. Start the demonstration with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch grid_map_demos opencv_demo.launch\n</code></pre></div>\n<p><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_demos/doc/opencv_demo_result.gif"" alt=""OpenCV demo result""></p>\n</li>\n<li>\n<p><em><a href=""grid_map_demos/src/resolution_change_demo_node.cpp"">resolution_change_demo</a></em> shows how the resolution of a grid map can be changed with help of the <a href=""http://opencv.org/"">OpenCV</a> image scaling methods. The see the results, use</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch grid_map_demos resolution_change_demo.launch\n</code></pre></div>\n</li>\n</ul>\n\n<h3 id=""conventions-amp-definitions"">Conventions &amp; Definitions</h3>\n\n<p><a href=""grid_map_core/doc/grid_map_layers.pdf""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/grid_map_layers.png"" alt=""Grid map layers""></a></p>\n\n<p><a href=""grid_map_core/doc/grid_map_conventions.pdf""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/grid_map_conventions.png"" alt=""Grid map conventions""></a></p>\n\n<h3 id=""iterators"">Iterators</h3>\n\n<p>The grid map library contains various iterators for convenience.</p>\n\n<table>\n<thead>\n<tr>\n<th style=""text-align: center"">Grid map</th>\n<th style=""text-align: center"">Submap</th>\n<th style=""text-align: center"">Circle</th>\n<th style=""text-align: center"">Line</th>\n<th style=""text-align: center"">Polygon</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=""text-align: center""><a href=""grid_map_core/doc/iterators/grid_map_iterator.gif""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/iterators/grid_map_iterator_preview.gif"" alt=""Grid map iterator""></a></td>\n<td style=""text-align: center""><a href=""grid_map_core/doc/iterators/submap_iterator.gif""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/iterators/submap_iterator_preview.gif"" alt=""Submap iterator""></a></td>\n<td style=""text-align: center""><a href=""grid_map_core/doc/iterators/circle_iterator.gif""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/iterators/circle_iterator_preview.gif"" alt=""Circle iterator""></a></td>\n<td style=""text-align: center""><a href=""grid_map_core/doc/iterators/line_iterator.gif""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/iterators/line_iterator_preview.gif"" alt=""Line iterator""></a></td>\n<td style=""text-align: center""><a href=""grid_map_core/doc/iterators/polygon_iterator.gif""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/iterators/polygon_iterator_preview.gif"" alt=""Polygon iterator""></a></td>\n</tr>\n<tr>\n<td style=""text-align: center""><strong>Ellipse</strong></td>\n<td style=""text-align: center""><strong>Spiral</strong></td>\n<td style=""text-align: center""></td>\n<td style=""text-align: center""></td>\n<td style=""text-align: center""></td>\n</tr>\n<tr>\n<td style=""text-align: center""><a href=""grid_map_core/doc/iterators/ellipse_iterator.gif""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/iterators/ellipse_iterator_preview.gif"" alt=""Ellipse iterator""></a></td>\n<td style=""text-align: center""><a href=""grid_map_core/doc/iterators/spiral_iterator.gif""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/iterators/spiral_iterator_preview.gif"" alt=""Spiral iterator""></a></td>\n<td style=""text-align: center""></td>\n<td style=""text-align: center""></td>\n<td style=""text-align: center""></td>\n</tr>\n</tbody>\n</table>\n\n<p>Using the iterator in a <code>for</code> loop is common. For example, iterate over the entire grid map with the <code>GridMapIterator</code> with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">for (grid_map::GridMapIterator iterator(map); !iterator.isPastEnd(); ++iterator) {\n    cout &lt;&lt; ""The value at index "" &lt;&lt; (*iterator).transpose() &lt;&lt; "" is "" &lt;&lt; map.at(""layer"", *iterator) &lt;&lt; endl;\n}\n</code></pre></div>\n<p>The other grid map iterators follow the same form. You can find more examples on how to use the different iterators in the <em><a href=""grid_map_demos/src/IteratorsDemo.cpp"">iterators_demo</a></em> node.</p>\n\n<p>Note: For maximum efficiency when using iterators, it is recommended to locally store direct access to the data layers of the grid map with <code>grid_map::Matrix&amp; data = map[""layer""]</code> outside the <code>for</code> loop:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">grid_map::Matrix&amp; data = map[""layer""];\nfor (GridMapIterator iterator(map); !iterator.isPastEnd(); ++iterator) {\n    const Index index(*iterator);\n    cout &lt;&lt; ""The value at index "" &lt;&lt; index.transpose() &lt;&lt; "" is "" &lt;&lt; data(index(0), index(1)) &lt;&lt; endl;\n}\n</code></pre></div>\n<p>You can find a benchmarking of the performance of the iterators in the <code>iterator_benchmark</code> node of the <code>grid_map_demos</code> package which can be run with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun grid_map_demos iterator_benchmark\n</code></pre></div>\n<p>Beware that while iterators are convenient, it is often the cleanest and most efficient to make use of the built-in <a href=""http://eigen.tuxfamily.org"">Eigen</a> methods. Here are some examples:</p>\n\n<ul>\n<li>\n<p>Setting a constant value to all cells of a layer:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">map[""layer""].setConstant(3.0);\n</code></pre></div>\n</li>\n<li>\n<p>Adding two layers:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">map[""sum""] = map[""layer_1""] + map[""layer_2""];\n</code></pre></div>\n</li>\n<li>\n<p>Scaling a layer:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">map[""layer""] = 2.0 * map[""layer""];\n</code></pre></div>\n</li>\n<li>\n<p>Max. values between two layers:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">map[""max""] = map[""layer_1""].cwiseMax(map[""layer_2""]);\n</code></pre></div>\n</li>\n<li>\n<p>Compute the root mean squared error:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">map.add(""error"", (map.get(""layer_1"") - map.get(""layer_2"")).cwiseAbs());\nunsigned int nCells = map.getSize().prod();\ndouble rootMeanSquaredError = sqrt((map[""error""].array().pow(2).sum()) / nCells);\n</code></pre></div>\n</li>\n</ul>\n\n<h3 id=""changing-the-position-of-the-map"">Changing the Position of the Map</h3>\n\n<p>There are two different methods to change the position of the map:\n* <code>setPosition(...)</code>: Changes the position of the map without changing data stored in the map. This changes the corresponce between the data and the map frame.\n* <code>move(...)</code>: Relocates the grid map such that the corresponce between data and the map frame does not change. Data in the overlapping region before and after the position change remains stored. Data that falls outside of the map at its new position is discarded. Cells that cover previously unknown regions are emptied (set to nan). The data storage is implemented as two-dimensional circular buffer to minimize computational effort.</p>\n\n<table>\n<thead>\n<tr>\n<th style=""text-align: center""><code>setPosition(...)</code></th>\n<th style=""text-align: center""><code>move(...)</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=""text-align: center""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/setposition_method.gif"" alt=""Grid map iterator""></td>\n<td style=""text-align: center""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_core/doc/move_method.gif"" alt=""Submap iterator""></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""nodes"">Nodes</h2>\n\n<h3 id=""grid_map_visualization"">grid_map_visualization</h3>\n\n<p>This node subscribes to a topic of type <a href=""http://docs.ros.org/api/grid_map_msgs/html/msg/GridMap.html"">grid_map_msgs/GridMap</a> and publishes messages that can be visualized in <a href=""http://wiki.ros.org/rviz"">RViz</a>. The published topics of the visualizer can be fully configure with a YAML parameter file. Any number of visualizations with different parameters can be added. An example is <a href=""grid_map_demos/config/tutorial_demo.yaml"">here</a> for the configuration file of the <em>tutorial_demo</em>.</p>\n\n<table>\n<thead>\n<tr>\n<th>Point cloud</th>\n<th>Vectors</th>\n<th>Occupancy grid</th>\n<th>Grid cells</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=""grid_map_visualization/doc/point_cloud.jpg""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_visualization/doc/point_cloud_preview.jpg"" alt=""Point cloud""></a></td>\n<td><a href=""grid_map_visualization/doc/vectors.jpg""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_visualization/doc/vectors_preview.jpg"" alt=""Vectors""></a></td>\n<td><a href=""grid_map_visualization/doc/occupancy_grid.jpg""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_visualization/doc/occupancy_grid_preview.jpg"" alt=""Occupancy grid""></a></td>\n<td><a href=""grid_map_visualization/doc/grid_cells.jpg""><img src=""https://raw.githubusercontent.com//ethz-asl/grid_map/master//grid_map_visualization/doc/grid_cells_preview.jpg"" alt=""Grid cells""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h4 id=""parameters"">Parameters</h4>\n\n<ul>\n<li>\n<p><strong><code>grid_map_topic</code></strong> (string, default: ""/grid_map"")</p>\n\n<p>The name of the grid map topic to be visualized. See below for the description of the visualizers.</p>\n</li>\n</ul>\n\n<h4 id=""subscribed-topics"">Subscribed Topics</h4>\n\n<ul>\n<li>\n<p><strong><code>/grid_map</code></strong> (<a href=""http://docs.ros.org/api/grid_map_msgs/html/msg/GridMap.html"">grid_map_msgs/GridMap</a>)</p>\n\n<p>The grid map to visualize.</p>\n</li>\n</ul>\n\n<h4 id=""published-topics"">Published Topics</h4>\n\n<p>The published topics are configured with the <a href=""grid_map_demos/config/tutorial_demo.yaml"">YAML parameter file</a>. Possible topics are:</p>\n\n<ul>\n<li>\n<p><strong><code>point_cloud</code></strong> (<a href=""http://docs.ros.org/api/sensor_msgs/html/msg/PointCloud2.html"">sensor_msgs/PointCloud2</a>)</p>\n\n<p>Shows the grid map as a point cloud. Select which layer to transform as points with the <code>layer</code> parameter.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">name: elevation\ntype: point_cloud\nparams:\n layer: elevation\n flat: false # optional\n</code></pre></div>\n</li>\n<li>\n<p><strong><code>flat_point_cloud</code></strong> (<a href=""http://docs.ros.org/api/sensor_msgs/html/msg/PointCloud2.html"">sensor_msgs/PointCloud2</a>)</p>\n\n<p>Shows the grid map as a ""flat"" point cloud, i.e. with all points at the same height <em>z</em>. This is convenient to visualize 2d maps or images (or even video streams) in <a href=""http://wiki.ros.org/rviz"">RViz</a> with help of its <code>Color Transformer</code>. The parameter <code>height</code> determines the desired <em>z</em>-position of the flat point cloud.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">name: flat_grid\ntype: flat_point_cloud\nparams:\n height: 0.0\n</code></pre></div>\n<p>Note: In order to omit points in the flat point cloud from empty/invalid cells, specify the layers which should be checked for validity with <code>setBasicLayers(...)</code>.</p>\n</li>\n<li>\n<p><strong><code>vectors</code></strong> (<a href=""http://docs.ros.org/api/visualization_msgs/html/msg/Marker.html"">visualization_msgs/Marker</a>)</p>\n\n<p>Visualizes vector data of the grid map as visual markers. Specify the layers which hold the <em>x</em>-, <em>y</em>-, and <em>z</em>-components of the vectors with the <code>layer_prefix</code> parameter. The parameter <code>position_layer</code> defines the layer to be used as start point of the vectors.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">name: surface_normals\ntype: vectors\nparams:\n layer_prefix: normal_\n position_layer: elevation\n scale: 0.06\n line_width: 0.005\n color: 15600153 # red\n</code></pre></div>\n</li>\n<li>\n<p><strong><code>occupancy_grid</code></strong> (<a href=""http://docs.ros.org/api/nav_msgs/html/msg/OccupancyGrid.html"">nav_msgs/OccupancyGrid</a>)</p>\n\n<p>Visualizes a layer of the grid map as occupancy grid. Specify the layer to be visualized with the <code>layer</code> parameter, and the upper and lower bound with <code>data_min</code> and <code>data_max</code>.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">name: traversability_grid\ntype: occupancy_grid\nparams:\n layer: traversability\n data_min: -0.15\n data_max: 0.15\n</code></pre></div>\n</li>\n<li>\n<p><strong><code>grid_cells</code></strong> (<a href=""http://docs.ros.org/api/nav_msgs/html/msg/GridCells.html"">nav_msgs/GridCells</a>)</p>\n\n<p>Visualizes a layer of the grid map as grid cells. Specify the layer to be visualized with the <code>layer</code> parameter, and the upper and lower bounds with <code>lower_threshold</code> and <code>upper_threshold</code>.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">name: elevation_cells\ntype: grid_cells\nparams:\n layer: elevation\n lower_threshold: -0.08 # optional, default: -inf\n upper_threshold: 0.08 # optional, default: inf\n</code></pre></div>\n</li>\n<li>\n<p><strong><code>region</code></strong> (<a href=""http://docs.ros.org/api/visualization_msgs/html/msg/Marker.html"">visualization_msgs/Marker</a>)</p>\n\n<p>Shows the boundary of the grid map.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">name: map_region\ntype: map_region\nparams:\n color: 3289650\n line_width: 0.003\n</code></pre></div>\n</li>\n</ul>\n\n<p><em>Note: Color values are in RGB form as concatenated integers (for each channel value 0-255). The values can be generated like <a href=""http://www.wolframalpha.com/input/?i=BitOr%5BBitShiftLeft%5Br%2C16%5D%2C+BitShiftLeft%5Bg%2C8%5D%2C+b%5D+where+%7Br%3D0%2C+g%3D255%2C+b%3D0%7D"">this</a> as an example for the color green (red: 0, green: 255, blue: 0).</em></p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<h3 id=""devel-job-status"">Devel Job Status</h3>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Indigo</th>\n<th>Jade</th>\n<th>Kinetic</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>grid_map</td>\n<td><a href=""http://build.ros.org/job/Idev__grid_map__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__grid_map__ubuntu_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jdev__grid_map__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Jdev__grid_map__ubuntu_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Kdev__grid_map__ubuntu_xenial_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Kdev__grid_map__ubuntu_xenial_amd64"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>doc</td>\n<td><a href=""http://build.ros.org/job/Idoc__grid_map__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idoc__grid_map__ubuntu_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jdoc__grid_map__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Jdoc__grid_map__ubuntu_trusty_amd64"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Kdoc__grid_map__ubuntu_xenial_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Kdoc__grid_map__ubuntu_xenial_amd64"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""release-job-status"">Release Job Status</h3>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Indigo</th>\n<th>Jade</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>grid_map</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__grid_map__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__grid_map__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__grid_map__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__grid_map__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>grid_map_core</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__grid_map_core__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__grid_map_core__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__grid_map_core__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__grid_map_core__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>grid_map_ros</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__grid_map_ros__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__grid_map_ros__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__grid_map_ros__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__grid_map_ros__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>grid_map_msgs</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__grid_map_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__grid_map_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__grid_map_msgs__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__grid_map_msgs__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>grid_map_visualization</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__grid_map_visualization__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__grid_map_visualization__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__grid_map_visualization__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__grid_map_visualization__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>grid_map_filters</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__grid_map_filters__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__grid_map_filters__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__grid_map_filters__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__grid_map_filters__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>grid_map_loader</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__grid_map_loader__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__grid_map_loader__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__grid_map_loader__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__grid_map_loader__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>grid_map_demos</td>\n<td><a href=""http://build.ros.org/job/Ibin_uT64__grid_map_demos__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__grid_map_demos__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n<td><a href=""http://build.ros.org/job/Jbin_uT64__grid_map_demos__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__grid_map_demos__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""bugs-amp-feature-requests"">Bugs &amp; Feature Requests</h2>\n\n<p>Please report bugs and request features using the <a href=""https://github.com/ethz-asl/grid_map/issues"">Issue Tracker</a>.</p>\n</div>\n\n            \n          </div>'"
husky,http://rosindex.github.io/r/husky/,indigo,"husky_control,husky_description,husky_msgs,husky_navigation,husky_ur5_moveit_config","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""husky"">husky</h1>\n\n<p>Common ROS packages for the Clearpath Husky, useable for both simulation and\nreal robot operation.</p>\n\n<ul>\n<li>husky_control : Control configuration</li>\n<li>husky_description : Robot description (URDF)</li>\n<li>husky_msgs : Message definitions</li>\n<li>husky_navigation : Navigation configurations and demos</li>\n<li>husky_ur5_moveit_config : MoveIt configuration and demos</li>\n</ul>\n\n<p>For Husky instructions and tutorials, please see <a href=""http://wiki.ros.org/Robots/Husky"">Robots/Husky</a>.</p>\n\n<p>To create a custom Husky description or simulation, please fork <a href=""https://github.com/husky/husky_customization"">husky_customization</a>.</p>\n</div>\n\n            \n          </div>'"
husky_robot,http://rosindex.github.io/r/husky_robot/,indigo,"husky_base,husky_bringup,husky_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""husky_robot"">husky_robot</h1>\n\n<p>Robot ROS packages for the Clearpath Husky, for operating robot hardware.</p>\n\n<ul>\n<li>husky_bringup : Bringup launch files and scripts.</li>\n<li>husky_base : Hardware driver for communicating with the onboard MCU.</li>\n</ul>\n\n<p>For Husky instructions and tutorials, please see <a href=""http://wiki.ros.org/Robots/Husky"">http://wiki.ros.org/Robots/Husky</a></p>\n</div>\n\n            \n          </div>'"
rocon_tools,http://rosindex.github.io/r/rocon_tools/,"hydro,kinetic,indigo","rocon_bubble_icons,rocon_console,rocon_ebnf,rocon_icons,rocon_interactions,rocon_launch,rocon_master_info,rocon_python_comms,rocon_python_redis,rocon_python_utils,rocon_python_wifi,rocon_semantic_version,rocon_tools,rocon_uri","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon_tools"">rocon_tools</h1>\n\n<p>A set of utilities and tools usable beyond rocon.</p>\n</div>\n\n            \n          </div>'"
ros_ethercat,http://rosindex.github.io/r/ros_ethercat/,"hydro,indigo","ros_ethercat,ros_ethercat_eml,ros_ethercat_hardware,ros_ethercat_loop,ros_ethercat_model","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""ros_ethercat"">ros_ethercat</h2>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>This is a reimplementation of the main loop of pr2_ethercat without dependencies on PR2 software. It was mainly developed to be used by Shadow Robot Company. It may be useful to anyone people that has developed ROS software for their own robot and used etherCAT for communication. Most likely such software would be based on the software for Willow Garage\'s PR2. ros_ethercat reuses existing etherCAT drivers (eml package) and instantiates a ros_control controller manager. Part of the software in this repository comes from repositories pr2_mechanism, pr2_robot, pr2_ethercat_drivers. The parts specific to the pr2 robot only have been removed. Therefore, the same license (BSD) has been used.</p>\n\n<p><em>pr2 packages no longer required</em></p>\n\n<ol>\n<li>ethercat_hardware</li>\n<li>pr2_bringup</li>\n<li>pr2_ethercat</li>\n<li>pr2_mechanism</li>\n<li>pr2_controller_interface</li>\n<li>pr2_controller_manager</li>\n<li>pr2_hardware_interface</li>\n<li>pr2_mechanism_diagnostics</li>\n<li>pr2_mechanism_model</li>\n</ol>\n\n<p>You can find the architecture diagram below for a closer look at how this works.</p>\n\n<p><img src=""https://raw.githubusercontent.com//shadow-robot/ros_ethercat/indigo-devel//doc/RosEtherCAT.png"" alt=""Architecture Diagram""></p>\n\n<h2 id=""compatibility"">Compatibility</h2>\n\n<p>In software with previous pr2 dependencies that is switched to this package, the following modifications are required.</p>\n\n<h3 id=""controllers"">Controllers</h3>\n\n<ol>\n<li>\n<code>#include &lt;controller_interface/controller.h&gt;</code><br>\ninstead of<br><code>#include &lt;pr2_controller_interface/controller.h&gt;</code>\n</li>\n<li>\n<code>class MyController : public controller_interface::Controller&lt;ros_ethercat_mechanism_model::RobotState&gt;</code><br>\ninstead of<br><code>class MyController : public pr2_controller_interface::Controller</code>\n</li>\n<li>Controller\'s update function should be declared as <br><code>virtual void update(const ros::Time&amp;, const ros::Duration&amp;)</code><br> and starting function as <br> <code>virtual void starting(const ros::Time&amp; time)</code>,br.</li>\n<li>\n<code>controller_manager</code> and <code>controller_interface</code> should be used as dependencies in <code>CMakeLists.txt</code> and <code>package.xml</code> files instead of <code>pr2_controller_manager</code> and <code>pr2_controller_interface</code> respectively.</li>\n<li>In <code>package.xml</code> file in export tag use <code>&lt;controller_interface plugin=""${prefix}/controller_plugins.xml""/&gt;</code>\n</li>\n<li>In <code>controller_plugins.xml</code> file use <code>base_class_type=""controller_interface::ControllerBase"" /&gt;</code>\n</li>\n</ol>\n\n<h3 id=""launch-files"">launch files</h3>\n\n<ol>\n<li>Replace <code>pr2_ethercat</code> with <code>ros_ethercat_loop</code> in launch files</li>\n<li>Since pr2_controller_manager is no longer used, joint_states or mechanism_statistics are no longer published by it. Joint states are now  published with the join_state_controller from ros_controllers. To start this controller this line need to be added in the main launch file <br> <code>&lt;include file=""$(find ros_ethercat_model)/launch/joint_state_publisher.launch""/&gt;</code>\n</li>\n<li>\n<code>calibrate.py</code> file from pr2_bringup is now included in ros_ethercat_model package and renamed to just <code>calibrate</code> according to ROS convention. Launch files that execute <code>calibrate.py</code> should be modified to find it there.</li>\n</ol>\n\n<h3 id=""transmissions"">transmissions</h3>\n\n<p>Transmissions are still defined in urdf in the pr2 style and inherit from <code>ros_ethercat_model::Transmission</code>. This class will initialize the actuators associated with this transmission.</p>\n\n<h2 id=""new-features"">New features</h2>\n\n<ol>\n<li>ros_ethercat accepts a new argument <code>--period</code> which is the period of main ethercat loop in msec. If not given the default value is 1ms.</li>\n<li>There is a helper bash script called ethercat_grant. This will grant to the ros_ethercat_loop executable the ability to be ran from a normal user without root privileges. E.g. of use<br><code>rosrun ros_ethercat_loop ethercat_grant</code>\n</li>\n</ol>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""ros_ethercat"">ros_ethercat</h2>\n\n<p>This is a reimplementation of the main loop of pr2_ethercat without dependencies on PR2 software. It was mainly developed to be used by Shadow Robot Company. It may be useful to anyone people that has developed ROS software for their own robot and used EtherCAT for communication to hardware. Most likely, such software would be based on the software for Willow Garage\'s PR2. ros_ethercat reuses existing EtherCAT drivers (eml package) and instantiates a ros_control controller manager. Part of the software in this repository comes from repositories pr2_mechanism, pr2_robot, pr2_ethercat_drivers. Therefore, the same license (BSD) has been used.</p>\n\n<p><em>pr2 packages no longer required</em></p>\n\n<ol>\n<li>ethercat_hardware</li>\n<li>pr2_bringup</li>\n<li>pr2_ethercat</li>\n<li>pr2_mechanism</li>\n<li>pr2_controller_interface</li>\n<li>pr2_controller_manager</li>\n<li>pr2_hardware_interface</li>\n<li>pr2_mechanism_diagnostics</li>\n<li>pr2_mechanism_model</li>\n</ol>\n\n<p><strong>Compatibility</strong></p>\n\n<p>The following modifications are required in software with previous pr2 dependencies that is switched to this package.</p>\n\n<p><em>Controllers</em></p>\n\n<ol>\n<li>\n<code>#include &lt;controller_interface/controller.h&gt;</code><br>\ninstead of<br><code>#include &lt;pr2_controller_interface/controller.h&gt;</code>\n</li>\n<li>\n<code>class MyController : public controller_interface::Controller&lt;ros_ethercat_mechanism_model::RobotState&gt;</code><br>\ninstead of<br><code>class MyController : public pr2_controller_interface::Controller</code>\n</li>\n<li>Controller\'s update function should be declared as <br><code>virtual void update(const ros::Time&amp;, const ros::Duration&amp;)</code><br> and starting function as <br> <code>virtual void starting(const ros::Time&amp; time)</code><br>\n</li>\n<li>\n<code>controller_manager</code> and <code>controller_interface</code> should be used as dependencies in <code>CMakeLists.txt</code> and <code>package.xml</code> files instead of <code>pr2_controller_manager</code> and <code>pr2_controller_interface</code> respectively.</li>\n<li>In <code>package.xml</code> file in export tag use <code>&lt;controller_interface plugin=""${prefix}/controller_plugins.xml""/&gt;</code> </li>\n<li>In <code>controller_plugins.xml</code> file use <code>base_class_type=""controller_interface::ControllerBase"" /&gt;</code>\n</li>\n</ol>\n\n<p><em>launch files</em></p>\n\n<ol>\n<li>Replace <code>pr2_ethercat</code> with <code>ros_ethercat_loop</code> in launch files</li>\n<li>Since pr2_controller_manager is no longer used, joint_states or mechanism_statistics are no longer published by it. Joint states are now  published with the join_state_controller from ros_controllers. To start this controller this line need to be added in the main launch file <br> <code>&lt;include file=""$(find ros_ethercat_model)/launch/joint_state_publisher.launch""/&gt;</code><br> mechanism_statistics are now published by the  ros_ethercat_model package.</li>\n<li>\n<code>calibrate.py</code> file from pr2_bringup is now included in ros_ethercat_model package. Launch files that execute <code>calibrate.py</code> should be modified to find it there.</li>\n</ol>\n\n<p><em>transmissions</em></p>\n\n<p>Transmissions are defined in urdf files and inherit from <code>ros_ethercat_model::Transmission</code>. This class will initialize the actuators associated with this transmission.</p>\n\n<p><strong>New features</strong>\n 1. ros_ethercat accepts a new argument <code>--period</code> which is the period of main ethercat loop in msec. If not given the default value is 1ms.\n 2. There is a helper bash script called ros_grant. This will grant to the ros_ethercat_loop executable the ability to be ran from a normal user without root privileges. E.g. of use<br><code>rosrun ros_ethercat_loop ros_grant</code></p>\n</div>\n\n            \n          </div>'"
find_object_2d,http://rosindex.github.io/r/find_object_2d/,kinetic,find_object_2d,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""find-object-standalone"">find-object (standalone) <a href=""https://travis-ci.org/introlab/find-object""><img src=""https://travis-ci.org/introlab/find-object.svg?branch=master"" alt=""Build Status""></a>\n</h2>\n\n<p>Find-Object project, visit the <a href=""http://introlab.github.io/find-object/"">home page</a> for more information.</p>\n\n<h2 id=""find_object_2d-ros-package"">find_object_2d (ROS package)</h2>\n\n<h3 id=""install"">Install</h3>\n\n<p>Binaries:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""c""># ROS Jade:</span>\n <span class=""nv"">$ </span>sudo apt-get install ros-jade-find-object-2d\n<span class=""c""># ROS Indigo:</span>\n <span class=""nv"">$ </span>sudo apt-get install ros-indigo-find-object-2d\n<span class=""c""># ROS Hydro:</span>\n <span class=""nv"">$ </span>sudo apt-get install ros-hydro-find-object-2d\n\n</code></pre></div>\n<p>Source:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""c""># Install ROS Groovy/Hydro/Indigo/Jade (catkin build):</span>\n <span class=""nv"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n <span class=""nv"">$ </span>git clone https://github.com/introlab/find-object.git src/find_object_2d\n <span class=""nv"">$ </span>catkin_make\n\n<span class=""c""># Install ROS Fuerte (in a directory of your ""ROS_PACKAGE_PATH""):</span>\n <span class=""nv"">$ </span>svn checkout -r176 http://find-object.googlecode.com/svn/trunk/ros-pkg/find_object_2d\n <span class=""nv"">$ </span>rosmake find_object_2d\n\n</code></pre></div>\n<h3 id=""run"">Run</h3>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""> <span class=""nv"">$ </span>roscore &amp;\n <span class=""c""># Launch your preferred usb camera driver</span>\n <span class=""nv"">$ </span>rosrun uvc_camera uvc_camera_node &amp;\n <span class=""nv"">$ </span>rosrun find_object_2d find_object_2d image:<span class=""o"">=</span>image_raw\n\n</code></pre></div>\n<p>See <a href=""http://wiki.ros.org/find_object_2d"">find_object_2d</a> for more information.</p>\n</div>\n\n            \n          </div>'"
squirrel_common,http://rosindex.github.io/r/squirrel_common/,"hydro,indigo","robotino_msgs,squirrel_3d_mapping_msgs,squirrel_common,squirrel_hri_msgs,squirrel_kclhand_msgs,squirrel_localizer_msgs,squirrel_manipulation_msgs,squirrel_mhand_msgs,squirrel_navigation_msgs,squirrel_object_perception_msgs,squirrel_person_tracker_msgs,squirrel_planning_knowledge_msgs,squirrel_prediction_msgs,squirrel_rgbd_mapping_msgs,squirrel_sketch_interface_msgs,squirrel_speech_msgs,squirrel_waypoint_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""squirrel_common"">squirrel_common</h1>\n\n<p>Repository for message, service and action related SQUIRREL packages.</p>\n\n<h1 id=""action-template"">Action template</h1>\n\n<p>For the sake of visualisation action messages should follow the following template:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># goal definition\n---\n# result definition\n---\n# feedback definition\nstring current_phase\nstring current_status\nint32 percent_completed\n\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""squirrel_common"">squirrel_common</h1>\n\n<p>Repository for message, service and action related SQUIRREL packages.</p>\n\n<h1 id=""compiling-the-repository"">Compiling the Repository</h1>\n\n<p>Compiling the Robotino driver requires the addition of a Debian repository.\nPlease add the following line to the file /etc/apt/sources.list:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">deb http://doc.openrobotino.org/download/packages/amd64 ./\n\n</code></pre></div>\n<h1 id=""action-template"">Action template</h1>\n\n<p>For the sake of visualisation action messages should follow the following template:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># goal definition\n---\n# result definition\n---\n# feedback definition\nstring current_phase\nstring current_status\nint32 percent_completed\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
ur_modern_driver,http://rosindex.github.io/r/ur_modern_driver/,indigo,ur_modern_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ur_modern_driver"">ur_modern_driver</h1>\n\n<p>A new driver for the UR3/UR5/UR10 robot arms from Universal Robots. It is designed to replace the old driver transparently, while solving some issues, improving usability as well as enabling compatibility  of ros_control. </p>\n\n<h2 id=""improvements"">Improvements</h2>\n\n<ul>\n<li><p>A script is only running on the robot while a trajectory is actually executing. This means that the teach pendant can be used to move the robot around while the driver is connected.</p></li>\n<li>\n<p>The driver exposes the same functionality as the previous ur_driver:</p>\n\n<ul>\n<li>Action interface on <em>/follow_joint_trajectory</em> for seamless integration with MoveIt</li>\n<li>Publishes robot joint state on <em>/joint_states</em>\n</li>\n<li>Publishes TCP force on <em>/wrench</em>\n</li>\n<li>Publishes IO state on <em>/ur_driver/io_states</em> (Note that the string <em>/ur_driver</em> has been prepended compared to the old driver)</li>\n<li>Service call to set outputs and payload - Again,  the string <em>/ur_driver</em> has been prepended compared to the old driver (Note: I am not sure if setting the payload actually works, as the robot GUI does not update. This is also true for the old ur_driver  )</li>\n</ul>\n</li>\n<li>\n<p>Besides this, the driver subscribes to two new topics:</p>\n\n<ul>\n<li>\n<em>/ur_driver/URScript</em> : Takes messages of type <em>std_msgs/String</em> and directly forwards it to the robot. Note that no control is done on the input, so use at your own risk! Inteded for sending movel/movej commands directly to the robot, conveyor tracking and the like.</li>\n<li>\n<em>/joint_speed</em> : Takes messages of type trajectory_msgs/JointTrajectory. Parses the first JointTracetoryPoint and sends the specified joint speeds and accelerations to the robot. This interface is intended for doing visual servoing and other kind of control that requires speed control rather than position control of the robot. Remember to set values for all 6 joints. Ignores the field joint_names, so set the values in the correct order.</li>\n</ul>\n</li>\n<li>\n<p>Added support for ros_control. </p>\n\n<ul>\n<li>As ros_control wants to have control over the robot at all times, ros_control compatability is set via a parameter at launch-time. </li>\n<li>With ros_control active, the driver doesn\'t open the action_lib interface nor publish joint_states or wrench msgs. This is handled by ros_control instead.</li>\n<li>Currently two controllers are available, both controlling the joint position of the robot, useable for trajectroy execution</li>\n<li>The velocity based controller sends joint speed commands to the robot, using the speej command</li>\n<li>The position based controller send joint position commands to the robot, using the servoj command</li>\n<li>I have so far only used the velocity based controller, but which one is optimal depends on the application.</li>\n<li>As ros_control continuesly controls the robot, using the teach pendant while a controller is running will cause the controller <strong>on the robot</strong> to crash, as it obviously can\'t handle conflicting control input from two sources. Thus be sure to stop the running controller <strong>before</strong> moving the robot via the teach pendant:</li>\n<li>A list of the loaded and running controllers can be found by a call to the controller_manager \n<code>rosservice call /controller_manager/list_controllers {} \n</code>\n* The running position trajectory controller can be stopped with a call to<br>\n<code>rosservice call /universal_robot/controller_manager/switch_controller ""start_controllers: - \'\' stop_controllers: - \'pos_based_pos_traj_controller\' strictness: 1"" \n</code> (Remember you can use tab-completion for this)</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>Just clone the repository into your catkin working directory and make it with \n<code>catkin_make\n</code>.</p>\n\n<p>Note that this package depends on ur_msgs, hardware_interface, and controller_manager so it cannot directly be used with ROS versions prior to hydro.</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>The driver is designed to be a drop-in replacement of the ur_driver package. It <em>won\'t</em> overwrite your current driver though, so you can use and test this package without risking to break your current setup.</p>\n\n<p>If you want to test it in your current setup, just use the modified launch files included in this package instead of those in ur_bringup. Everything else should work as usual.</p>\n\n<hr>\n\n<p>If you would like to use the ros_control-based approach, use the launch files urXX_ros_control.launch, where XX is \'5\' or \'10\' depending on your robot.</p>\n\n<p>The driver currently supports two position trajectory controllers; a position based and a velocity based. They are both loaded via the launch file, but only one of them can be running at the same time.\nYou can switch controller by calling the appropriate service:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /universal_robot/controller_manager/switch_controller ""start_controllers:\n- \'velocity_based_position_trajectory_controller\'\nstop_controllers:\n- \'position_based_position_trajectory_controller\'\nstrictness: 1""\n\n</code></pre></div>\n<p>Be sure to stop the currently running controller <strong>either before or in the same call</strong> as you start a new one, otherwise it will fail.</p>\n\n<p>The position based controller <em>should</em> stay closer to the commanded path, while the velocity based react faster (trajectory execution start within 50-70 ms, while it is in the 150-180ms range for the position_based. Usage without ros_control as well as the old driver is also in the 170ms range, as mentioned at my lightning talk @ ROSCon 2013).</p>\n\n<p><strong>Note</strong> that the PID values are not optimally tweaked as of this moment.</p>\n\n<p>To use ros_control together with MoveIt, be sure to add the desired controller to the \n<code>controllers.yaml\n</code> in the urXX_moveit_config/config folder. Add the following </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">controller_list:\n - name: vel_based_pos_traj_controller #or pos_based_pos_traj_controller\n   action_ns: follow_joint_trajectory\n   type: FollowJointTrajectory\n   default: true\n   joints:\n      - shoulder_pan_joint\n      - shoulder_lift_joint\n      - elbow_joint\n      - wrist_1_joint\n      - wrist_2_joint\n      - wrist_3_joint\n\n</code></pre></div>\n<h2 id=""using-the-tool0_controller-frame"">Using the tool0_controller frame</h2>\n\n<p>Each robot from UR is calibrated individually, so there is a small error (in the order of millimeters) between the end-effector reported by the URDF models in <a href=""https://github.com/ros-industrial/universal_robot/tree/indigo-devel/ur_description"">https://github.com/ros-industrial/universal_robot/tree/indigo-devel/ur_description</a> and\nthe end-effector as reported by the controller itself.</p>\n\n<p>This driver broadcasts a transformation between the base link and the end-effector as reported by the UR. The default frame names are: <em>base</em> and <em>tool0_controller</em>. </p>\n\n<p>To use the <em>tool0_controller</em> frame in a URDF, there needs to be a link with that name connected to <em>base</em>. For example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;!-- Connect tool0_controller to base using floating joint --&gt;\n&lt;link name=""tool0_controller""/&gt;\n&lt;joint name=""base-tool0_controller_floating_joint"" type=""floating""&gt;\n  &lt;origin xyz=""0 0 0"" rpy=""0 0 0""/&gt;\n  &lt;parent link=base""/&gt;\n  &lt;child link=""tool0_controller""/&gt;\n&lt;/joint&gt;\n\n</code></pre></div>\n<p>Now, the actual transform between <em>base</em> and <em>tool0_controller</em> will not be published by the <em>robot_state_publisher</em> but will be taken from this driver via <em>/tf</em>.</p>\n\n<p>NOTE: You need an up-to-date version of <em>robot_state_publisher</em> that is able to deal with floating joints, see: <a href=""https://github.com/ros/robot_state_publisher/pull/32"">https://github.com/ros/robot_state_publisher/pull/32</a></p>\n\n<h2 id=""compatability"">Compatability</h2>\n\n<p>Should be compatible with all robots and control boxes with the newest firmware.</p>\n\n<h3 id=""tested-with"">Tested with:</h3>\n\n<p>*Real UR10 with CB2 running 1.8.14035</p>\n\n<p>*Real UR5 with CB2 running 1.8.14035</p>\n\n<p>*Simulated UR3 running 3.1.18024</p>\n\n<p>*Simulated UR5 running 3.0.16471</p>\n\n<p>*Simulated UR5 running 1.8.16941</p>\n\n<p>*Simulated UR5 running 1.7.10857</p>\n\n<p>*Simulated UR5 running 1.6.08725</p>\n\n<h1 id=""credits"">Credits</h1>\n\n<p>Please cite the following report if using this driver</p>\n\n<p>@techreport{andersen2015optimizing, \n  title = {Optimizing the Universal Robots ROS driver.}, \n  institution = {Technical University of Denmark, Department of Electrical Engineering}, \n  author = {Andersen, Thomas Timm}, \n  year = {2015}, \n  url = {<a href=""http://orbit.dtu.dk/en/publications/optimizing-the-universal-robots-ros-driver(20dde139-7e87-4552-8658-dbf2cdaab24b).html"">http://orbit.dtu.dk/en/publications/optimizing-the-universal-robots-ros-driver(20dde139-7e87-4552-8658-dbf2cdaab24b).html</a>} \n  }</p>\n\n<p>The report can be downloaded from <a href=""http://orbit.dtu.dk/en/publications/optimizing-the-universal-robots-ros-driver(20dde139-7e87-4552-8658-dbf2cdaab24b).html"">http://orbit.dtu.dk/en/publications/optimizing-the-universal-robots-ros-driver(20dde139-7e87-4552-8658-dbf2cdaab24b).html</a></p>\n</div>\n\n            \n          </div>'"
openni_camera,http://rosindex.github.io/r/openni_camera/,"hydro,fuerte,groovy,kinetic,jade,indigo",openni_camera,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
openni_launch,http://rosindex.github.io/r/openni_launch/,"hydro,fuerte,groovy,kinetic,jade,indigo",openni_launch,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p>The <a href=""http://wiki.ros.org/openni_launch"">openni_launch</a> package contains\nlaunch files for using OpenNI-compliant devices such as the Microsoft\nKinect in <a href=""http://wiki.ros.org/"">ROS</a>. It creates a nodelet graph to\ntransform raw data from the device driver into point clouds, disparity\nimages, and other products suitable for processing and visualization.</p>\n\n<p>See also: <a href=""http://wiki.ros.org/rgbd_launch"">rgbd_launch</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pysdf,http://rosindex.github.io/r/pysdf/,"hydro,indigo",pysdf,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
perception_pcl,http://rosindex.github.io/r/perception_pcl/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo","pcl_ros,perception_pcl,pointcloud_to_laserscan,flann,pcl,cminpack","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rgbd_launch,http://rosindex.github.io/r/rgbd_launch/,"hydro,jade,kinetic,indigo",rgbd_launch,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kobuki_msgs,http://rosindex.github.io/r/kobuki_msgs/,"hydro,fuerte,groovy,kinetic,indigo",kobuki_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kobuki_msgs"">kobuki_msgs</h1>\n</div>\n\n            \n          </div>'"
rocon_msgs,http://rosindex.github.io/r/rocon_msgs/,"hydro,fuerte,groovy,kinetic,indigo","concert_msgs,concert_service_msgs,concert_workflow_engine_msgs,gateway_msgs,rocon_app_manager_msgs,rocon_device_msgs,rocon_interaction_msgs,rocon_msgs,rocon_service_pair_msgs,rocon_std_msgs,rocon_tutorial_msgs,scheduler_msgs,appmanager_msgs,demo_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
sr_config,http://rosindex.github.io/r/sr_config/,"hydro,fuerte,electric,groovy,indigo","sr_config,sr_cyberglove_config,sr_ethercat_hand_config,sr_remote_warehouse","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""shadow-robot-hand-config"">Shadow Robot Hand Config</h1>\n\n<p>Contains the customer specific configuration for the Shadow Robot Hand.</p>\n\n<ul>\n<li>\n<a href=""sr_ethercat_hand_config"">Hand Config</a> - Contains the configuration files for a specific hand/customer installation.</li>\n<li>\n<a href=""sr_cyberglove_config"">CyberGlove Config</a> - Hand specific configuration files for combining the Shadow Robot Hand with the CyberGlove.</li>\n<li>\n<a href=""sr_multi_camera_config"">Multi Camera Config</a> - Package for using <a href=""http://wiki.ros.org/industrial_extrinsic_cal"">industrial_extrinsic_calibration</a> to set up a multi-camera workspace.</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
smart_battery_msgs,http://rosindex.github.io/r/smart_battery_msgs/,"hydro,jade,indigo",smart_battery_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""smart_battery_msgs"">smart_battery_msgs</h2>\n\n<p>Wiki page: <a href=""http://wiki.ros.org/smart_battery_msgs"">smart_battery_msgs</a></p>\n\n<p>This package is deprecated as of Kinetic please use the <a href=""http://wiki.ros.org/sensor_msgs"">sensor_msgs</a>/<a href=""http://docs.ros.org/api/sensor_msgs/html/msg/BatteryState.html"">BatteryState</a> message instead.</p>\n</div>\n\n            \n          </div>'"
evarobot_simulator,http://rosindex.github.io/r/evarobot_simulator/,"jade,indigo","evarobot_gazebo,evarobot_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""evarobot_simulator"">evarobot_simulator</h1>\n\n<p>Simulator ROS packages for the evarobot.\n - evarobot_gazebo : Gazebo plugins and launch files of evarobot.\nFor Evarobot instructions and tutorials, please see <a href=""http://wiki.ros.org/Robots/evarobot"">http://wiki.ros.org/Robots/evarobot</a></p>\n</div>\n\n            \n          </div>'"
evapc_ros,http://rosindex.github.io/r/evapc_ros/,"jade,indigo","evapc_ros,evapc_start,evarobot_competition,evarobot_description,evarobot_diagnostics,evarobot_navigation,evarobot_pose_ekf,evarobot_slam,evarobot_state_publisher,evarobot_viz","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""evapc-ros"">evapc ros</h1>\n\n<p>Common ROS packages for the Evarobot, useable for both simulation and real robot operation.\n - evapc_start :\n - evarobot_description : \n - evarobot_diagnostics :\n - evarobot_navigation :\n - evarobot_pose_ekf :\n - evarobot_slam :\n - evarobot_state_publisher :\nFor Evarobot instructions and tutorials, please see <a href=""http://wiki.ros.org/Robots/evarobot"">http://wiki.ros.org/Robots/evarobot</a></p>\n</div>\n\n            \n          </div>'"
im_msgs,http://rosindex.github.io/r/im_msgs/,"jade,indigo",im_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""im_msgs"">im_msgs</h1>\n</div>\n\n            \n          </div>'"
fzi_icl_core,http://rosindex.github.io/r/fzi_icl_core/,"jade,kinetic,indigo",fzi_icl_core,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kobuki_soft,http://rosindex.github.io/r/kobuki_soft/,"hydro,indigo","kobuki_soft,kobuki_softapps,kobuki_softnode","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kobuki-soft"">Kobuki Soft</h1>\n\n<p><img src=""http://kobuki.yujinrobot.com/files/cache/3e02b571192eb6f4ea15e3ad52419cd3.png"" alt=""Kobuki Logo""></p>\n\n<p>Soft version of kobuki. \nThe kobuki stack consists the C++ driver for communicating with <a href=""http:/kobuki.yujinrobot.com"">iClebo Kobuki</a> and a wrapper for <a href=""http://www.ros.org"">ROS</a>.</p>\n\n<h3 id=""documentation"">Documentation</h3>\n\n<ul>\n<li>\n<a href=""http://kobuki.yujinrobot.com"">Official Web Page</a> - home page, sales, specifications and hardware howto.</li>\n<li>\n<a href=""http://yujinrobot.github.com/kobuki/doxygen/index.html"">Protocol, Usage and Api Documentation</a> - in doxygen.</li>\n<li>\n<a href=""http://www.ros.org/wiki/kobuki"">Ros Usage and Tutorials</a> - on the roswiki.</li>\n<li>\n<a href=""http://www.ros.org/wiki/Robots/TurtleBot"">Turtlebot Reference Platform</a> - kobuki has been designed to meet the requirements of <a href=""http://www.ros.org/reps/rep-0119.html"">ROS REP #119</a> to support turtlebot.</li>\n</ul>\n</div>\n\n            \n          </div>'"
teleop_twist_joy,http://rosindex.github.io/r/teleop_twist_joy/,"jade,indigo",teleop_twist_joy,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teleop_twist_joy"">teleop_twist_joy <a href=""https://travis-ci.org/ros-teleop/teleop_twist_joy""><img src=""https://travis-ci.org/ros-teleop/teleop_twist_joy.svg?branch=indigo-devel"" alt=""Build Status""></a>\n</h1>\n\n<p>Simple joystick teleop for twist robots</p>\n</div>\n\n            \n          </div>'"
vrpn_client_ros,http://rosindex.github.io/r/vrpn_client_ros/,"jade,indigo",vrpn_client_ros,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
object_recognition_reconstruction,http://rosindex.github.io/r/object_recognition_reconstruction/,"hydro,groovy,kinetic,jade,indigo",object_recognition_reconstruction,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cob_people_perception,http://rosindex.github.io/r/cob_people_perception/,"hydro,fuerte,electric,groovy,indigo","cob_leg_detection,cob_openni2_tracker,cob_people_detection,cob_people_perception,cob_people_tracking_filter,libnite2,cob_people_detection_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travic-CI: <a href=""https://travis-ci.org/ipa320/cob_people_perception""><img src=""https://travis-ci.org/ipa320/cob_people_perception.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p>Packages for people detection and identification with a Kinect.</p>\n\n<p>Please also have a look at our more detailed documentation at <a href=""http://wiki.ros.org/cob_people_detection"">http://wiki.ros.org/cob_people_detection</a> .</p>\n\n<h2 id=""quick-start"">Quick Start</h2>\n\n<p>see cob_people_detection/readme</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""build-procedure"">Build Procedure</h1>\n\n<p>Download the source for the dependency\n<code>git clone https://github.com/ipa320/cob_perception_common.git</code>\nDowload the source for this code\n<code>git clone https://github.com/ipa320/cob_people_perception.git</code></p>\n\n<p>Add the paths to these files into your <code>~/.bashrc</code> so that ROS knows that they exist. For example, if you cloned the file into your home directory, you would add the following lines to your <code>~/.bashrc</code>. Make sure it\'s after the <code>source</code> declaration you made when you installed ROS:\n<br><code>export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:$HOME/cob_perception_common</code>\n<br><code>export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:$HOME/cob_people_perception</code></p>\n\n<p>At this point your going to have to update your <code>~/.bashrc</code> either by closing your current terminal and opening a new one or using the command <code>bash --login</code></p>\n\n<p>Finally, go to the <code>cob_people_detection</code> directory by executing the command\n<code>roscd cob_people_detection</code>\nand build the package and all of its dependencies by typing\n<code>rosmake</code>. </p>\n\n<p>If you cannot execute <code>roscd</code> then you probably did the step of adding the files to your <code>~/.bashrc</code> incorrectly. If you get an error while trying to run <code>rosmake</code> about not having sufficient permissions to make the <code>build</code> directory, then switch to the root profile by executing <code>sudo -s</code> and the try running <code>rosmake</code> again.</p>\n\n<h1 id=""to-run"">To Run</h1>\n\n<p>Please see the <a href=""http://wiki.ros.org/cob_people_detection"">wiki</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Packages for people detection and identification with a Kinect.\n\nPlease also have a look at our more detailed documentation at http://wiki.ros.org/cob_people_detection .\n\nQuick Start\n-----------\nsee cob_people_detection/readme\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
gl_dependency,http://rosindex.github.io/r/gl_dependency/,"jade,kinetic,indigo",gl_dependency,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
geneus,http://rosindex.github.io/r/geneus/,"hydro,jade,kinetic,indigo",geneus,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""geneus"">geneus <a href=""https://travis-ci.org/jsk-ros-pkg/geneus""><img src=""https://travis-ci.org/jsk-ros-pkg/geneus.svg?branch=master"" alt=""Build Status""></a>\n</h1>\n\n<p><a href=""http://www.ros.org/debbuild/hydro.html?q=geneus"">hydro build status</a></p>\n\n<p><a href=""http://www.ros.org/debbuild/indigo.html?q=geneus"">indigo build status</a></p>\n\n<p><a href=""http://www.ros.org/debbuild/jade.html?q=geneus"">jade build status</a></p>\n</div>\n\n            \n          </div>'"
object_recognition_tod,http://rosindex.github.io/r/object_recognition_tod/,"hydro,groovy,kinetic,jade,indigo",object_recognition_tod,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This project contains the Textured Object Detection work that is meant to be used in the\nrecognition_kitchen.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
object_recognition_transparent_objects,http://rosindex.github.io/r/object_recognition_transparent_objects/,"hydro,groovy,kinetic,jade,indigo",object_recognition_transparent_objects,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""transparent-objects"">Transparent objects</h1>\n\n<p>This module enables recognition and pose estimation of transparent\nobjects. See the References_ for details of the algorithm.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>The module is a part of the Recognition Kitchen so all you need to do is\nto install the Kitchen. See <a href=""http://ecto.willowgarage.com/recognition/"">http://ecto.willowgarage.com/recognition/</a>\nfor installation instructions.</p>\n\n<h2 id=""using"">Using</h2>\n\n<p>For a sample how to use the algorithm see the <code>sample/sample.cpp</code> file.\nThis sample is compiled into the <code>bin</code> directory. You can run it by\npassing the path to the <code>sample</code> directory as the command line\nparameter, for example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">./bin/sample ../or-transparent-objects/sample/\n</code></pre></div>\n<h2 id=""getting-help"">Getting help</h2>\n\n<p>Feel free to contact maintainers if you have any questions or comments.</p>\n\n<h2 id=""references"">References</h2>\n\n<p>Ilya Lysenkov, Victor Eruhimov, and Gary Bradski, ""<a href=""http://www.roboticsproceedings.org/rss08/p35.html"">Recognition and Pose\nEstimation of Rigid Transparent Objects with a Kinect\nSensor</a>,"" 2013\nRobotics: Science and Systems Conference (RSS), 2013.</p>\n\n<p>Ilya Lysenkov, and Vincent Rabaud, ""Pose Estimation of Rigid Transparent\nObjects in Transparent Clutter"", 2013 IEEE International Conference on\nRobotics and Automation (ICRA), 2013.</p>\n</div>\n\n            \n          </div>'"
message_generation,http://rosindex.github.io/r/message_generation/,"hydro,fuerte,groovy,kinetic,jade,indigo",message_generation,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
drc_hubo,http://rosindex.github.io/r/drc_hubo/,"jade,indigo","drc_hubo,drc_navi,drc_plugin,drc_podo_connector,drc_slam","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hector_visualization,http://rosindex.github.io/r/hector_visualization/,"hydro,fuerte,groovy,jade,indigo","hector_barrel_detection_nodelet,hector_barrel_geotiff_plugin,hector_co2_detection_plugin,hector_co2_processing,hector_rqt_plugins,hector_rviz_plugins,hector_stair_detection,hector_stair_detection_msgs,hector_veil_geotiff_plugin,rqt_video_playback,tracker_base_ui","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mongodb_store,http://rosindex.github.io/r/mongodb_store/,"hydro,jade,groovy,indigo","mongodb_log,mongodb_store,mongodb_store_msgs,log_extractor,ros_datacentre,ros_datacentre_cpp_client,ros_datacentre_msgs,strands_diagnostics","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_datacentre"">ros_datacentre</h1>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mongodb_store"">mongodb_store</h1>\n\n<p>This package wraps up MongoDB database server in ROS, allowing it to be used to store configuration parameters.</p>\n\n<p>See <code>mongodb_store/README.md</code> for further details</p>\n</div>\n\n            \n          </div>'"
metapackages,http://rosindex.github.io/r/metapackages/,"hydro,jade,kinetic,indigo","desktop,desktop_full,perception,robot,ros_base,ros_core,simulators,viz,mobile,ros_full","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jsk_3rdparty,http://rosindex.github.io/r/jsk_3rdparty/,"hydro,electric,diamondback,jade,indigo","assimp_devel,downward,ff,ffha,julius,libcmt,libsiftfast,mini_maxwell,nlopt,voice_text,bayesian_belief_networks,jsk_3rdparty,collada_urdf_jsk_patch,laser_filters_jsk_patch,opt_camera,pgm_learner,rospatlite,rosping,rostwitter,aques_talk,crlibm,jtalk,image_view2,multi_map_server,pr2_teleop_general_jsk_patch","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
fulanghua_navigation,http://rosindex.github.io/r/fulanghua_navigation/,indigo,"fulanghua_ekf_2d,fulanghua_evaluator,fulanghua_navigation,fulanghua_srvs,fulanghua_static_path_publisher,fulanghua_waypoints_nav","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fulanghua_navigation"">fulanghua_navigation <a href=""https://travis-ci.org/DaikiMaekawa/fulanghua_navigation""><img src=""https://travis-ci.org/DaikiMaekawa/fulanghua_navigation.svg?branch=indigo-devel"" alt=""Build Status""></a>\n</h1>\n\n<p><img src=""https://raw.githubusercontent.com//DaikiMaekawa/fulanghua_navigation/indigo-devel//docs/fulanghua_icon.jpg"" alt=""""></p>\n\n<h2 id=""about"">About</h2>\n\n<p>fulanghua_navigation provides mobile robot navigation tools on ros.</p>\n\n<h3 id=""waypoints-navigation""><a href=""fulanghua_waypoints_nav/"">Waypoints Navigation</a></h3>\n\n<h3 id=""static-path-publisher""><a href=""fulanghua_static_path_publisher/"">Static Path Publisher</a></h3>\n\n<p><img src=""https://raw.githubusercontent.com//DaikiMaekawa/fulanghua_navigation/indigo-devel//docs/lissajous_curve.png"" alt=""""></p>\n\n<p><img src=""https://raw.githubusercontent.com//DaikiMaekawa/fulanghua_navigation/indigo-devel//docs/astroid_curve.png"" alt=""""></p>\n\n<h3 id=""pose-estimation-by-using-ekf-for-a-ground-vehicle""><a href=""fulanghua_ekf_2d/"">Pose Estimation by using EKF for a ground vehicle</a></h3>\n\n<h3 id=""evaluation-tools""><a href=""fulanghua_evaluator/"">Evaluation Tools</a></h3>\n\n<h2 id=""requirements"">Requirements</h2>\n\n<p>Install dependencies (listed in the package.xml and CMakeLists.txt file) using rosdep:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""gp"">$ </span>rosdep install fulanghua_navigation\n\n</code></pre></div>\n<h2 id=""bugs"">Bugs</h2>\n\n<p>If you find a bug please let me know by opening an issue at <a href=""https://github.com/DaikiMaekawa/fulanghua_navigation/issues"">here</a>.</p>\n\n<h2 id=""license"">License</h2>\n\n<p><img src=""http://img.shields.io/badge/license-BSD-green.svg"" alt=""BSD""></p>\n\n<p>Copyright (c) 2014, Daiki Maekawa and Chiba Institute of Technology.</p>\n\n<p>See LICENSE for more info.</p>\n</div>\n\n            \n          </div>'"
hakuto,http://rosindex.github.io/r/hakuto/,"jade,indigo","hakuto,tetris_description,tetris_gazebo,tetris_launch","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""hakuto"">hakuto <a href=""https://travis-ci.org/tork-a/hakuto""><img src=""https://travis-ci.org/tork-a/hakuto.svg?branch=master"" alt=""Build Status""></a>\n</h1>\n\n<p>With this ROS package, we can realize <a href=""http://team-hakuto.jp/team/rover"">lunar rovers at Hakuto</a>, in particular <code>Tetris</code>, in a simulated lunar surface on web browser. Document here is the end user\'s usage and server-side operation for maintanance tasks.</p>\n\n<p>Document is available <a href=""./tetris_launch/doc/index.rst"">here</a>.</p>\n</div>\n\n            \n          </div>'"
cob_calibration_data,http://rosindex.github.io/r/cob_calibration_data/,"hydro,groovy,indigo",cob_calibration_data,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cob_calibration_data"">cob_calibration_data</h1>\n\n<p><a href=""https://travis-ci.org/ipa320/cob_calibration_data""><img src=""https://travis-ci.org/ipa320/cob_calibration_data.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p>This repository holds the current calibration data for various robots of the Care-O-bot family.</p>\n\n<h1 id=""warning-normally-you-should-not-have-an-overlay-of-this-package-on-the-robot"">!!! WARNING: Normally you should <strong>NOT</strong> have an overlay of this package on the robot !!!</h1>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cob_calibration_data"">cob_calibration_data</h1>\n\n<p>This repository holds the current calibration data for Care-O-bot.</p>\n\n<h1 id=""warning-normally-you-should-not-have-an-overlay-of-this-stack"">!!! WARNING: Normally you should <strong>NOT</strong> have an overlay of this stack !!!</h1>\n</div>\n\n            \n          </div>'"
cob_substitute,http://rosindex.github.io/r/cob_substitute/,"hydro,groovy,indigo","cob_lbr,cob_safety_controller,cob_substitute,frida_driver,prace_common,prace_gripper_driver,frida_description,prace_gripper_description,ur_description,ur_driver","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_substitute""><img src=""https://travis-ci.org/ipa320/cob_substitute.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<h1 id=""cob_substitute"">cob_substitute</h1>\n</div>\n\n            \n          </div>'"
libpointmatcher,http://rosindex.github.io/r/libpointmatcher/,"hydro,indigo",libpointmatcher,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><img src=""https://raw.githubusercontent.com//ethz-asl/libpointmatcher/master//doc/images/banner_light.jpeg"" alt=""alt tag""></p>\n\n<hr>\n\n<h1 id=""documentation-and-tutorials"">Documentation and Tutorials</h1>\n\n<p>libpointmatcher is a modular library implementing the Iterative Closest Point (ICP) algorithm for aligning point clouds. It has applications in robotics and computer vision.</p>\n\n<p><strong>Quick link for the tutorial pages: <a href=""doc/index.md"">Tutorials</a> (also available on <a href=""http://libpointmatcher.readthedocs.org/"">readthedocs.org</a>).</strong></p>\n\n<p>Those tutorials are written using Markdown syntax and stored in the project\'s <code>/doc</code> folder.  Their scope ranges from introductory material on performing point cloud registration to instructions for the more experienced developer on how to extend the library\'s codebase. </p>\n\n<p>Libpointmatcher\'s source code is fully documented based on doxygen to provide an easy API to developers. An example of this API can be found <a href=""http://docs.ros.org/groovy/api/libpointmatcher/html/"">here</a>, but it is suggested to use the one build for your version in <code>doc/html</code>. </p>\n\n<p>libpointmatcher is being developed by <a href=""mailto:f.pomerleau@gmail.com"">Fran\xc3\xa7ois Pomerleau</a> and <a href=""http://stephane.magnenat.net"">St\xc3\xa9phane Magnenat</a> as part of our work at <a href=""http://www.asl.ethz.ch"">ASL-ETH</a>.</p>\n\n<p>You can read the latest changes in the <a href=""doc/ReleaseNotes.md"">release notes</a>.</p>\n\n<h1 id=""quick-start"">Quick Start</h1>\n\n<p>Although we suggest to use the <a href=""doc/Tutorials.md"">tutorials</a>, here is a quick version of it:</p>\n\n<p>The library has a light dependency list:</p>\n\n<ul>\n<li>\n<a href=""http://eigen.tuxfamily.org"">Eigen</a> version 3, a modern C++ matrix and linear-algebra library,</li>\n<li>\n<a href=""http://www.boost.org/"">boost</a> version 1.48 and up, portable C++ source libraries,</li>\n<li>\n<a href=""http://github.com/ethz-asl/libnabo"">libnabo</a> version 1.0.6, a fast K Nearest Neighbour library for low-dimensional spaces,</li>\n</ul>\n\n<p>and was compiled on:\n  * Ubuntu (<a href=""/doc/Compilation.md"">see how</a>)\n  * Mac OS X (<a href=""/doc/CompilationMac.md"">see how</a>)\n  * Windows (<a href=""/doc/CompilationWindows.md"">see how</a> - partially supported)</p>\n\n<h3 id=""compilation-amp-installation"">Compilation &amp; Installation</h3>\n\n<p>For beginner users who are not familiar with compiling and installing a library in Linux, go <a href=""doc/Compilation.md"">here</a> for detailed instructions on how to compile libpointmatcher from the source code.  If you are comfortable with Linux and CMake and have already installed the prerequisites above, the following commands should install libpointmatcher on your system.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">mkdir build &amp;&amp; cd build\ncmake -DCMAKE_BUILD_TYPE=RelWithDebInfo ..\nmake\nsudo make install\n\n</code></pre></div>\n<h3 id=""testing"">Testing</h3>\n\n<p>Libpointmatcher ships with a version of the Google testing framework <a href=""https://code.google.com/p/googletest/"">GTest</a>.  Unit tests are located in utest/ and are compiled with libpointmatcher.  To run the tests and make sure that your compiled version is working correctly, run the test executable in your build directory:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd build\nutest/utest --path ../examples/data/\n\n</code></pre></div>\n<h3 id=""linking-to-external-projects"">Linking to external projects.</h3>\n\n<p>We mainly develop for <strong>cmake projects</strong> and we provide example files under <a href=""https://github.com/ethz-asl/libpointmatcher/tree/master/examples/demo_cmake""><code>examples/demo_cmake/</code></a> to help you in your own project. We also provide a <strong>QT Creator</strong> example in <a href=""https://github.com/ethz-asl/libpointmatcher/tree/master/examples/demo_Qt""><code>examples/demo_QT/</code></a>, which manually list all the dependencies in the file <a href=""https://github.com/ethz-asl/libpointmatcher/blob/master/examples/demo_Qt/demo.pro""><code>demo.pro</code></a>. You would need to ajust those paths to point at the appropriate locations on your system.</p>\n\n<h3 id=""bug-reporting"">Bug reporting</h3>\n\n<p>Please use our <a href=""http://github.com/ethz-asl/libpointmatcher/issues"">github\'s issue tracker</a> to report bugs. If you are running the library on Ubuntu, copy-paste the output of the script <a href=""https://github.com/ethz-asl/libpointmatcher/blob/master/utest/listVersionsUbuntu.sh"">listVersionsUbuntu.sh</a> to simplify the search of an answer.</p>\n\n<h2 id=""file-formats"">File formats</h2>\n\n<p>The library support different file formats for importing or exporting data:\n  * csv (Comma Separated Values)\n  * vtk (Visualization Toolkit Files)\n  * ply (Polygon File Format)\n  * pcd (Point Cloud Library Format)</p>\n\n<p>Those functionnalities are available without increasing the list of dependencies at the expense of a limited functionality support. For more details, see the tutorial <a href=""doc/ImportExport.md"">Importing and Exporting Point Clouds</a>. Example executables using those file formats from the command line can be found in <code>./example/</code> and are described <a href=""doc/ICPIntro.md"">here</a> in more details </p>\n\n<h1 id=""citing"">Citing</h1>\n\n<p>If you use libpointmatcher in an academic context, please cite the following publication:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">@article{Pomerleau12comp,\n    author = {Pomerleau, Fran{\\c c}ois and Colas, Francis and Siegwart, Roland and Magnenat, St{\\\'e}phane},\n    title = {{Comparing ICP Variants on Real-World Data Sets}},\n    journal = {Autonomous Robots},\n    year = {2013},\n    volume = {34},\n    number = {3},\n    pages = {133--148},\n    month = feb\n}\n</code></pre></div>\n<p>and/or</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">@INPROCEEDINGS{pomerleau11tracking,\n    author = {Fran{\\c c}ois Pomerleau and St{\\\'e}phane Magnenat and Francis Colas and Ming Liu and Roland Siegwart},\n    title = {Tracking a Depth Camera: Parameter Exploration for Fast ICP},\n    booktitle = {Proc. of the IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},\n    publisher = {IEEE Press},\n    pages = {3824--3829},\n    year = {2011}\n}\n</code></pre></div>\n<h1 id=""extra-reading"">Extra Reading</h1>\n\n<p>If you are interested in learning more about different registration algorithms, we recently put together a literature review surveying multiple solutions. The review is organized in the same way as the library and many examples are provided based on real deployments.</p>\n\n<p>F. Pomerleau, F. Colas and R. Siegwart (2015), ""<em>A Review of Point Cloud Registration Algorithms for Mobile Robotics</em>"", <strong>Foundations and Trends\xc2\xae in Robotics</strong>: Vol. 4: No. 1, pp 1-104.  <a href=""http://dx.doi.org/10.1561/2300000035"">http://dx.doi.org/10.1561/2300000035</a> </p>\n\n<p>If you don\'t have access to the journal, you can download it from <a href=""https://www.researchgate.net/publication/277558596_A_Review_of_Point_Cloud_Registration_Algorithms_for_Mobile_Robotics"">here</a>.</p>\n\n<h1 id=""more-point-clouds"">More Point Clouds</h1>\n\n<p>We also produced those freely available data sets to test different registration solutions:</p>\n\n<p><a href=""http://projects.asl.ethz.ch/datasets/doku.php?id=laserregistration:laserregistration""><em>Challenging data sets for point cloud registration algorithms</em></a></p>\n\n<p><img src=""http://projects.asl.ethz.ch/datasets/lib/exe/fetch.php?cache=&amp;media=laserregistration:asldataset_weblarge.jpg"" alt=""alt tag""></p>\n\n<p>You can download the files in CSV or VTK formats, which are directly supported by the library I/O module. </p>\n\n<h1 id=""projects-and-partners"">Projects and Partners</h1>\n\n<p>If you are using libpointmatcher in your project and you would like to have it listed here, please contact <a href=""mailto:f.pomerleau@gmail.com"">Fran\xc3\xa7ois Pomerleau</a> or <a href=""http://stephane.magnenat.net"">St\xc3\xa9phane Magnenat</a>.</p>\n\n<ul>\n<li>European Project <a href=""http://www.nifti.eu/"">NIFTi</a> (FP7 ICT-247870): Search and rescue project in dynamic environments. Results: <a href=""http://www.youtube.com/watch?v=lP5Mj-TGaiw"">video of multi-floor reconstruction</a> and <a href=""http://www.youtube.com/watch?v=ygIvzWVfPYk"">video of railyard reconstruction</a>. All results with real-time computation.</li>\n<li>NASA Ames <a href=""http://ti.arc.nasa.gov/tech/asr/intelligent-robotics/ngt/stereo/"">Stereo Pipeline</a>: Planetary reconstruction from satellite observations. Results: used for Mars, Moon and Earth point clouds.</li>\n<li>Armasuisse S+T UGV research program <a href=""http://www.artor.ethz.ch/"">ARTOR</a>: Development of techniques for reliable autonomous navigation of a wheeled robot in rough, outdoor terrain. Results: <a href=""http://www.youtube.com/watch?v=UCCAUf64tD0"">video of urban and dynamic 3D reconstruction</a> and <a href=""http://www.youtube.com/watch?v=M5Y99o7um88"">video of open space 3D reconstruction</a> with real-time computation.</li>\n<li>Swiss National Science Foundation - <a href=""http://www.limnobotics.ch/"">Limnobotics</a>: Robotic solution for toxic algae monitoring in lacs. Result: <a href=""http://www.youtube.com/watch?v=g8l-Xq4qYeE"">video of 3D shore reconstruction</a> with real-time computation.</li>\n</ul>\n\n<p>For a larger list of work realized with libpointmatcher, please see the page <a href=""/doc/ApplicationsAndPub.md"">Applications And Publications</a>.</p>\n\n<h1 id=""license"">License</h1>\n\n<p>libpointmatcher is released under a permissive BSD license. Enjoy!</p>\n\n<hr>\n\n<p><img src=""https://raw.githubusercontent.com//ethz-asl/libpointmatcher/master//doc/images/banner_dark.jpeg"" alt=""alt tag""></p>\n</div>\n\n            \n          </div>'"
ros_numpy,http://rosindex.github.io/r/ros_numpy/,indigo,ros_numpy,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_numpy"">ros_numpy</h1>\n\n<p>Tools for converting ROS messages to and from numpy arrays. Contains two functions:</p>\n\n<ul>\n<li>\n<code>arr = numpify(msg, ...)</code> - try to get a numpy object from a message</li>\n<li>\n<code>msg = msgify(MessageType, arr, ...)</code> - try and convert a numpy object to a message</li>\n</ul>\n\n<p>Currently supports:</p>\n\n<ul>\n<li>\n<code>sensor_msgs.msg.PointCloud2</code> \xe2\x86\x94 structured <code>np.array</code>:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python"">   <span class=""n"">data</span> <span class=""o"">=</span> <span class=""n"">np</span><span class=""o"">.</span><span class=""n"">zeros</span><span class=""p"">(</span><span class=""mi"">100</span><span class=""p"">,</span> <span class=""n"">dtype</span><span class=""o"">=</span><span class=""p"">[</span>\n     <span class=""p"">(</span><span class=""s"">\'x\'</span><span class=""p"">,</span> <span class=""n"">np</span><span class=""o"">.</span><span class=""n"">float32</span><span class=""p"">),</span>\n     <span class=""p"">(</span><span class=""s"">\'y\'</span><span class=""p"">,</span> <span class=""n"">np</span><span class=""o"">.</span><span class=""n"">float32</span><span class=""p"">),</span>\n     <span class=""p"">(</span><span class=""s"">\'vectors\'</span><span class=""p"">,</span> <span class=""n"">np</span><span class=""o"">.</span><span class=""n"">float32</span><span class=""p"">,</span> <span class=""p"">(</span><span class=""mi"">3</span><span class=""p"">,))</span>\n   <span class=""p"">])</span>\n   <span class=""n"">data</span><span class=""p"">[</span><span class=""s"">\'x\'</span><span class=""p"">]</span> <span class=""o"">=</span> <span class=""n"">np</span><span class=""o"">.</span><span class=""n"">arange</span><span class=""p"">(</span><span class=""mi"">100</span><span class=""p"">)</span>\n   <span class=""n"">data</span><span class=""p"">[</span><span class=""s"">\'y\'</span><span class=""p"">]</span> <span class=""o"">=</span> <span class=""n"">data</span><span class=""p"">[</span><span class=""s"">\'x\'</span><span class=""p"">]</span><span class=""o"">*</span><span class=""mi"">2</span>\n   <span class=""n"">data</span><span class=""p"">[</span><span class=""s"">\'vectors\'</span><span class=""p"">]</span> <span class=""o"">=</span> <span class=""n"">np</span><span class=""o"">.</span><span class=""n"">arange</span><span class=""p"">(</span><span class=""mi"">100</span><span class=""p"">)[:,</span><span class=""n"">np</span><span class=""o"">.</span><span class=""n"">newaxis</span><span class=""p"">]</span>\n\n   <span class=""n"">msg</span> <span class=""o"">=</span> <span class=""n"">ros_numpy</span><span class=""o"">.</span><span class=""n"">msgify</span><span class=""p"">(</span><span class=""n"">PointCloud2</span><span class=""p"">,</span> <span class=""n"">data</span><span class=""p"">)</span>\n\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">   data = ros_numpy.numpify(msg)\n\n</code></pre></div>\n<ul>\n<li>\n<code>sensor_msgs.msg.Image</code> \xe2\x86\x94 2/3-D <code>np.array</code>, similar to the function of <code>cv_bridge</code>, but without the dependency on <code>cv2</code>\n</li>\n<li>\n<code>nav_msgs.msg.OccupancyGrid</code> \xe2\x86\x94 <code>np.ma.array</code>\n</li>\n<li>\n<code>geometry.msg.Vector3</code> \xe2\x86\x94 1-D <code>np.array</code>. <code>hom=True</code> gives <code>[x, y, z, 0]</code>\n</li>\n<li>\n<code>geometry.msg.Point</code> \xe2\x86\x94 1-D <code>np.array</code>. <code>hom=True</code> gives <code>[x, y, z, 1]</code>\n</li>\n<li>\n<code>geometry.msg.Quaternion</code> \xe2\x86\x94 1-D <code>np.array</code>, <code>[x, y, z, w]</code>\n</li>\n<li>\n<code>geometry.msg.Transform</code> \xe2\x86\x94 4\xc3\x974 <code>np.array</code>, the homogeneous transformation matrix</li>\n<li>\n<code>geometry.msg.Pose</code> \xe2\x86\x94 4\xc3\x974 <code>np.array</code>, the homogeneous transformation matrix from the origin</li>\n</ul>\n\n<p>Support for more types can be added with:</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""nd"">@ros_numpy.converts_to_numpy</span><span class=""p"">(</span><span class=""n"">SomeMessageClass</span><span class=""p"">)</span>\n<span class=""k"">def</span> <span class=""nf"">convert</span><span class=""p"">(</span><span class=""n"">my_msg</span><span class=""p"">):</span>\n    <span class=""k"">return</span> <span class=""n"">np</span><span class=""o"">.</span><span class=""n"">array</span><span class=""p"">(</span><span class=""o"">...</span><span class=""p"">)</span>\n\n<span class=""nd"">@ros_numpy.converts_from_numpy</span><span class=""p"">(</span><span class=""n"">SomeMessageClass</span><span class=""p"">)</span>\n<span class=""k"">def</span> <span class=""nf"">convert</span><span class=""p"">(</span><span class=""n"">my_array</span><span class=""p"">):</span>\n    <span class=""k"">return</span> <span class=""n"">SomeMessageClass</span><span class=""p"">(</span><span class=""o"">...</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>Any extra args or kwargs to <code>numpify</code> or <code>msgify</code> will be forwarded to your conversion function</p>\n\n<h2 id=""future-work"">Future work</h2>\n\n<ul>\n<li>\n<p>Add simple conversions for:</p>\n\n<ul>\n<li><code>geometry_msgs.msg.Inertia</code></li>\n</ul>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
visualization_tutorials,http://rosindex.github.io/r/visualization_tutorials/,"hydro,fuerte,groovy,kinetic,jade,indigo","interactive_marker_tutorials,librviz_tutorial,rviz_plugin_tutorials,rviz_python_tutorial,visualization_marker_tutorials,visualization_tutorials","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
imu_tools,http://rosindex.github.io/r/imu_tools/,"hydro,fuerte,groovy,kinetic,jade,indigo","imu_complementary_filter,imu_filter_madgwick,imu_tools,rviz_imu_plugin","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""imu-tools-for-ros"">IMU tools for ROS</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>IMU-related filters and visualizers. The stack contains:</p>\n\n<ul>\n<li><p><code>imu_filter_madgwick</code>: a filter which fuses angular velocities,\naccelerations, and (optionally) magnetic readings from a generic IMU \ndevice into an orientation. Based on the work of [1].</p></li>\n<li><p><code>rviz_imu_plugin</code> a plugin for rviz which displays <code>sensor_msgs::Imu</code>\nmessages</p></li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p><a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">Create a catkin workspace</a>\n(e.g., <code>~/ros-hydro-ws/</code>) and source the <code>devel/setup.bash</code> file.</p>\n\n<p>Make sure you have git installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Download the stack from our repository into your catkin workspace (e.g.,\n<code>ros-hydro-ws/src</code>; use the proper branch for your distro, e.g., <code>groovy</code>,\n<code>hydro</code>...):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone -b &lt;distro&gt; https://github.com/ccny-ros-pkg/imu_tools.git\n</code></pre></div>\n<p>Install any dependencies using <a href=""http://www.ros.org/wiki/rosdep"">rosdep</a>.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install imu_tools\n</code></pre></div>\n<p>Compile the stack:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/ros-hydro-ws\ncatkin_make\n</code></pre></div>\n<h2 id=""more-info"">More info</h2>\n\n<p><a href=""http://wiki.ros.org/imu_tools"">http://wiki.ros.org/imu_tools</a></p>\n\n<h2 id=""license"">License</h2>\n\n<ul>\n<li><p><code>imu_filter_madgwick</code>: currently licensed as GPL, following the original implementation</p></li>\n<li><p><code>rviz_imu_plugin</code>: BSD</p></li>\n</ul>\n\n<h2 id=""references"">References</h2>\n\n<p>[1] <a href=""http://www.x-io.co.uk/open-source-imu-and-ahrs-algorithms/"">http://www.x-io.co.uk/open-source-imu-and-ahrs-algorithms/</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""imu-tools-for-ros"">IMU tools for ROS</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>IMU-related filters and visualizers. The stack contains:</p>\n\n<ul>\n<li><p><code>imu_filter_madgwick</code>: a filter which fuses angular velocities,\naccelerations, and (optionally) magnetic readings from a generic IMU \ndevice into an orientation. Based on the work of [1].</p></li>\n<li><p><code>rviz_imu_plugin</code> a plugin for rviz which displays <code>sensor_msgs::Imu</code>\nmessages</p></li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p>Create a directory where you want the package downloaded (ex. <code>~/ros</code>), \nand add it to <code>$ROS_PACKAGE_PATH</code>.</p>\n\n<p>Make sure you have git installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Download the stack from our repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/ccny-ros-pkg/imu_tools.git\n</code></pre></div>\n<p>Install any dependencies using <a href=""http://www.ros.org/wiki/rosdep"">rosdep</a>.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install imu_tools\n</code></pre></div>\n<p>Compile the stack:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosmake imu_tools\n</code></pre></div>\n<h2 id=""more-info"">More info</h2>\n\n<p><a href=""http://ros.org/wiki/imu_tools"">http://ros.org/wiki/imu_tools</a></p>\n\n<h2 id=""license"">License</h2>\n\n<ul>\n<li><p><code>imu_filter_madgwick</code>: currently licensed as GPL, following the original implementation</p></li>\n<li><p><code>rviz_imu_plugin</code>: BSD</p></li>\n</ul>\n\n<h2 id=""references"">References</h2>\n\n<p>[1] <a href=""http://www.x-io.co.uk/open-source-imu-and-ahrs-algorithms/"">http://www.x-io.co.uk/open-source-imu-and-ahrs-algorithms/</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""imu-tools-for-ros"">IMU tools for ROS</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>IMU-related filters and visualizers. The stack contains:</p>\n\n<ul>\n<li><p><code>imu_filter_madgwick</code>: a filter which fuses angular velocities,\naccelerations, and (optionally) magnetic readings from a generic IMU \ndevice into an orientation. Based on the work of [1].</p></li>\n<li><p><code>imu_complementary_filter</code>: a filter which fuses angular velocities,\naccelerations, and (optionally) magnetic readings from a generic IMU \ndevice into an orientation quaternion using a novel approach based on a complementary fusion. Based on the work of [2].</p></li>\n<li><p><code>rviz_imu_plugin</code> a plugin for rviz which displays <code>sensor_msgs::Imu</code>\nmessages</p></li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p><a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">Create a catkin workspace</a>\n(e.g., <code>~/ros-hydro-ws/</code>) and source the <code>devel/setup.bash</code> file.</p>\n\n<p>Make sure you have git installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Download the stack from our repository into your catkin workspace (e.g.,\n<code>ros-hydro-ws/src</code>; use the proper branch for your distro, e.g., <code>groovy</code>,\n<code>hydro</code>...):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone -b &lt;distro&gt; https://github.com/ccny-ros-pkg/imu_tools.git\n</code></pre></div>\n<p>Install any dependencies using <a href=""http://www.ros.org/wiki/rosdep"">rosdep</a>.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install imu_tools\n</code></pre></div>\n<p>Compile the stack:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/ros-hydro-ws\ncatkin_make\n</code></pre></div>\n<h2 id=""more-info"">More info</h2>\n\n<p><a href=""http://wiki.ros.org/imu_tools"">http://wiki.ros.org/imu_tools</a></p>\n\n<h2 id=""license"">License</h2>\n\n<ul>\n<li><p><code>imu_filter_madgwick</code>: currently licensed as GPL, following the original implementation</p></li>\n<li><p><code>imu_complementary_filter</code>: BSD</p></li>\n<li><p><code>rviz_imu_plugin</code>: BSD</p></li>\n</ul>\n\n<h2 id=""references"">References</h2>\n\n<p>[1] <a href=""http://www.x-io.co.uk/open-source-imu-and-ahrs-algorithms/"">http://www.x-io.co.uk/open-source-imu-and-ahrs-algorithms/</a></p>\n\n<p>[2] <a href=""http://www.mdpi.com/1424-8220/15/8/19302"">http://www.mdpi.com/1424-8220/15/8/19302</a></p>\n</div>\n\n            \n          </div>'"
ecto_image_pipeline,http://rosindex.github.io/r/ecto_image_pipeline/,"hydro,fuerte,groovy,kinetic,jade,indigo",ecto_image_pipeline,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
designator_integration,http://rosindex.github.io/r/designator_integration/,"hydro,groovy,indigo","designator_integration,designator_integration_cpp,designator_integration_lisp","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
opencv_candidate,http://rosindex.github.io/r/opencv_candidate/,"hydro,groovy,kinetic,jade,indigo",opencv_candidate,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""opencv_candidate"">opencv_candidate</h1>\n\n<p>This package contains functionalities that will be proposed to the\nupstream OpenCV For now, it contains in src:</p>\n\n<h2 id=""creative"">creative</h2>\n\n<p>A interface to the Creative DepthSense SDK</p>\n\n<h2 id=""opencv_candidate"">opencv_candidate:</h2>\n\n<p>Misc OpenCV new functionalities like a AffineAdaptedFeature2D,\nDataMatrix, LSH</p>\n\n<h2 id=""reconst3d"">reconst3d:</h2>\n\n<p>A full pipeline to do 3d reconstruction: needs documentation</p>\n\n<h2 id=""rgbd"">rgbd</h2>\n\n<p>A module to deal with RGBD data (like finding normals, planes, doing\nICP). Already merged upstream. Will be removed once OpenCV 3.0 is\nreleased.</p>\n</div>\n\n            \n          </div>'"
navigation_layers,http://rosindex.github.io/r/navigation_layers/,"hydro,jade,indigo","navigation_layers,range_sensor_layer,social_navigation_layers","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ecto_opencv,http://rosindex.github.io/r/ecto_opencv/,"hydro,groovy,kinetic,jade,indigo",ecto_opencv,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecto_opencv"">ecto_opencv</h1>\n\n<p>ecto_opencv is a collection of ecto modules and tools that make ones\nlife much more rosey when developing perception based ecto graphs.</p>\n\n<h2 id=""ecto_opencv-cv_bp"">ecto_opencv.cv_bp</h2>\n\n<p>Some boost::python bindings for opencv, so that some values may be\ninspected from python. This will also contain some conversions to and\nfrom opencv\'s c_types based python wrappers.</p>\n\n<h2 id=""dependencies"">Dependencies</h2>\n\n<blockquote>\n<ul>\n<li>  cmake</li>\n<li>  boost</li>\n<li>  git</li>\n<li>  python</li>\n<li>  ecto <a href=""https://github.com/plasmodic/ecto"">https://github.com/plasmodic/ecto</a>\n</li>\n<li>  opencv2.3 deb from packages.ros.org, or source install from\n<a href=""https://code.ros.org/svn/opencv/branches/2.3/opencv"">https://code.ros.org/svn/opencv/branches/2.3/opencv</a>\n</li>\n<li>  python numpy dev libraries</li>\n</ul>\n</blockquote>\n\n<h2 id=""style"">Style</h2>\n\n<p>If you are using eclipse, you may use the style file available here:</p>\n\n<blockquote>\n<p><a href=""https://github.com/plasmodic/ecto/raw/master/misc/ecto.style.xml"">https://github.com/plasmodic/ecto/raw/master/misc/ecto.style.xml</a></p>\n</blockquote>\n</div>\n\n            \n          </div>'"
ecto_pcl,http://rosindex.github.io/r/ecto_pcl/,"hydro,groovy,kinetic,jade,indigo",ecto_pcl,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecto_pcl"">ecto_pcl</h1>\n\n<p>ecto_pcl is another collection of ecto modules and tools that make ones\nlife much more rosey when developing perception based ecto graphs.</p>\n\n<h2 id=""dependencies"">Dependencies</h2>\n\n<blockquote>\n<ul>\n<li>  cmake</li>\n<li>  git</li>\n<li>  python</li>\n<li>  boost</li>\n<li>  ecto <a href=""https://github.com/plasmodic/ecto"">https://github.com/plasmodic/ecto</a>\n</li>\n<li>\n<p>pcl 1.0 (non ros version, standalone)</p>\n\n<blockquote>\n<p><a href=""http://www.pointclouds.org/downloads/linux.html"">http://www.pointclouds.org/downloads/linux.html</a></p>\n\n<p>Quoted here for convenience:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo add-apt-repository ppa:v-launchpad-jochen-sprickerhof-de/pcl\nsudo apt-get update\nsudo apt-get install libpcl-dev\n</code></pre></div>\n</blockquote>\n</li>\n</ul>\n\n<h2 id=""style"">Style</h2>\n</blockquote>\n\n<p>If you are using eclipse, you may use the style file available here:</p>\n\n<blockquote>\n<p><a href=""https://github.com/plasmodic/ecto/raw/master/misc/ecto.style.xml"">https://github.com/plasmodic/ecto/raw/master/misc/ecto.style.xml</a></p>\n</blockquote>\n</div>\n\n            \n          </div>'"
object_recognition_capture,http://rosindex.github.io/r/object_recognition_capture/,"hydro,groovy,kinetic,jade,indigo",object_recognition_capture,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""capture"">Capture</h1>\n\n<p>A toolset for capturing 3D models of objects from set of views.</p>\n\n<h2 id=""get-it"">get it</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">% git clone git://github.com/wg-perception/capture.git\n</code></pre></div>\n<h2 id=""requires"">requires</h2>\n\n<ul>\n<li>  boost</li>\n<li>  cmake</li>\n<li>  OpenCV &gt; 2.3 <a href=""http://opencv.willowgarage.com/wiki/"">http://opencv.willowgarage.com/wiki/</a>\n</li>\n<li>  ecto <a href=""https://github.com/plasmodic/ecto"">https://github.com/plasmodic/ecto</a>\n</li>\n</ul>\n\n<h2 id=""build-it"">build it</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">% cd capture\n% mkdir build\n% cd build\n% cmake ..\n% make\n</code></pre></div>\n</div>\n\n            \n          </div>'"
openslam_gmapping,http://rosindex.github.io/r/openslam_gmapping/,"hydro,jade,kinetic,indigo",openslam_gmapping,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a fork from gmapping at https://openslam.informatik.uni-freiburg.de/data/svn/gmapping/trunk/\nIt includes a few patches that could be pushed upstream if needed\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
open_karto,http://rosindex.github.io/r/open_karto/,"hydro,jade,indigo",open_karto,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""open-karto"">Open Karto</h1>\n\n<p>Catkinized ROS Package of the OpenKarto Library (LGPL3)</p>\n\n<h1 id=""status"">Status</h1>\n\n<ul>\n<li>Devel Job Status: <a href=""http://build.ros.org/job/Idev__open_karto__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__open_karto__ubuntu_trusty_amd64"" alt=""Build Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://build.ros.org/job/Jbin_uT64__open_karto__ubuntu_trusty_amd64__binary""><img src=""http://build.ros.org/buildStatus/icon?job=Jbin_uT64__open_karto__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
moveit_sim_controller,http://rosindex.github.io/r/moveit_sim_controller/,"jade,kinetic,indigo",moveit_sim_controller,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-simulator-controller"">MoveIt Simulator Controller</h1>\n\n<p>A simulation interface for a hardware interface for ros_control, and loads default joint values from SRDF</p>\n\n<p>Intended to replace <code>moveit_fake_controller_manager</code> - this supports simulated trajectory following and loading an inital position</p>\n\n<p>Developed by <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/moveit_sim_controller""><img src=""https://travis-ci.org/davetcoleman/moveit_sim_controller.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-moveit_sim_controller""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-moveit_sim_controller"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-moveit-sim-controller_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-moveit-sim-controller_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/moveit_sim_controller/indigo-devel//resources/screenshot.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-moveit-sim-controller\n\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/moveit_sim_controller/html/"">Class Reference</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>To set your robot\'s initial simulated position, create a <em>planning group</em> in your SRDF using the <em>MoveIt Setup Assistant</em> named something like <code>whole_body</code> or <code>arm</code> that contains all of your robot\'s joints. Then, create a <em>pose</em> for the planning group that is your start position, and name it something like <code>home</code>.</p>\n\n<p>Then load this node with the following ROS params (yaml is suggested use):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># MoveIt-specific simulation settings:\nmoveit_sim_hw_interface:\n  joint_model_group: arm\n  joint_model_group_pose: home\n</code></pre></div>\n<p>See <a href=""https://github.com/davetcoleman/ros_control_boilerplate"">ros_control_boilerplate</a> for more detailed instructions about using ros_control to visualize your robot - this package simply inherits from that package and adds some MoveIt! dependencies that can parse SRDFs for your initial state.</p>\n\n<h2 id=""testing-and-linting"">Testing and Linting</h2>\n\n<p>To run <a href=""http://wiki.ros.org/roslint"">roslint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build --no-status --no-deps --this --make-args roslint\n</code></pre></div>\n<p>To run <a href=""https://pypi.python.org/pypi/catkin_lint"">catkin lint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin lint -W2\n</code></pre></div>\n<p>There are currently no unit or integration tests for this package. If there were you would use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin run_tests --no-deps --this -i\n</code></pre></div>\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please send PRs for new helper functions, fixes, etc!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-simulator-controller"">MoveIt Simulator Controller</h1>\n\n<p>A simulation interface for a hardware interface for ros_control, and loads default joint values from SRDF</p>\n\n<p>Intended to replace <code>moveit_fake_controller_manager</code> - this supports simulated trajectory following and loading an inital position</p>\n\n<p>Developed by <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/moveit_sim_controller""><img src=""https://travis-ci.org/davetcoleman/moveit_sim_controller.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-moveit_sim_controller""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-moveit_sim_controller"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-moveit-sim-controller_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-moveit-sim-controller_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/moveit_sim_controller/jade-devel//resources/screenshot.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-moveit-sim-controller\n\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/moveit_sim_controller/html/"">Class Reference</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>To set your robot\'s initial simulated position, create a <em>planning group</em> in your SRDF using the <em>MoveIt Setup Assistant</em> named something like <code>whole_body</code> or <code>arm</code> that contains all of your robot\'s joints. Then, create a <em>pose</em> for the planning group that is your start position, and name it something like <code>home</code>.</p>\n\n<p>Then load this node with the following ROS params (yaml is suggested use):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># MoveIt-specific simulation settings:\nmoveit_sim_hw_interface:\n  joint_model_group: arm\n  joint_model_group_pose: home\n</code></pre></div>\n<p>See <a href=""https://github.com/davetcoleman/ros_control_boilerplate"">ros_control_boilerplate</a> for more detailed instructions about using ros_control to visualize your robot - this package simply inherits from that package and adds some MoveIt! dependencies that can parse SRDFs for your initial state.</p>\n\n<h2 id=""testing-and-linting"">Testing and Linting</h2>\n\n<p>To run <a href=""http://wiki.ros.org/roslint"">roslint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build --no-status --no-deps --this --make-args roslint\n</code></pre></div>\n<p>To run <a href=""https://pypi.python.org/pypi/catkin_lint"">catkin lint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin lint -W2\n</code></pre></div>\n<p>There are currently no unit or integration tests for this package. If there were you would use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin run_tests --no-deps --this -i\n</code></pre></div>\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please send PRs for new helper functions, fixes, etc!</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-simulator-controller"">MoveIt Simulator Controller</h1>\n\n<p>A simulation interface for a hardware interface for ros_control, and loads default joint values from SRDF</p>\n\n<p>Intended to replace <code>moveit_fake_controller_manager</code> - this supports simulated trajectory following and loading an inital position</p>\n\n<p>Developed by <a href=""http://dav.ee/"">Dave Coleman</a> at the University of Colorado Boulder</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/moveit_sim_controller""><img src=""https://travis-ci.org/davetcoleman/moveit_sim_controller.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-moveit_sim_controller""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-moveit_sim_controller"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-moveit-sim-controller_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-moveit-sim-controller_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<p><img src=""https://raw.githubusercontent.com//davetcoleman/moveit_sim_controller/kinetic-devel//resources/screenshot.png"" alt=""""></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-moveit-sim-controller\n\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/indigo/api/moveit_sim_controller/html/"">Class Reference</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>To set your robot\'s initial simulated position, create a <em>planning group</em> in your SRDF using the <em>MoveIt Setup Assistant</em> named something like <code>whole_body</code> or <code>arm</code> that contains all of your robot\'s joints. Then, create a <em>pose</em> for the planning group that is your start position, and name it something like <code>home</code>.</p>\n\n<p>Then load this node with the following ROS params (yaml is suggested use):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># MoveIt-specific simulation settings:\nmoveit_sim_hw_interface:\n  joint_model_group: arm\n  joint_model_group_pose: home\n</code></pre></div>\n<p>See <a href=""https://github.com/davetcoleman/ros_control_boilerplate"">ros_control_boilerplate</a> for more detailed instructions about using ros_control to visualize your robot - this package simply inherits from that package and adds some MoveIt! dependencies that can parse SRDFs for your initial state.</p>\n\n<h2 id=""testing-and-linting"">Testing and Linting</h2>\n\n<p>To run <a href=""http://wiki.ros.org/roslint"">roslint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin build --no-status --no-deps --this --make-args roslint\n</code></pre></div>\n<p>To run <a href=""https://pypi.python.org/pypi/catkin_lint"">catkin lint</a>, use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin lint -W2\n</code></pre></div>\n<p>There are currently no unit or integration tests for this package. If there were you would use the following command with <a href=""https://catkin-tools.readthedocs.org/"">catkin-tools</a>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin run_tests --no-deps --this -i\n</code></pre></div>\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please send PRs for new helper functions, fixes, etc!</p>\n</div>\n\n            \n          </div>'"
roslisp_common,http://rosindex.github.io/r/roslisp_common/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo","actionlib_lisp,cl_tf,cl_tf2,cl_transforms,cl_transforms_stamped,cl_urdf,cl_utils,roslisp_common,roslisp_utilities","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
orsens_ros,http://rosindex.github.io/r/orsens_ros/,indigo,orsens,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""orsens_ros"">orsens_ros</h1>\n\n<p><a href=""https://travis-ci.org/Oriense/orsens_ros""><img src=""https://travis-ci.org/Oriense/orsens_ros.svg?branch=master"" alt=""Build Status""></a></p>\n\n<p>ROS package for OrSens 3d-camera.</p>\n\n<p>For documentation please visit the <a href=""http://wiki.ros.org/orsens_ros"">orsens_ros</a> page on the ROS wiki or the <a href=""http://docs.ros.org/indigo/api/orsens/html/c++/orsens_8h.html"">API documentation</a></p>\n</div>\n\n            \n          </div>'"
multimaster_fkie,http://rosindex.github.io/r/multimaster_fkie/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","default_cfg_fkie,master_discovery_fkie,master_sync_fkie,multimaster_fkie,multimaster_msgs_fkie,node_manager_fkie","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fkie-multimaster-for-ros"">FKIE multimaster for ROS</h1>\n\n<p>The ROS stack of\n<a href=""http://www.ros.org/wiki/multimaster_fkie"">multimaster_fkie</a> offers a\ncomplete solution for using ROS with multicores.</p>\n\n<p>The descriptions of individual packets is on ROS wiki:</p>\n\n<ul>\n<li>  <a href=""http://www.ros.org/wiki/master_discovery_fkie"">discovery</a> --\ndiscovery using multicast or zeroconf</li>\n<li>  <a href=""http://www.ros.org/wiki/master_sync_fkie"">synchronization</a> --\nmaster synchronization</li>\n<li>  <a href=""http://www.ros.org/wiki/node_manager_fkie"">node manager GUI</a> --\nA GUI to manage the configuration on local and remote ROS masters</li>\n<li>  <a href=""http://www.ros.org/wiki/default_cfg_fkie"">default configuration</a> --\nHelper node allows an easy start of remote nodes</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fkie-multimaster-for-ros"">FKIE multimaster for ROS</h1>\n\n<p>The ROS stack of\n<a href=""http://fkie.github.io/multimaster_fkie/"">multimaster_fkie</a> offers a\ncomplete solution for using ROS with multicores.</p>\n\n<p>The descriptions of individual packets:</p>\n\n<ul>\n<li>  <a href=""http://fkie.github.io/multimaster_fkie/master_discovery.html"">discovery</a>\n-- discovery using multicast or zeroconf</li>\n<li>  <a href=""http://fkie.github.io/multimaster_fkie/master_sync.html"">synchronization</a>\n-- master synchronization</li>\n<li>  <a href=""http://fkie.github.io/multimaster_fkie/node_manager.html"">node manager\nGUI</a> --\nA GUI to manage the configuration on local and remote ROS masters</li>\n<li>  <a href=""http://fkie.github.io/multimaster_fkie/default_cfg.html"">default\nconfiguration</a>\n-- Helper node allows an easy (auto)start of remote nodes</li>\n</ul>\n\n<p>you can find it also on\n<a href=""http://www.ros.org/wiki/multimaster_fkie"">ros_wiki</a>.</p>\n</div>\n\n            \n          </div>'"
python_qt_binding,http://rosindex.github.io/r/python_qt_binding/,"hydro,fuerte,groovy,kinetic,jade,indigo",python_qt_binding,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
visualization_rwt,http://rosindex.github.io/r/visualization_rwt/,"hydro,fuerte,groovy,jade,indigo","rwt_image_view,rwt_moveit,rwt_plot,rwt_robot_monitor,rwt_speech_recognition,rwt_utils_3rdparty,visualization_rwt","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visualization_rwt"">visualization_rwt <a href=""https://travis-ci.org/tork-a/visualization_rwt""><img src=""https://api.travis-ci.org/tork-a/visualization_rwt.png"" alt=""Build Status""></a>\n</h1>\n\n<p>visualization packages using rwt</p>\n\n<h2 id=""install"">INSTALL</h2>\n\n<p>Please install <a href=""https://github.com/tork-a/rwt_ros"">rwt_ros</a> first</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">rosws <span class=""nb"">set</span> --git rwt_ros https://github.com/tork-a/rwt_ros.git\nrosws update rwt_ros\n\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">sudo aptitude install ros-groovy-rosbridge-suite <span class=""c"">#rosbridge is required</span>\nrosws <span class=""nb"">set</span> --git roswww https://github.com/jihoonl/roswww.git <span class=""c""># roswww is also required</span>\nrosws update roswww\nrosws <span class=""nb"">set</span> --git visualization_rwt https://github.com/tork-a/visualization_rwt.git\nrosws update visualization_rwt\n\n</code></pre></div>\n<h2 id=""projects"">PROJECTS</h2>\n\n<ul>\n<li>\n<a href=""https://github.com/tork-a/visualization_rwt/blob/master/rwt_plot/README.md"">rwt_plot</a> </li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visualization_rwt"">visualization_rwt <a href=""https://travis-ci.org/tork-a/visualization_rwt""><img src=""https://api.travis-ci.org/tork-a/visualization_rwt.png"" alt=""Build Status""></a>\n</h1>\n\n<p>visualization packages based on RobotWebTools</p>\n\n<h2 id=""install"">INSTALL</h2>\n\n<p>Following is an example with ROS Indigo.</p>\n\n<ol>\n<li><p>Create a <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and navigate to its source directory (e.g. <code>~/catkin_ws/src</code>).</p></li>\n<li><p>In your Catkin workspace, download source and build with the following commands.</p></li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws\napt-get install python-wstool\nwstool init src\nwstool merge -t src https://raw.githubusercontent.com/tork-a/visualization_rwt/hydro-devel/.rosinstall\nwstool update -t src\nrosdep install --from-paths src --ignore-src --rosdistro indigo -r -y\ncatkin_make                (or any build commands available in ROS, e.g. `catkin build`)\nsource devel/setup.bash\n\n</code></pre></div>\n<h2 id=""projects"">PROJECTS</h2>\n\n<ul>\n<li><a href=""rwt_plot/README.md"">rwt_plot</a></li>\n<li><a href=""rwt_speech_recognition/README.md"">rwt_speech_recognition</a></li>\n</ul>\n</div>\n\n            \n          </div>'"
navigation_2d,http://rosindex.github.io/r/navigation_2d/,"hydro,fuerte,groovy,jade,indigo","nav2d,nav2d_exploration,nav2d_karto,nav2d_localizer,nav2d_msgs,nav2d_navigator,nav2d_operator,nav2d_remote,nav2d_tutorials,exploration,graph_slam,remote_controller,robot_navigator,robot_operator,self_localizer","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""navigation_2d"">navigation_2d</h1>\n\n<p>ROS nodes to navigate a mobile robot in a planar environment</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""navigation_2d"">navigation_2d</h1>\n\n<p>ROS nodes to navigate a mobile robot in a planar environment.</p>\n\n<p>Documentation and Tutorials can be found in the <a href=""http://wiki.ros.org/nav2d"">ROS-Wiki</a></p>\n</div>\n\n            \n          </div>'"
stdr_simulator,http://rosindex.github.io/r/stdr_simulator/,"hydro,indigo","stdr_gui,stdr_launchers,stdr_msgs,stdr_parser,stdr_resources,stdr_robot,stdr_samples,stdr_server,stdr_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""stdr_simulator"">stdr_simulator <a href=""https://travis-ci.org/stdr-simulator-ros-pkg/stdr_simulator""><img src=""https://travis-ci.org/stdr-simulator-ros-pkg/stdr_simulator.png?branch=hydro-devel,develop"" alt=""Build Status""></a>\n</h1>\n\n<p>A simple, flexible and scalable 2D multi-robot simulator.</p>\n\n<h2 id=""documentation-and-tutorials"">Documentation and Tutorials</h2>\n\n<p><a href=""http://wiki.ros.org/stdr_simulator"">ROS wiki page</a></p>\n\n<h2 id=""further-reference"">Further reference</h2>\n\n<p><a href=""http://stdr-simulator-ros-pkg.github.io/"">External website</a></p>\n\n<p><a href=""https://groups.google.com/forum/#!forum/stdr-simulator"">Google Group</a></p>\n</div>\n\n            \n          </div>'"
convex_decomposition,http://rosindex.github.io/r/convex_decomposition/,"hydro,groovy,kinetic,jade,indigo",convex_decomposition,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
moveit_robots,http://rosindex.github.io/r/moveit_robots/,"hydro,indigo","atlas_moveit_config,atlas_v3_moveit_config,baxter_ikfast_left_arm_plugin,baxter_ikfast_right_arm_plugin,baxter_moveit_config,clam_moveit_config,iri_wam_moveit_config,moveit_robots,r2_moveit_generated","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit_robots"">moveit_robots</h1>\n\n<p>This repository contains configuration packages for different robots using MoveIt!</p>\n\n<h2 id=""guidelines"">Guidelines</h2>\n\n<p>Add your robot\'s MoveIt configuration package to the root of this repository. </p>\n\n<p>Name the package YOURROBOT_moveit_config... for example \'pr2_moveit_config\'</p>\n\n<p>Add a README.md file inside your robot\'s config package that explains where and how to get your robot\'s URDF file - i.e. where to download the corresponding YOURROBOT_description package that contains your robot\'s URDF file.</p>\n</div>\n\n            \n          </div>'"
metaruby,http://rosindex.github.io/r/metaruby/,indigo,metaruby,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><a href=""https://travis-ci.org/rock-core/tools-metaruby""><img src=""https://travis-ci.org/rock-core/tools-metaruby.svg?branch=master"" alt=""Build Status""></a>\n<a href=""http://badge.fury.io/rb/metaruby""><img src=""https://badge.fury.io/rb/metaruby.svg"" alt=""Gem Version""></a>\n<a href=""http://rubydoc.info/gems/metaruby/frames""><img src=""http://b.repl.ca/v1/yard-docs-blue.png"" alt=""Documentation""></a></p>\n\n<h1 id=""metamodelling-in-the-ruby-type-system"">Metamodelling in the Ruby type system</h1>\n\n<p>MetaRuby is a library that allows to (ab)use the Ruby type system to create\nreflexive programs: create a specialized modelling API (a.k.a. ""a DSL"") at the\nclass/module level and then get access to this model information from the\nobjects.</p>\n\n<p>This page will describe the various functionality that metaruby provides to help\nmodelling in Ruby.</p>\n\n<p>This page will reuse one of the most overused example of modelling: a car and\ncolors.</p>\n\n<h2 id=""models"">Models</h2>\n\n<p>Using MetaRuby, models can either be represented by Ruby classes or by Ruby\nmodules. You use the first one when you want to model something from which an\nobject can be created, in our example: a car. You use the second for things that\ncannot be instanciated, but can be used as attributes of another object, in our\nexample: a color.</p>\n\n<p>Another point of terminology: <em>metamodel</em>. The metamodel is the\nmodel-of-the-model, i.e. it is the bits and pieces that allow to describe a\nmodel (the model itself describing an object). As you will see, metamodels in\nMetaRuby are all described in modules.</p>\n\n<h2 id=""models-as-classes"">Models as classes</h2>\n\n<p>The metamodel of models that are represented by classes must include\n{MetaRuby::ModelAsClass} and are then used to extend said class</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">module Models\n  module Car\n    include MetaRuby::ModelAsClass\n  end\nend\nclass Car\n  extend Models::Car\nend\n</code></pre></div>\n<p>Then, creating a new Car model is done by subclassing the Car class:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">class Peugeot &lt; Car\n  # Call methods from the modelling DSL defined by Models::Car\nend\n</code></pre></div>\n<p>This creates a <em>named model</em>, i.e. a model that can be accessed by name. Another\nway is to create an anonymous model by calling {MetaRuby::ModelAsClass#new_submodel new_submodel}:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">model = Car.new_submodel do\n  # Call methods from the modelling DSL defined by Models::Car\nend\n</code></pre></div>\n<p>Note that this mechanism naturally extends to submodels-of-submodels, e.g.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">class P806 &lt; Peugeot\n  # Call methods from the modelling DSL defined by Models::Car\nend\n</code></pre></div>\n<h2 id=""models-as-modules"">Models as modules</h2>\n\n<p>The metamodel of models that are represented by modules must include\n{MetaRuby::ModelAsModule} and are then used to extend said module</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">module Models\n  module Color\n    include MetaRuby::ModelAsModule\n  end\nend\nmodule Color\n  extend Models::Color\nend\n</code></pre></div>\n<p>Then, creating a new Color model is done by calling {MetaRuby::ModelAsModule#new_submodel new_submodel} on Color</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">red = Color.new_submodel\n</code></pre></div>\n<p>A common pattern is to define a method on the Module class, that creates new\nmodels and assigns them to constants. MetaRuby provides a helper method for this\npurpose, that we strongly recommend you use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">class Module\n  def color(name, &amp;block)\n    MetaRuby::ModelAsModule.create_and_register_submodel(self, name, Color, &amp;block)\n  end\nend\n</code></pre></div>\n<p>Which can then be used with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">module MyNamespace\n  color \'Red\' do\n    # Call methods from the color modelling DSL defined by Models::Color\n  end\nend\n</code></pre></div>\n<p>The new Red color model can then be accessed with MyNamespace::Red</p>\n\n<p>A model hierarchy can be built by telling MetaRuby that a given model <em>provides</em>\nanother one, for instance:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">color \'Yellow\' do\n  provides Red\n  provides Green\nend\n</code></pre></div>\n<p>And, finally, a class-based model can provide a module-based one:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">class Peugeot &lt; Car\n  # All peugeots are yellow\n  provides Yellow\nend\n</code></pre></div>\n<h1 id=""attributes"">Attributes</h1>\n\n<p>One important part of the whole modelling is to list <em>attributes</em> of the things\nthat are getting modelled. The important bit being the definition of what should\nhappen when creating a new submodel for an existing model. Even though we will\nuse the class-as-model representation in all the following examples, the exact\nsame mechanisms are available in the model-as-module. The only difference is\nthat a class-as-model is a submodel of all its parent classes while a\nclass-as-module is a submodel of all the other modules it provides.</p>\n\n<h1 id=""zero-or-one-attributes"">Zero-or-one attributes</h1>\n\n<p>These are attributes that hold at most one value (and possibly none). The\ntypical example is the predicate (boolean attribute)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">module Models::Car\n  include MetaRuby::ModelAsClass\n\n  # Attribute inherited along the hierarchy of models\n  inherited_single_value_attribute(""number_of_doors"")\nend\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">class SportsCar &lt; Car\n  # Make the default number of doors of all sports car 2\n  number_of_doors 2\nend\nclass ASportsCar &lt; SportsCar\n  # Actually, this one has a trunk\n  number_of_doors 3\nend\nclass AnotherSportsCar &lt; SportsCar\nend\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Car.number_of_doors =&gt; nil\nSportsCar.number_of_doors =&gt; 2\nASportsCar.number_of_doors =&gt; 3\nAnotherSportsCar.number_of_doors =&gt; 2 # Inherited from SportsCar\n</code></pre></div>\n<h2 id=""set-attributes"">Set attributes</h2>\n\n<p>These are attributes that hold a set of values. When taking into account the\nhierarchy of models, the set for a model X is the union of all the sets of X and\nall its parents:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">module Models::Car\n  include MetaRuby::ModelAsClass\n  # Attribute inherited along the hierarchy of models\n  inherited_attribute(""material"", ""materials"")\nend\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">class Car\n  extend Models::Car\n  materials &lt;&lt; \'iron\' # all cars contain iron\nend\nclass Peugeot &lt; Car\n  materials &lt;&lt; \'plastic\' # additionally, all peugeot cars contain plastic\nend\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Car.each_material.to_a =&gt; [\'iron\']\nPeugeot.each_material.to_a =&gt; [\'iron\', \'plastic\']\nCar.all_materials =&gt; [\'iron\']\nPeugeot.all_materials =&gt; [\'iron\', \'plastic\']\nCar.self_materials =&gt; [\'iron\']\nPeugeot.self_materials =&gt; [\'plastic\']\n</code></pre></div>\n<h2 id=""named-attributes"">Named attributes</h2>\n\n<p>In certain situations, elements of the sets that we represented in the previous\nsection can actually have names (where the names are actually part of the\nmodelling). </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">module Models::Car\n  include MetaRuby::ModelAsClass\n  # Attribute inherited along the hierarchy of models\n  inherited_attribute(""door_color"", ""door_colors"")\n  def number_of_doors\n    all_door_colors.to_a.size\n  end\nend\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">class Car\n  extend Models::Car\n  door_colors[\'driver\'] = Color # There is a driver door, but we don\'t know\n                                # the color\n  door_colors[\'other\'] = Color # There is another door, but we don\'t know\n                                # the color\nend\nclass Peugeot &lt; Car\n  # All peugeot have a red driver door and a green trunk door\n  door_colors[\'driver\'] = Red\n  door_colors[\'trunk\'] = Green\nend\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Car.self_door_colors =&gt; {\'driver\' =&gt; Color, \'other\' =&gt; Color }\nCar.all_door_colors =&gt; {\'driver\' =&gt; Color, \'other\' =&gt; Color }\nPeugeot.self_door_colors =&gt; {\'driver\' =&gt; Red, \'trunk\' =&gt; Green }\nPeugeot.self_door_colors =&gt; {\'driver\' =&gt; Red, \'other\' =&gt; Color, \'trunk\' =&gt; Green }\n</code></pre></div>\n<h2 id=""value-promotion"">Value promotion</h2>\n\n<p>In some cases, one need to modify the values inherited from the parent models\nbefore they can become proper attributes of the child model, commonly because\nthe objects stored in the attributes refer to the model they are part of. For\ninstance, let\'s assume we have a Door object defined thus:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Door = Struct :car_model, :color\n</code></pre></div>\n<p>and</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Car.doors[\'driver\'] = Door.new(Car, Color)\nCar.doors[\'other\'] = Door.new(Car, Color)\n</code></pre></div>\n<p>Now,</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Peugeot.find_door(\'driver\').car_model =&gt; Car\n</code></pre></div>\n<p>In most cases, we would like to have this last value be Peugeot. This can be\ndone by defining a promotion method on the metamodel <em>before</em> the inherited\nattribute is defined:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">module Models::Car\n  # Called to promote a door model from its immediate supermodel to this\n  # model\n  def promote_door(door_name, door)\n    # You have to create a new door object !\n    door = door.dup\n    door.car_model = self\n    door\n  end\n\n  # Define the attribute *after* the promotion method\n  inherited_attribute(""door"", ""doors"")\nend\n</code></pre></div>\n<h1 id=""model-registration"">Model Registration</h1>\n\n<p>The last bit that MetaRuby takes care of is to register all models that have\nbeen defined, allowing to browse them by type. For instance, all models based on\nthe Car model can be enumerated with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Car.each_submodel\n</code></pre></div>\n<p>Because this mechanism keeps a reference on all model objects, it is necessary\nto clear the registered submodels dealing with e.g. tests that create submodels\non the fly. This is done by calling {MetaRuby::Registration#clear_submodels\nclear_submodels} in the tests teardown:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Car.clear_submodels\n</code></pre></div>\n<p>This will only clear anonymous models. Models that are created either by\nsubclassing a model class or by using\n{MetaRuby::ModelAsModule.create_and_register_submodel}\nare marked as\n{MetaRuby::Registration#permanent_model?} and therefore\nprotected from removal by #clear_submodel</p>\n\n<h1 id=""adding-options-to-the-submodel-creation-process"">Adding options to the submodel creation process</h1>\n\n<p>If you need to customize the submodel creation process, for instance by\nproviding options to the subprocess, do so by overloading #setup_submodel. Do\nNOT overload #new_submodel unless you really know what you are doing, and pass\nthe options as an option hash</p>\n</div>\n\n            \n          </div>'"
maggie_navigation,http://rosindex.github.io/r/maggie_navigation/,"hydro,indigo","maggie_create_map,maggie_navigation,maggie_navigation_config,maggie_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""maggie_navigation"">maggie_navigation</h1>\n\n<p>GitHub repository for the navigation for the Social Robot Maggie.</p>\n\n<h2 id=""content"">CONTENT</h2>\n\n<ul>\n<li>\n<code>maggie_navigation</code>: a ROS metapackage.</li>\n<li>\n<code>maggie_navigation_config</code>: a ROS package with the launch and config files necessary to start the navigation, both real and simulated.</li>\n<li>\n<code>maggie_teleop</code>: a ROS package with the launch and config files necessary to start the teleoperation.</li>\n</ul>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The license of the packages is custom LASR-UC3M (Licencia Acad\xc3\xa9mica Social Robotics Lab - UC3M), an open, non-commercial license which enables you to download, modify and distribute the code as long as you distribute the sources.  </p>\n\n<h2 id=""acknowledgements"">ACKNOWLEDGEMENTS</h2>\n\n<p><img src=""http://ieee.uc3m.es/images/thumb/b/b6/Roboticslab_text_new.jpg/128px-Roboticslab_text_new.jpg"" alt=""RoboticsLab"">\n<img src=""http://ieee.uc3m.es/images/thumb/6/6b/Logo_uc3m_letras.png/256px-Logo_uc3m_letras.png"" alt=""UC3M""></p>\n</div>\n\n            \n          </div>'"
roswww,http://rosindex.github.io/r/roswww/,"hydro,fuerte,groovy,jade,indigo","roswww,roswww_pack,roswww_pkg","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""roswww"">roswww</h1>\n\n<p>See <a href=""./doc/index.rst"">./doc/index.rst</a> for documentation.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""roswww"">roswww</h1>\n\n<p>roswww and roswww_pack. Convenient tool to develop the web apps under ROS infrastructure</p>\n</div>\n\n            \n          </div>'"
rosconsole_bridge,http://rosindex.github.io/r/rosconsole_bridge/,"hydro,fuerte,groovy,kinetic,jade,indigo",rosconsole_bridge,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosconsole_bridge"">rosconsole_bridge</h1>\n\n<p>Pipes console_bridge output to rosconsole/rosout when console_bridge is used in a ROS-dependent package</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
control_msgs,http://rosindex.github.io/r/control_msgs/,"hydro,groovy,kinetic,jade,indigo",control_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""control_msgs"">control_msgs</h1>\n\n<p>See <a href=""http://wiki.ros.org/control_msgs"">control_msgs documentation</a> on ros.org</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
calibration,http://rosindex.github.io/r/calibration/,"hydro,fuerte,groovy,kinetic,jade,indigo","calibration,calibration_estimation,calibration_launch,calibration_msgs,calibration_setup_helper,image_cb_detector,interval_intersection,joint_states_settler,laser_cb_detector,monocam_settler,settlerlib","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rtmros_gazebo,http://rosindex.github.io/r/rtmros_gazebo/,"hydro,indigo","eusgazebo,hrpsys_gazebo_atlas,hrpsys_gazebo_general,hrpsys_gazebo_msgs,hrp2jsk_moveit_config,hrp2jsknt_moveit_config,hrp2jsknts_moveit_config,hrp2w_moveit_config,moveit_eus_ik_plugin,samplerobot_moveit_config,staro_moveit_config","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""rtmros_gazebo"">rtmros_gazebo  <a href=""https://travis-ci.org/start-jsk/rtmros_gazebo""><img src=""https://travis-ci.org/start-jsk/rtmros_gazebo.png"" alt=""Build Status""></a>\n</h2>\n\n<p><a href=""http://gazebosim.org"">gazebo</a> simulation for rtmros robots</p>\n\n<h3 id=""install"">Install</h3>\n\n<p>Please refer <a href=""https://github.com/start-jsk/rtmros_common"">rtmros_common</a> for installing these packages.</p>\n\n<h3 id=""package-description"">Package Description</h3>\n\n<h3 id=""hrpsys_gazebo_general""><a href=""https://github.com/start-jsk/rtmros_gazebo/tree/master/hrpsys_gazebo_general"">hrpsys_gazebo_general</a></h3>\n\n<p>This package consists iob.cpp which is low-level interface of RobotHardware on hrpsys and IOBPlugin.cpp which is gazebo plugin to comunicate with iob.cpp.</p>\n\n<h4 id=""environment-variables-used-in-iob-cpp"">Environment variables used in iob.cpp</h4>\n\n<ul>\n<li>HRPSYS_GAZEBO_IOB_NAME\n\n<ul>\n<li>ROS node name of hrpsys(RobotHardware) node. (default: ""hrpsys_gazebo_iob"")</li>\n</ul>\n</li>\n<li>HRPSYS_GAZEBO_CONFIGURATION\n\n<ul>\n<li>ROS namespace of configuration parameters. (default: ""hrpsys_gazebo_configuration"")</li>\n</ul>\n</li>\n<li>HRPSYS_GAZEBO_ROBOTNAME\n\n<ul>\n<li>Robot Name</li>\n</ul>\n</li>\n<li>HRPSYS_GAZEBO_IOB_SYNCHRONIZED\n\n<ul>\n<li>Synchronized mode between  hrpsys step and gazebo step. (default: false)</li>\n</ul>\n</li>\n<li>HRPSYS_GAZEBO_IOB_SUBSTEPS\n\n<ul>\n<li>Number of substeps. Controlling command will be sent in every substeps. (default: 1)</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=""hrpsys_gazebo_tutorials""><a href=""https://github.com/start-jsk/rtmros_gazebo/tree/master/hrpsys_gazebo_tutorials"">hrpsys_gazebo_tutorials</a></h3>\n\n<p>This package is a collection of examples for using hrpsys_gazebo system and utility scripts.</p>\n\n<ul>\n<li>You should prepare robot model file. Supported types of model file are collada(openrave) and VRML(openhrp3). URDF and OpenRAVE xml can be used by converting to collada.\n\n<ul>\n<li>\n<em>&lt;robot_name&gt;</em>.yaml for configurating gazebo setting and hrpsys setting</li>\n<li>(automatically generated) <em>&lt;robot_name&gt;</em>.urdf under robot_models/<em>&lt;robot_name&gt;</em> directory</li>\n<li>(automatically generated) hrpsys settings (you should have a collada or VRML robot model file)</li>\n<li>\n<em>&lt;robot_name&gt;</em>_optional_urdf_setting.sh under robot_models/<em>&lt;robot_name&gt;</em> directory, this is for adding description used by gazebo (such as sensor settings, collision and friction setting)</li>\n</ul>\n</li>\n</ul>\n\n<h4 id=""setting-of-lt-robot_name-gt-yaml-files"">Setting of <em>&lt;robot_name&gt;</em>.yaml files</h4>\n\n<p>This is yaml file for configuring gazebo setting.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""># top level name space()\nhrpsys_gazebo_configuration:\n# velocity feedback for joint control, use parameter gains/joint_name/p_v\n  use_velocity_feedback: true\n# synchronized hrpsys and gazebo\n  use_synchronized_command: false\n# name of robot (using for namespace)\n  robotname: SampleRobot\n# joint_id (order) conversion from gazebo to hrpsys, joint_id_list[gazebo_id] := hrpsys_id\n  joint_id_list: [0, ... , 28]\n# joints list used in gazebo, sizeof(joint_id_list) == sizeof(joints)\n  joints:\n    - RLEG_HIP_R\n    - CHEST\n# joint gain settings\n# Torque feedback mode\n# effort := p * error + d * d/dt error + i * sigma (error) + vp * velocity_error\n#   error := reference_position - current_position\n#   velocity_error := reference_velocity - current_velocity\n# Velociy feedback mode\n# desired_velocity := p_v * error + reference_velocity\n  gains:\n    LLEG_HIP_R:      {p: 12000.0, d:  4.0, i: 0.0, vp:  6.0, i_clamp: 0.0, p_v: 250.0}\n    RARM_WRIST_R:    {p:    20.0, d:  0.1, i: 0.0, vp:  0.0, i_clamp: 0.0, p_v: 100.0}\n# force sensor settings\n#   list of force sensorname\n  force_torque_sensors:\n    - lfsensor\n    - rfsensor\n# configuration of force sensor\n#   key of force_torque_sensors_config should be a member of force_torque_sensors\n  force_torque_sensors_config:\n    lfsensor: {joint_name: \'JOINT_NAME0\', frame_id: \'LINK_NAME0\', translation: [0, 0, 0], rotation: [1, 0, 0, 0]}\n    rfsensor: {joint_name: \'JOINT_NAME1\', frame_id: \'LINK_NAME0\', translation: [0, 0, 0], rotation: [1, 0, 0, 0]}\n# IMU sensor settings\n# configuration of IMU sensor\n#   key of imu_sensors_config should be a member of imu_sensors\n  imu_sensors:\n    - imu_sensor0\n  imu_sensors_config:\n    imu_sensor0: {ros_name: \'ros_imu_sensor\', link_name: \'LINK_NAME0\', frame_id: \'LINK_NAME0\'}\n</code></pre></div>\n<h4 id=""automatically-generated-files"">(automatically generated files)</h4>\n\n<p>You can use robot_models/install_robot_common.sh for installing urdf model file. This scripts converts collada file in <a href=""https://github.com/start-jsk/rtmros_tutorials/tree/master/hrpsys_ros_bridge_tutorials"">hrpsys_ros_bridge_tutorials</a>/models directory to urdf file. </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">./install_robot_common.sh ROBOT_NAME (model directory) (output directory) (collada_to_urdf_binary) (additional_ros_package_path)\n</code></pre></div>\n</div>\n\n            \n          </div>'"
object_recognition_renderer,http://rosindex.github.io/r/object_recognition_renderer/,"hydro,jade,indigo",object_recognition_renderer,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mapir-ros-pkgs,http://rosindex.github.io/r/mapir-ros-pkgs/,indigo,rf2o_laser_odometry,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mapir-ros-pkg"">mapir-ros-pkg</h1>\n\n<p>This repository provides ROS pkgs and tools from the Machine Perception and Intelligent Robotics research group <a href=""http://mapir.isa.uma.es"">(MAPIR)</a>.</p>\n\n<p>Documentation and Tutorials can be found in the ROS-Wiki: <a href=""http://wiki.ros.org/mapir-ros-pkgs"">http://wiki.ros.org/mapir-ros-pkgs</a></p>\n</div>\n\n            \n          </div>'"
bus_server,http://rosindex.github.io/r/bus_server/,indigo,bus_server,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bus_server"">bus_server</h1>\n\n<p><a href=""https://travis-ci.org/UbiquityRobotics/bus_server""><img src=""https://travis-ci.org/UbiquityRobotics/bus_server.svg?branch=master"" alt=""Build Status""></a></p>\n\n<p>The bus_server module is one of many firmware side pieces of code used in the Ubiquity Robotics platforms that use a ROS Arduino Bridge subsystem such as Loki and Freya.</p>\n\n<p>These commands are in general a subset of the official ROS Arduino Bridge commands with other commands added that use letters not defined by the official ROS Arduino Package as seen in ROS Hydra.</p>\n\n<p>This readme is meant to document the commands that are received by bus_server and then processed here or in other modules.   The bus_server is the place where serial API is presented through the uart interface.</p>\n\n<h2 id=""firmware-commands-for-ubiquity-robotics-implementation"">Firmware Commands For Ubiquity Robotics Implementation</h2>\n\n<p>The single-letter commands over the serial port are used for polling sensors, controlling servos, driving the robot, and reading encoders.  These commands can be sent to the Arduino over any serial interface, including the Serial Monitor in the Arduino IDE.</p>\n\n<p><strong>NOTE:</strong> Before trying these commands, set the Serial Monitor baudrate to 115200 and the line terminator to ""Carriage return"" or ""Both NL &amp; CR"" using the two pulldown menus on the lower right of the Serial Monitor window.</p>\n\n<pre>\nCommand Name   Cmd  Parms     Description\nGET_BAUDRATE    b             Return baud rate (often used as a quick test or ping)\nREAD_ENCODERS   e             Return the current reading of the two wheel encoders\nMOTOR_SPEEDS    m L R         Set motor speeds for left and right to be controlled by PID\nPING            p S           Read one sonar sensor starting with sensor 1.  0 returns all.\nRESET_ENCODERS  r             Reset encoder values both to 0\nUPDATE_PID      u Kp Kd Ki Ko Update PID parameters with \nVERBOSE_DEBUG   v F           Set single bit flags to enable assorted debug modes \nMOTOR_DIRECT    z L R         Set motor speeds for left and right directly -126 to +126\n\nNote: Commands of   a,c,d,s,t,w, and x are NOT supported in this firmware\n</pre>\n</div>\n\n            \n          </div>'"
hector_nist_arenas_gazebo,http://rosindex.github.io/r/hector_nist_arenas_gazebo/,"hydro,fuerte,electric,groovy,jade,indigo","hector_nist_arena_designer,hector_nist_arena_elements,hector_nist_arena_worlds","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
laser_pipeline,http://rosindex.github.io/r/laser_pipeline/,"hydro,fuerte,groovy,kinetic,jade,indigo","laser_pipeline,laser_assembler,laser_filters,laser_geometry","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""laser-pipeline"">Laser Pipeline</h1>\n\n<p>This is a meta-package of libraries for processing laser data, including\nconverting laser data into 3D representations.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
object_recognition_tabletop,http://rosindex.github.io/r/object_recognition_tabletop/,"jade,groovy,fuerte,indigo",object_recognition_tabletop,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a port of the old tabletop to the object recognition infrastructure\nAre deprecated:\n- ping_tabletop_node.cpp service to just ping the recognition system: that is not needed anymore with the new OR\n- tabletop_complete_node.cpp: not necessary anymore\n\nHave not been re-implemented:\n- ping_segment_object_in_hand.cpp\n\nHave been modified:\n- Shape is now copied from arm_navigation_msgs\n\nPlease see http://wg-perception.github.io/tabletop for documentation.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a port of the old tabletop to the object recognition infrastructure\nAre deprecated:\n- ping_tabletop_node.cpp service to just ping the recognition system: that is not needed anymore with the new OR\n- tabletop_complete_node.cpp: not necessary anymore\n\nHave not been re-implemented:\n- ping_segment_object_in_hand.cpp\n\nHave been modified:\n- Shape is now copied from arm_navigation_msgs\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
fetch_gazebo,http://rosindex.github.io/r/fetch_gazebo/,indigo,"fetch_gazebo,fetch_gazebo_demo","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fetch-gazebo"">Fetch Gazebo</h1>\n\n<p>This repository contains the Gazebo simulation for Fetch Robotics Fetch and\nFreight Research Edition Robots.</p>\n\n<ul>\n<li>Devel Job Status: <a href=""http://build.ros.org/view/Idev/job/Idev__fetch_gazebo__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__fetch_gazebo__ubuntu_trusty_amd64"" alt=""Build Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://build.ros.org/view/Ibin_uT64/job/Ibin_uT64__fetch_gazebo__ubuntu_trusty_amd64__binary/""><img src=""http://build.ros.org/buildStatus/icon?job=Ibin_uT64__fetch_gazebo__ubuntu_trusty_amd64__binary"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
laser_assembler,http://rosindex.github.io/r/laser_assembler/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo",laser_assembler,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roslisp,http://rosindex.github.io/r/roslisp/,"hydro,groovy,kinetic,jade,indigo",roslisp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""roslisp"">roslisp</h1>\n\n<p>Common Lisp library for interaction with ROS (Robot operating system).</p>\n\n<p>See <a href=""http://www.ros.org/wiki/roslisp"">http://www.ros.org/wiki/roslisp</a></p>\n\n<p>Tested using SBCL.</p>\n</div>\n\n            \n          </div>'"
rwt_ros,http://rosindex.github.io/r/rwt_ros/,"hydro,jade,groovy,indigo","mjpegcanvas,ros2djs,ros3djs,ros3djs_experimental,roslibjs,roslibjs_experimental,rwt_ros,roswww","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rwt_ros"">rwt_ros</h1>\n\n<p>ros package wrapper of robotwebtools</p>\n\n<h2 id=""install"">INSTALL</h2>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">rosws <span class=""nb"">set</span> --git rwt_ros https://github.com/tork-a/rwt_ros.git\nrosws update rwt_ros\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
patrolling_sim,http://rosindex.github.io/r/patrolling_sim/,"jade,indigo",patrolling_sim,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>=================================</p>\n\n<h1 id=""patrolling_sim-v2-2-1-jan-2016"">patrolling_sim v2.2.1 (Jan. 2016)</h1>\n\n<p>patrolling_sim for ROS (Groovy/Hydro/Indigo) -- catkin version</p>\n\n<p>Authors:</p>\n\n<p>Main framework and basic algorithms:\n David Portugal (2011-2014), Luca Iocchi (2014-2015)</p>\n\n<p>Additional algorithms:\n* DTAP: Alessandro Farinelli (2014)</p>\n\n<p>*** NOTE ***\nFork <a href=""https://github.com/gennari/patrolling_sim"">https://github.com/gennari/patrolling_sim</a> implements a distributed execution\nof the patrolling environment that can be used also on real robots. \nThese two branches will be merged soon.</p>\n\n<hr>\n\n<p>This package contains the implementation of several algorithms for multi-robot patrolling and a general structure of a PatrolAgent that can be extended to implement other ones.\nIt extends previous version of patrolling_sim with an improved structure of the code that allows easy integration of new algorithms, an improved navigation configuration that allows the robots to move at 1 m/s and to avoid most of conflicting situations, and a better management of the experiments and generation of the results.</p>\n\n<p>The software is released as a ROS catkin package and requires the navigation stack (e.g., ros-indigo-navigation).\nFor a quick try, just compile the workspace (\'catkin_make\'), start the script \'./start_experiment.py\',\nmake your choices and see the experiment running. </p>\n\n<p>WARNING: sometimes (on some machines) the very first run does not work, because of timing problems with roscore. \nEither restart the experiment a second time, or run roscore once before starting the experiment.</p>\n\n<p>Several maps are available in the \'maps\' folder. For map X the patrol graph is visible in the file\nmaps/X/X-graph.png </p>\n\n<p>Several algorithms have been implemented in the \'src\' folder. Each method is implemented through a class \'X_Agent\' that inherits from the abstract class \'PatrolAgent\' many common services and functions.</p>\n\n<p>Results of the experiments are stored in the \'results\' folder.</p>\n\n<p>In order to run a particular experiment or a set of experiments, use the run-exp.sh script template.\nIt is convenient to copy this file in a new file that you can edit as you wish.\nFor example, the current version of run_exp.sh allows to run an experiment for \nDISlabs, with 8 robots, 30 minutes, using DTAP algorithm, and other standard parameters.\nAfter 30 minutes the experiment terminates and the results will be available in the files\nresults/{map}_{n.robots}/{algorithm}/{machine}/{date}*</p>\n\n<p>The following result files are produced:</p>\n\n<p>1) info.csv - contains a summary of the results of the experiment in a CSV format with the following values:</p>\n\n<p>Map ; N. robots ; Goal wait time ; Communication delay ; Navigation module ; MRP Algorithm ; MRP Algorithm parameters ; Machine ; Date ; \n  Sim Time ; Real time ; Interferences ; Termination status ; Idleness min ; avg    ; stddev ; max ; \n  Interference rate ; Total visits ; Avg visit per node ;   Complete patrol cycles</p>\n\n<p>2) results.txt - contains some information about the evolution of results in a text format</p>\n\n<p>3) idleness.csv - contains the following results in a CSV format </p>\n\n<p>Time ; Robot ; Node ; Node Idleness ; Interferences </p>\n\n<p>4) timeresults.csv - contains evolution over time of the following results in a CSV format</p>\n\n<p>Time ; Idleness min ; avg ; stddev ; max ; Interferences</p>\n\n<p>The script can be extended to run multiple experiments in a single session, by just adding new commands like the one in the examples (possibly with different parameters).</p>\n\n<hr>\n\n<p>*** NEW NAVIGATION MODULES ***</p>\n\n<p>Default navigation modules are standard ROS nodes amcl (localization) and move_base (path planning and motion control).\nThey work (usually) fine, but they require many computational resources that may limit the simulation of many robots \nin a single machine.</p>\n\n<p>New navigation modules, called thin_navigation, are available at <a href=""https://bitbucket.org/ggrisetti/thin_navigation"">https://bitbucket.org/ggrisetti/thin_navigation</a>.\nthin_localizer and thin_planner have the same interface as amcl and move_base so they can be used in their replacement\nby just changing the launch file. To install thin_navigation, just download the package in a catkin workspace and\ncompile it with catkin_make (see README file for other details).</p>\n\n<p>The thin_navigation modules have been fully integrated in patrolling_sim. Just select thin_navigation instead of ros\nas navigation module either in the start_experiment.py GUI or in the run_exp.sh script.</p>\n\n<p>Warning: the thin_navigation modules are still under testing and debug!!!</p>\n\n<hr>\n\n<p>*** NEW SUPPORT FOR EXTENDED STAGE API ***</p>\n\n<p>NOTE: Extended API for stage are available with customized versions of stage and stageros.\n(See <a href=""https://github.com/iocchi/stage_ros"">https://github.com/iocchi/stage_ros</a> for details).</p>\n\n<p>With the use of the extended API it is possible to control activation of some GUI elements\nin Stage (e.g., footprints, simulation speedup, and screenshots).\nSet the Custom Stage flag to true in run_exp.sh script to activate these functions.</p>\n</div>\n\n            \n          </div>'"
ivcon,http://rosindex.github.io/r/ivcon/,"hydro,groovy,kinetic,jade,indigo",ivcon,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
katana_driver,http://rosindex.github.io/r/katana_driver/,"hydro,fuerte,electric,groovy,diamondback,jade,indigo","katana,katana_arm_gazebo,katana_description,katana_driver,katana_gazebo_plugins,katana_moveit_ikfast_plugin,katana_msgs,katana_teleop,katana_tutorials,kni,katana_ikfast_kinematics_plugin,katana_joint_movement_adapter,katana_kinect_calibration,katana_trajectory_filter","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""katana_driver"">katana_driver</h1>\n\n<p>This stack contains ROS hardware drivers, Gazebo plugins and other basic functionalities for the Neuronics Katana family of robot arms. Specifically, it provides: </p>\n\n<ul>\n<li>JointTrajectory and FollowJointTrajectory execution on the physical arm (packages <code>katana</code>, <code>kni</code>, <code>katana_trajectory_filter</code>, <code>katana_msgs</code>),</li>\n<li>simulation of the Katana arm in Gazebo (packages <code>katana_gazebo_plugins</code>, <code>katana_arm_gazebo</code>),</li>\n<li>URDF descriptions (package <code>katana_description</code>),</li>\n<li>simple teleoperation (packages <code>katana_teleop</code>, <code>katana_joint_movement_adapter</code>), and</li>\n<li>some demo programs (package <code>katana_tutorials</code>).</li>\n</ul>\n\n<p>For more information, visit the <a href=""http://www.ros.org/wiki/katana_driver"">katana_driver ROS wiki page</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_common,http://rosindex.github.io/r/pr2_common/,"hydro,fuerte,groovy,kinetic,jade,indigo","pr2_common,pr2_dashboard_aggregator,pr2_description,pr2_machine,pr2_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
oxford_gps_eth,http://rosindex.github.io/r/oxford_gps_eth/,"kinetic,indigo",oxford_gps_eth,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""etherent-interface-to-oxts-gps-receivers-using-the-ncom-packet-structure"">Etherent interface to OxTS GPS receivers using the NCOM packet structure</h1>\n\n<p><img src=""https://bitbucket.org//DataspeedInc/oxford_gps_eth/raw/default//RT3v2.jpg"" alt=""""></p>\n\n<p>Tested with the RT3000v2 receiver.</p>\n\n<h3 id=""published-topics"">Published Topics</h3>\n\n<ul>\n<li>\n<code>gps/fix</code> (<a href=""http://docs.ros.org/api/sensor_msgs/html/msg/NavSatFix.html"">sensor_msgs/NavSatFix</a>) GPS position</li>\n<li>\n<code>gps/vel</code> (<a href=""http://docs.ros.org/api/geometry_msgs/html/msg/TwistWithCovarianceStamped.html"">geometry_msgs/TwistWithCovarianceStamped</a>) GPS velocity in utm frame</li>\n<li>\n<code>gps/odom</code> (<a href=""http://docs.ros.org/api/nav_msgs/html/msg/Odometry.html"">nav_msgs/Odometry</a>) GPS velocity in utm frame</li>\n<li>\n<code>imu/data</code> (<a href=""http://docs.ros.org/api/sensor_msgs/html/msg/Imu.html"">sensor_msgs/Imu</a>) Orientation, angular rates, linear accelerations</li>\n</ul>\n\n<h3 id=""parameters"">Parameters</h3>\n\n<ul>\n<li>\n<code>interface</code> Restrict to single network interface, example: <code>eth0</code>. Default <code>&lt;empty&gt;</code>\n</li>\n<li>\n<code>ip_address</code> Restrict to single ip address. Default <code>&lt;empty&gt;</code>\n</li>\n<li>\n<code>port</code> UDP listen port. Default <code>3000</code>\n</li>\n<li>\n<code>frame_id</code> The frame-ID for gps position and imu. Default <code>gps</code>\n</li>\n<li>\n<code>frame_id_vel</code> The frame-ID for gps velocity. Default <code>utm</code>\n</li>\n</ul>\n\n<h3 id=""example-usage"">Example usage</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun oxford_gps_eth gps_node\n\n</code></pre></div>\n<h3 id=""faq"">FAQ</h3>\n\n<p>I see \n<code>Connected to Oxford GPS at &lt;ip_address&gt;:3000\n</code>, but no messages are published.<br>\nInvalid data is not published. Move faster than 5 m/s to initialize the sensor.</p>\n</div>\n\n            \n          </div>'"
schunk_robots,http://rosindex.github.io/r/schunk_robots/,"hydro,fuerte,electric,groovy,indigo","schunk_lwa4d,schunk_lwa4d_moveit_config,schunk_lwa4p,schunk_lwa4p_extended,schunk_robots,schunk_bringup,schunk_bringup_sim,schunk_controller_configuration_gazebo,schunk_default_config,schunk_demo,schunk_hardware_config","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
staubli_experimental,http://rosindex.github.io/r/staubli_experimental/,"hydro,indigo","staubli_experimental,staubli_rx160_gazebo,staubli_tx90_gazebo,staubli_tx90_support","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""staubli-experimental"">Staubli experimental</h1>\n\n<p>Experimental packages for Staubli manipulators within <a href=""http://wiki.ros.org/Industrial"">ROS-Industrial</a>.\nSee the <a href=""http://wiki.ros.org/staubli_experimental"">ROS wiki</a> page for more information.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repository contains packages that will be migrated to the <a href=""https://github.com/ros-industrial/staubli"">staubli</a>\nrepository after they have received sufficient testing. The contents of\nthese packages are subject to change, without prior notice. Any available\nAPIs are to be considered unstable and are not guaranteed to be complete\nand / or functional.</p>\n</div>\n\n            \n          </div>'"
camera_info_manager_py,http://rosindex.github.io/r/camera_info_manager_py/,"hydro,fuerte,groovy,kinetic,jade,indigo",camera_info_manager_py,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""camera_info_manager_py"">camera_info_manager_py</h1>\n\n<p>ROS Python camera_info_manager interface, providing\n<a href=""http://ros.org/doc/api/sensor_msgs/html/msg/CameraInfo.html"">sensor_msgs/CameraInfo</a>\nsupport for camera drivers written in Python.</p>\n\n<p>ROS wiki documentation:\n<a href=""http://ros.org/wiki/camera_info_manager_py"">camera_info_manager_py</a>.</p>\n\n<p>This interface is similar to that of the C++\n<a href=""http://ros.org/wiki/camera_info_manager"">camera_info_manager</a>\npackage, but not identical.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p>This <a href=""http://ros.org"">ROS</a> package defines a Python\ncamera_info_manager interface, providing\n<a href=""http://ros.org/doc/api/sensor_msgs/html/msg/CameraInfo.html"">sensor_msgs/CameraInfo</a>\nsupport for camera drivers written in Python.</p>\n\n<p>ROS wiki documentation:\n<a href=""http://ros.org/wiki/camera_info_manager_py"">camera_info_manager_py</a>.</p>\n\n<p>This interface is similar to that of the C++\n<a href=""http://ros.org/wiki/camera_info_manager"">camera_info_manager</a>\npackage, but not identical.</p>\n</div>\n\n            \n          </div>'"
object_recognition_linemod,http://rosindex.github.io/r/object_recognition_linemod/,"hydro,jade,groovy,indigo",object_recognition_linemod,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
care_o_bot,http://rosindex.github.io/r/care_o_bot/,"hydro,indigo","care_o_bot,care_o_bot_desktop,care_o_bot_robot,care_o_bot_simulation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/care-o-bot""><img src=""https://travis-ci.org/ipa320/care-o-bot.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p>This is the deprecated open-source Care-O-bot repository. There is no source code here, it only serves to host meta-packages.</p>\n\n<p>The repository is now separated into multiple repositories:</p>\n\n<p><a href=""https://github.com/ipa320/cob_android.git"">https://github.com/ipa320/cob_android.git</a> <a href=""https://travis-ci.org/ipa320/cob_android""><img src=""https://travis-ci.org/ipa320/cob_android.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_calibration_data.git"">https://github.com/ipa320/cob_calibration_data.git</a> <a href=""https://travis-ci.org/ipa320/cob_calibration_data""><img src=""https://travis-ci.org/ipa320/cob_calibration_data.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_command_tools.git"">https://github.com/ipa320/cob_command_tools.git</a> <a href=""https://travis-ci.org/ipa320/cob_command_tools""><img src=""https://travis-ci.org/ipa320/cob_command_tools.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_common.git"">https://github.com/ipa320/cob_common.git</a> <a href=""https://travis-ci.org/ipa320/cob_common""><img src=""https://travis-ci.org/ipa320/cob_common.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_control.git"">https://github.com/ipa320/cob_control.git</a> <a href=""https://travis-ci.org/ipa320/cob_control""><img src=""https://travis-ci.org/ipa320/cob_control.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_driver.git"">https://github.com/ipa320/cob_driver.git</a> <a href=""https://travis-ci.org/ipa320/cob_driver""><img src=""https://travis-ci.org/ipa320/cob_driver.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_environment_perception.git"">https://github.com/ipa320/cob_environment_perception.git</a> <a href=""https://travis-ci.org/ipa320/cob_environment_perception""><img src=""https://travis-ci.org/ipa320/cob_environment_perception.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_environments.git"">https://github.com/ipa320/cob_environments.git</a> <a href=""https://travis-ci.org/ipa320/cob_environments""><img src=""https://travis-ci.org/ipa320/cob_environments.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_extern.git"">https://github.com/ipa320/cob_extern.git</a> <a href=""https://travis-ci.org/ipa320/cob_extern""><img src=""https://travis-ci.org/ipa320/cob_extern.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_gazebo_plugins.git"">https://github.com/ipa320/cob_gazebo_plugins.git</a> <a href=""https://travis-ci.org/ipa320/cob_gazebo_plugins""><img src=""https://travis-ci.org/ipa320/cob_gazebo_plugins.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_manipulation.git"">https://github.com/ipa320/cob_manipulation.git</a> <a href=""https://travis-ci.org/ipa320/cob_manipulation""><img src=""https://travis-ci.org/ipa320/cob_manipulation.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_navigation.git"">https://github.com/ipa320/cob_navigation.git</a> <a href=""https://travis-ci.org/ipa320/cob_navigation""><img src=""https://travis-ci.org/ipa320/cob_navigation.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_object_perception.git"">https://github.com/ipa320/cob_object_perception.git</a> <a href=""https://travis-ci.org/ipa320/cob_object_perception""><img src=""https://travis-ci.org/ipa320/cob_object_perception.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_people_perception.git"">https://github.com/ipa320/cob_people_perception.git</a> <a href=""https://travis-ci.org/ipa320/cob_people_perception""><img src=""https://travis-ci.org/ipa320/cob_people_perception.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_perception_common.git"">https://github.com/ipa320/cob_perception_common.git</a> <a href=""https://travis-ci.org/ipa320/cob_perception_common""><img src=""https://travis-ci.org/ipa320/cob_perception_common.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_robots.git"">https://github.com/ipa320/cob_robots.git</a> <a href=""https://travis-ci.org/ipa320/cob_robots""><img src=""https://travis-ci.org/ipa320/cob_robots.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_simulation.git"">https://github.com/ipa320/cob_simulation.git</a> <a href=""https://travis-ci.org/ipa320/cob_simulation""><img src=""https://travis-ci.org/ipa320/cob_simulation.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/cob_substitute.git"">https://github.com/ipa320/cob_substitute.git</a> <a href=""https://travis-ci.org/ipa320/cob_substitute""><img src=""https://travis-ci.org/ipa320/cob_substitute.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ros-industrial/ros_canopen.git"">https://github.com/ros-industrial/ros_canopen.git</a> <a href=""https://travis-ci.org/ros-industrial/ros_canopen""><img src=""https://travis-ci.org/ros-industrial/ros_canopen.svg?branch=indigo-devel"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ipa320/schunk_modular_robotics.git"">https://github.com/ipa320/schunk_modular_robotics.git</a> <a href=""https://travis-ci.org/ipa320/schunk_modular_robot%0Aics""><img src=""https://travis-ci.org/ipa320/schunk_modular_robotics.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p><a href=""https://github.com/ros-industrial/universal_robot.git"">https://github.com/ros-industrial/universal_robot.git</a> <a href=""https://travis-ci.org/ros-industrial/universal_robot""><img src=""https://travis-ci.org/ros-industrial/universal_robot.svg?branch=indigo-devel"" alt=""Build Status""></a></p>\n\n<p>and many more...</p>\n\n<p>Please follow the installation instructions on <a href=""http://www.ros.org/wiki/care-o-bot"">http://www.ros.org/wiki/care-o-bot</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is the deprecated open-source Care-O-bot repository.\n\nThe repository is now separated into multiple stacks:\n\nhttps://github.com/ipa320/cob_extern\nhttps://github.com/ipa320/cob_common\nhttps://github.com/ipa320/cob_driver\nhttps://github.com/ipa320/cob_robots\nhttps://github.com/ipa320/cob_simulation\n\nPlease follow the installation instructions on http://www.ros.org/wiki/care-o-bot.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
ardrone_autonomy,http://rosindex.github.io/r/ardrone_autonomy/,"hydro,fuerte,groovy,kinetic,jade,indigo",ardrone_autonomy,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ardrone_autonomy"">ardrone_autonomy</h1>\n\n<p><strong>(As of September 2015, ROS Hydro is End-Of-Lifed. This branch will not receive further updates)</strong></p>\n\n<p><a href=""http://ros.org"">ROS</a> Driver for <a href=""http://ardrone2.parrot.com/"">Parrot AR-Drone</a> 1.0 &amp; 2.0 Quadrocopters</p>\n\n<ul>\n<li>Documentation: <a href=""http://ardrone-autonomy.readthedocs.org/"">http://ardrone-autonomy.readthedocs.org/</a>\n</li>\n<li>ROS wiki page: <a href=""http://wiki.ros.org/ardrone_autonomy"">http://wiki.ros.org/ardrone_autonomy</a>\n</li>\n<li>Code API: <a href=""http://docs.ros.org/hydro/api/ardrone_autonomy/html"">http://docs.ros.org/hydro/api/ardrone_autonomy/html</a>\n</li>\n<li>Patched <em>ARDroneLib</em> repository: <a href=""https://github.com/AutonomyLab/ardronelib"">https://github.com/AutonomyLab/ardronelib</a>\n</li>\n<li>Author: <a href=""http://mani.im"">Mani Monajjemi</a> (<a href=""http://autonomylab.org"">Autonomy Lab</a>, <a href=""http://www.sfu.ca"">Simon Fraser University</a>) + <a href=""http://ardrone-autonomy.readthedocs.org/en/latest/contributers.html"">other contributers</a>\n</li>\n</ul>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<ul>\n<li>Travis: <a href=""https://travis-ci.org/AutonomyLab/ardrone_autonomy""><img src=""https://travis-ci.org/AutonomyLab/ardrone_autonomy.svg?branch=hydro-devel"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ardrone_autonomy-a-ros-driver-for-ardrone-1-0-amp-2-0"">ardrone_autonomy : A ROS Driver for ARDrone 1.0 &amp; 2.0</h1>\n\n<p>""ardrone_autonomy"" is a <a href=""http://ros.org/"" title=""Robot Operating System"">ROS</a> driver for <a href=""http://http://ardrone.parrot.com/parrot-ar-drone/select-site"">Parrot AR-Drone</a> quadrocopter. This driver is based on official <a href=""https://projects.ardrone.org/"">AR-Drone SDK</a> version 2.0 and supports both AR-Drone 1.0 and 2.0. ""ardrone_autonomy"" is a fork of <a href=""http://code.google.com/p/brown-ros-pkg/wiki/ardrone_brown"">AR-Drone Brown</a> driver. This package has been developed in <a href=""http://autonomy.cs.sfu.ca"">Autonomy Lab</a> of <a href=""http://www.sfu.ca"">Simon Fraser University</a> by <a href=""http://sfu.ca/%7Emmonajje"">Mani Monajjemi</a> ( +other <a href=""#contributors"">contributors</a>).</p>\n\n<h2 id=""table-of-contents"">Table of Contents</h2>\n\n<ul>\n<li><a href=""#updates"">Updates</a></li>\n<li>\n<a href=""#installation"">Installation</a>\n\n<ul>\n<li><a href=""#pre-requirements"">Pre-requirements</a></li>\n<li><a href=""#installation-steps"">Installation Steps</a></li>\n</ul>\n</li>\n<li><a href=""#how-to-run"">How to Run</a></li>\n<li>\n<a href=""#reading-from-ar-drone"">Reading from AR-Drone</a>\n\n<ul>\n<li><a href=""#update-frequencies-new"">Update Frequencies </a></li>\n<li><a href=""#legacy-navigation-data"">Legacy Navigation Data</a></li>\n<li><a href=""#imu-data"">IMU data</a></li>\n<li><a href=""#magnetometer-data"">Magnetometer Data</a></li>\n<li><a href=""#selective-navdata-advanced-new"">Selective Navdata (Advanced) </a></li>\n<li><a href=""#cameras"">Cameras</a></li>\n<li><a href=""#tag-detection"">Tag Detection</a></li>\n<li><a href=""#update-frequencies"">Update Frequencies</a></li>\n</ul>\n</li>\n<li>\n<a href=""#sending-commands-to-ar-drone"">Sending Commands to AR-Drone</a>\n\n<ul>\n<li>\n<a href=""#hover-modes-new"">Hover Modes </a> :new:</li>\n</ul>\n</li>\n<li><a href=""#coordinate-frames"">Coordinate Frames</a></li>\n<li>\n<a href=""#services"">Services</a>\n\n<ul>\n<li><a href=""#toggle-ar-drones-camera"">Toggle AR-Drone\'s Camera</a></li>\n<li><a href=""#led-animations"">LED Animations</a></li>\n<li><a href=""#flight-animations-new"">Flight Animations </a></li>\n<li><a href=""#imu-calibration"">IMU Calibration</a></li>\n<li><a href=""#flat-trim"">Flat Trim</a></li>\n<li>\n<a href=""#record-to-usb-stick"">Record to USB Stick</a> :new:</li>\n</ul>\n</li>\n<li>\n<a href=""#parameters"">Parameters</a>\n\n<ul>\n<li><a href=""#ar-drone-specific-parameters"">AR-Drone Specific Parameters</a></li>\n<li><a href=""#other-parameters"">Other Parameters</a></li>\n</ul>\n</li>\n<li><a href=""#license"">License</a></li>\n<li><a href=""#contributors"">Contributors</a></li>\n<li>\n<a href=""#faq"">FAQ</a> :new:</li>\n</ul>\n\n<h2 id=""updates"">Updates</h2>\n\n<ul>\n<li>\n<em>October 22 2013</em>: Update to Parrot SDK 2.0.1 (Fixes crashes on 2.4.x firmwares, no support for flight recorder (yet). <strong>Please check the FAQ section for instructions on how to re-compile the SDK</strong>. (Tested on 2.3.3 and 2.4.x firmwares) </li>\n<li>\n<em>February 13 2013</em>: Support for USB key recording (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/53"">More info</a>). Motor PWM added to legacy Navdata.</li>\n<li>\n<em>January 9 2013</em>: ROS Groovy support. Support for zero-command without hovering (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/34"">More info</a>). Full configurable Navdata support (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/31"">More info</a>). Support for ""Flight Animations"". Support for Real-time navdata and video publishing (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/44"">More info</a>). Support for configurable data publishing rate.</li>\n<li>\n<em>November 9 2012</em>: Critical Bug in sending configurations to drone fixed and more parameters are supported (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/issues/24"">More info</a>). Separate topic for magnetometer data added (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/25"">More info</a>).</li>\n<li>\n<em>September 5 2012</em>: Experimental automatic IMU bias removal.</li>\n<li>\n<em>August 27 2012</em>: Thread-safe SDK data access. Synchronized <code>navdata</code> and <code>camera</code> topics.</li>\n<li>\n<em>August 20 2012</em>: The driver is now provides ROS standard camera interface.</li>\n<li>\n<em>August 17 2012</em>: Experimental <code>tf</code> support added. New published topic <code>imu</code>.</li>\n<li>\n<em>August 1 2012</em>: Enhanced <code>Navdata</code> message. <code>Navdata</code> now includes magnetometer data, barometer data, temperature and wind information for AR-Drone 2. <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/2"">Issue #2</a>\n</li>\n<li>\n<em>July 27 2012</em>: LED Animation Support added to the driver as a service</li>\n<li>\n<em>July 19 2012</em>: Initial Public Release</li>\n</ul>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""pre-requirements"">Pre-requirements</h3>\n\n<p>This driver has been tested on Linux machines running Ubuntu 11.10, 12.04 &amp; 12.10 (32 bit and 64 bit). However it should also work on any other mainstream Linux distribution. The driver has been tested on both ROS ""electric"" and ""fuerte"". The AR-Drone SDK has its own build system which usually handles system wide dependencies itself. The ROS package depends on these standard ROS packages: <code>roscpp</code>, <code>image_transport</code>, <code>sensor_msgs</code>, <code>tf</code>, <code>camera_info_manager</code> and <code>std_srvs</code>.</p>\n\n<h3 id=""installation-steps"">Installation Steps</h3>\n\n<p>The installation follows the same steps needed usually to compile a ROS driver.</p>\n\n<ul>\n<li>Get the code: Clone (or download and unpack) the driver to your personal ROS stacks folder (e.g. ~/ros/stacks) and <code>cd</code> to it. Please make sure that this folder is in your <code>ROS_PACKAGE_PATH</code> environmental variable.</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">        <span class=""nv"">$ </span><span class=""nb"">cd</span> ~/ros/stacks\n        <span class=""nv"">$ </span>git clone https://github.com/AutonomyLab/ardrone_autonomy.git\n        <span class=""nv"">$ </span>rosstack profile <span class=""o"">&amp;&amp;</span> rospack profile\n        <span class=""nv"">$ </span>roscd ardrone_autonomy\n\n</code></pre></div>\n<p><strong>NOTE (For advanced users):</strong> Instead of the <code>master</code> branch you can use the <code>dev-unstable</code> branch for the latest <em>unstable</em> code which may contain bug fixes or new features. This is the branch that all developments happen on. Please use this branch to submit pull requests.</p>\n\n<ul>\n<li>Compile the AR-Drone SDK: The driver contains a slightly patched version of AR-Drone 2.0 SDK which is located in <code>ARDroneLib</code> directory. To compile it, execute the <code>./build_sdk.sh</code>. Any system-wide dependency will be managed by the SDK\'s build script. You may be asked to install some packages during the installation procedure (e.g <code>daemontools</code>). You can verify the success of the SDK\'s build by checking the <code>lib</code> folder.</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">        <span class=""nv"">$ </span>./build_sdk.sh\n        <span class=""nv"">$ </span><span class=""o"">[</span>After a couple of minutes]\n        <span class=""nv"">$ </span>ls ./lib\n\n        libavcodec.a   libavformat.a    libpc_ardrone_notool.a  libvlib.a\n        libavdevice.a  libavutil.a      libsdk.a\n        libavfilter.a  libpc_ardrone.a  libswscale.a\n\n</code></pre></div>\n<ul>\n<li>Compile the driver: You can easily compile the driver by using <code>rosmake ardrone_autonomy</code> command.</li>\n</ul>\n\n<h2 id=""how-to-run"">How to Run</h2>\n\n<p>The driver\'s executable node is <code>ardrone_driver</code>. You can either use <code>rosrun ardrone_autonomy ardrone_driver</code> or put it in a custom launch file with your desired parameters.</p>\n\n<h2 id=""reading-from-ar-drone"">Reading from AR-Drone</h2>\n\n<h3 id=""update-frequencies-new"">Update Frequencies :new:</h3>\n\n<p><strong>Drone Update Frequencies</strong>: The drone\'s data transmission update frequency depends on <code>navdata_demo</code> parameter. When it is 1, the transmission frequency will be 15Hz, otherwise it will be 200Hz. (<code>navdata_demo</code> is a numeric parameter not Boolean, so use 1 and 0 (not True/False) to set/unset it)</p>\n\n<p><strong>Driver Update Frequencies</strong>: The driver can operate in two modes: real-time or fixed rate. When the <code>realtime_navdata</code> parameter is set to True, the driver will publish the received information instantly. However when it is set to False, the driver will cache the most recent received data, then it will publish that at a fixed rate, configured by <code>looprate</code> parameter. The default configuration is: <code>realtime_navdata=False</code> and <code>looprate=50</code>. </p>\n\n<p>Please note that if the <code>looprate</code> is smaller than the drone\'s transmission frequency, there will be data loss. The driver\'s start-up output shows the current configuration. You can also use <code>rostopic hz</code> command to check the publish rate of the driver.</p>\n\n<pre>\n# Default Setting - 50Hz non-realtime update, the drone transmission rate is 200Hz\nrosrun ardrone_autonomy ardrone_driver _realtime_navdata:=False  _navdata_demo:=0\n\n# 200Hz real-time update\nrosrun ardrone_autonomy ardrone_driver _realtime_navdata:=True _navdata_demo:=0\n\n# 15Hz real-rime update\nrosrun ardrone_autonomy ardrone_driver _realtime_navdata:=True _navdata_demo:=1\n</pre>\n\n<h3 id=""legacy-navigation-data"">Legacy Navigation Data</h3>\n\n<p>Information received from the drone will be published to the <code>ardrone/navdata</code> topic. The message type is <code>ardrone_autonomy::Navdata</code> and contains the following information:</p>\n\n<ul>\n<li>\n<code>header</code>: ROS message header</li>\n<li>\n<code>batteryPercent</code>: The remaining charge of the drone\'s battery (%)</li>\n<li>\n<code>state</code>: The Drone\'s current state:\n    * 0: Unknown\n    * 1: Inited\n    * 2: Landed\n    * 3,7: Flying\n    * 4: Hovering\n    * 5: Test (?)\n    * 6: Taking off\n    * 8: Landing\n    * 9: Looping (?)</li>\n<li>\n<code>rotX</code>: Left/right tilt in degrees (rotation about the X axis)</li>\n<li>\n<code>rotY</code>: Forward/backward tilt in degrees (rotation about the Y axis)</li>\n<li>\n<code>rotZ</code>: Orientation in degrees (rotation about the Z axis)</li>\n<li>\n<code>magX</code>, <code>magY</code>, <code>magZ</code>: Magnetometer readings (AR-Drone 2.0 Only) (TBA: Convention)</li>\n<li>\n<code>pressure</code>: Pressure sensed by Drone\'s barometer (AR-Drone 2.0 Only) (TBA: Unit)</li>\n<li>\n<code>temp</code> : Temperature sensed by Drone\'s sensor (AR-Drone 2.0 Only) (TBA: Unit)</li>\n<li>\n<code>wind_speed</code>: Estimated wind speed (AR-Drone 2.0 Only) (TBA: Unit)</li>\n<li>\n<code>wind_angle</code>: Estimated wind angle (AR-Drone 2.0 Only) (TBA: Unit)</li>\n<li>\n<code>wind_comp_angle</code>: Estimated wind angle compensation (AR-Drone 2.0 Only) (TBA: Unit)</li>\n<li>\n<code>altd</code>: Estimated altitude (mm)</li>\n<li>\n<code>motor1..4</code>: Motor PWM values</li>\n<li>\n<code>vx</code>, <code>vy</code>, <code>vz</code>: Linear velocity (mm/s) [TBA: Convention]</li>\n<li>\n<code>ax</code>, <code>ay</code>, <code>az</code>: Linear acceleration (g) [TBA: Convention]</li>\n<li>\n<code>tm</code>: Timestamp of the data returned by the Drone returned as number of micro-seconds passed since Drone\'s boot-up.</li>\n</ul>\n\n<p><strong>NOTE:</strong> The legacy Navdata publishing can be disabled by setting the <code>enable_legacy_navdata</code> parameter to <code>False</code> (legacy navdata is enabled by default).</p>\n\n<h3 id=""imu-data"">IMU data</h3>\n\n<p>The linear acceleration, angular velocity and orientation from the <code>Navdata</code> is also published to a standard ROS <a href=""http://www.ros.org/doc/api/sensor_msgs/html/msg/Imu.html""><code>sensor_msgs/Imu</code></a> message. The units are all metric and the reference frame is in <code>Base</code> frame. This topic is experimental. The covariance values are specified by specific parameters.</p>\n\n<h3 id=""magnetometer-data"">Magnetometer Data</h3>\n\n<p>The normalized magnetometer readings are also published to <code>ardrone/mag</code> topic as a standard ROS <a href=""http://www.ros.org/doc/api/geometry_msgs/html/msg/Vector3Stamped.html""><code>geometry_msgs/Vector3Stamped</code></a> message.</p>\n\n<h3 id=""selective-navdata-advanced-new"">Selective Navdata (Advanced) :new:</h3>\n\n<p>You can access almost all sensor readings, debug values and status reports sent from the AR-Drone by using ""Selective Navdata"". If you set any of following parameters to ""True"", their corresponding <code>Navdata</code> information will be published to a separate topic. For example if you enable <code>enable_navdata_time</code>, the driver will publish AR-Drone time information to <code>ardrone/navdata_time</code> topic. Most of the names are self-explanatory. Please consult AR-Drone SDK 2.0\'s documentation (or source code) for more information. All parameters are set to False by default.</p>\n\n<pre>\nenable_navdata_trims            enable_navdata_rc_references    enable_navdata_pwm              enable_navdata_altitude \nenable_navdata_vision_raw       enable_navdata_vision_of        enable_navdata_vision           enable_navdata_vision_perf  \nenable_navdata_trackers_send    enable_navdata_vision_detect    enable_navdata_watchdog         enable_navdata_adc_data_frame   \nenable_navdata_video_stream     enable_navdata_games            enable_navdata_pressure_raw     enable_navdata_magneto  \nenable_navdata_wind_speed       enable_navdata_kalman_pressure  enable_navdata_hdvideo_stream   enable_navdata_wifi enable_navdata_zimmu_3000   \n</pre>\n\n<p><strong>HINT:</strong> You can <code>rostopic type ardrone/navdata_time | rosmsg show</code> command for each topic to inspect its published message\'s data structure.</p>\n\n<h3 id=""cameras"">Cameras</h3>\n\n<p>Both AR-Drone 1.0 and 2.0 are equipped with two cameras. One frontal camera pointing forward and one vertical camera pointing downward. This driver will create three topics for each drone: <code>ardrone/image_raw</code>, <code>ardrone/front/image_raw</code> and <code>ardrone/bottom/image_raw</code>. Each of these three are standard <a href=""http://ros.org/wiki/camera_drivers"">ROS camera interface</a> and publish messages of type <a href=""http://www.ros.org/wiki/image_transport"">image transport</a>. The driver is also a standard <a href=""http://www.ros.org/wiki/camera_drivers"">ROS camera driver</a>, therefor if camera calibration information is provided either as a set of ROS parameters or appropriate <code>ardrone_front.yaml</code> and/or <code>ardrone_bottom.yaml</code>, the information will be published in appropriate <code>camera_info</code> topics. Please check the FAQ section for more information.</p>\n\n<ul>\n<li><p>The <code>ardrone/*</code> will always contain the selected camera\'s video stream and information.</p></li>\n<li>\n<p>The way that the other two streams work depend on the type of Drone.</p>\n\n<ul>\n<li>Drone 1</li>\n</ul>\n\n<p>Drone 1 supports four modes of video streams: Front camera only, bottom camera only, front camera with bottom camera inside (picture in picture) and bottom camera with front camera inside (picture in picture). According to active configuration mode, the driver decomposes the PIP stream and publishes pure front/bottom streams to corresponding topics. The <code>camera_info</code> topic will include the correct image size.\n* Drone 2</p>\n\n<p>Drone 2 does not support PIP feature anymore, therefore only one of <code>ardrone/front</code> or <code>ardrone/bottom</code> topics will be updated based on which camera is selected at the time.</p>\n</li>\n</ul>\n\n<h3 id=""tag-detection"">Tag Detection</h3>\n\n<p>The <code>Navdata</code> message also returns the special tags that are detected by the Drone\'s on-board vision processing system. To learn more about the system and the way it works please consult AR-Drone SDK 2.0\'s <a href=""https://projects.ardrone.org/projects/show/ardrone-api/"">developers guide</a>. These tags are being detected on both drone\'s video cameras on-board at 30fps. To configure (or disable) this feature look at the ""Parameters"" section in this documentation.</p>\n\n<p>The detected tags\' type and position in Drone\'s camera frame will be published to the following variables in <code>Navdata</code> message:</p>\n\n<ul>\n<li>\n<code>tags_count</code>: The number of detected tags.</li>\n<li>\n<code>tags_type[]</code>: Vector of types of detected tags (details below)</li>\n<li>\n<code>tags_xc[]</code>, <code>tags_yc[]</code>, <code>tags_width[]</code>, <code>tags_height[]</code>: Vector of position components and size components for each tag. These numbers are expressed in numbers between [0,1000]. You need to convert them back to pixel unit using the corresponding camera\'s resolution (can be obtained front <code>camera_info</code> topic).</li>\n<li>\n<code>tags_orientation[]</code>: For the tags that support orientation, this is the vector that contains the tag orientation expressed in degrees [0..360).</li>\n</ul>\n\n<p>By default, the driver will configure the drone to look for <em>oriented roundels</em> using bottom camera and <em>2D tags v2</em> on indoor shells (<em>orange-yellow</em>) using front camera. For information on how to extract information from <code>tags_type</code> field. Check the FAQ section in the end.</p>\n\n<h3 id=""update-frequencies"">Update Frequencies</h3>\n\n<p>TBA.</p>\n\n<h2 id=""sending-commands-to-ar-drone"">Sending Commands to AR-Drone</h2>\n\n<p>The drone will <em>takeoff</em>, <em>land</em> or <em>emergency stop/reset</em> by publishing an <code>Empty</code> ROS messages to the following topics: <code>ardrone/takeoff</code>, <code>ardrone/land</code> and <code>ardrone/reset</code> respectively.</p>\n\n<p>In order to fly the drone after takeoff, you can publish a message of type <a href=""http://www.ros.org/doc/api/geometry_msgs/html/msg/Twist.html""><code>geometry_msgs::Twist</code></a> to the <code>cmd_vel</code> topic.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    -linear.x: move backward\n    +linear.x: move forward\n    -linear.y: move right\n    +linear.y: move left\n    -linear.z: move down\n    +linear.z: move up\n\n    -angular.z: turn left\n    +angular.z: turn right\n</code></pre></div>\n<p>The range for each component should be between -1.0 and 1.0. The maximum range can be configured using ROS parameters discussed later in this document. </p>\n\n<h3 id=""hover-modes-new"">Hover Modes :new:</h3>\n\n<p><code>geometry_msgs::Twist</code> has two other member variable called <code>angular.x</code> and <code>angular.y</code> which can be used to enable/disable ""auto-hover"" mode. ""auto-hover"" is enabled when all six components are set to <strong>zero</strong>. If you want the drone not to enter ""auto hover"" mode in cases you set the first four components to zero, set <code>angular.x</code> and <code>angular.y</code> to arbitrary <strong>non-zero</strong> values.</p>\n\n<h2 id=""coordinate-frames"">Coordinate Frames</h2>\n\n<p>The driver publishes two <a href=""http://www.ros.org/wiki/tf""><code>tf</code></a> transforms between three reference frames: <code>${tf_prefix}/${base_prefix}_link</code>, <code>${tf_prefix}/${base_prefix}_frontcam</code> and <code>${tf_prefix}/${base_prefix}_bottomcam</code>. The <code>${tf_prefix}</code> is ROS standard way to handle multi-robot <code>tf</code> trees and can be set using <code>tf_prefix</code> parameters, by default it is empty. The <code>${base_link}</code> is the shared name prefix of all three reference frames and can also be set using parameters, by default it has the value of <code>ardrone_base</code>. Using default parameters, the three frames would be: <code>ardrone_base_link</code>, <code>ardrone_base_frontcam</code> and <code>ardrone_base_bottomcam</code>. By default the root frame is  <code>ardrone_base_link</code>. Therefor <code>ardrone_base_frontcam</code> and <code>ardrone_base_bottomcam</code> are children of <code>ardrone_base_link</code> in the published <code>tf</code> tree. This can be changed using <code>root_frame</code> parameter.</p>\n\n<p>The <code>frame_id</code> field in header of all published topics (navdata, imu, cameras) will have the appropriate frame names. All frames are <a href=""http://www.ros.org/reps/rep-0103.html"">ROS REP 103</a> compatible.</p>\n\n<h2 id=""services"">Services</h2>\n\n<h3 id=""toggle-ar-drone-39-s-camera"">Toggle AR-Drone\'s Camera</h3>\n\n<p>Calling <code>ardrone/togglecam</code> service with no parameters will change the active video camera stream. (e.g <code>rosservice call /ardrone/togglecam</code>).</p>\n\n<p><code>ardrone/setcamchannel</code> service directly sets the current active camera channel. One parameter (<code>uint8 channel\n</code>) should be sent to this service. For AR-Drone 1.0 the valid values are [0..3] and for AR-Drone 2.0 the valid values are [0..1]. The order is similar to the order described in ""Cameras"" section.</p>\n\n<h3 id=""led-animations"">LED Animations</h3>\n\n<p>Calling <code>ardrone/setledanimation</code> service will invoke one of 14 pre-defined LED animations for the drone. The parameters are</p>\n\n<ul>\n<li>\n<code>uint8 type</code>: The type of animation which is a number in range [0..13]</li>\n<li>\n<code>float32 freq</code>: The frequency of the animation in Hz</li>\n<li>\n<code>uint8 duration</code>: The duration of the animation in Seconds.</li>\n</ul>\n\n<p>The <code>type</code> parameter will map [in order] to one of these animations (check <code>srv/LedAnim.srv</code> for more details):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    BLINK_GREEN_RED, BLINK_GREEN, BLINK_RED, BLINK_ORANGE,\n    SNAKE_GREEN_RED, FIRE, STANDARD, RED, GREEN, RED_SNAKE,BLANK,\n    LEFT_GREEN_RIGHT_RED, LEFT_RED_RIGHT_GREEN, BLINK_STANDARD`\n</code></pre></div>\n<p>You can test these animations in command line using commands like <code>rosservice call /ardrone/setledanimation 1 4 5</code></p>\n\n<h3 id=""flight-animations-new"">Flight Animations :new:</h3>\n\n<p>Calling <code>ardrone/setflightanimation</code> service will execute one of 20 pre-defined flight animations for the drone. The parameters are:</p>\n\n<ul>\n<li>\n<code>uint8 type</code>: The type of flight animation, a number in range [0..19]</li>\n<li>\n<code>uint16 duration</code>: The duration of the animation. Use 0 for default duration (recommended)</li>\n</ul>\n\n<p>The <code>type</code> parameter will map [in order] to one of these pre-defined animations (check <code>srv/FlightAnim.srv</code> for more details):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ARDRONE_ANIM_PHI_M30_DEG, ARDRONE_ANIM_PHI_30_DEG, ARDRONE_ANIM_THETA_M30_DEG, ARDRONE_ANIM_THETA_30_DEG,\nARDRONE_ANIM_THETA_20DEG_YAW_200DEG, ARDRONE_ANIM_THETA_20DEG_YAW_M200DEG, ARDRONE_ANIM_TURNAROUND,\nARDRONE_ANIM_TURNAROUND_GODOWN, ARDRONE_ANIM_YAW_SHAKE, ARDRONE_ANIM_YAW_DANCE, ARDRONE_ANIM_PHI_DANCE,\nARDRONE_ANIM_THETA_DANCE, ARDRONE_ANIM_VZ_DANCE, ARDRONE_ANIM_WAVE, ARDRONE_ANIM_PHI_THETA_MIXED,\nARDRONE_ANIM_DOUBLE_PHI_THETA_MIXED, ARDRONE_ANIM_FLIP_AHEAD, ARDRONE_ANIM_FLIP_BEHIND, ARDRONE_ANIM_FLIP_LEFT,\nARDRONE_ANIM_FLIP_RIGHT\n</code></pre></div>\n<p>You can test these animations in command line using commands like <code>rosservice call /ardrone/setflightanimation 1 0</code> while drone is flying.</p>\n\n<p>Please be extra cautious about using animations, especially flip animations.</p>\n\n<h3 id=""imu-calibration"">IMU Calibration</h3>\n\n<p>If <code>do_imu_caliberation</code> parameter is set to true, calling <code>ardrone/imu_recalib</code> service will make the driver recalculate the biases in IMU data based on data from a short sampling period.</p>\n\n<h3 id=""flat-trim"">Flat Trim</h3>\n\n<p>Calling <code>ardrone/flattrim</code> service without any parameter will send a ""Flat Trim"" request to AR-Drone to re-calibrate its rotation estimates assuming that it is on a flat surface. Do not call this service while Drone is flying or while the drone is not actually on a flat surface.</p>\n\n<h3 id=""record-to-usb-stick"">Record to USB Stick</h3>\n\n<p>Calling <code>ardrone/setrecord</code> service will enable and disable recording to the USB stick. The service takes a simple <code>1</code> to enable or <code>0</code> to disable. So you can turn on recording to the USB stick with <code>rosservice call /ardrone/setrecord 1</code></p>\n\n<h2 id=""parameters"">Parameters</h2>\n\n<h3 id=""ar-drone-specific-parameters"">AR-Drone Specific Parameters</h3>\n\n<p>The parameters listed below are named according to AR-Drone\'s SDK 2.0 configuration. Unless you set the parameters using <code>rosparam</code> or in your <code>launch</code> file, the default values will be used. These values are applied during driver\'s initialization phase. Please refer to AR-Drone SDK 2.0\'s <a href=""https://projects.ardrone.org/projects/show/ardrone-api/"">developer\'s guide</a> for information about valid values. Not all the parameters will be needed during regular usage of the AR-Drone, please consult the example launch file <code>launch/ardrone.launch</code> for frequent parameters.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">altitude, altitude_max, altitude_min, ardrone_name, autonomous_flight, bitrate, bitrate_ctrl_mode, \nbitrate_storage, codec_fps, com_watchdog, control_iphone_tilt, control_level, control_vz_max, \ncontrol_yaw, detect_type, detections_select_h, detections_select_v, detections_select_v_hsync, \nenemy_colors, enemy_without_shell, euler_angle_max, flight_anim, flight_without_shell, flying_mode, \ngroundstripe_colors, hovering_range, indoor_control_vz_max, indoor_control_yaw, indoor_euler_angle_max, \nlatitude, leds_anim, longitude, manual_trim, max_bitrate, max_size, navdata_demo, navdata_options, \nnb_files, outdoor, outdoor_control_vz_max, outdoor_control_yaw, outdoor_euler_angle_max, output, \nowner_mac, ssid_multi_player, ssid_single_player, travelling_enable, travelling_mode, ultrasound_freq, \nultrasound_watchdog, userbox_cmd, video_channel, video_codec, video_enable, video_file_index, \nvideo_live_socket, video_on_usb, video_slices, vision_enable, wifi_mode, wifi_rate\n</code></pre></div>\n<p><a href=""https://github.com/AutonomyLab/ardrone_autonomy/wiki/AR-Drone-Parameters"">This wiki page</a> includes more information about each of above parameters.</p>\n\n<h3 id=""other-parameters"">Other Parameters</h3>\n\n<p>These parameters control the behaviour of the driver.</p>\n\n<ul>\n<li>\n<code>drone_frame_id</code> - The ""frame_id"" prefix to be used in all <code>tf</code> frame names - default: ""ardrone_base""</li>\n<li>\n<code>root_frame</code> - The default root in drone\'s <code>tf</code> tree (0: _link, 1: _frontcam, 2: _bottomcam) - Default: 0</li>\n<li>\n<code>cov/imu_la</code>, <code>cov/imu_av</code> &amp; <code>cov/imu_or</code>: List of 9 covariance values to be used in <code>imu</code>\'s topic linear acceleration, angular velocity and orientation fields respectively - Default: 0.0 for all members (Please check the FAQ section for a sample launch file that shows how to set these values)</li>\n<li>\n<code>do_imu_calibration</code>: [EXPERIMENTAL] Should the drone cancel the biases in IMU data - Default: 0</li>\n<li>\n<code>enable_legacy_navdata</code>: Enable legacy <code>Navdata</code> publish - Default: True</li>\n</ul>\n\n<h2 id=""license"">License</h2>\n\n<p>The Parrot\'s license, copyright and disclaimer for <code>ARDroneLib</code> are included with the package and can be found in <code>ParrotLicense.txt</code> and <code>ParrotCopyrightAndDisclaimer.txt</code> files respectively. The other parts of the code are subject to <code>BSD</code> license.</p>\n\n<h2 id=""contributors"">Contributors</h2>\n\n<p><a href=""http://autonomylab.org/ardrone_autonomy/contribution.html"">List of all commiters to the repository</a>.</p>\n\n<ul>\n<li>\n<a href=""https://github.com/mikehamer"">Mike Hamer</a> - Added support for proper SDK2 way of configuring the Drone via parameter (critical bug fix) (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/26"">More Info</a>). Support for zero-command without hovering (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/34"">More info</a>). Full configurable Navdata support (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/31"">More info</a>). Support for Real-time navdata and video publishing (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/44"">More info</a>). Support for configurable data publishing rate.</li>\n<li><a href=""https://github.com/JakobEngel"">Jacokb Engel</a></li>\n<li>\n<a href=""https://github.com/sameerparekh"">Sameer Parekh</a> - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/53"">Turn on and off USB stick recording</a> - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/25"">Seperate Magnetometer Topic</a>\n</li>\n<li>\n<a href=""https://github.com/devmax"">Devmax</a> - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/issues/18"">Flat Trim</a> + Various\ncomments for enhancements</li>\n<li>\n<a href=""https://github.com/younata"">Rachel Brindle</a> - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/2"">Enhanced Navdata for AR-Drone 2.0</a>\n</li>\n</ul>\n\n<h2 id=""faq"">FAQ</h2>\n\n<h3 id=""where-should-i-go-next-is-there-any-ros-package-or-stack-that-can-be-used-as-a-tutorial-sample-to-use-ardrone_autonomy"">Where should I go next? Is there any ROS package or stack that can be used as a tutorial/sample to use ardrone_autonomy?</h3>\n\n<p>Absolutely. Here are some examples:</p>\n\n<ul>\n<li><a href=""https://github.com/FalkorSystems/falkor_ardrone"">falkor_ardrone</a></li>\n</ul>\n\n<p>""falkor_ardrone"" is a ROS package which uses the ""ardrone_autonomy"" package to implement autonomous control functionality on an AR.Drone.</p>\n\n<ul>\n<li><a href=""http://www.ros.org/wiki/tum_ardrone"">tum_ardrone</a></li>\n</ul>\n\n<p>State Estimation, Autopilot and GUI for ardrone.</p>\n\n<ul>\n<li><a href=""https://github.com/parcon/arl_ardrone_examples"">arl_ardrone_examples</a></li>\n</ul>\n\n<p>This ROS stack includes a series of very basic nodes to show users how to develop applications that use the ardrone_autonomy drivers for the AR drone 1.0 and 2.0 quadrotor robot.</p>\n\n<ul>\n<li><a href=""https://github.com/mikehamer/ardrone_tutorials"">AR Drone Tutorials</a></li>\n</ul>\n\n<p>This repository contains the source-code for the Up and flying with the AR.Drone and ROS tutorial series, published on <a href=""http://www.robohub.org"">Robohub</a>.</p>\n\n<h3 id=""how-can-i-report-a-bug-submit-patches-or-ask-for-a-feature"">How can I report a bug, submit patches or ask for a feature?</h3>\n\n<p><code>github</code> offers a nice and convenient issue tracking and social coding platform, it can be used for bug reports and pull/feature request. This is the preferred method. You can also contact the author directly.</p>\n\n<p>If you want to submit a pull request, please submit to <code>dev-unstable</code> branch.</p>\n\n<h3 id=""why-the-ardronelib-has-been-patched"">Why the <code>ARDroneLib</code> has been patched?</h3>\n\n<p>The ARDrone 2.0 SDK has been patched to 1) Enable the lib only build 2) Make its command parsing compatible with ROS and 3) To fix its weird <code>main()</code> function issue</p>\n\n<h3 id=""why-the-wifi-bandwidth-usage-is-too-much"">Why the wifi bandwidth usage is too much?</h3>\n\n<p>The driver has been configured by default to use the maximum bandwidth allowed to ensure the best quality video stream possible (please take a look at default values in parameters section). That is the reason why the picture quality received from Drone 2.0 using this driver is far better than what you usually get using other software. If for any reason you prefer the lower quality* video stream, change <code>bitrate_ctrl_mode</code>, <code>max_bitrate</code> and <code>bitrate</code> parameters to the default values provided by the AR-Drone developer guide.</p>\n\n<p>(*) Please note that lower quality does not mean lower resolution. By configuring AR-Drone to use bitrate control with limits, the picture gets blurry when there is a movement.</p>\n\n<h3 id=""what-is-the-default-configuration-for-the-front-camera-video-stream"">What is the default configuration for the front camera video stream?</h3>\n\n<p><em>Drone 1</em>: 320x240@15fps UVLC Codec\n<em>Drone 2</em>: 640x360@20fps H264 codec with no record stream</p>\n\n<h3 id=""how-can-i-extract-camera-information-and-tag-type-from-tags_type"">How can I extract camera information and tag type from <code>tags_type[]</code>?</h3>\n\n<p><code>tag_type</code> contains information for both source and type of each detected tag. In order to extract information from them you can use the following c macros and enums (taken from <code>ardrone_api.h</code>)</p>\n<div class=""highlight""><pre><code class=""language-c++"" data-lang=""c++""><span class=""cp"">#define DETECTION_EXTRACT_SOURCE(type)  ( ((type)&gt;&gt;16) &amp; 0x0FF )\n#define DETECTION_EXTRACT_TAG(type)     ( (type) &amp; 0x0FF )\n</span>\n<span class=""k"">typedef</span> <span class=""k"">enum</span>\n<span class=""p"">{</span>\n  <span class=""n"">DETECTION_SOURCE_CAMERA_HORIZONTAL</span><span class=""o"">=</span><span class=""mi"">0</span><span class=""p"">,</span>   <span class=""cm"">/*&lt;! Tag was detected on the front camera picture */</span>\n  <span class=""n"">DETECTION_SOURCE_CAMERA_VERTICAL</span><span class=""p"">,</span>       <span class=""cm"">/*&lt;! Tag was detected on the vertical camera picture at full speed */</span>\n  <span class=""n"">DETECTION_SOURCE_CAMERA_VERTICAL_HSYNC</span><span class=""p"">,</span> <span class=""cm"">/*&lt;! Tag was detected on the vertical camera picture inside the horizontal pipeline */</span>\n  <span class=""n"">DETECTION_SOURCE_CAMERA_NUM</span><span class=""p"">,</span>\n<span class=""p"">}</span> <span class=""n"">DETECTION_SOURCE_CAMERA</span><span class=""p"">;</span>\n\n<span class=""k"">typedef</span> <span class=""k"">enum</span>\n<span class=""p"">{</span>\n  <span class=""n"">TAG_TYPE_NONE</span>             <span class=""o"">=</span> <span class=""mi"">0</span><span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_SHELL_TAG</span>        <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_ROUNDEL</span>          <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_ORIENTED_ROUNDEL</span> <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_STRIPE</span>           <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_CAP</span>              <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_SHELL_TAG_V2</span>     <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_TOWER_SIDE</span>       <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_BLACK_ROUNDEL</span>    <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_NUM</span>\n<span class=""p"">}</span> <span class=""n"">TAG_TYPE</span><span class=""p"">;</span>\n\n\n</code></pre></div>\n<h3 id=""how-can-i-calibrate-the-ardrone-front-bottom-camera"">How can I calibrate the ardrone front/bottom camera?</h3>\n\n<p>It is easy to calibrate both cameras using ROS <a href=""http://www.ros.org/wiki/camera_calibration"">Camera Calibration</a> package.</p>\n\n<p>First, run the camera_calibration node with appropriate arguments: (For the bottom camera, replace front with bottom)</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rosrun camera_calibration cameracalibrator.py --size <span class=""o"">[</span>SIZE] --square <span class=""o"">[</span>SQUARESIZE] image:<span class=""o"">=</span>/ardrone/front/image_raw camera:<span class=""o"">=</span>/ardrone/front\n\n</code></pre></div>\n<p>After successful calibration, press the <code>commit</code> button in the UI. The driver will receive the data from the camera calibration node, then will save the information by default in <code>~/.ros/camera_info/ardrone_front.yaml</code>. From this point on, whenever you run the driver on the same computer this file will be loaded automatically by the driver and its information will be published to appropriate <code>camera_info</code> topic. Sample calibration files for AR-Drone 2.0\'s cameras are provided in <code>data/camera_info</code> folder.</p>\n\n<h3 id=""can-i-see-a-sample-ardrone-node-in-a-launch-file-to-learn-how-to-set-parameters"">Can I see a sample ardrone node in a launch file to learn how to set parameters?</h3>\n\n<p>Yes, you can check the <code>launch</code> folder for sample lanuch file.</p>\n\n<h3 id=""can-i-control-multiple-drones-using-a-single-pc-or-can-i-make-my-drone-connect-to-a-wireless-router"">Can I control multiple drones using a single PC? or can I make my drone connect to a wireless router?</h3>\n\n<p>With some hacking yes! This <a href=""https://github.com/AutonomyLab/ardrone_autonomy/wiki/Multiple-AR-Drones"">wiki page</a> contains some information regarding this issue.</p>\n\n<h3 id=""how-to-re-compile-parrot-sdk"">How to re-compile parrot SDK?</h3>\n\n<p>If the <code>git</code> updates include a SDK upgrade, you\'d better cleanup previous vuild files.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""nb"">cd </span>ARDroneLib/Soft/Build\nmake clean\nrm -rf targets_versions\n\n</code></pre></div>\n<p>Build the SDK and driver again.</p>\n\n<h2 id=""todo"">TODO</h2>\n\n<ul>\n<li>Make the <code>tf</code> publish optional.</li>\n<li>Add the currently selected camera name to <code>Navdata</code>\n</li>\n<li>[DONE] Add separate topic for drone\'s debug stream (<code>navdata_demo</code>)</li>\n<li>[DONE] Make the <code>togglecam</code> service accept parameters</li>\n<li>[DONE] Enrich <code>Navdata</code> with magneto meter and baro meter information</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ardrone_autonomy-a-ros-driver-for-ardrone-1-0-amp-2-0"">ardrone_autonomy : A ROS Driver for ARDrone 1.0 &amp; 2.0</h1>\n\n<p>** (As of October 2014, ROS Groovy is End-Of-Lifed. This branch will not receive further updates) **</p>\n\n<p>ardrone_autonomy is a <a href=""http://ros.org/"" title=""Robot Operating System"">ROS</a> driver for <a href=""http://ardrone2.parrot.com/"">Parrot AR-Drone</a> quadrocopter. This driver is based on official <a href=""https://projects.ardrone.org/"">AR-Drone SDK</a> version 2.0.1. The driver supports both AR-Drone 1.0 and 2.0. ""ardrone_autonomy"" is a fork of <a href=""http://code.google.com/p/brown-ros-pkg/wiki/ardrone_brown"">AR-Drone Brown</a> driver. This package has been developed in <a href=""http://autonomy.cs.sfu.ca"">Autonomy Lab</a> of <a href=""http://www.sfu.ca"">Simon Fraser University</a> by <a href=""http://sfu.ca/%7Emmonajje"">Mani Monajjemi</a> ( +other <a href=""#contributors"">contributors</a>).</p>\n\n<h2 id=""table-of-contents"">Table of Contents</h2>\n\n<ul>\n<li><a href=""#updates"">Updates</a></li>\n<li>\n<a href=""#installation"">Installation</a>\n\n<ul>\n<li><a href=""#binary-install"">Binary Install</a></li>\n<li><a href=""#compile-and-install-from-source"">Compile and Install from Source</a></li>\n</ul>\n</li>\n<li><a href=""#how-to-run"">How to Run</a></li>\n<li>\n<a href=""#reading-from-ar-drone"">Reading from AR-Drone</a>\n\n<ul>\n<li><a href=""#update-frequencies-new"">Update Frequencies </a></li>\n<li><a href=""#legacy-navigation-data"">Legacy Navigation Data</a></li>\n<li><a href=""#imu-data"">IMU data</a></li>\n<li><a href=""#magnetometer-data"">Magnetometer Data</a></li>\n<li><a href=""#selective-navdata-advanced-new"">Selective Navdata (Advanced) </a></li>\n<li><a href=""#cameras"">Cameras</a></li>\n<li><a href=""#tag-detection"">Tag Detection</a></li>\n<li><a href=""#update-frequencies"">Update Frequencies</a></li>\n</ul>\n</li>\n<li>\n<a href=""#sending-commands-to-ar-drone"">Sending Commands to AR-Drone</a>\n\n<ul>\n<li>\n<a href=""#hover-modes-new"">Hover Modes </a> :new:</li>\n</ul>\n</li>\n<li><a href=""#coordinate-frames"">Coordinate Frames</a></li>\n<li>\n<a href=""#services"">Services</a>\n\n<ul>\n<li><a href=""#toggle-ar-drones-camera"">Toggle AR-Drone\'s Camera</a></li>\n<li><a href=""#led-animations"">LED Animations</a></li>\n<li><a href=""#flight-animations-new"">Flight Animations </a></li>\n<li><a href=""#imu-calibration"">IMU Calibration</a></li>\n<li><a href=""#flat-trim"">Flat Trim</a></li>\n<li>\n<a href=""#record-to-usb-stick"">Record to USB Stick</a> :new:</li>\n</ul>\n</li>\n<li>\n<a href=""#parameters"">Parameters</a>\n\n<ul>\n<li><a href=""#ar-drone-specific-parameters"">AR-Drone Specific Parameters</a></li>\n<li><a href=""#other-parameters"">Other Parameters</a></li>\n</ul>\n</li>\n<li><a href=""#license"">License</a></li>\n<li><a href=""#contributors"">Contributors</a></li>\n<li>\n<a href=""#faq"">FAQ</a> :new:</li>\n</ul>\n\n<h2 id=""updates"">Updates</h2>\n\n<ul>\n<li>\n<em>September 3 2014</em>: 1.3.5 <a href=""https://github.com/AutonomyLab/ardrone_autonomy/milestones/1.3.5"">Bug Fixes &amp; Minor Improvements</a>\n</li>\n<li>\n<em>March 14 2014</em>: The binary packages of the driver are now built on <a href=""http://wiki.ros.org/BuildFarm"">ROS build farm</a>. You can install the driver for ROS <em>Hydro</em> and <em>Groovy</em> using <code>apt-get</code> on <em>Ubuntu</em>.</li>\n<li>\n<em>January 17 2014</em>: Fully <em>catkinized</em> package (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/75"">#75</a> &amp; <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/79"">#79</a>). ARDroneLib has been configured to be built as an external project. The ARDroneLib is replaced by the vanilla SDK\'s stripped tarball. (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/80"">More info</a>).</li>\n<li>\n<em>October 22 2013</em>: Update to Parrot SDK 2.0.1 (Fixes crashes on 2.4.x firmwares, no support for flight recorder (yet). <strong>Please check the FAQ section for instructions on how to re-compile the SDK</strong>. (Tested on 2.3.3 and 2.4.x firmwares) </li>\n<li>\n<em>February 13 2013</em>: Support for USB key recording (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/53"">More info</a>). Motor PWM added to legacy Navdata.</li>\n<li>\n<em>January 9 2013</em>: ROS Groovy support. Support for zero-command without hovering (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/34"">More info</a>). Full configurable Navdata support (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/31"">More info</a>). Support for ""Flight Animations"". Support for Real-time navdata and video publishing (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/44"">More info</a>). Support for configurable data publishing rate.</li>\n<li>\n<em>November 9 2012</em>: Critical Bug in sending configurations to drone fixed and more parameters are supported (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/issues/24"">More info</a>). Separate topic for magnetometer data added (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/25"">More info</a>).</li>\n<li>\n<em>September 5 2012</em>: Experimental automatic IMU bias removal.</li>\n<li>\n<em>August 27 2012</em>: Thread-safe SDK data access. Synchronized <code>navdata</code> and <code>camera</code> topics.</li>\n<li>\n<em>August 20 2012</em>: The driver is now provides ROS standard camera interface.</li>\n<li>\n<em>August 17 2012</em>: Experimental <code>tf</code> support added. New published topic <code>imu</code>.</li>\n<li>\n<em>August 1 2012</em>: Enhanced <code>Navdata</code> message. <code>Navdata</code> now includes magnetometer data, barometer data, temperature and wind information for AR-Drone 2. <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/2"">Issue #2</a>\n</li>\n<li>\n<em>July 27 2012</em>: LED Animation Support added to the driver as a service</li>\n<li>\n<em>July 19 2012</em>: Initial Public Release</li>\n</ul>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""binary-install"">Binary Install</h3>\n\n<p>On supported <em>Ubuntu</em> platform and for ROS <em>Hydro</em> and <em>Groovy</em> you can install the driver using <code>apt-get install ros-*-ardrone-autonomy</code> e.g. <code>apt-get install ros-hydro-ardrone-autonomy</code>.</p>\n\n<h3 id=""compile-and-install-from-source"">Compile and Install from Source</h3>\n\n<p>The bundled AR-Drone SDK has its own build system which usually handles system wide dependencies itself. The ROS package depends on these standard ROS packages: <code>roscpp</code>, <code>image_transport</code>, <code>sensor_msgs</code>, <code>tf</code>, <code>camera_info_manager</code> and <code>std_srvs</code>.</p>\n\n<p>The installation follows the same steps needed usually to compile a ROS driver using <a href=""http://wiki.ros.org/catkin"">catkin</a>. Clone (or download and unpack) the driver to the <code>src</code> folder of a new or existing catkin <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">workspace</a> (e.g <code>~/catkin_ws/src</code>) and use <code>catkin_make</code> to compile. Assuming you are compiling for ROS <em>Hydro</em>:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws/src\n<span class=""gp"">$ </span>git clone https://github.com/AutonomyLab/ardrone_autonomy.git -b groovy-devel\n<span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n<span class=""gp"">$ </span>catkin_make\n\n</code></pre></div>\n<p>If you need to compile for older ROS distros or you are bound to use <code>rosbuild</code>, please check the <code>fuerte-devel</code> branch.</p>\n\n<h2 id=""how-to-run"">How to Run</h2>\n\n<p>The driver\'s executable node is <code>ardrone_driver</code>. You can either use <code>rosrun ardrone_autonomy ardrone_driver</code> or put it in a custom launch file with your desired parameters.</p>\n\n<h2 id=""reading-from-ar-drone"">Reading from AR-Drone</h2>\n\n<h3 id=""update-frequencies-new"">Update Frequencies :new:</h3>\n\n<p><strong>Drone Update Frequencies</strong>: The drone\'s data transmission update frequency depends on <code>navdata_demo</code> parameter. When it is 1, the transmission frequency will be 15Hz, otherwise it will be 200Hz. (<code>navdata_demo</code> is a numeric parameter not Boolean, so use 1 and 0 (not True/False) to set/unset it)</p>\n\n<p><strong>Driver Update Frequencies</strong>: The driver can operate in two modes: real-time or fixed rate. When the <code>realtime_navdata</code> parameter is set to True, the driver will publish the received information instantly. However when it is set to False, the driver will cache the most recent received data, then it will publish that at a fixed rate, configured by <code>looprate</code> parameter. The default configuration is: <code>realtime_navdata=False</code> and <code>looprate=50</code>. </p>\n\n<p>Please note that if the <code>looprate</code> is smaller than the drone\'s transmission frequency, there will be data loss. The driver\'s start-up output shows the current configuration. You can also use <code>rostopic hz</code> command to check the publish rate of the driver.</p>\n\n<pre>\n# Default Setting - 50Hz non-realtime update, the drone transmission rate is 200Hz\nrosrun ardrone_autonomy ardrone_driver _realtime_navdata:=False  _navdata_demo:=0\n\n# 200Hz real-time update\nrosrun ardrone_autonomy ardrone_driver _realtime_navdata:=True _navdata_demo:=0\n\n# 15Hz real-rime update\nrosrun ardrone_autonomy ardrone_driver _realtime_navdata:=True _navdata_demo:=1\n</pre>\n\n<h3 id=""legacy-navigation-data"">Legacy Navigation Data</h3>\n\n<p>Information received from the drone will be published to the <code>ardrone/navdata</code> topic. The message type is <code>ardrone_autonomy::Navdata</code> and contains the following information:</p>\n\n<ul>\n<li>\n<code>header</code>: ROS message header</li>\n<li>\n<code>batteryPercent</code>: The remaining charge of the drone\'s battery (%)</li>\n<li>\n<code>state</code>: The Drone\'s current state:\n    * 0: Unknown\n    * 1: Inited\n    * 2: Landed\n    * 3,7: Flying\n    * 4: Hovering\n    * 5: Test (?)\n    * 6: Taking off\n    * 8: Landing\n    * 9: Looping (?)</li>\n<li>\n<code>rotX</code>: Left/right tilt in degrees (rotation about the X axis)</li>\n<li>\n<code>rotY</code>: Forward/backward tilt in degrees (rotation about the Y axis)</li>\n<li>\n<code>rotZ</code>: Orientation in degrees (rotation about the Z axis)</li>\n<li>\n<code>magX</code>, <code>magY</code>, <code>magZ</code>: Magnetometer readings (AR-Drone 2.0 Only) (TBA: Convention)</li>\n<li>\n<code>pressure</code>: Pressure sensed by Drone\'s barometer (AR-Drone 2.0 Only) (Pa)</li>\n<li>\n<code>temp</code> : Temperature sensed by Drone\'s sensor (AR-Drone 2.0 Only) (TBA: Unit)</li>\n<li>\n<code>wind_speed</code>: Estimated wind speed (AR-Drone 2.0 Only) (TBA: Unit)</li>\n<li>\n<code>wind_angle</code>: Estimated wind angle (AR-Drone 2.0 Only) (TBA: Unit)</li>\n<li>\n<code>wind_comp_angle</code>: Estimated wind angle compensation (AR-Drone 2.0 Only) (TBA: Unit)</li>\n<li>\n<code>altd</code>: Estimated altitude (mm)</li>\n<li>\n<code>motor1..4</code>: Motor PWM values</li>\n<li>\n<code>vx</code>, <code>vy</code>, <code>vz</code>: Linear velocity (mm/s) [TBA: Convention]</li>\n<li>\n<code>ax</code>, <code>ay</code>, <code>az</code>: Linear acceleration (g) [TBA: Convention]</li>\n<li>\n<code>tm</code>: Timestamp of the data returned by the Drone returned as number of micro-seconds passed since Drone\'s boot-up.</li>\n</ul>\n\n<p><strong>NOTE:</strong> The legacy Navdata publishing can be disabled by setting the <code>enable_legacy_navdata</code> parameter to <code>False</code> (legacy navdata is enabled by default).</p>\n\n<h3 id=""imu-data"">IMU data</h3>\n\n<p>The linear acceleration, angular velocity and orientation from the <code>Navdata</code> is also published to a standard ROS <a href=""http://www.ros.org/doc/api/sensor_msgs/html/msg/Imu.html""><code>sensor_msgs/Imu</code></a> message. The units are all metric and the reference frame is in <code>Base</code> frame. This topic is experimental. The covariance values are specified by specific parameters.</p>\n\n<h3 id=""magnetometer-data"">Magnetometer Data</h3>\n\n<p>The normalized magnetometer readings are also published to <code>ardrone/mag</code> topic as a standard ROS <a href=""http://www.ros.org/doc/api/geometry_msgs/html/msg/Vector3Stamped.html""><code>geometry_msgs/Vector3Stamped</code></a> message.</p>\n\n<h3 id=""selective-navdata-advanced-new"">Selective Navdata (Advanced) :new:</h3>\n\n<p>You can access almost all sensor readings, debug values and status reports sent from the AR-Drone by using ""Selective Navdata"". If you set any of following parameters to ""True"", their corresponding <code>Navdata</code> information will be published to a separate topic. For example if you enable <code>enable_navdata_time</code>, the driver will publish AR-Drone time information to <code>ardrone/navdata_time</code> topic. Most of the names are self-explanatory. Please consult AR-Drone SDK 2.0\'s documentation (or source code) for more information. All parameters are set to False by default.</p>\n\n<pre>\nenable_navdata_trims            enable_navdata_rc_references    enable_navdata_pwm              enable_navdata_altitude \nenable_navdata_vision_raw       enable_navdata_vision_of        enable_navdata_vision           enable_navdata_vision_perf  \nenable_navdata_trackers_send    enable_navdata_vision_detect    enable_navdata_watchdog         enable_navdata_adc_data_frame   \nenable_navdata_video_stream     enable_navdata_games            enable_navdata_pressure_raw     enable_navdata_magneto  \nenable_navdata_wind_speed       enable_navdata_kalman_pressure  enable_navdata_hdvideo_stream   enable_navdata_wifi enable_navdata_zimmu_3000   \n</pre>\n\n<p><strong>HINT:</strong> You can <code>rostopic type ardrone/navdata_time | rosmsg show</code> command for each topic to inspect its published message\'s data structure.</p>\n\n<h3 id=""cameras"">Cameras</h3>\n\n<p>Both AR-Drone 1.0 and 2.0 are equipped with two cameras. One frontal camera pointing forward and one vertical camera pointing downward. This driver will create three topics for each drone: <code>ardrone/image_raw</code>, <code>ardrone/front/image_raw</code> and <code>ardrone/bottom/image_raw</code>. Each of these three are standard <a href=""http://ros.org/wiki/camera_drivers"">ROS camera interface</a> and publish messages of type <a href=""http://www.ros.org/wiki/image_transport"">image transport</a>. The driver is also a standard <a href=""http://www.ros.org/wiki/camera_drivers"">ROS camera driver</a>, therefor if camera calibration information is provided either as a set of ROS parameters or appropriate <code>ardrone_front.yaml</code> and/or <code>ardrone_bottom.yaml</code>, the information will be published in appropriate <code>camera_info</code> topics. Please check the FAQ section for more information.</p>\n\n<ul>\n<li><p>The <code>ardrone/*</code> will always contain the selected camera\'s video stream and information.</p></li>\n<li>\n<p>The way that the other two streams work depend on the type of Drone.</p>\n\n<ul>\n<li>Drone 1</li>\n</ul>\n\n<p>Drone 1 supports four modes of video streams: Front camera only, bottom camera only, front camera with bottom camera inside (picture in picture) and bottom camera with front camera inside (picture in picture). According to active configuration mode, the driver decomposes the PIP stream and publishes pure front/bottom streams to corresponding topics. The <code>camera_info</code> topic will include the correct image size.\n* Drone 2</p>\n\n<p>Drone 2 does not support PIP feature anymore, therefore only one of <code>ardrone/front</code> or <code>ardrone/bottom</code> topics will be updated based on which camera is selected at the time.</p>\n</li>\n</ul>\n\n<h3 id=""tag-detection"">Tag Detection</h3>\n\n<p>The <code>Navdata</code> message also returns the special tags that are detected by the Drone\'s on-board vision processing system. To learn more about the system and the way it works please consult AR-Drone SDK 2.0\'s <a href=""https://projects.ardrone.org/projects/show/ardrone-api/"">developers guide</a>. These tags are being detected on both drone\'s video cameras on-board at 30fps. To configure (or disable) this feature look at the ""Parameters"" section in this documentation.</p>\n\n<p>The detected tags\' type and position in Drone\'s camera frame will be published to the following variables in <code>Navdata</code> message:</p>\n\n<ul>\n<li>\n<code>tags_count</code>: The number of detected tags.</li>\n<li>\n<code>tags_type[]</code>: Vector of types of detected tags (details below)</li>\n<li>\n<code>tags_xc[]</code>, <code>tags_yc[]</code>, <code>tags_width[]</code>, <code>tags_height[]</code>: Vector of position components and size components for each tag. These numbers are expressed in numbers between [0,1000]. You need to convert them back to pixel unit using the corresponding camera\'s resolution (can be obtained front <code>camera_info</code> topic).</li>\n<li>\n<code>tags_orientation[]</code>: For the tags that support orientation, this is the vector that contains the tag orientation expressed in degrees [0..360).</li>\n</ul>\n\n<p>By default, the driver will configure the drone to look for <em>oriented roundels</em> using bottom camera and <em>2D tags v2</em> on indoor shells (<em>orange-yellow</em>) using front camera. For information on how to extract information from <code>tags_type</code> field. Check the FAQ section in the end.</p>\n\n<h3 id=""update-frequencies"">Update Frequencies</h3>\n\n<p>TBA.</p>\n\n<h2 id=""sending-commands-to-ar-drone"">Sending Commands to AR-Drone</h2>\n\n<p>The drone will <em>takeoff</em>, <em>land</em> or <em>emergency stop/reset</em> by publishing an <code>Empty</code> ROS messages to the following topics: <code>ardrone/takeoff</code>, <code>ardrone/land</code> and <code>ardrone/reset</code> respectively.</p>\n\n<p>In order to fly the drone after takeoff, you can publish a message of type <a href=""http://www.ros.org/doc/api/geometry_msgs/html/msg/Twist.html""><code>geometry_msgs::Twist</code></a> to the <code>cmd_vel</code> topic.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    -linear.x: move backward\n    +linear.x: move forward\n    -linear.y: move right\n    +linear.y: move left\n    -linear.z: move down\n    +linear.z: move up\n\n    -angular.z: turn left\n    +angular.z: turn right\n</code></pre></div>\n<p>The range for each component should be between -1.0 and 1.0. The maximum range can be configured using ROS parameters discussed later in this document. </p>\n\n<h3 id=""hover-modes-new"">Hover Modes :new:</h3>\n\n<p><code>geometry_msgs::Twist</code> has two other member variable called <code>angular.x</code> and <code>angular.y</code> which can be used to enable/disable ""auto-hover"" mode. ""auto-hover"" is enabled when all six components are set to <strong>zero</strong>. If you want the drone not to enter ""auto hover"" mode in cases you set the first four components to zero, set <code>angular.x</code> and <code>angular.y</code> to arbitrary <strong>non-zero</strong> values.</p>\n\n<h2 id=""coordinate-frames"">Coordinate Frames</h2>\n\n<p>The driver publishes two <a href=""http://www.ros.org/wiki/tf""><code>tf</code></a> transforms between three reference frames: <code>${tf_prefix}/${base_prefix}_link</code>, <code>${tf_prefix}/${base_prefix}_frontcam</code> and <code>${tf_prefix}/${base_prefix}_bottomcam</code>. The <code>${tf_prefix}</code> is ROS standard way to handle multi-robot <code>tf</code> trees and can be set using <code>tf_prefix</code> parameters, by default it is empty. The <code>${base_link}</code> is the shared name prefix of all three reference frames and can also be set using parameters, by default it has the value of <code>ardrone_base</code>. Using default parameters, the three frames would be: <code>ardrone_base_link</code>, <code>ardrone_base_frontcam</code> and <code>ardrone_base_bottomcam</code>. By default the root frame is  <code>ardrone_base_link</code>. Therefor <code>ardrone_base_frontcam</code> and <code>ardrone_base_bottomcam</code> are children of <code>ardrone_base_link</code> in the published <code>tf</code> tree. This can be changed using <code>root_frame</code> parameter.</p>\n\n<p>The <code>frame_id</code> field in header of all published topics (navdata, imu, cameras) will have the appropriate frame names. All frames are <a href=""http://www.ros.org/reps/rep-0103.html"">ROS REP 103</a> compatible.</p>\n\n<h2 id=""services"">Services</h2>\n\n<h3 id=""toggle-ar-drone-39-s-camera"">Toggle AR-Drone\'s Camera</h3>\n\n<p>Calling <code>ardrone/togglecam</code> service with no parameters will change the active video camera stream. (e.g <code>rosservice call /ardrone/togglecam</code>).</p>\n\n<p><code>ardrone/setcamchannel</code> service directly sets the current active camera channel. One parameter (<code>uint8 channel\n</code>) should be sent to this service. For AR-Drone 1.0 the valid values are [0..3] and for AR-Drone 2.0 the valid values are [0..1]. The order is similar to the order described in ""Cameras"" section.</p>\n\n<h3 id=""led-animations"">LED Animations</h3>\n\n<p>Calling <code>ardrone/setledanimation</code> service will invoke one of 14 pre-defined LED animations for the drone. The parameters are</p>\n\n<ul>\n<li>\n<code>uint8 type</code>: The type of animation which is a number in range [0..13]</li>\n<li>\n<code>float32 freq</code>: The frequency of the animation in Hz</li>\n<li>\n<code>uint8 duration</code>: The duration of the animation in Seconds.</li>\n</ul>\n\n<p>The <code>type</code> parameter will map [in order] to one of these animations (check <code>srv/LedAnim.srv</code> for more details):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    BLINK_GREEN_RED, BLINK_GREEN, BLINK_RED, BLINK_ORANGE,\n    SNAKE_GREEN_RED, FIRE, STANDARD, RED, GREEN, RED_SNAKE,BLANK,\n    LEFT_GREEN_RIGHT_RED, LEFT_RED_RIGHT_GREEN, BLINK_STANDARD`\n</code></pre></div>\n<p>You can test these animations in command line using commands like <code>rosservice call /ardrone/setledanimation 1 4 5</code></p>\n\n<h3 id=""flight-animations-new"">Flight Animations :new:</h3>\n\n<p>Calling <code>ardrone/setflightanimation</code> service will execute one of 20 pre-defined flight animations for the drone. The parameters are:</p>\n\n<ul>\n<li>\n<code>uint8 type</code>: The type of flight animation, a number in range [0..19]</li>\n<li>\n<code>uint16 duration</code>: The duration of the animation. Use 0 for default duration (recommended)</li>\n</ul>\n\n<p>The <code>type</code> parameter will map [in order] to one of these pre-defined animations (check <code>srv/FlightAnim.srv</code> for more details):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ARDRONE_ANIM_PHI_M30_DEG, ARDRONE_ANIM_PHI_30_DEG, ARDRONE_ANIM_THETA_M30_DEG, ARDRONE_ANIM_THETA_30_DEG,\nARDRONE_ANIM_THETA_20DEG_YAW_200DEG, ARDRONE_ANIM_THETA_20DEG_YAW_M200DEG, ARDRONE_ANIM_TURNAROUND,\nARDRONE_ANIM_TURNAROUND_GODOWN, ARDRONE_ANIM_YAW_SHAKE, ARDRONE_ANIM_YAW_DANCE, ARDRONE_ANIM_PHI_DANCE,\nARDRONE_ANIM_THETA_DANCE, ARDRONE_ANIM_VZ_DANCE, ARDRONE_ANIM_WAVE, ARDRONE_ANIM_PHI_THETA_MIXED,\nARDRONE_ANIM_DOUBLE_PHI_THETA_MIXED, ARDRONE_ANIM_FLIP_AHEAD, ARDRONE_ANIM_FLIP_BEHIND, ARDRONE_ANIM_FLIP_LEFT,\nARDRONE_ANIM_FLIP_RIGHT\n</code></pre></div>\n<p>You can test these animations in command line using commands like <code>rosservice call /ardrone/setflightanimation 1 0</code> while drone is flying.</p>\n\n<p>Please be extra cautious about using animations, especially flip animations.</p>\n\n<h3 id=""imu-calibration"">IMU Calibration</h3>\n\n<p>If <code>do_imu_caliberation</code> parameter is set to true, calling <code>ardrone/imu_recalib</code> service will make the driver recalculate the biases in IMU data based on data from a short sampling period.</p>\n\n<h3 id=""flat-trim"">Flat Trim</h3>\n\n<p>Calling <code>ardrone/flattrim</code> service without any parameter will send a ""Flat Trim"" request to AR-Drone to re-calibrate its rotation estimates assuming that it is on a flat surface. Do not call this service while Drone is flying or while the drone is not actually on a flat surface.</p>\n\n<h3 id=""record-to-usb-stick"">Record to USB Stick</h3>\n\n<p>Calling <code>ardrone/setrecord</code> service will enable and disable recording to the USB stick. The service takes a simple <code>1</code> to enable or <code>0</code> to disable. So you can turn on recording to the USB stick with <code>rosservice call /ardrone/setrecord 1</code></p>\n\n<h2 id=""parameters"">Parameters</h2>\n\n<h3 id=""ar-drone-specific-parameters"">AR-Drone Specific Parameters</h3>\n\n<p>The parameters listed below are named according to AR-Drone\'s SDK 2.0 configuration. Unless you set the parameters using <code>rosparam</code> or in your <code>launch</code> file, the default values will be used. These values are applied during driver\'s initialization phase. Please refer to AR-Drone SDK 2.0\'s <a href=""https://projects.ardrone.org/projects/show/ardrone-api/"">developer\'s guide</a> for information about valid values. Not all the parameters will be needed during regular usage of the AR-Drone, please consult the example launch file <code>launch/ardrone.launch</code> for frequent parameters.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">altitude, altitude_max, altitude_min, ardrone_name, autonomous_flight, bitrate, bitrate_ctrl_mode, \nbitrate_storage, codec_fps, com_watchdog, control_iphone_tilt, control_level, control_vz_max, \ncontrol_yaw, detect_type, detections_select_h, detections_select_v, detections_select_v_hsync, \nenemy_colors, enemy_without_shell, euler_angle_max, flight_anim, flight_without_shell, flying_mode, \ngroundstripe_colors, hovering_range, indoor_control_vz_max, indoor_control_yaw, indoor_euler_angle_max, \nlatitude, leds_anim, longitude, manual_trim, max_bitrate, max_size, navdata_demo, navdata_options, \nnb_files, outdoor, outdoor_control_vz_max, outdoor_control_yaw, outdoor_euler_angle_max, output, \nowner_mac, ssid_multi_player, ssid_single_player, travelling_enable, travelling_mode, ultrasound_freq, \nultrasound_watchdog, userbox_cmd, video_channel, video_codec, video_enable, video_file_index, \nvideo_live_socket, video_on_usb, video_slices, vision_enable, wifi_mode, wifi_rate\n</code></pre></div>\n<p><a href=""https://github.com/AutonomyLab/ardrone_autonomy/wiki/AR-Drone-Parameters"">This wiki page</a> includes more information about each of above parameters.</p>\n\n<h3 id=""other-parameters"">Other Parameters</h3>\n\n<p>These parameters control the behaviour of the driver.</p>\n\n<ul>\n<li>\n<code>drone_frame_id</code> - The ""frame_id"" prefix to be used in all <code>tf</code> frame names - default: ""ardrone_base""</li>\n<li>\n<code>root_frame</code> - The default root in drone\'s <code>tf</code> tree (0: _link, 1: _frontcam, 2: _bottomcam) - Default: 0</li>\n<li>\n<code>cov/imu_la</code>, <code>cov/imu_av</code> &amp; <code>cov/imu_or</code>: List of 9 covariance values to be used in <code>imu</code>\'s topic linear acceleration, angular velocity and orientation fields respectively - Default: 0.0 for all members (Please check the FAQ section for a sample launch file that shows how to set these values)</li>\n<li>\n<code>do_imu_calibration</code>: [EXPERIMENTAL] Should the drone cancel the biases in IMU data - Default: 0</li>\n<li>\n<code>enable_legacy_navdata</code>: Enable legacy <code>Navdata</code> publish - Default: True</li>\n</ul>\n\n<h2 id=""license"">License</h2>\n\n<ul>\n<li>[The Parrot\'s license, copyright and disclaimer for <code>ARDroneLib</code>]<a href=""https://github.com/AutonomyLab/ardronelib/blob/master/LICENSE"">https://github.com/AutonomyLab/ardronelib/blob/master/LICENSE</a>) </li>\n<li>Other parts of the code are subject to <code>BSD</code> license.</li>\n</ul>\n\n<h2 id=""contributors"">Contributors</h2>\n\n<p><a href=""http://autonomylab.org/ardrone_autonomy/contribution.html"">List of all commiters to the repository</a>.</p>\n\n<ul>\n<li>@mikehamer - Added support for proper SDK2 way of configuring the Drone via parameter (critical bug fix) (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/26"">More Info</a>). Support for zero-command without hovering (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/34"">More info</a>). Full configurable Navdata support (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/31"">More info</a>). Support for Real-time navdata and video publishing (<a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/44"">More info</a>). Support for configurable data publishing rate.</li>\n<li>@JakobEngel</li>\n<li>@sameerparekh - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/53"">Turn on and off USB stick recording</a> - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/25"">Seperate Magnetometer Topic</a>\n</li>\n<li>@devmax - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/issues/18"">Flat Trim</a> + Various comments for enhancements</li>\n<li>@younata - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/2"">Enhanced Navdata for AR-Drone 2.0</a>\n</li>\n<li>@boris-il-forte &amp; @lesire - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/79"">Catkinization</a> <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/82"">+</a>\n</li>\n<li>@kbogert - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/80"">Move ARDroneLIB to an external project</a>\n</li>\n<li>@garyservin - <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/109"">Fix ffmpeg library link order</a>, <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/110"">Moved header files to include directory</a>, <a href=""https://github.com/AutonomyLab/ardrone_autonomy/pull/117"">Add pressure unit</a>\n</li>\n</ul>\n\n<h2 id=""faq"">FAQ</h2>\n\n<h3 id=""where-should-i-go-next-is-there-any-ros-package-or-stack-that-can-be-used-as-a-tutorial-sample-to-use-ardrone_autonomy"">Where should I go next? Is there any ROS package or stack that can be used as a tutorial/sample to use ardrone_autonomy?</h3>\n\n<p>Absolutely. Here are some examples:</p>\n\n<ul>\n<li><a href=""https://github.com/FalkorSystems/falkor_ardrone"">falkor_ardrone</a></li>\n</ul>\n\n<p>""falkor_ardrone"" is a ROS package which uses the ""ardrone_autonomy"" package to implement autonomous control functionality on an AR.Drone.</p>\n\n<ul>\n<li><a href=""http://www.ros.org/wiki/tum_ardrone"">tum_ardrone</a></li>\n</ul>\n\n<p>State Estimation, Autopilot and GUI for ardrone.</p>\n\n<ul>\n<li><a href=""https://github.com/parcon/arl_ardrone_examples"">arl_ardrone_examples</a></li>\n</ul>\n\n<p>This ROS stack includes a series of very basic nodes to show users how to develop applications that use the ardrone_autonomy drivers for the AR drone 1.0 and 2.0 quadrotor robot.</p>\n\n<ul>\n<li><a href=""https://github.com/mikehamer/ardrone_tutorials"">AR Drone Tutorials</a></li>\n</ul>\n\n<p>This repository contains the source-code for the Up and flying with the AR.Drone and ROS tutorial series, published on <a href=""http://www.robohub.org"">Robohub</a>.</p>\n\n<h3 id=""how-can-i-report-a-bug-submit-patches-or-ask-for-a-feature"">How can I report a bug, submit patches or ask for a feature?</h3>\n\n<p><code>github</code> offers a nice and convenient issue tracking and social coding platform, it can be used for bug reports and pull/feature request. This is the preferred method. You can also contact the author directly.</p>\n\n<p>If you want to submit a pull request, please submit to <code>dev-unstable</code> branch.</p>\n\n<h3 id=""why-the-ardronelib-has-been-patched"">Why the <code>ARDroneLib</code> has been patched?</h3>\n\n<p>The ARDrone 2.0.1 SDK has been patched to 1) Enable the lib only build 2) Make its command line parsing compatible with ROS and 3) To fix its weird <code>main()</code> function issue. The patched SDK is being hosted on an <a href=""https://github.com/AutonomyLab/ardronelib"">external repository</a>.</p>\n\n<h3 id=""why-the-wifi-bandwidth-usage-is-too-much"">Why the wifi bandwidth usage is too much?</h3>\n\n<p>The driver has been configured by default to use the maximum bandwidth allowed to ensure the best quality video stream possible (please take a look at default values in parameters section). That is the reason why the picture quality received from Drone 2.0 using this driver is far better than what you usually get using other software. If for any reason you prefer the lower quality* video stream, change <code>bitrate_ctrl_mode</code>, <code>max_bitrate</code> and <code>bitrate</code> parameters to the default values provided by the AR-Drone developer guide.</p>\n\n<p>(*) Please note that lower quality does not mean lower resolution. By configuring AR-Drone to use bitrate control with limits, the picture gets blurry when there is a movement.</p>\n\n<h3 id=""what-is-the-default-configuration-for-the-front-camera-video-stream"">What is the default configuration for the front camera video stream?</h3>\n\n<p><em>Drone 1</em>: 320x240@15fps UVLC Codec\n<em>Drone 2</em>: 640x360@20fps H264 codec with no record stream</p>\n\n<h3 id=""how-can-i-extract-camera-information-and-tag-type-from-tags_type"">How can I extract camera information and tag type from <code>tags_type[]</code>?</h3>\n\n<p><code>tag_type</code> contains information for both source and type of each detected tag. In order to extract information from them you can use the following c macros and enums (taken from <code>ardrone_api.h</code>)</p>\n<div class=""highlight""><pre><code class=""language-c++"" data-lang=""c++""><span class=""cp"">#define DETECTION_EXTRACT_SOURCE(type)  ( ((type)&gt;&gt;16) &amp; 0x0FF )\n#define DETECTION_EXTRACT_TAG(type)     ( (type) &amp; 0x0FF )\n</span>\n<span class=""k"">typedef</span> <span class=""k"">enum</span>\n<span class=""p"">{</span>\n  <span class=""n"">DETECTION_SOURCE_CAMERA_HORIZONTAL</span><span class=""o"">=</span><span class=""mi"">0</span><span class=""p"">,</span>   <span class=""cm"">/*&lt;! Tag was detected on the front camera picture */</span>\n  <span class=""n"">DETECTION_SOURCE_CAMERA_VERTICAL</span><span class=""p"">,</span>       <span class=""cm"">/*&lt;! Tag was detected on the vertical camera picture at full speed */</span>\n  <span class=""n"">DETECTION_SOURCE_CAMERA_VERTICAL_HSYNC</span><span class=""p"">,</span> <span class=""cm"">/*&lt;! Tag was detected on the vertical camera picture inside the horizontal pipeline */</span>\n  <span class=""n"">DETECTION_SOURCE_CAMERA_NUM</span><span class=""p"">,</span>\n<span class=""p"">}</span> <span class=""n"">DETECTION_SOURCE_CAMERA</span><span class=""p"">;</span>\n\n<span class=""k"">typedef</span> <span class=""k"">enum</span>\n<span class=""p"">{</span>\n  <span class=""n"">TAG_TYPE_NONE</span>             <span class=""o"">=</span> <span class=""mi"">0</span><span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_SHELL_TAG</span>        <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_ROUNDEL</span>          <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_ORIENTED_ROUNDEL</span> <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_STRIPE</span>           <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_CAP</span>              <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_SHELL_TAG_V2</span>     <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_TOWER_SIDE</span>       <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_BLACK_ROUNDEL</span>    <span class=""p"">,</span>\n  <span class=""n"">TAG_TYPE_NUM</span>\n<span class=""p"">}</span> <span class=""n"">TAG_TYPE</span><span class=""p"">;</span>\n\n\n</code></pre></div>\n<h3 id=""how-can-i-calibrate-the-ardrone-front-bottom-camera"">How can I calibrate the ardrone front/bottom camera?</h3>\n\n<p>It is easy to calibrate both cameras using ROS <a href=""http://www.ros.org/wiki/camera_calibration"">Camera Calibration</a> package.</p>\n\n<p>First, run the camera_calibration node with appropriate arguments: (For the bottom camera, replace front with bottom)</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rosrun camera_calibration cameracalibrator.py --size <span class=""o"">[</span>SIZE] --square <span class=""o"">[</span>SQUARESIZE] image:<span class=""o"">=</span>/ardrone/front/image_raw camera:<span class=""o"">=</span>/ardrone/front\n\n</code></pre></div>\n<p>After successful calibration, press the <code>commit</code> button in the UI. The driver will receive the data from the camera calibration node, then will save the information by default in <code>~/.ros/camera_info/ardrone_front.yaml</code>. From this point on, whenever you run the driver on the same computer this file will be loaded automatically by the driver and its information will be published to appropriate <code>camera_info</code> topic. Sample calibration files for AR-Drone 2.0\'s cameras are provided in <code>data/camera_info</code> folder.</p>\n\n<h3 id=""can-i-see-a-sample-ardrone-node-in-a-launch-file-to-learn-how-to-set-parameters"">Can I see a sample ardrone node in a launch file to learn how to set parameters?</h3>\n\n<p>Yes, you can check the <code>launch</code> folder for sample lanuch file.</p>\n\n<h3 id=""can-i-control-multiple-drones-using-a-single-pc-or-can-i-make-my-drone-connect-to-a-wireless-router"">Can I control multiple drones using a single PC? or can I make my drone connect to a wireless router?</h3>\n\n<p>With some hacking yes! This <a href=""https://github.com/AutonomyLab/ardrone_autonomy/wiki/Multiple-AR-Drones"">wiki page</a> contains some information regarding this issue.</p>\n\n<h3 id=""how-to-re-compile-parrot-sdk"">How to re-compile parrot SDK?</h3>\n\n<p>If the <code>git</code> updates include a SDK upgrade, you\'d better cleanup previous vuild files.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""nb"">cd </span>ARDroneLib/Soft/Build\nmake clean\nrm -rf targets_versions\n\n</code></pre></div>\n<p>Build the SDK and driver again.</p>\n\n<h2 id=""todo"">TODO</h2>\n\n<ul>\n<li>Make the <code>tf</code> publish optional.</li>\n<li>Add the currently selected camera name to <code>Navdata</code>\n</li>\n<li>[DONE] Add separate topic for drone\'s debug stream (<code>navdata_demo</code>)</li>\n<li>[DONE] Make the <code>togglecam</code> service accept parameters</li>\n<li>[DONE] Enrich <code>Navdata</code> with magneto meter and baro meter information</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ardrone_autonomy"">ardrone_autonomy</h1>\n\n<p><a href=""http://ros.org"">ROS</a> Driver for <a href=""http://ardrone2.parrot.com/"">Parrot AR-Drone</a> 1.0 &amp; 2.0 Quadrocopters</p>\n\n<ul>\n<li>Documentation: <a href=""http://ardrone-autonomy.readthedocs.org/"">http://ardrone-autonomy.readthedocs.org/</a>\n</li>\n<li>ROS wiki page: <a href=""http://wiki.ros.org/ardrone_autonomy"">http://wiki.ros.org/ardrone_autonomy</a>\n</li>\n<li>Code API: <a href=""http://docs.ros.org/indigo/api/ardrone_autonomy/html"">http://docs.ros.org/indigo/api/ardrone_autonomy/html</a>\n</li>\n<li>Patched <em>ARDroneLib</em> repository: <a href=""https://github.com/AutonomyLab/ardronelib"">https://github.com/AutonomyLab/ardronelib</a>\n</li>\n<li>Author: <a href=""http://mani.im"">Mani Monajjemi</a> (<a href=""http://autonomylab.org"">Autonomy Lab</a>, <a href=""http://www.sfu.ca"">Simon Fraser University</a>) + <a href=""http://ardrone-autonomy.readthedocs.org/en/latest/contributers.html"">other contributers</a>\n</li>\n</ul>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<ul>\n<li>ROS Build farm (<em>Jade</em>): <a href=""http://build.ros.org/job/Jdev__ardrone_autonomy__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Jdev__ardrone_autonomy__ubuntu_trusty_amd64"" alt=""Build Status""></a>\n</li>\n<li>ROS Build farm (<em>Indigo</em>): <a href=""http://build.ros.org/job/Idev__ardrone_autonomy__ubuntu_trusty_amd64/""><img src=""http://build.ros.org/buildStatus/icon?job=Idev__ardrone_autonomy__ubuntu_trusty_amd64"" alt=""Build Status""></a>\n</li>\n<li>Travis (<em>Jade</em>/<em>Indigo</em>): <a href=""https://travis-ci.org/AutonomyLab/ardrone_autonomy""><img src=""https://travis-ci.org/AutonomyLab/ardrone_autonomy.svg?branch=indigo-devel"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
cob_gazebo_plugins,http://rosindex.github.io/r/cob_gazebo_plugins/,indigo,"cob_gazebo_plugins,cob_gazebo_ros_control","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_gazebo_plugins""><img src=""https://travis-ci.org/ipa320/cob_gazebo_plugins.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<h1 id=""cob_gazebo_plugins"">cob_gazebo_plugins</h1>\n</div>\n\n            \n          </div>'"
unique_identifier,http://rosindex.github.io/r/unique_identifier/,"hydro,fuerte,groovy,kinetic,jade,indigo","unique_id,unique_identifier,uuid_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""unique_identifier"">unique_identifier</h1>\n\n<p>ROS messages and interfaces for Universally Unique Identifiers.</p>\n\n<blockquote>\n<ul>\n<li>  <a href=""http://en.wikipedia.org/wiki/Uuid"">http://en.wikipedia.org/wiki/Uuid</a>\n</li>\n<li>  <a href=""http://tools.ietf.org/html/rfc4122.html"">http://tools.ietf.org/html/rfc4122.html</a>\n</li>\n</ul>\n</blockquote>\n\n<p>ROS documentation:</p>\n\n<blockquote>\n<ul>\n<li>  <a href=""http://www.ros.org/wiki/unique_id"">http://www.ros.org/wiki/unique_id</a>\n</li>\n<li>  <a href=""http://www.ros.org/wiki/unique_identifier"">http://www.ros.org/wiki/unique_identifier</a>\n</li>\n<li>  <a href=""http://www.ros.org/wiki/uuid_msgs"">http://www.ros.org/wiki/uuid_msgs</a>\n</li>\n</ul>\n</blockquote>\n</div>\n\n            \n          </div>'"
cob_perception_common,http://rosindex.github.io/r/cob_perception_common/,"hydro,groovy,indigo","cob_3d_mapping_msgs,cob_cam3d_throttle,cob_image_flip,cob_object_detection_msgs,cob_object_detection_visualizer,cob_perception_common,cob_perception_msgs,cob_vision_utils","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_perception_common""><img src=""https://travis-ci.org/ipa320/cob_perception_common.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
rqt,http://rosindex.github.io/r/rqt/,"hydro,fuerte,groovy,kinetic,jade,indigo","rqt,rqt_gui,rqt_gui_cpp,rqt_gui_py,rqt_bag,rqt_bag_plugins,rqt_console,rqt_dep,rqt_graph,rqt_image_view,rqt_logger_level,rqt_msg,rqt_nav_view,rqt_param,rqt_plot,rqt_pose_view,rqt_pr2_dashboard,rqt_publisher,rqt_py_common,rqt_py_console,rqt_robot_dashboard,rqt_robot_monitor,rqt_robot_steering,rqt_runtime_monitor,rqt_rviz,rqt_service_caller,rqt_shell,rqt_srv,rqt_tf_tree,rqt_topic,rqt_web","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dr_base,http://rosindex.github.io/r/dr_base/,kinetic,"dr_base,dr_cmake","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""dr_base"">dr_base</h1>\n\n<p>Base packages used in all Delft Robotics projects.</p>\n\n<ul>\n<li><strong>dr_base</strong></li>\n</ul>\n\n<p>Package for pulling in base dependencies. For now only pulls in dr_cmake.</p>\n\n<ul>\n<li><strong>dr_cmake</strong></li>\n</ul>\n\n<p>CMake utilities.</p>\n</div>\n\n            \n          </div>'"
universal_robot,http://rosindex.github.io/r/universal_robot/,"hydro,groovy,indigo","universal_robot,ur10_moveit_config,ur3_moveit_config,ur5_moveit_config,ur_bringup,ur_description,ur_driver,ur_gazebo,ur_kinematics,ur_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""universal_robot"">universal_robot</h1>\n\n<p>This repository provides ROS support for the universal robots.  This repo holds source code for all versions &gt; groovy.  For those versions &lt;= groovy see: hg <a href=""https://kforge.ros.org/ros_industrial/universal_robot"">https://kforge.ros.org/ros_industrial/universal_robot</a></p>\n\n<p>To check that the package works with a UR5, set up a catkin workspace and clone the repository into the src/ folder. It should look like ~/catkin_ws/src/universal_robot. Don\'t forget to source the setup file ($ source ~/catkin_ws/devel/setup.*sh), then use catkin_make to compile.\nYou can then start the driver with the following commands (start new terminals, don\'t forget to source the setup shell files):</p>\n\n<p>$ roslaunch ur_bringup ur5.launch robot_ip:=IP_OF_THE_ROBOT</p>\n\n<p>$ roscd ur_driver; ./test_move.py</p>\n\n<p>In order to start moveit! s.t. it can directly control the robot, close ur_bringup and type this:</p>\n\n<p>$ roslaunch ur5_moveit_config moveit_planning_execution.launch sim:=false robot_ip:=IP_OF_THE_ROBOT</p>\n\n<p>Remember that you should always have your hands on the big red button in case there is something in the way, or anything unexcpected happens.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""universal_robot"">universal_robot</h1>\n\n<p>This repository provides ROS support for the universal robots.  This repo holds source code for all versions &gt; groovy.  For those versions &lt;= groovy see: hg <a href=""https://kforge.ros.org/ros_industrial/universal_robot"">https://kforge.ros.org/ros_industrial/universal_robot</a></p>\n\n<p><strong>Installation from Source</strong><br>\nThere are releases available for ROS Hydro and ROS Indigo. However, for the latest features and developments you might want to install from source.</p>\n\n<p>First set up a catkin workspace (see <a href=""http://wiki.ros.org/catkin/Tutorials"">this tutorials</a>).<br>\nThen clone the repository into the src/ folder. It should look like /path/to/your/catkin_workspace/src/universal_robot.<br>\nMake sure to source the correct setup file according to your workspace hierarchy, then use \n<code>catkin_make\n</code> to compile.  </p>\n\n<hr>\n\n<p><strong>Usage with real Hardware</strong><br>\nThere are launch files available to bringup a real robot - either UR5 or UR10.<br>\nIn the following the commands for the UR5 are given. For the UR10, simply replace the prefix accordingly.</p>\n\n<p>Don\'t forget to source the correct setup shell files and use a new terminal for each command!   </p>\n\n<p>To bring up the real robot, run:</p>\n\n<p><code>roslaunch ur_bringup ur5_bringup.launch robot_ip:=IP_OF_THE_ROBOT [reverse_port:=REVERSE_PORT]\n</code></p>\n\n<p>A simple test script that moves the robot to predefined positions can be executed like this:</p>\n\n<p><code>rosrun ur_driver test_move.py\n</code></p>\n\n<p>CAUTION:<br>\nRemember that you should always have your hands on the big red button in case there is something in the way or anything unexpected happens.</p>\n\n<p><strong>MoveIt! with real Hardware</strong><br>\nAdditionally, you can use MoveIt! to control the robot.<br>\nThere exist MoveIt! configuration packages for both robots.  </p>\n\n<p>For setting up the MoveIt! nodes to allow motion planning run:</p>\n\n<p><code>roslaunch ur5_moveit_config ur5_moveit_planning_execution.launch\n</code></p>\n\n<p>For starting up RViz with a configuration including the MoveIt! Motion Planning plugin run:</p>\n\n<p><code>roslaunch ur5_moveit_config moveit_rviz.launch config:=true\n</code></p>\n\n<p>NOTE:<br>\nAs MoveIt! seems to have difficulties with finding plans for the UR with full joint limits [-2pi, 2pi], there is a joint_limited version using joint limits restricted to [-pi,pi]. In order to use this joint limited version, simply use the launch file arguments \'limited\', i.e.:  </p>\n\n<p><code>roslaunch ur_bringup ur5_bringup.launch limited:=true robot_ip:=IP_OF_THE_ROBOT [reverse_port:=REVERSE_PORT]\n</code></p>\n\n<p><code>roslaunch ur5_moveit_config ur5_moveit_planning_execution.launch limited:=true\n</code></p>\n\n<p><code>roslaunch ur5_moveit_config moveit_rviz.launch config:=true\n</code></p>\n\n<hr>\n\n<p><strong>Usage with Gazebo Simulation</strong><br>\nThere are launch files available to bringup a simulated robot - either UR5 or UR10.<br>\nIn the following the commands for the UR5 are given. For the UR10, simply replace the prefix accordingly.</p>\n\n<p>Don\'t forget to source the correct setup shell files and use a new terminal for each command!   </p>\n\n<p>To bring up the simulated robot in Gazebo, run:</p>\n\n<p><code>roslaunch ur_gazebo ur5.launch\n</code></p>\n\n<p><strong>MoveIt! with a simulated robot</strong><br>\nAgain, you can use MoveIt! to control the simulated robot.  </p>\n\n<p>For setting up the MoveIt! nodes to allow motion planning run:</p>\n\n<p><code>roslaunch ur5_moveit_config ur5_moveit_planning_execution.launch sim:=true\n</code></p>\n\n<p>For starting up RViz with a configuration including the MoveIt! Motion Planning plugin run:</p>\n\n<p><code>roslaunch ur5_moveit_config moveit_rviz.launch config:=true\n</code></p>\n\n<p>NOTE:<br>\nAs MoveIt! seems to have difficulties with finding plans for the UR with full joint limits [-2pi, 2pi], there is a joint_limited version using joint limits restricted to [-pi,pi]. In order to use this joint limited version, simply use the launch file arguments \'limited\', i.e.:  </p>\n\n<p><code>roslaunch ur_gazebo ur5.launch limited:=true\n</code></p>\n\n<p><code>roslaunch ur5_moveit_config ur5_moveit_planning_execution.launch sim:=true limited:=true\n</code></p>\n\n<p><code>roslaunch ur5_moveit_config moveit_rviz.launch config:=true\n</code></p>\n</div>\n\n            \n          </div>'"
neo_driver,http://rosindex.github.io/r/neo_driver/,indigo,"cob_scan_unifier,neo_base_mp_400,neo_base_mp_500,neo_base_mp_700,neo_base_mpo_500,neo_base_mpo_700,neo_msgs,neo_platformctrl_diff,neo_platformctrl_mecanum,neo_relayboard,neo_relayboardv2,neo_watchdogs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""neo_driver"">neo_driver</h1>\n\n<p>new version</p>\n\n<p>ROS Indigo with catkin\nUbuntu 14.04</p>\n</div>\n\n            \n          </div>'"
interactive_world,http://rosindex.github.io/r/interactive_world/,indigo,"informed_object_search,interactive_world,interactive_world_msgs,interactive_world_parser,interactive_world_tools,jinteractiveworld,spatial_world_model","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""interactive_world"">interactive_world <a href=""https://travis-ci.org/GT-RAIL/interactive_world""><img src=""https://api.travis-ci.org/GT-RAIL/interactive_world.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""home-of-the-interactive-world-project"">Home of the Interactive World Project</h4>\n\n<h3 id=""license"">License</h3>\n\n<p>interactive_world is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS.md</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
random_numbers,http://rosindex.github.io/r/random_numbers/,"hydro,groovy,kinetic,jade,indigo",random_numbers,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""random_numbers"">random_numbers</h1>\n\n<p>This library contains wrappers for generating floating point values, integers, quaternions using boost libraries.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>master branch: <a href=""https://travis-ci.org/ros-planning/random_numbers""><img src=""https://travis-ci.org/ros-planning/random_numbers.png?branch=master"" alt=""Build Status""></a></p>\n\n<h2 id=""features"">Features</h2>\n\n<p>New: you can pass in a custom random number generator seed to allow optional deterministic behavior during debugging, testing, etc. using the secondary constructor.</p>\n</div>\n\n            \n          </div>'"
joy_teleop,http://rosindex.github.io/r/joy_teleop/,"hydro,fuerte,indigo","joy_teleop,key_teleop,mouse_teleop,teleop_tools,teleop_tools_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teleop_tools"">teleop_tools</h1>\n\n<p>A set of generic teleoperation tools for any robot.</p>\n\n<p>This contains the following teleoperation tools:</p>\n\n<ul>\n<li>\n<code>joy_teleop</code>, a generic joystick interface for topics and actions</li>\n<li>\n<code>key_teleop</code>, a lightweight console keyboard teleoperation utility</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teleop_tools"">teleop_tools</h1>\n\n<p>A set of generic teleoperation tools for any robot.</p>\n\n<p>This contains the following teleoperation tools:</p>\n\n<ul>\n<li>\n<code>joy_teleop</code>, a generic joystick interface for topics and actions</li>\n<li>\n<code>key_teleop</code>, a lightweight console keyboard teleoperation utility</li>\n<li>\n<code>mouse_teleop</code>, a pointing device (e.g. mouse, touchpad) teleoperation utility</li>\n</ul>\n</div>\n\n            \n          </div>'"
gazebo2rviz,http://rosindex.github.io/r/gazebo2rviz/,"hydro,indigo",gazebo2rviz,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
teleop_tools,http://rosindex.github.io/r/teleop_tools/,"hydro,jade,fuerte,indigo","joy_teleop,key_teleop,mouse_teleop,teleop_tools,teleop_tools_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teleop_tools"">teleop_tools</h1>\n\n<p>A set of generic teleoperation tools for any robot.</p>\n\n<p>This contains the following teleoperation tools:</p>\n\n<ul>\n<li>\n<code>joy_teleop</code>, a generic joystick interface for topics and actions</li>\n<li>\n<code>key_teleop</code>, a lightweight console keyboard teleoperation utility</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teleop_tools"">teleop_tools</h1>\n\n<p>A set of generic teleoperation tools for any robot.</p>\n\n<p>This contains the following teleoperation tools:</p>\n\n<ul>\n<li>\n<code>joy_teleop</code>, a generic joystick interface for topics and actions</li>\n<li>\n<code>key_teleop</code>, a lightweight console keyboard teleoperation utility</li>\n<li>\n<code>mouse_teleop</code>, a pointing device (e.g. mouse, touchpad) teleoperation utility</li>\n</ul>\n</div>\n\n            \n          </div>'"
stage,http://rosindex.github.io/r/stage/,"hydro,jade,kinetic,indigo",stage,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Stage README.txt\n================\n\nThis is the Stage README file, containing an introduction, license and\ncitation information.\n\nFor release notes see RELEASE.txt\nFor installation notes see INSTALL.txt\n\nCopyright Richard Vaughan and contributors 1998-2011\nPart of the Player Project (http://playerstage.org)\n\nLicense\n-------\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License version 2 as\npublished by the Free Software Foundation.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nA copy of the license is included with the sourcecode in the file\n\'COPYING"". Copying and redistribution is permitted only under the\nterms of the license.\n\n\nIntroduction\n------------\nStage is a robot simulator. It provides a virtual world populated by\nmobile robots and sensors, along with various objects for the robots\nto sense and manipulate.\n\nThere are three ways to use Stage: \n\n1. The ""stage"" program: a standalone robot simulation program\nthat loads your robot control program from a library that you provide.\n\n2. The Stage plugin for Player (libstageplugin) - provides a\npopulation of virtual robots for the popular Player networked robot\ninterface system.\n\n3. Write your own simulator: the ""libstage"" C++ library makes it\neasy to create, run and customize a Stage simulation from inside your\nown programs.\n\n\nModels\n------\nStage provides several sensor and actuator models, including sonar\nor infrared rangers, scanning laser rangefinder, color-blob tracking,\nfiducial tracking, bumpers, grippers and mobile robot bases with\nodometric or global localization.\n\n\nDesign\n------\nStage was designed with multi-agent systems in mind, so it provides\nfairly simple, computationally cheap models of lots of devices rather\nthan attempting to emulate any device with great fidelity. This design\nis intended to be useful compromise between conventional high-fidelity\nrobot simulations, the minimal simulations described by Jakobi [4], and\nthe grid-world simulations common in artificial life research [5]. We\nintend Stage to be just realistic enough to enable users to move\ncontrollers between Stage robots and real robots, while still being\nfast enough to simulate large populations. We also intend Stage to be\ncomprehensible to undergraduate students, yet sophisticated enough for\nprofessional reseachers.\n\nPlayer also contains several useful \'virtual devices\'; including\nsome sensor pre-processing or sensor-integration algorithms that help\nyou to rapidly build powerful robot controllers. These are easy to use\nwith Stage.\n\n\nCitations\n---------\nIf you use Stage in your work, we\'d appreciate a citation. At the time \nof writing, the most suitable reference is either:\n\nRichard Vaughan. ""Massively Multiple Robot Simulations in Stage"", Swarm\nIntelligence 2(2-4):189-208, 2008. Springer.\n\nOr, if you are using Player/Stage:\n\nBrian Gerkey, Richard T. Vaughan and Andrew Howard. ""The Player/Stage \nProject: Tools for Multi-Robot and Distributed Sensor Systems"" \nProceedings of the 11th International Conference on Advanced Robotics,\npages 317-323, Coimbra, Portugal, June 2003 (ICAR\'03)  \nhttp://www.isr.uc.pt/icar03/ .  \n\n[gzipped postscript](http://robotics.stanford.edu/~gerkey/research/final_papers/icar03-player.ps.gz), \n[pdf](http://robotics.stanford.edu/~gerkey/research/final_papers/icar03-player.pdf)\n\nPlease help us keep track of what\'s being used out there by correctly\nnaming the Player/Stage components you use. Player used on its own is\ncalled ""Player"". Player and Stage used together are referred to as\n""the Player/Stage system"" or just ""Player/Stage"". When Stage is used\nwithout Player, it\'s just called ""Stage"". When the Stage library is\nused to create your own custom simulator, it\'s called ""libstage"" or\n""the Stage library"". When Player is used with its 3D ODE-based\nsimulation backend, Gazebo, it\'s called Player/Gazebo. Gazebo without\nPlayer is just ""Gazebo"". All this software is part of the ""Player\nProject"".\n\nSupport\n-------\nFunding for Stage has been provided in part by:\n\n- DARPA (USA)\n- NASA (USA)\n- NSERC (Canada)\n- DRDC Suffield (Canada)\n- NSF (USA)\n- Simon Fraser University (Canada)\n\nNames\n-----\nThe names ""Player"" and ""Stage"" were inspired by the lines:\n\n    ""All the world\'s a stage,  \n     And all the men and women merely players""  \n\nfrom ""As You Like It"" by William Shakespeare.\n\n\nReferences\n----------\n[4] Nick Jakobi (1997) ""Evolutionary Robotics and the Radical Envelope\nof Noise Hypothesis"", Adaptive Behavior Volume 6, Issue 2. pp.325 -\n368.\n\n[5] Stuart Wilson (1985) ""Knowledge Growth in an Artificial Animal"",\nProceedings of the First International Conference on Genetic Agorithms\nand Their Applications.  Hillsdale, New Jersey. pp.16-23.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
eigen_stl_containers,http://rosindex.github.io/r/eigen_stl_containers/,"hydro,groovy,kinetic,jade,indigo",eigen_stl_containers,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_apps,http://rosindex.github.io/r/pr2_apps/,"hydro,fuerte,electric,groovy,diamondback,indigo","pr2_app_manager,pr2_apps,pr2_mannequin_mode,pr2_position_scripts,pr2_teleop,pr2_teleop_general,pr2_tuckarm","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cob_environment_perception,http://rosindex.github.io/r/cob_environment_perception/,"hydro,groovy,fuerte,indigo","cob_3d_evaluation_features,cob_3d_features,cob_3d_features_evaulation,cob_3d_fov_segmentation,cob_3d_mapping_common,cob_3d_mapping_demonstrator,cob_3d_mapping_filters,cob_3d_mapping_gazebo,cob_3d_mapping_geometry_map,cob_3d_mapping_pipeline,cob_3d_mapping_point_map,cob_3d_mapping_semantics,cob_3d_mapping_slam,cob_3d_mapping_tools,cob_3d_meshing,cob_3d_registration,cob_3d_segmentation,cob_3d_transform_nodes,cob_3d_view_cells,cob_3d_visualization,cob_environment_perception,cob_keyframe_detector,cob_table_object_cluster,libgpc,libopenmesh,libpolypartition,cob_3d_mapping_msgs,openmesh,polypartition,cob_mesh_mapping,cob_3d_mapping_pipeline_fake,cob_3d_mapping_rviz_plugins","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_environment_perception""><img src=""https://travis-ci.org/ipa320/cob_environment_perception.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n\n<p>PCL 1.7 and electric compatibility:</p>\n\n<p>-&gt; use: svn co <a href=""http://svn.pointclouds.org/ros/branches/electric/perception_pcl_unstable"">http://svn.pointclouds.org/ros/branches/electric/perception_pcl_unstable</a> perception_pcl_unstable\n-&gt; rosmake perception_pcl_unstable\n-&gt; in perception_pcl_unstable/pcl/build/pcl_trunk/tools/CMakeLists.txt comment:\n      PCL_ADD_EXECUTABLE(pcl_tiff2pcd ${SUBSYS_NAME} tiff2pcd.cpp)\n      target_link_libraries(pcl_tiff2pcd pcl_common pcl_io)\n   to provide support for older boost version\n-&gt; in perception_pcl_unstable/pcl/build/pcl_trunk/features/CMakeLists.txt:\n      uncomment all lines for RSD ( .../rsd.h, .../rsd.hpp, .../rsd.cpp)</p>\n\n<p>Interface of MLS in PCL 1.7 has changed quite a bit. Therefore, the current programs using MLS\nrequire some fixes to work properly with 1.7.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">PCL 1.7 and electric compatibility:\n\n-&gt; use: svn co http://svn.pointclouds.org/ros/branches/electric/perception_pcl_unstable perception_pcl_unstable\n-&gt; rosmake perception_pcl_unstable\n-&gt; in perception_pcl_unstable/pcl/build/pcl_trunk/tools/CMakeLists.txt comment:\n      PCL_ADD_EXECUTABLE(pcl_tiff2pcd ${SUBSYS_NAME} tiff2pcd.cpp)\n      target_link_libraries(pcl_tiff2pcd pcl_common pcl_io)\n   to provide support for older boost version\n-&gt; in perception_pcl_unstable/pcl/build/pcl_trunk/features/CMakeLists.txt:\n      uncomment all lines for RSD ( .../rsd.h, .../rsd.hpp, .../rsd.cpp)\n\nInterface of MLS in PCL 1.7 has changed quite a bit. Therefore, the current programs using MLS\nrequire some fixes to work properly with 1.7.\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
navigation_tutorials,http://rosindex.github.io/r/navigation_tutorials/,"hydro,fuerte,groovy,diamondback,jade,indigo","laser_scan_publisher_tutorial,navigation_stage,navigation_tutorials,odometry_publisher_tutorial,point_cloud_publisher_tutorial,robot_setup_tf_tutorial,roomba_stage,simple_navigation_goals_tutorial","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""navigation_tutorials"">navigation_tutorials</h1>\n\n<p>Tutorials about using the ROS Navigation stack.\nSee:</p>\n\n<ul>\n<li><a href=""http://wiki.ros.org/navigation_tutorials"">http://wiki.ros.org/navigation_tutorials</a></li>\n<li><a href=""http://wiki.ros.org/navigation/Tutorials"">http://wiki.ros.org/navigation/Tutorials</a></li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
auv_msgs,http://rosindex.github.io/r/auv_msgs/,"jade,kinetic,indigo",auv_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""auv_msgs"">auv_msgs</h1>\n\n<p>Standard messages used with Autonomous Underwater Vehicles from the Ocean Systems Lab at Heriot-Watt University.</p>\n</div>\n\n            \n          </div>'"
urdfdom_py,http://rosindex.github.io/r/urdfdom_py/,"jade,kinetic,indigo",urdfdom_py,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""urdf_parser_py"">urdf_parser_py</h1>\n\n<h2 id=""development-setup"">Development Setup</h2>\n\n<p>You must manually run <code>setup.py</code>. For catkin development, you can install to $ws/../build/lib/pythonX.Y/dist-packages via</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">devel_prefix=$(cd $(catkin_find --first-only)/.. &amp;&amp; pwd)\ncd ../urdf_parser_py\npython setup.py install --install-layout deb --prefix $devel_prefix\n</code></pre></div>\n<p>Not yet sure how to get it to generate catkin-like development installs, which uses <code>__init__.py</code> to point to the development source directory.</p>\n\n<h2 id=""authors"">Authors</h2>\n\n<ul>\n<li>  Thomas Moulard - <code>urdfpy</code> implementation, integration</li>\n<li>  David Lu - <code>urdf_python</code> implementation, integration</li>\n<li>  Kelsey Hawkins - <code>urdf_parser_python</code> implementation, integration</li>\n<li>  Antonio El Khoury - bugfixes</li>\n<li>  Eric Cousineau - reflection (serialization?) changes</li>\n</ul>\n\n<h2 id=""reflection-or-just-serialization"">Reflection (or just Serialization?)</h2>\n\n<p>This an attempt to generalize the structure of the URDF via reflection to make it easier to extend. This concept is taken from Gazebo\'s SDF structure, and was done with SDF in mind to a) make an SDF parser and b) make a simple converter between URDF and SDF.</p>\n\n<h3 id=""changes"">Changes</h3>\n\n<ul>\n<li>  Features:\n\n<ul>\n<li>  Transmission and basic Gazebo nodes.</li>\n<li>  General aggregate type, for preserving the order of aggregate types (i.e., the URDF robot model, and for the future, SDF models, links with multiple visuals / collisions, etc).  This allows for basic checks to see if ""scalar"" elements are defined multiple times. (We were affected by this at one point with a pose defined twice with different values, screwing up the loading / saving of a model with this API).</li>\n<li>  Dumping to YAML, used for printing to string.\n\n<ul>\n<li>  Doesn\'t preserve ordering because of it, but someone posted an issue about this on pyyaml\'s issue tracker, and I think a few solutions were posted (including one from the author)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>  XML Parsing: minidom has been swapped out with lxml.etree, but it should not be hard to change that back. Maybe Sax could be used for event-driven parsing.</li>\n<li>  API:\n\n<ul>\n<li>  Loading methods rely primarily on instance methods rather than static methods, mirroring Gazebo\'s SDF construct-then-load method</li>\n<li>  Renamed static <code>parse_xml()</code> to <code>from_xml()</code>, and renamed <code>load_*</code> methods to <code>from_*</code> if they are static</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=""todo"">Todo</h3>\n\n<ol>\n<li> Develop a Python SDF API in a <code>sdf</code> module.\n\n<ul>\n<li>  Maybe make the package itself be <code>robot_model_py</code> so that the respective modules would be <code>robot_model_py.urdf_parser</code> and <code>robot_model_py.sdf_parser</code>?</li>\n<li>  Parse Gazebo\'s SDF definition files at some point? For speed\'s sake, parse it and have it generate code to use?</li>\n</ul>\n</li>\n<li> Make a direct, two-way URDF &lt;-&gt; SDF converter.\n\n<ul>\n<li>  Gazebo has the ability to load URDFs and save SDFs, but it lumps everything together and (I think) adds some ""noise"" from OpenDE for positions.</li>\n</ul>\n</li>\n<li> Make the names a little clearer, especially the fact that <code>from_xml</code> and <code>to_xml</code> write to a node, but do not create a new one.</li>\n<li> Figure out good policy for handling default methods. If saving to XML, write out default values, or leave them out for brevity (and to leave it open for change)? Might be best to add that as an option.</li>\n<li> Find a lightweight package that can handle the reflection aspect more elegantly. Enthought traits? IPython\'s spinoff of traits?</li>\n</ol>\n</div>\n\n            \n          </div>'"
rosruby,http://rosindex.github.io/r/rosruby/,"hydro,fuerte,electric,groovy,indigo",rosruby,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-ruby-client-rosruby"">ROS Ruby Client: rosruby</h1>\n\n<p><a href=""http://ros.org"">ROS</a> is Robot Operating System developed by <a href=""http://osrfoundation.org/"">OSRF</a> and open source communities.</p>\n\n<p>This project supports ruby ROS client. You can program intelligent robots by ruby, very easily.</p>\n\n<p><strong>Homepage</strong>:     <a href=""http://otl.github.com/rosruby"">http://otl.github.com/rosruby</a><br>\n<strong>Git</strong>:          <a href=""http://github.com/OTL/rosruby"">http://github.com/OTL/rosruby</a><br>\n<strong>Author</strong>:       Takashi Ogura<br>\n<strong>Copyright</strong>:    2012<br>\n<strong>License</strong>:      new BSD License<br>\n<strong>Latest Version</strong>: 0.3.0   </p>\n\n<h2 id=""requirements"">Requirements</h2>\n\n<ul>\n<li>ruby (1.8.7/1.9.3)</li>\n<li>ROS (groovy)</li>\n</ul>\n\n<h2 id=""electric-fuerte"">electric/fuerte</h2>\n\n<p>If you are using electric or fuerte, please use v0.2.1.</p>\n\n<h2 id=""install-from-source"">Install from source</h2>\n\n<p>Install ROS and ruby first. ROS document is <a href=""http://ros.org/wiki/ROS/Installation"">http://ros.org/wiki/ROS/Installation</a> .</p>\n\n<p>Please use catkin to install rosruby.\nIf you have not catkin_ws yet, please read <a href=""http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment"">this wiki</a>.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws/src\n<span class=""gp"">$ </span>git clone git://github.com/OTL/rosruby.git\n<span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n<span class=""gp"">$ </span>catkin_make\n\n</code></pre></div>\n<p>please add RUBYLIB environment variable, like below (if you are using bash).</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">echo</span> <span class=""s2"">""export RUBYLIB=</span><span class=""sb"">`</span>rospack find rosruby<span class=""sb"">`</span><span class=""s2"">/lib""</span> &gt;&gt; ~/.bashrc\n<span class=""gp"">$ </span><span class=""nb"">source</span> ~/.bashrc\n\n</code></pre></div>\n<h2 id=""if-you-are-using-install-environment-for-catkin-advanced"">If you are using install environment for catkin....(advanced)</h2>\n\n<p>if you want to use rosruby in <code>install</code> environment,\nthis means you are doing like this.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>catkin_make install\n<span class=""gp"">$ </span><span class=""nb"">source</span> ~/catkin_ws/install/setup.bash\n\n</code></pre></div>\n<p>then you must use below RUBYLIB environment.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""nb"">export </span><span class=""nv"">RUBYLIB</span><span class=""o"">=</span>~/catkin_ws/install/lib/ruby\n\n</code></pre></div>\n<h2 id=""message-generation"">Message generation</h2>\n\n<p>You must generate ROS msg/srv files for rosruby manually.\nPlease use the msg/srv generation script (rosruby_genmsg.py) in order to \ngenerage rosruby messages.</p>\n\n<p>For example,</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby rosruby_genmsg.py geometry_msgs nav_msgs\n\n</code></pre></div>\n<p>Arguments are msg package names. If arguments are not given,\nthat converts msg/srv to .rb which is needed by sample programs.</p>\n\n<p>This generates message files in ~/.ros/rosruby directory.</p>\n\n<h2 id=""sample-source"">Sample Source</h2>\n\n<h2 id=""subscriber"">Subscriber</h2>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'std_msgs/String\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/rosruby/sample_subscriber\'</span><span class=""p"">)</span>\n<span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">subscribe</span><span class=""p"">(</span><span class=""s1"">\'/chatter\'</span><span class=""p"">,</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">)</span> <span class=""k"">do</span> <span class=""o"">|</span><span class=""n"">msg</span><span class=""o"">|</span>\n  <span class=""nb"">puts</span> <span class=""s2"">""message come! = </span><span class=""se"">\\\'</span><span class=""si"">#{</span><span class=""n"">msg</span><span class=""p"">.</span><span class=""nf"">data</span><span class=""si"">}</span><span class=""se"">\\\'</span><span class=""s2"">""</span>\n<span class=""k"">end</span>\n\n<span class=""k"">while</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">ok?</span>\n  <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">spin_once</span>\n  <span class=""nb"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""p"">)</span>\n<span class=""k"">end</span>\n\n\n</code></pre></div>\n<h2 id=""publisher"">Publisher</h2>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'std_msgs/String\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/rosruby/sample_publisher\'</span><span class=""p"">)</span>\n<span class=""n"">publisher</span> <span class=""o"">=</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">advertise</span><span class=""p"">(</span><span class=""s1"">\'/chatter\'</span><span class=""p"">,</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">)</span>\n\n<span class=""n"">msg</span> <span class=""o"">=</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">.</span><span class=""nf"">new</span>\n\n<span class=""n"">i</span> <span class=""o"">=</span> <span class=""mi"">0</span>\n<span class=""k"">while</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">ok?</span>\n  <span class=""n"">msg</span><span class=""p"">.</span><span class=""nf"">data</span> <span class=""o"">=</span> <span class=""s2"">""Hello, rosruby!: </span><span class=""si"">#{</span><span class=""n"">i</span><span class=""si"">}</span><span class=""s2"">""</span>\n  <span class=""n"">publisher</span><span class=""p"">.</span><span class=""nf"">publish</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""p"">)</span>\n  <span class=""nb"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""o"">.</span><span class=""mi"">0</span><span class=""p"">)</span>\n  <span class=""n"">i</span> <span class=""o"">+=</span> <span class=""mi"">1</span>\n<span class=""k"">end</span>\n\n</code></pre></div>\n<h2 id=""note"">Note</h2>\n\n<p>Ruby requires \'Start with Capital letter\' for class or module names.\nSo please use <strong>S</strong>td_msgs::String class instead of <strong>s</strong>td_msgs::String.</p>\n\n<h2 id=""try-publish-and-subscribe"">Try Publish and Subscribe</h2>\n\n<p>You needs three terminal as it is often for ROS users.\nThen you run roscore if is not running.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roscore\n\n</code></pre></div>\n<p>run publisher sample</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby sample_publisher.rb\n\n</code></pre></div>\n<p>run subscription sample</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby sample_subscriber.rb\n\n</code></pre></div>\n<p>you can check publication by using rostopic.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rostopic list\n<span class=""gp"">$ </span>rostopic <span class=""nb"">echo</span> /chatter\n\n</code></pre></div>\n<h2 id=""try-service"">Try Service?</h2>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby add_two_ints_server.rb\n\n</code></pre></div>\n<p>run client with args (\'a\' and \'b\' for roscpp_tutorials/TwoInts)</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby add_two_ints_client.rb 10 20\n\n</code></pre></div>\n<h2 id=""and-more"">And more...</h2>\n\n<p>There are <a href=""https://github.com/OTL/rosruby_common"">rosruby_common</a> stack that contains actionlib and tf (highly under development).</p>\n\n<h2 id=""do-all-tests"">Do all tests</h2>\n\n<p><a href=""http://travis-ci.org/OTL/rosruby""><img src=""https://secure.travis-ci.org/OTL/rosruby.png"" alt=""Build Status""></a></p>\n\n<p>Install some packages for tests.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo apt-get install rake gem\n<span class=""gp"">$ </span>sudo gem install yard redcarpet simplecov\n\n</code></pre></div>\n<p>run tests.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roscd rosruby\n<span class=""gp"">$ </span>rake <span class=""nb"">test</span>\n\n</code></pre></div>\n<h2 id=""documents"">Documents</h2>\n\n<p>you can generate API documents using yard.\nDocument generation needs yard and redcarpet.\nYou can install these by gem command like this.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>gem install yard redcarpet\n\n</code></pre></div>\n<p>Then try to generate documentds.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rake yard\n\n</code></pre></div>\n<p>You can access to the generated documents from <a href=""http://otl.github.com/rosruby/doc/"">here</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-ruby-client-rosruby"">ROS Ruby Client: rosruby</h1>\n\n<p><a href=""http://ros.org"">ROS</a> is Robot Operating System developed by <a href=""http://www.willowgarage.com/"">Willow Garage</a> and open source communities.</p>\n\n<p>This project supports ruby ROS client. You can program intelligent robots by ruby, very easily.</p>\n\n<p><strong>Homepage</strong>:     <a href=""http://otl.github.com/rosruby"">http://otl.github.com/rosruby</a><br>\n<strong>Git</strong>:          <a href=""http://github.com/OTL/rosruby"">http://github.com/OTL/rosruby</a><br>\n<strong>Author</strong>:       Takashi Ogura<br>\n<strong>Copyright</strong>:    2012<br>\n<strong>License</strong>:      new BSD License<br>\n<strong>Latest Version</strong>: 0.2.0   </p>\n\n<h2 id=""requirements"">Requirements</h2>\n\n<ul>\n<li>ruby (1.8.7/1.9.3/jruby-18mode)</li>\n<li>ROS (electric/fuerte)</li>\n</ul>\n\n<h2 id=""install-from-source"">Install from source</h2>\n\n<p>Install ROS and ruby first. ROS document is <a href=""http://ros.org/wiki/ROS/Installation"">http://ros.org/wiki/ROS/Installation</a> .</p>\n\n<p>Download rosruby into your ROS_PACKAGE_PATH.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>git clone git://github.com/OTL/rosruby.git\n\n</code></pre></div>\n<p>Or use rosinstall/rosws. rosintall file is</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">https://raw.github.com/OTL/rosruby/master/rosruby.rosinstall\n</code></pre></div>\n<p>please add RUBYLIB environment variable, like below (if you are using bash).</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">echo</span> <span class=""s2"">""export RUBYLIB=</span><span class=""sb"">`</span>rospack find rosruby<span class=""sb"">`</span><span class=""s2"">/lib""</span> &gt;&gt; ~/.bashrc\n<span class=""gp"">$ </span><span class=""nb"">source</span> ~/.bashrc\n\n</code></pre></div>\n<h2 id=""use-with-precompiled-electric-release"">Use with precompiled electric release</h2>\n\n<p>If you are using precompiled ROS distro, use the msg/srv generation script\n(rosruby_genmsg.py)\nIf you are using ROS from source, it requires just recompile the msg/srv\npackages by rosmake rosruby.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby rosruby_genmsg.py\n\n</code></pre></div>\n<p>This converts msg/srv to .rb which is needed by sample programs.\nIf you want to make other packages, add package names for args.</p>\n\n<p>For example,</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby rosruby_genmsg.py geometry_msgs nav_msgs\n\n</code></pre></div>\n<h2 id=""sample-source"">Sample Source</h2>\n\n<h2 id=""subscriber"">Subscriber</h2>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'std_msgs/String\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/rosruby/sample_subscriber\'</span><span class=""p"">)</span>\n<span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">subscribe</span><span class=""p"">(</span><span class=""s1"">\'/chatter\'</span><span class=""p"">,</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">)</span> <span class=""k"">do</span> <span class=""o"">|</span><span class=""n"">msg</span><span class=""o"">|</span>\n  <span class=""nb"">puts</span> <span class=""s2"">""message come! = </span><span class=""se"">\\\'</span><span class=""si"">#{</span><span class=""n"">msg</span><span class=""p"">.</span><span class=""nf"">data</span><span class=""si"">}</span><span class=""se"">\\\'</span><span class=""s2"">""</span>\n<span class=""k"">end</span>\n\n<span class=""k"">while</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">ok?</span>\n  <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">spin_once</span>\n  <span class=""nb"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""p"">)</span>\n<span class=""k"">end</span>\n\n\n</code></pre></div>\n<h2 id=""publisher"">Publisher</h2>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'std_msgs/String\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/rosruby/sample_publisher\'</span><span class=""p"">)</span>\n<span class=""n"">publisher</span> <span class=""o"">=</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">advertise</span><span class=""p"">(</span><span class=""s1"">\'/chatter\'</span><span class=""p"">,</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">)</span>\n\n<span class=""n"">msg</span> <span class=""o"">=</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">.</span><span class=""nf"">new</span>\n\n<span class=""n"">i</span> <span class=""o"">=</span> <span class=""mi"">0</span>\n<span class=""k"">while</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">ok?</span>\n  <span class=""n"">msg</span><span class=""p"">.</span><span class=""nf"">data</span> <span class=""o"">=</span> <span class=""s2"">""Hello, rosruby!: </span><span class=""si"">#{</span><span class=""n"">i</span><span class=""si"">}</span><span class=""s2"">""</span>\n  <span class=""n"">publisher</span><span class=""p"">.</span><span class=""nf"">publish</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""p"">)</span>\n  <span class=""nb"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""o"">.</span><span class=""mi"">0</span><span class=""p"">)</span>\n  <span class=""n"">i</span> <span class=""o"">+=</span> <span class=""mi"">1</span>\n<span class=""k"">end</span>\n\n</code></pre></div>\n<h2 id=""note"">Note</h2>\n\n<p>Ruby requires \'Start with Capital letter\' for class or module names.\nSo please use <strong>S</strong>td_msgs::String class instead of <strong>s</strong>td_msgs::String.</p>\n\n<h2 id=""try-publish-and-subscribe"">Try Publish and Subscribe</h2>\n\n<p>You needs three terminal as it is often for ROS users.\nThen you run roscore if is not running.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roscore\n\n</code></pre></div>\n<p>run publisher sample</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby sample_publisher.rb\n\n</code></pre></div>\n<p>run subscription sample</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby sample_subscriber.rb\n\n</code></pre></div>\n<p>you can check publication by using rostopic.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rostopic list\n<span class=""gp"">$ </span>rostopic <span class=""nb"">echo</span> /chatter\n\n</code></pre></div>\n<h2 id=""try-service"">Try Service?</h2>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby add_two_ints_server.rb\n\n</code></pre></div>\n<p>run client with args (\'a\' and \'b\' for roscpp_tutorials/TwoInts)</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby add_two_ints_client.rb 10 20\n\n</code></pre></div>\n<h2 id=""and-more"">And more...</h2>\n\n<p>There are <a href=""https://github.com/OTL/rosruby_common"">rosruby_common</a> stack that contains actionlib and tf.</p>\n\n<h2 id=""do-all-tests"">Do all tests</h2>\n\n<p><a href=""http://travis-ci.org/OTL/rosruby""><img src=""https://secure.travis-ci.org/OTL/rosruby.png"" alt=""Build Status""></a></p>\n\n<p>Install some packages for tests.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo apt-get install rake gem\n<span class=""gp"">$ </span>sudo gem install yard redcarpet simplecov\n\n</code></pre></div>\n<p>run tests.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roscd rosruby\n<span class=""gp"">$ </span>rake <span class=""nb"">test</span>\n\n</code></pre></div>\n<h2 id=""documents"">Documents</h2>\n\n<p>you can generate API documents using yard.\nDocument generation needs yard and redcarpet.\nYou can install these by gem command like this.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>gem install yard redcarpet\n\n</code></pre></div>\n<p>Then try to generate documentds.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rake yard\n\n</code></pre></div>\n<p>You can access to the generated documents from <a href=""http://otl.github.com/rosruby/doc/"">here</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-ruby-client-rosruby"">ROS Ruby Client: rosruby</h1>\n\n<p><a href=""http://ros.org"">ROS</a> is Robot Operating System developed by <a href=""http://osrfoundation.org/"">OSRF</a> and open source communities.</p>\n\n<p>This project supports ruby ROS client. You can program intelligent robots by ruby, very easily.</p>\n\n<p><strong>Homepage</strong>:     <a href=""http://otl.github.com/rosruby"">http://otl.github.com/rosruby</a><br>\n<strong>Git</strong>:          <a href=""http://github.com/OTL/rosruby"">http://github.com/OTL/rosruby</a><br>\n<strong>Author</strong>:       Takashi Ogura<br>\n<strong>Copyright</strong>:    2012<br>\n<strong>License</strong>:      new BSD License<br>\n<strong>Latest Version</strong>: 0.4.3   </p>\n\n<h2 id=""requirements"">Requirements</h2>\n\n<ul>\n<li>ruby (1.8.7/1.9.3)</li>\n<li>ROS (hydro/groovy)</li>\n</ul>\n\n<h2 id=""electric-fuerte"">electric/fuerte</h2>\n\n<p>If you are using electric or fuerte, please use v0.2.1.</p>\n\n<h2 id=""install-binary"">Install (binary)</h2>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">sudo apt-get install ros-hydro-rosruby\n\n</code></pre></div>\n<p>then you have to source /opt/ros/hydro/setup.bash for ruby library path.</p>\n\n<h2 id=""install-from-source"">Install from source</h2>\n\n<p>Install ROS and ruby first. ROS document is <a href=""http://ros.org/wiki/ROS/Installation"">http://ros.org/wiki/ROS/Installation</a> .\nrosruby uses genrb for message generation. After install genrb, .rb message files are automatically compiled if there are message source package exists in your catkin_ws/src directory.</p>\n\n<p>rosruby uses catkin. If you have not catkin_ws yet, please read <a href=""http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment"">this wiki</a>.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws/src\n<span class=""gp"">$ </span>git clone git://github.com/OTL/genrb.git\n<span class=""gp"">$ </span>git clone git://github.com/OTL/rosruby.git\n<span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n<span class=""gp"">$ </span>catkin_make\n\n</code></pre></div>\n<h2 id=""message-generation"">Message generation</h2>\n\n<p>You must generate ROS msg/srv files for rosruby if the msg/srv packages are not compiled from source.\nIf you are using catkin package, it is easy.\nPlease add below to your package CMakeLists.txt.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">find_package(rosruby)\nrosruby_generate_messages(message_pkg1 message_pkg2 ...)\n</code></pre></div>\n<p>Or, you can generate it manually.\nPlease use the msg/srv generation script (rosruby_genmsg.py) in order to \ngenerage rosruby messages.</p>\n\n<p>For example, (please replace <code>catkin_ws</code> to your catkin workspace)</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby rosruby_genmsg.py geometry_msgs nav_msgs -d ~/catkin_ws/devel/lib/ruby/vendor_ruby/\n\n</code></pre></div>\n<p>If you want to generate msg/srv files from source (for example your project), it is automatically\ngenerated by <a href=""http://github.com/OTL/genrb"">genrb</a>.</p>\n\n<h2 id=""sample-source"">Sample Source</h2>\n\n<p>You can get rosruby sample programs from <a href=""https://github.com/OTL/rosruby_common"">rosruby_tutorials</a> package.</p>\n\n<h2 id=""subscriber"">Subscriber</h2>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'std_msgs/String\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/rosruby_sample_subscriber\'</span><span class=""p"">)</span>\n<span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">subscribe</span><span class=""p"">(</span><span class=""s1"">\'/chatter\'</span><span class=""p"">,</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">)</span> <span class=""k"">do</span> <span class=""o"">|</span><span class=""n"">msg</span><span class=""o"">|</span>\n  <span class=""nb"">puts</span> <span class=""s2"">""message come! = </span><span class=""se"">\\\'</span><span class=""si"">#{</span><span class=""n"">msg</span><span class=""p"">.</span><span class=""nf"">data</span><span class=""si"">}</span><span class=""se"">\\\'</span><span class=""s2"">""</span>\n<span class=""k"">end</span>\n\n<span class=""k"">while</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">ok?</span>\n  <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">spin_once</span>\n  <span class=""nb"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""p"">)</span>\n<span class=""k"">end</span>\n\n\n</code></pre></div>\n<h2 id=""publisher"">Publisher</h2>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'std_msgs/String\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/rosruby_sample_publisher\'</span><span class=""p"">)</span>\n<span class=""n"">publisher</span> <span class=""o"">=</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">advertise</span><span class=""p"">(</span><span class=""s1"">\'/chatter\'</span><span class=""p"">,</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">)</span>\n\n<span class=""n"">msg</span> <span class=""o"">=</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">.</span><span class=""nf"">new</span>\n\n<span class=""n"">i</span> <span class=""o"">=</span> <span class=""mi"">0</span>\n<span class=""k"">while</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">ok?</span>\n  <span class=""n"">msg</span><span class=""p"">.</span><span class=""nf"">data</span> <span class=""o"">=</span> <span class=""s2"">""Hello, rosruby!: </span><span class=""si"">#{</span><span class=""n"">i</span><span class=""si"">}</span><span class=""s2"">""</span>\n  <span class=""n"">publisher</span><span class=""p"">.</span><span class=""nf"">publish</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""p"">)</span>\n  <span class=""nb"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""o"">.</span><span class=""mi"">0</span><span class=""p"">)</span>\n  <span class=""n"">i</span> <span class=""o"">+=</span> <span class=""mi"">1</span>\n<span class=""k"">end</span>\n\n</code></pre></div>\n<h2 id=""note"">Note</h2>\n\n<p>Ruby requires \'Start with Capital letter\' for class or module names.\nSo please use <strong>S</strong>td_msgs::String class instead of <strong>s</strong>td_msgs::String.\nrosruby message compiler automatically generates messages by the rule.</p>\n\n<h2 id=""samples"">Samples</h2>\n\n<p>There are <a href=""https://github.com/OTL/rosruby_common"">rosruby_common</a> that contains actionlib and tutorials.</p>\n\n<h2 id=""do-all-tests"">Do all tests</h2>\n\n<p><a href=""http://travis-ci.org/OTL/rosruby""><img src=""https://secure.travis-ci.org/OTL/rosruby.png"" alt=""Build Status""></a></p>\n\n<p>Install some packages for tests.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo apt-get install rake gem\n<span class=""gp"">$ </span>sudo gem install yard redcarpet simplecov\n\n</code></pre></div>\n<p>run tests.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rake <span class=""nb"">test</span>\n\n</code></pre></div>\n<h2 id=""documents"">Documents</h2>\n\n<p>you can generate API documents using yard.\nDocument generation needs yard and redcarpet.\nYou can install these by gem command like this.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>gem install yard redcarpet\n\n</code></pre></div>\n<p>Then try to generate documentds.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rake yard\n\n</code></pre></div>\n<p>You can access to the generated documents from <a href=""http://otl.github.com/rosruby/doc/"">here</a>.</p>\n\n<h2 id=""catkin-and-cmakelists-txt"">catkin and CMakeLists.txt</h2>\n\n<p>rosruby\'s CMakeLists.txt defines some macros for your package that uses rosruby.\nyou can use these if you add <code>find_package(rosruby)</code> to CMakeLists.txt.</p>\n\n<ul>\n<li>rosruby_setup() : setup some macros and variables for rosruby</li>\n<li>rosruby_generate_messages(message_pkg1 message_okg2 ...) : generates rosruby msg/srv files</li>\n<li>rosruby_add_libraries(files or dirs) : install lib files for devel environment.</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-ruby-client-rosruby"">ROS Ruby Client: rosruby</h1>\n\n<p><a href=""http://ros.org"">ROS</a> is Robot Operating System developed by <a href=""http://osrfoundation.org/"">OSRF</a> and open source communities.</p>\n\n<p>This project supports ruby ROS client. You can program intelligent robots by ruby, very easily.</p>\n\n<p><strong>Homepage</strong>:     <a href=""http://otl.github.com/rosruby"">http://otl.github.com/rosruby</a>\n<strong>Git</strong>:          <a href=""http://github.com/OTL/rosruby"">http://github.com/OTL/rosruby</a>\n<strong>Author</strong>:       Takashi Ogura\n<strong>Copyright</strong>:    2012\n<strong>License</strong>:      new BSD License\n<strong>Latest Version</strong>: 0.4.3</p>\n\n<h2 id=""requirements"">Requirements</h2>\n\n<ul>\n<li>ruby (1.8.7/1.9.3)</li>\n<li>ROS (hydro/groovy)</li>\n</ul>\n\n<h2 id=""electric-fuerte"">electric/fuerte</h2>\n\n<p>If you are using electric or fuerte, please use v0.2.1.</p>\n\n<h2 id=""install-binary"">Install (binary)</h2>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">sudo apt-get install ros-hydro-rosruby\n\n</code></pre></div>\n<p>then you have to source /opt/ros/hydro/setup.bash for ruby library path.</p>\n\n<h2 id=""install-from-source"">Install from source</h2>\n\n<p>Install ROS and ruby first. ROS document is <a href=""http://ros.org/wiki/ROS/Installation"">http://ros.org/wiki/ROS/Installation</a> .\nrosruby uses genrb for message generation. After install genrb, .rb message files are automatically compiled if there are message source package exists in your catkin_ws/src directory.</p>\n\n<p>rosruby uses catkin. If you have not catkin_ws yet, please read <a href=""http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment"">this wiki</a>.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws/src\n<span class=""gp"">$ </span>git clone https://github.com/OTL/genrb.git\n<span class=""gp"">$ </span>git clone https://github.com/OTL/rosruby.git\n<span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n<span class=""gp"">$ </span>catkin_make\n\n</code></pre></div>\n<h2 id=""install-from-source-indigo-jade"">Install from source (indigo/jade)</h2>\n\n<p>Try indigo-devel branch.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws/src/rosruby\n<span class=""gp"">$ </span>git checkout indigo-devel\n<span class=""gp"">$ </span><span class=""nb"">cd</span> ~/catkin_ws\n<span class=""gp"">$ </span>catkin_make\n\n</code></pre></div>\n<h2 id=""message-generation"">Message generation</h2>\n\n<p>You must generate ROS msg/srv files for rosruby if the msg/srv packages are not compiled from source.\nIf you are using catkin package, it is easy.\nPlease add below to your package CMakeLists.txt.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">find_package(rosruby)\nrosruby_generate_messages(message_pkg1 message_pkg2 ...)\n</code></pre></div>\n<p>Or, you can generate it manually.\nPlease use the msg/srv generation script (rosruby_genmsg.py) in order to\ngenerage rosruby messages.</p>\n\n<p>For example, (please replace <code>catkin_ws</code> to your catkin workspace)</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosruby rosruby_genmsg.py geometry_msgs nav_msgs -d ~/catkin_ws/devel/lib/ruby/vendor_ruby/\n\n</code></pre></div>\n<p>If you want to generate msg/srv files from source (for example your project), it is automatically\ngenerated by <a href=""http://github.com/OTL/genrb"">genrb</a>.</p>\n\n<h2 id=""sample-source"">Sample Source</h2>\n\n<p>You can get rosruby sample programs from <a href=""https://github.com/OTL/rosruby_common"">rosruby_tutorials</a> package.</p>\n\n<h2 id=""subscriber"">Subscriber</h2>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'std_msgs/String\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/rosruby_sample_subscriber\'</span><span class=""p"">)</span>\n<span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">subscribe</span><span class=""p"">(</span><span class=""s1"">\'/chatter\'</span><span class=""p"">,</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">)</span> <span class=""k"">do</span> <span class=""o"">|</span><span class=""n"">msg</span><span class=""o"">|</span>\n  <span class=""nb"">puts</span> <span class=""s2"">""message come! = </span><span class=""se"">\\\'</span><span class=""si"">#{</span><span class=""n"">msg</span><span class=""p"">.</span><span class=""nf"">data</span><span class=""si"">}</span><span class=""se"">\\\'</span><span class=""s2"">""</span>\n<span class=""k"">end</span>\n\n<span class=""k"">while</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">ok?</span>\n  <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">spin_once</span>\n  <span class=""nb"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""p"">)</span>\n<span class=""k"">end</span>\n\n\n</code></pre></div>\n<h2 id=""publisher"">Publisher</h2>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'std_msgs/String\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/rosruby_sample_publisher\'</span><span class=""p"">)</span>\n<span class=""n"">publisher</span> <span class=""o"">=</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">advertise</span><span class=""p"">(</span><span class=""s1"">\'/chatter\'</span><span class=""p"">,</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">)</span>\n\n<span class=""n"">msg</span> <span class=""o"">=</span> <span class=""no"">Std_msgs</span><span class=""o"">::</span><span class=""no"">String</span><span class=""p"">.</span><span class=""nf"">new</span>\n\n<span class=""n"">i</span> <span class=""o"">=</span> <span class=""mi"">0</span>\n<span class=""k"">while</span> <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">ok?</span>\n  <span class=""n"">msg</span><span class=""p"">.</span><span class=""nf"">data</span> <span class=""o"">=</span> <span class=""s2"">""Hello, rosruby!: </span><span class=""si"">#{</span><span class=""n"">i</span><span class=""si"">}</span><span class=""s2"">""</span>\n  <span class=""n"">publisher</span><span class=""p"">.</span><span class=""nf"">publish</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""p"">)</span>\n  <span class=""nb"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""o"">.</span><span class=""mi"">0</span><span class=""p"">)</span>\n  <span class=""n"">i</span> <span class=""o"">+=</span> <span class=""mi"">1</span>\n<span class=""k"">end</span>\n\n</code></pre></div>\n<h2 id=""note"">Note</h2>\n\n<p>Ruby requires \'Start with Capital letter\' for class or module names.\nSo please use <strong>S</strong>td_msgs::String class instead of <strong>s</strong>td_msgs::String.\nrosruby message compiler automatically generates messages by the rule.</p>\n\n<h2 id=""samples"">Samples</h2>\n\n<p>There are <a href=""https://github.com/OTL/rosruby_common"">rosruby_common</a> that contains actionlib and tutorials.</p>\n\n<h2 id=""do-all-tests"">Do all tests</h2>\n\n<p><a href=""http://travis-ci.org/OTL/rosruby""><img src=""https://secure.travis-ci.org/OTL/rosruby.png"" alt=""Build Status""></a></p>\n\n<p>Install some packages for tests.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo apt-get install rake gem\n<span class=""gp"">$ </span>sudo gem install yard redcarpet simplecov\n\n</code></pre></div>\n<p>run tests.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rake <span class=""nb"">test</span>\n\n</code></pre></div>\n<h2 id=""documents"">Documents</h2>\n\n<p>you can generate API documents using yard.\nDocument generation needs yard and redcarpet.\nYou can install these by gem command like this.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>gem install yard redcarpet\n\n</code></pre></div>\n<p>Then try to generate documentds.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rake yard\n\n</code></pre></div>\n<p>You can access to the generated documents from <a href=""http://otl.github.com/rosruby/doc/"">here</a>.</p>\n\n<h2 id=""catkin-and-cmakelists-txt"">catkin and CMakeLists.txt</h2>\n\n<p>rosruby\'s CMakeLists.txt defines some macros for your package that uses rosruby.\nyou can use these if you add <code>find_package(rosruby)</code> to CMakeLists.txt.</p>\n\n<ul>\n<li>rosruby_setup() : setup some macros and variables for rosruby</li>\n<li>rosruby_generate_messages(message_pkg1 message_okg2 ...) : generates rosruby msg/srv files</li>\n<li>rosruby_add_libraries(files or dirs) : install lib files for devel environment.</li>\n</ul>\n</div>\n\n            \n          </div>'"
libccd,http://rosindex.github.io/r/libccd/,"hydro,jade,groovy,indigo",libccd,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""libccd"">libccd <a href=""https://travis-ci.org/danfis/libccd""><img src=""https://travis-ci.org/danfis/libccd.svg?branch=master"" alt=""Build Status""></a>\n</h1>\n\n<p><strong><em>libccd</em></strong> is library for a collision detection between two convex shapes.\nlibccd implements variation on Gilbert\xe2\x80\x93Johnson\xe2\x80\x93Keerthi algorithm plus Expand\nPolytope Algorithm (EPA) and also implements algorithm Minkowski Portal\nRefinement (MPR, a.k.a. XenoCollide) as described in Game Programming Gems 7.</p>\n\n<p>libccd is the only available open source library of my knowledge that include\nMPR algorithm working in 3-D space.  However, there is a library called\n<a href=""http://code.google.com/p/mpr2d/"">mpr2d</a>, implemented in D programming\nlanguage, that works in 2-D space.</p>\n\n<p>libccd is currently part of:</p>\n\n<ol>\n<li>\n<a href=""http://www.ode.org/"">ODE</a> library (see ODE\'s <em>./configure --help</em> how to enable it),</li>\n<li>\n<a href=""http://www.ros.org/wiki/fcl"">FCL</a> library from <a href=""http://www.willowgarage.com/"">Willow Garage</a>,</li>\n<li>\n<a href=""http://bulletphysics.org/"">Bullet3</a> library (<a href=""https://github.com/bulletphysics/bullet3"">https://github.com/bulletphysics/bullet3</a>).</li>\n</ol>\n\n<p>For implementation details on GJK algorithm, see\n<a href=""http://www.win.tue.nl/%7Egino/solid/jgt98convex.pdf"">http://www.win.tue.nl/~gino/solid/jgt98convex.pdf</a>.</p>\n\n<h2 id=""dependencies"">Dependencies</h2>\n\n<p>This library is currently based only on standard libraries.\nThe only exception are testsuites that are built on top of CU\n(<a href=""https://github.com/danfis/cu"">https://github.com/danfis/cu</a>) library licensed under LGPL, however only\ntesting depends on it and libccd library itself can be distributed without it.</p>\n\n<h2 id=""license"">License</h2>\n\n<p>libccd is licensed under OSI-approved 3-clause BSD License, text of license\nis distributed along with source code in BSD-LICENSE file.\nEach file should include license notice, the rest should be considered as\nlicensed under 3-clause BSD License.</p>\n\n<h2 id=""compile-and-install"">Compile And Install</h2>\n\n<p>libccd contains two mechanisms how to compile and install it. Using simple Makefile and using autotools.</p>\n\n<h3 id=""1-using-makefile"">1. Using Makefile</h3>\n\n<p>Directory src/ contains Makefile that should contain everything needed for compilation and installation:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">  <span class=""nv"">$ </span><span class=""nb"">cd </span>src/\n  <span class=""nv"">$ </span>make\n  <span class=""nv"">$ </span>make install\n\n</code></pre></div>\n<p>Library libccd is by default compiled in double precision of floating point numbers - you can change this by options <em>USE_SINGLE/USE_DOUBLE</em>, i.e.:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">  <span class=""nv"">$ </span>make <span class=""nv"">USE_SINGLE</span><span class=""o"">=</span>yes\n\n</code></pre></div>\n<p>will compile library in single precision.</p>\n\n<p>Installation directory can be changed by options PREFIX, INCLUDEDIR and LIBDIR. \nFor more info type \'make help\'.</p>\n\n<h3 id=""2-using-autotools"">2. Using Autotools</h3>\n\n<p>libccd also contains support for autotools:\nGenerate configure script etc.:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">  <span class=""nv"">$ </span>./bootstrap\n\n</code></pre></div>\n<p>Create new build/ directory:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">  <span class=""nv"">$ </span>mkdir build <span class=""o"">&amp;&amp;</span> <span class=""nb"">cd </span>build\n\n</code></pre></div>\n<p>Run configure script:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">  <span class=""nv"">$ </span>../configure\n\n</code></pre></div>\n<p>Run make and make install:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">  <span class=""nv"">$ </span>make <span class=""o"">&amp;&amp;</span> make install\n\n</code></pre></div>\n<p>configure script can change the way libccd is compiled and installed, most significant option is <em>--enable-double-precision</em> which enables double precision (single is default in this case).</p>\n\n<h2 id=""gjk-intersection-test"">GJK - Intersection Test</h2>\n\n<p>This section describes how to use libccd for testing if two convex objects intersects (i.e., \'yes/no\' test) using Gilbert-Johnson-Keerthi (GJK) algorithm.</p>\n\n<p>Procedure is very simple (and is similar for usages of library):</p>\n\n<ol>\n<li>Include <em><ccd></ccd></em> file.</li>\n<li>Implement support function for specific shapes. Support function is function that returns furthest point from object (shape) in specified direction.</li>\n<li>Set up <em>ccd_t</em> structure.</li>\n<li>Run ccdGJKIntersect() function on desired objects.</li>\n</ol>\n\n<p>Here is skeleton of simple program:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp"">  <span class=""cp"">#include &lt;ccd/ccd.h&gt;\n</span>  <span class=""cp"">#include &lt;ccd/quat.h&gt; // for work with quaternions\n</span>\n  <span class=""cm"">/** Support function for box */</span>\n  <span class=""kt"">void</span> <span class=""nf"">support</span><span class=""p"">(</span><span class=""k"">const</span> <span class=""kt"">void</span> <span class=""o"">*</span><span class=""n"">obj</span><span class=""p"">,</span> <span class=""k"">const</span> <span class=""n"">ccd_vec3_t</span> <span class=""o"">*</span><span class=""n"">dir</span><span class=""p"">,</span> <span class=""n"">ccd_vec3_t</span> <span class=""o"">*</span><span class=""n"">vec</span><span class=""p"">)</span>\n  <span class=""p"">{</span>\n      <span class=""c1"">// assume that obj_t is user-defined structure that holds info about\n</span>      <span class=""c1"">// object (in this case box: x, y, z, pos, quat - dimensions of box,\n</span>      <span class=""c1"">// position and rotation)\n</span>      <span class=""n"">obj_t</span> <span class=""o"">*</span><span class=""n"">obj</span> <span class=""o"">=</span> <span class=""p"">(</span><span class=""n"">obj_t</span> <span class=""o"">*</span><span class=""p"">)</span><span class=""n"">_obj</span><span class=""p"">;</span>\n      <span class=""n"">ccd_vec3_t</span> <span class=""n"">dir</span><span class=""p"">;</span>\n      <span class=""n"">ccd_quat_t</span> <span class=""n"">qinv</span><span class=""p"">;</span>\n\n      <span class=""c1"">// apply rotation on direction vector\n</span>      <span class=""n"">ccdVec3Copy</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">dir</span><span class=""p"">,</span> <span class=""n"">_dir</span><span class=""p"">);</span>\n      <span class=""n"">ccdQuatInvert2</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">qinv</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">obj</span><span class=""o"">-&gt;</span><span class=""n"">quat</span><span class=""p"">);</span>\n      <span class=""n"">ccdQuatRotVec</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">dir</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">qinv</span><span class=""p"">);</span>\n\n      <span class=""c1"">// compute support point in specified direction\n</span>      <span class=""n"">ccdVec3Set</span><span class=""p"">(</span><span class=""n"">v</span><span class=""p"">,</span> <span class=""n"">ccdSign</span><span class=""p"">(</span><span class=""n"">ccdVec3X</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">dir</span><span class=""p"">))</span> <span class=""o"">*</span> <span class=""n"">box</span><span class=""o"">-&gt;</span><span class=""n"">x</span> <span class=""o"">*</span> <span class=""n"">CCD_REAL</span><span class=""p"">(</span><span class=""mf"">0.5</span><span class=""p"">),</span>\n                    <span class=""n"">ccdSign</span><span class=""p"">(</span><span class=""n"">ccdVec3Y</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">dir</span><span class=""p"">))</span> <span class=""o"">*</span> <span class=""n"">box</span><span class=""o"">-&gt;</span><span class=""n"">y</span> <span class=""o"">*</span> <span class=""n"">CCD_REAL</span><span class=""p"">(</span><span class=""mf"">0.5</span><span class=""p"">),</span>\n                    <span class=""n"">ccdSign</span><span class=""p"">(</span><span class=""n"">ccdVec3Z</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">dir</span><span class=""p"">))</span> <span class=""o"">*</span> <span class=""n"">box</span><span class=""o"">-&gt;</span><span class=""n"">z</span> <span class=""o"">*</span> <span class=""n"">CCD_REAL</span><span class=""p"">(</span><span class=""mf"">0.5</span><span class=""p"">));</span>\n\n      <span class=""c1"">// transform support point according to position and rotation of object\n</span>      <span class=""n"">ccdQuatRotVec</span><span class=""p"">(</span><span class=""n"">v</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">obj</span><span class=""o"">-&gt;</span><span class=""n"">quat</span><span class=""p"">);</span>\n      <span class=""n"">ccdVec3Add</span><span class=""p"">(</span><span class=""n"">v</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">obj</span><span class=""o"">-&gt;</span><span class=""n"">pos</span><span class=""p"">);</span>\n  <span class=""p"">}</span>\n\n  <span class=""kt"">int</span> <span class=""nf"">main</span><span class=""p"">(</span><span class=""kt"">int</span> <span class=""n"">argc</span><span class=""p"">,</span> <span class=""kt"">char</span> <span class=""o"">*</span><span class=""n"">argv</span><span class=""p"">[])</span>\n  <span class=""p"">{</span>\n      <span class=""p"">...</span>\n\n      <span class=""n"">ccd_t</span> <span class=""n"">ccd</span><span class=""p"">;</span>\n      <span class=""n"">CCD_INIT</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">ccd</span><span class=""p"">);</span> <span class=""c1"">// initialize ccd_t struct\n</span>\n      <span class=""c1"">// set up ccd_t struct\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">support1</span>       <span class=""o"">=</span> <span class=""n"">support</span><span class=""p"">;</span> <span class=""c1"">// support function for first object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">support2</span>       <span class=""o"">=</span> <span class=""n"">support</span><span class=""p"">;</span> <span class=""c1"">// support function for second object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">max_iterations</span> <span class=""o"">=</span> <span class=""mi"">100</span><span class=""p"">;</span>     <span class=""c1"">// maximal number of iterations\n</span>\n      <span class=""kt"">int</span> <span class=""n"">intersect</span> <span class=""o"">=</span> <span class=""n"">ccdGJKIntersect</span><span class=""p"">(</span><span class=""n"">obj1</span><span class=""p"">,</span> <span class=""n"">obj2</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">ccd</span><span class=""p"">);</span>\n      <span class=""c1"">// now intersect holds true if obj1 and obj2 intersect, false otherwise\n</span>  <span class=""p"">}</span>\n\n</code></pre></div>\n<h2 id=""gjk-epa-penetration-of-two-objects"">GJK + EPA - Penetration Of Two Objects</h2>\n\n<p>If you want to obtain also penetration info about two intersection objects ccdGJKPenetration() function can be used.</p>\n\n<p>Procedure is almost same as for previous case:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp"">  <span class=""cp"">#include &lt;ccd/ccd.h&gt;\n</span>  <span class=""cp"">#include &lt;ccd/quat.h&gt; // for work with quaternions\n</span>\n  <span class=""cm"">/** Support function is same as in previous case */</span>\n\n  <span class=""kt"">int</span> <span class=""nf"">main</span><span class=""p"">(</span><span class=""kt"">int</span> <span class=""n"">argc</span><span class=""p"">,</span> <span class=""kt"">char</span> <span class=""o"">*</span><span class=""n"">argv</span><span class=""p"">[])</span>\n  <span class=""p"">{</span>\n      <span class=""p"">...</span>\n      <span class=""n"">ccd_t</span> <span class=""n"">ccd</span><span class=""p"">;</span>\n      <span class=""n"">CCD_INIT</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">ccd</span><span class=""p"">);</span> <span class=""c1"">// initialize ccd_t struct\n</span>\n      <span class=""c1"">// set up ccd_t struct\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">support1</span>       <span class=""o"">=</span> <span class=""n"">support</span><span class=""p"">;</span> <span class=""c1"">// support function for first object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">support2</span>       <span class=""o"">=</span> <span class=""n"">support</span><span class=""p"">;</span> <span class=""c1"">// support function for second object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">max_iterations</span> <span class=""o"">=</span> <span class=""mi"">100</span><span class=""p"">;</span>     <span class=""c1"">// maximal number of iterations\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">epa_tolerance</span>  <span class=""o"">=</span> <span class=""mf"">0.0001</span><span class=""p"">;</span>  <span class=""c1"">// maximal tolerance fro EPA part\n</span>\n      <span class=""n"">ccd_real_t</span> <span class=""n"">depth</span><span class=""p"">;</span>\n      <span class=""n"">ccd_vec3_t</span> <span class=""n"">dir</span><span class=""p"">,</span> <span class=""n"">pos</span><span class=""p"">;</span>\n      <span class=""kt"">int</span> <span class=""n"">intersect</span> <span class=""o"">=</span> <span class=""n"">ccdGJKPenetration</span><span class=""p"">(</span><span class=""n"">obj1</span><span class=""p"">,</span> <span class=""n"">obj2</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">ccd</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">depth</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">dir</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">pos</span><span class=""p"">);</span>\n      <span class=""c1"">// now intersect holds 0 if obj1 and obj2 intersect, -1 otherwise\n</span>      <span class=""c1"">// in depth, dir and pos is stored penetration depth, direction of\n</span>      <span class=""c1"">// separation vector and position in global coordinate system\n</span>  <span class=""p"">}</span>\n\n</code></pre></div>\n<h2 id=""mpr-intersection-test"">MPR - Intersection Test</h2>\n\n<p>libccd also provides MPR - Minkowski Portal Refinement algorithm that can be used for testing if two objects intersects.</p>\n\n<p>Procedure is similar to the one used for GJK algorithm. Support function is same but also function that returns center (or any point near center) of given object must be implemented:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp"">  <span class=""cp"">#include &lt;ccd/ccd.h&gt;\n</span>  <span class=""cp"">#include &lt;ccd/quat.h&gt; // for work with quaternions\n</span>\n  <span class=""cm"">/** Support function is same as in previous case */</span>\n\n  <span class=""cm"">/** Center function - returns center of object */</span>\n  <span class=""kt"">void</span> <span class=""nf"">center</span><span class=""p"">(</span><span class=""k"">const</span> <span class=""kt"">void</span> <span class=""o"">*</span><span class=""n"">_obj</span><span class=""p"">,</span> <span class=""n"">ccd_vec3_t</span> <span class=""o"">*</span><span class=""n"">center</span><span class=""p"">)</span>\n  <span class=""p"">{</span>\n      <span class=""n"">obj_t</span> <span class=""o"">*</span><span class=""n"">obj</span> <span class=""o"">=</span> <span class=""p"">(</span><span class=""n"">obj_t</span> <span class=""o"">*</span><span class=""p"">)</span><span class=""n"">_obj</span><span class=""p"">;</span>\n      <span class=""n"">ccdVec3Copy</span><span class=""p"">(</span><span class=""n"">center</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">obj</span><span class=""o"">-&gt;</span><span class=""n"">pos</span><span class=""p"">);</span>\n  <span class=""p"">}</span>\n\n  <span class=""kt"">int</span> <span class=""nf"">main</span><span class=""p"">(</span><span class=""kt"">int</span> <span class=""n"">argc</span><span class=""p"">,</span> <span class=""kt"">char</span> <span class=""o"">*</span><span class=""n"">argv</span><span class=""p"">[])</span>\n  <span class=""p"">{</span>\n      <span class=""p"">...</span>\n      <span class=""n"">ccd_t</span> <span class=""n"">ccd</span><span class=""p"">;</span>\n      <span class=""n"">CCD_INIT</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">ccd</span><span class=""p"">);</span> <span class=""c1"">// initialize ccd_t struct\n</span>\n      <span class=""c1"">// set up ccd_t struct\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">support1</span>       <span class=""o"">=</span> <span class=""n"">support</span><span class=""p"">;</span> <span class=""c1"">// support function for first object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">support2</span>       <span class=""o"">=</span> <span class=""n"">support</span><span class=""p"">;</span> <span class=""c1"">// support function for second object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">center1</span>        <span class=""o"">=</span> <span class=""n"">center</span><span class=""p"">;</span>  <span class=""c1"">// center function for first object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">center2</span>        <span class=""o"">=</span> <span class=""n"">center</span><span class=""p"">;</span>  <span class=""c1"">// center function for second object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">mpr_tolerance</span>  <span class=""o"">=</span> <span class=""mf"">0.0001</span><span class=""p"">;</span>  <span class=""c1"">// maximal tolerance\n</span>\n      <span class=""kt"">int</span> <span class=""n"">intersect</span> <span class=""o"">=</span> <span class=""n"">ccdMPRIntersect</span><span class=""p"">(</span><span class=""n"">obj1</span><span class=""p"">,</span> <span class=""n"">obj2</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">ccd</span><span class=""p"">);</span>\n      <span class=""c1"">// now intersect holds true if obj1 and obj2 intersect, false otherwise\n</span>  <span class=""p"">}</span>\n\n</code></pre></div>\n<h2 id=""mpr-penetration-of-two-objects"">MPR - Penetration Of Two Objects</h2>\n\n<p>Using MPR algorithm for obtaining penetration info about two intersection objects is equally easy as in previous case instead ccdMPRPenetration() function is used:</p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp"">  <span class=""cp"">#include &lt;ccd/ccd.h&gt;\n</span>  <span class=""cp"">#include &lt;ccd/quat.h&gt; // for work with quaternions\n</span>\n  <span class=""cm"">/** Support function is same as in previous case */</span>\n  <span class=""cm"">/** Center function is same as in prevous case */</span>\n\n  <span class=""kt"">int</span> <span class=""nf"">main</span><span class=""p"">(</span><span class=""kt"">int</span> <span class=""n"">argc</span><span class=""p"">,</span> <span class=""kt"">char</span> <span class=""o"">*</span><span class=""n"">argv</span><span class=""p"">[])</span>\n  <span class=""p"">{</span>\n      <span class=""p"">...</span>\n      <span class=""n"">ccd_t</span> <span class=""n"">ccd</span><span class=""p"">;</span>\n      <span class=""n"">CCD_INIT</span><span class=""p"">(</span><span class=""o"">&amp;</span><span class=""n"">ccd</span><span class=""p"">);</span> <span class=""c1"">// initialize ccd_t struct\n</span>\n      <span class=""c1"">// set up ccd_t struct\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">support1</span>       <span class=""o"">=</span> <span class=""n"">support</span><span class=""p"">;</span> <span class=""c1"">// support function for first object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">support2</span>       <span class=""o"">=</span> <span class=""n"">support</span><span class=""p"">;</span> <span class=""c1"">// support function for second object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">center1</span>        <span class=""o"">=</span> <span class=""n"">center</span><span class=""p"">;</span>  <span class=""c1"">// center function for first object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">center2</span>        <span class=""o"">=</span> <span class=""n"">center</span><span class=""p"">;</span>  <span class=""c1"">// center function for second object\n</span>      <span class=""n"">ccd</span><span class=""p"">.</span><span class=""n"">mpr_tolerance</span>  <span class=""o"">=</span> <span class=""mf"">0.0001</span><span class=""p"">;</span>  <span class=""c1"">// maximal tolerance\n</span>\n      <span class=""n"">ccd_real_t</span> <span class=""n"">depth</span><span class=""p"">;</span>\n      <span class=""n"">ccd_vec3_t</span> <span class=""n"">dir</span><span class=""p"">,</span> <span class=""n"">pos</span><span class=""p"">;</span>\n      <span class=""kt"">int</span> <span class=""n"">intersect</span> <span class=""o"">=</span> <span class=""n"">ccdMPRPenetration</span><span class=""p"">(</span><span class=""n"">obj1</span><span class=""p"">,</span> <span class=""n"">obj2</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">ccd</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">depth</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">dir</span><span class=""p"">,</span> <span class=""o"">&amp;</span><span class=""n"">pos</span><span class=""p"">);</span>\n      <span class=""c1"">// now intersect holds 0 if obj1 and obj2 intersect, -1 otherwise\n</span>      <span class=""c1"">// in depth, dir and pos is stored penetration depth, direction of\n</span>      <span class=""c1"">// separation vector and position in global coordinate system\n</span>  <span class=""p"">}</span>\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
roslint,http://rosindex.github.io/r/roslint/,"hydro,groovy,kinetic,jade,indigo",roslint,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""roslint"">roslint</h1>\n\n<p><a href=""http://jenkins.ros.org/job/devel-indigo-roslint/ARCH_PARAM=amd64,UBUNTU_PARAM=trusty,label=devel/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-roslint/ARCH_PARAM=amd64,UBUNTU_PARAM=trusty,label=devel"" alt=""Build Status""></a></p>\n\n<p>Catkin macros which provide standard linter configurations for C++ and Python.</p>\n</div>\n\n            \n          </div>'"
visp_ros,http://rosindex.github.io/r/visp_ros/,"hydro,jade,indigo",visp_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visp_ros"">visp_ros</h1>\n\n<p>A basket of generic ros nodes based on ViSP library.</p>\n\n<h1 id=""installation"">Installation</h1>\n\n<h2 id=""prerequisities"">Prerequisities</h2>\n\n<p>Install ros-<version>-visp package that matches your ros distribution (groovy, hydro, indigo), as for example:</version></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install ros-hydro-visp\n</code></pre></div>\n<p>If you want to use the nodes that allow to control real robots such as Biclops PT head, Viper 650, Viper 850, Afma4 or Afma6 robots, you need to build ViSP from source and install ViSP in \'/opt/ros/<ros-version>\' in order to overwrite the version that was installed using the previous line. </ros-version></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd soft\n$ svn checkout svn://scm.gforge.inria.fr/svn/visp/trunk/ViSP ViSP-code\n$ mkdir ViSP-build-ros; cd ViSP-build-ros\n$ cmake -DCMAKE_INSTALL_PREFIX=/opt/ros/hydro -DBUILD_SHARED_LIBS=ON ../ViSP-code\n$ make; sudo make install\n</code></pre></div>\n<h2 id=""get-the-source"">Get the source</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_ws/src\n</code></pre></div>\n<p>Get vision_visp stack that contains visp_bridge package:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ git clone https://github.com/lagadic/vision_visp.git (master branch)\n</code></pre></div>\n<p>Get visp_ros package:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ git clone https://github.com/lagadic/visp_ros.git (master branch)\n</code></pre></div>\n<h2 id=""build-visp_ros-package"">Build visp_ros package</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_ws\n$ catkin_make -DCMAKE_BUILD_TYPE=Release --pkg visp_ros\n</code></pre></div>\n<h1 id=""usage"">Usage</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ source ~/catkin_ws/devel/setup.bash\n</code></pre></div>\n</div>\n\n            \n          </div>'"
scan_tools,http://rosindex.github.io/r/scan_tools/,"hydro,fuerte,groovy,jade,indigo","laser_ortho_projector,laser_scan_matcher,laser_scan_sparsifier,laser_scan_splitter,ncd_parser,polar_scan_matcher,scan_to_cloud_converter,scan_tools,csm","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""laser-scan-tools-for-ros"">Laser scan tools for ROS</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Laser scan processing tools. The meta-package contains:</p>\n\n<ul>\n<li><p><code>laser_ortho_projector</code>: calculates orthogonal projections of LaserScan messages</p></li>\n<li><p><code>laser_scan_matcher</code>: an incremental laser scan matcher, using Andrea Censi\'s Canonical \nScan Matcher implementation. It downloads and installs Andrea Censi\'s Canonical Scan Matcher [1] locally.</p></li>\n<li><p><code>laser_scan_sparsifier</code>: takes in a LaserScan message and sparsifies it</p></li>\n<li><p><code>laser_scan_splitter</code>:  takes in a LaserScan message and splits \nit into a number of other LaserScan messages </p></li>\n<li><p><code>ncd_parser</code>: reads in .alog data files from the New College Dataset [2]\nand broadcasts scan and odometry messages to ROS.</p></li>\n<li><p><code>scan_to_cloud_converter</code>: converts LaserScan to PointCloud messages.</p></li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p>Create a <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and navigate to its source directory (ex. <code>~/catkin_ws/src</code>).</p>\n\n<p>Make sure you have git installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Download the stack from our repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/ccny-ros-pkg/scan_tools.git\n</code></pre></div>\n<p>Install any dependencies using <a href=""http://wiki.ros.org/rosdep"">rosdep</a>.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install scan_tools\n</code></pre></div>\n<p>Compile your catkin workspace from its root folder (eg. <code>~/catkin_ws</code>):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">catkin_make\n</code></pre></div>\n<p>Finally, source the information from your catkin workspace (or add it to your <code>~/.bashrc</code>)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">source devel/setup.bash\n</code></pre></div>\n<h2 id=""more-info"">More info</h2>\n\n<p><a href=""http://wiki.ros.org/scan_tools"">http://wiki.ros.org/scan_tools</a></p>\n\n<h2 id=""references"">References</h2>\n\n<p>[1] A. Censi, ""An ICP variant using a point-to-line metric"" Proceedings of the \nIEEE International Conference on Robotics and Automation (ICRA), 2008</p>\n\n<p>[2] M. Smith, I. Baldwin, W. Churchill, R. Paul, and P. Newman, \nThe new college vision and laser data set, International Journal for Robotics \nResearch (IJRR), vol. 28, no. 5, pp. 595599, May 2009.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""laser-scan-tools-for-ros"">Laser scan tools for ROS</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Laser scan processing tools. The stack contains:</p>\n\n<ul>\n<li><p><code>csm</code>: a meta-package that downloads and installs Andrea Censi\'s \nCanonical Scan Matcher [1] locally</p></li>\n<li><p><code>laser_ortho_projector</code>: calculates orthogonal projections of LaserScan messages</p></li>\n<li><p><code>laser_scan_matcher</code>: an incremental laser scan matcher, using Andrea Censi\'s Canonical \nScan Matcher implementation</p></li>\n<li><p><code>laser_scan_sparsifier</code>: takes in a LaserScan message and sparsifies it</p></li>\n<li><p><code>laser_scan_splitter</code>:  takes in a LaserScan message and splits \nit into a number of other LaserScan messages </p></li>\n<li><p><code>ncd_parser</code>: reads in .alog data files from the New College Dataset [2]\nand broadcasts scan and odometry messages to ROS.</p></li>\n<li><p><code>scan_to_cloud_converter</code>: converts LaserScan to PointCloud messages.</p></li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p>Create a directory where you want the package downloaded (ex. <code>~/ros</code>), \nand add it to <code>$ROS_PACKAGE_PATH</code>.</p>\n\n<p>Make sure you have git installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Download the stack from our repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/ccny-ros-pkg/scan_tools.git\n</code></pre></div>\n<p>Install any dependencies using [[rosdep]].</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install scan_tools\n</code></pre></div>\n<p>Compile the stack:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosmake scan_tools\n</code></pre></div>\n<h2 id=""more-info"">More info</h2>\n\n<p><a href=""http://ros.org/wiki/scan_tools"">http://ros.org/wiki/scan_tools</a></p>\n\n<h2 id=""references"">References</h2>\n\n<p>[1] A. Censi, ""An ICP variant using a point-to-line metric"" Proceedings of the \nIEEE International Conference on Robotics and Automation (ICRA), 2008</p>\n\n<p>[2] M. Smith, I. Baldwin, W. Churchill, R. Paul, and P. Newman, \nThe new college vision and laser data set, International Journal for Robotics \nResearch (IJRR), vol. 28, no. 5, pp. 595599, May 2009.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""laser-scan-tools-for-ros"">Laser scan tools for ROS</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Laser scan processing tools. The meta-package contains:</p>\n\n<ul>\n<li><p><code>laser_ortho_projector</code>: calculates orthogonal projections of LaserScan messages</p></li>\n<li><p><code>laser_scan_matcher</code>: an incremental laser scan matcher, using Andrea Censi\'s Canonical \nScan Matcher implementation. It downloads and installs Andrea Censi\'s Canonical Scan Matcher [1] locally.</p></li>\n<li><p><code>laser_scan_sparsifier</code>: takes in a LaserScan message and sparsifies it</p></li>\n<li><p><code>laser_scan_splitter</code>:  takes in a LaserScan message and splits \nit into a number of other LaserScan messages </p></li>\n<li><p><code>ncd_parser</code>: reads in .alog data files from the New College Dataset [2]\nand broadcasts scan and odometry messages to ROS.</p></li>\n<li><p><code>scan_to_cloud_converter</code>: converts LaserScan to PointCloud messages.</p></li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""prerequisite"">Prerequisite</h3>\n\n<ul>\n<li>ROS is installed\n\n<ul>\n<li><a href=""http://wiki.ros.org/ROS/Installation/TwoLineInstall"">1-liner ROS Indigo installation on Ubuntu</a></li>\n</ul>\n</li>\n<li><code>apt-get install python-wstool</code></li>\n</ul>\n\n<h3 id=""from-binary-recommended"">From binary (RECOMMENDED)</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">apt-get install ros-%ROS_DISTRO%-scan-tools\n\napt-get install ros-indigo-scan-tools        (Indigo)\n\n</code></pre></div>\n<h3 id=""from-source"">From source</h3>\n\n<p>Following is an example with ROS Indigo.</p>\n\n<ol>\n<li><p>Create a <a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">catkin workspace</a> and navigate to its source directory (e.g. <code>~/catkin_ws/src</code>).</p></li>\n<li><p>In your Catkin workspace, download source and build with the following commands.</p></li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws\nwstool init src\nwstool merge -t src https://raw.githubusercontent.com/ccny-ros-pkg/scan_tools/indigo/.rosinstall\nrosdep install --from-paths src --ignore-src --rosdistro indigo -r -y\ncatkin_make                (or any build commands available in ROS, e.g. `catkin build`)\nsource devel/setup.bash\n\n</code></pre></div>\n<h2 id=""more-info"">More info</h2>\n\n<p><a href=""http://wiki.ros.org/scan_tools"">http://wiki.ros.org/scan_tools</a></p>\n\n<h2 id=""references"">References</h2>\n\n<p>[1] A. Censi, ""An ICP variant using a point-to-line metric"" Proceedings of the \nIEEE International Conference on Robotics and Automation (ICRA), 2008</p>\n\n<p>[2] M. Smith, I. Baldwin, W. Churchill, R. Paul, and P. Newman, \nThe new college vision and laser data set, International Journal for Robotics \nResearch (IJRR), vol. 28, no. 5, pp. 595599, May 2009.</p>\n</div>\n\n            \n          </div>'"
jskeus,http://rosindex.github.io/r/jskeus/,kinetic,,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""jsk-euslisp-repository"">\n<a href=""http://jskeus.sourceforge.net"">JSK EusLisp repository</a> <a href=""https://travis-ci.org/euslisp/jskeus""><img src=""https://travis-ci.org/euslisp/jskeus.png?branch=master"" alt=""Build Status""></a>\n</h2>\n\n<p><a href=""https://gitter.im/euslisp/jskeus?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge""><img src=""https://badges.gitter.im/Join%20Chat.svg"" alt=""Join the chat at https://gitter.im/euslisp/jskeus""></a></p>\n\n<p>This repository containts software devleoped and used by <a href=""http://www.jsk.t.u-tokyo.ac.jp"">JSK</a> at The University of Tokyo.</p>\n\n<h2 id=""1-getting-started"">1. Getting started</h2>\n\n<h3 id=""1-1-install-binary-recommended-ubuntu-14-04"">1.1 Install binary (RECOMMENDED: Ubuntu 14.04)</h3>\n\n<h4 id=""1-1-1-setup-ros-repository"">1.1.1 Setup ROS repository</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo sh -c \'echo ""deb http://packages.ros.org/ros/ubuntu `lsb_release -cs` main"" &gt; /etc/apt/sources.list.d/ros-latest.list\'\nwget http://packages.ros.org/ros.key -O - | sudo apt-key add -\necho ""source /opt/ros/indigo/setup.bash"" &gt;&gt; ~/.bashrc\nsudo apt-get update\n\n</code></pre></div>\n<h4 id=""1-1-2-install-euslisp"">1.1.2 Install Euslisp</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-euslisp\n\n</code></pre></div>\n<h3 id=""1-2-install-via-homebrew-osx"">1.2 Install via Homebrew (OSX)</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">brew install homebrew/x11/jskeus\n\n</code></pre></div>\n<h2 id=""2-playing-with-demo-programs"">2 Playing with Demo programs</h2>\n\n<h3 id=""2-1-motion-generation"">2.1 Motion generation</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ irteusgl irteus/demo/demo.l\n\n</code></pre></div>\n<p>and type any command, such as \'(crank-motion)\' or \'(dual-arm-ik)\'</p>\n\n<p><a href=""https://github.com/euslisp/jskeus/blob/master/irteus/demo/full-body-ik.l""><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Full-body-ik.png"" alt=""full-body-ik""></a>\n<a href=""https://github.com/euslisp/jskeus/blob/master/irteus/demo/dual-arm-ik.l""><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Dual-arm-ik.png"" alt=""dual-arm-ik""></a>\n<a href=""https://github.com/euslisp/jskeus/blob/master/irteus/demo/dual-manip-ik.l""><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Dual-manip-ik.png"" alt=""dual-manip-ik""></a>\n<a href=""https://github.com/euslisp/jskeus/blob/master/irteus/demo/crank-motion.l""><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Crank-motion.png"" alt=""crank-motion""></a>\n<a href=""https://github.com/euslisp/jskeus/blob/master/irteus/demo/hand-grasp-ik.l""><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Hand-grasp.png"" alt=""hand-grasp""></a>\n<a href=""https://github.com/euslisp/jskeus/blob/master/irteus/demo/hanoi-arm.l""><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Hanoi-arm.png"" alt=""hanoi-arm""></a>\n<a href=""https://github.com/euslisp/jskeus/blob/master/irteus/demo/particle.l""><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Particle.png"" alt=""particle""></a>\n<a href=""https://github.com/euslisp/jskeus/blob/master/irteus/demo/null-space-ik.l""><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Null-space-ik.png"" alt=""null-space-ik""></a></p>\n\n<h3 id=""2-2-robots-and-objects-models"">2.2 Robots and objects models</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ irteusgl models/irt-all-robots.l ""(make-all-robots)""\n\n</code></pre></div>\n<p><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/irt-all-robots.png"" alt=""all robots""></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ irteusgl models/irt-all-objects.l ""(make-all-objects)""\n\n</code></pre></div>\n<p><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/irt-all-objects.png"" alt=""all objects""></p>\n\n<h2 id=""3-getting-started-for-ros-and-pr2-users"">3 Getting started for ROS and PR2 users</h2>\n\n<h3 id=""3-1-install-binaries-recommended-ubuntu-14-04"">3.1 Install binaries (RECOMMENDED: Ubuntu 14.04)</h3>\n\n<h4 id=""3-1-1-setup-ros-repository"">3.1.1 Setup ROS repository</h4>\n\n<p>You can skip this procdeure if you already setup ROS system</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo sh -c \'echo ""deb http://packages.ros.org/ros/ubuntu `lsb_release -cs` main"" &gt; /etc/apt/sources.list.d/ros-latest.list\'\nwget http://packages.ros.org/ros.key -O - | sudo apt-key add -\necho ""source /opt/ros/indigo/setup.bash"" &gt;&gt; ~/.bashrc\nsudo apt-get update\n\n</code></pre></div>\n<h4 id=""3-1-2-install-pr2-euslisp-programs"">3.1.2 Install pr2/euslisp programs</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-pr2eus\n\n</code></pre></div>\n<h3 id=""3-3-running-demo-programs"">3.3 Running demo programs</h3>\n\n<h4 id=""3-3-1-visualizinot-pr2-robot"">3.3.1 Visualizinot pr2 robot</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun euscollada pr2.sh\n\n</code></pre></div>\n<p><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Pr2eus.png"" alt=""./pr2.sh""></p>\n\n<h4 id=""3-3-2-for-real-pr2-users"">3.3.2 For real PR2 users</h4>\n\n<p>After you set <code>ROS_MASTER_URI</code> and <code>ROS_IP</code> to your PR2 robot (or simulated PR2), try following command</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roscd pr2eus\n;; read joint state and display in euslisp viewer, print jacobian\n$ roslaunch ./pr2-read-state.launch\n;; sample program to show how to make pr2 posture from euslisp, THIS WILL MOVE REAL ROBOT, CAUTION!!!\n$ roslaunch ./pr2-send-joints.launch\n\n</code></pre></div>\n<p>You can use our script to set  <code>ROS_MASTER_URI</code> and <code>ROS_IP</code></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ source `rospack find jsk_tools`/src/bashrc.ros\n$ rossetrobot pr1012.jsk.com # change to your environment\n$ rossetip\n\n\n</code></pre></div>\n<p><img src=""https://raw.githubusercontent.com//euslisp/jskeus/1.0.12//images/Pr2-read-state.png"" alt=""./pr2-read-state.launch""></p>\n\n<p>see roseus package in <a href=""http://github.com/jsk-ros-pkg"">http://github.com/jsk-ros-pkg</a> repository for ROS client library for euslisp</p>\n\n<h3 id=""3-4-support-and-trouble-shooting"">3.4 Support and Trouble Shooting</h3>\n\n<p>Use <a href=""https://github.com/euslisp/jskeus/issues"">issue tracker</a> for get support</p>\n\n<p>Use <a href=""https://github.com/euslisp/jskeus/pulls"">pull requests</a> to report bugs or patches.</p>\n\n<h3 id=""3-5-online-documents-currently-only-japanese-is-avilable"">3.5 Online Documents (Currently only Japanese is avilable)</h3>\n\n<p>See online <a href=""http://euslisp.github.io/jskeus/"">manual</a></p>\n\n<p>PDF files are also available from <a href=""https://github.com/euslisp/jskeus/raw/master/doc/jmanual.pdf"">here</a></p>\n\n<h3 id=""3-6-install-euslisp-from-source-code-experts-only"">3.6 Install euslisp from source code  (EXPERTS ONLY)</h3>\n\n<h4 id=""3-6-1-installing-dependent-libraries"">3.6.1 Installing dependent libraries</h4>\n\n<p>for Ubuntu users</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install git gcc g++ libjpeg-dev libxext-dev libx11-dev libgl1-mesa-dev libglu1-mesa-dev libpq-dev libpng12-dev xfonts-100dpi xfonts-75dpi gsfonts-x11 texlive-fonts-extra xfonts-100dpi-transcoded xfonts-75dpi-transcoded msttcorefonts\n\n</code></pre></div>\n<p>for Mac OSX users using Homebrew</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ brew install jpeg libpng mesalib-glw wget\n\n</code></pre></div>\n<p>\'\'\'NOTE:\'\'\'\nEusLisp needs X11 Library, but Mac OSX mountain lion no longer support it. So you need to install substitution <a href=""http://xquartz.macosforge.org/landing/"">XQuartz</a>.</p>\n\n<p>Also for Mac OSX lion (or older) users it\'s better to install the latest XQuartz for the safety.</p>\n\n<p>(If XQuartz is older than 2.7.3, the installation of EusLisp will fail. You should install the latest XQuartz.)</p>\n\n<p>for Raspberry Pi users using debian(Raspbian ""wheezy"")</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install git gcc g++ libjpeg62-dev libxext-dev libx11-dev libgl1-mesa-dev libglu1-mesa-dev libpq-dev libpng12-dev xfonts-100dpi xfonts-75dpi\n## additional install for using OpenGL on raspberry pi\n$ sudo apt-get install libgl1-mesa-dri xserver-xorg-video-vesa xutils\n\n</code></pre></div>\n<p>for Cygwin(now working with 32bit only)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Packages listed below should be intalled using setup.exe.\n\ngit, gcc-core, gcc-g++, make\nlibjpeg-devel, libpng-devel\nlibGL-devel, libGLU-devel, libglut-devel, libX11-devel, libXext-devel\nxorg-server\nX-start-menu-icons (for startxwin.exe)\nmesa-demo (for glxinfo)\nbitmap fonts (all bitmap font packages -75dpi, -100dpi, -misc )\n\n</code></pre></div>\n<h4 id=""3-6-2-downloading-and-building-euslisp"">3.6.2 Downloading and building EusLisp</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ git clone http://github.com/euslisp/jskeus jskeus\n$ cd jskeus\n$ make\nyou will see instructions to add EUSDIR, ARCHDIR, PATH, LD_LIBRARY_PATH environment variable in your bashrc to invoke euslisp program\n$ echo ""source ~/bashrc.eus"" &gt;&gt; ~/.bashrc\n\n</code></pre></div>\n<h4 id=""3-6-3-install-ros-and-jsk-ros-pkg-repository"">3.6.3  Install ROS and jsk-ros-pkg repository</h4>\n\n<p>See <a href=""http://wiki.ros.org/indigo/Installation/Source"">http://wiki.ros.org/indigo/Installation/Source</a> for more detail</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install python-rosdep python-rosinstall-generator python-wstool python-rosinstall build-essential\n$ mkdir -p ~/ros_catkin_ws/src\n$ cd ~/ros_catkin_ws/src\n$ wstool init src https://raw.githubusercontent.com/jsk-ros-pkg/jsk_pr2eus/master/.rosinstall\n$ wget https://raw.githubusercontent.com/jsk-ros-pkg/jsk_travis/master/rosdep-install.sh\n$ sh ./rosdep-install.sh\n$ cd ..\n$ catkin_make\n$ source devel/setup.bash\n\n</code></pre></div>\n<h3 id=""3-7-acknowledgment"">3.7 Acknowledgment</h3>\n\n<p>The software in this repository is based on <a href=""http://euslisp.sourceforge.net"">EusLisp language</a>.</p>\n</div>\n\n            \n          </div>'"
teleop_twist_keyboard,http://rosindex.github.io/r/teleop_twist_keyboard/,"hydro,jade,kinetic,indigo",teleop_twist_keyboard,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teleop_twist_keyboard"">teleop_twist_keyboard</h1>\n\n<p>Generic Keyboard Teleop for ROS</p>\n\n<h1 id=""launch"">Launch</h1>\n\n<p>To run: <code>rosrun teleop_twist_keyboard teleop_twist_keyboard.py</code></p>\n\n<h1 id=""usage"">Usage</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Reading from the keyboard  and Publishing to Twist!\n---------------------------\nMoving around:\n   u    i    o\n   j    k    l\n   m    ,    .\n\nFor Holonomic mode (strafing), hold down the shift key:\n---------------------------\n   U    I    O\n   J    K    L\n   M    &lt;    &gt;\n\nt : up (+z)\nb : down (-z)\n\nanything else : stop\n\nq/z : increase/decrease max speeds by 10%\nw/x : increase/decrease only linear speed by 10%\ne/c : increase/decrease only angular speed by 10%\n\nCTRL-C to quit\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
innok_heros_driver,http://rosindex.github.io/r/innok_heros_driver/,"hydro,indigo",innok_heros_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""innok_heros_driver"">innok_heros_driver</h1>\n\n<p>ROS driver for the Innok Heros robot plattform.</p>\n\n<p>Start with</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch innok_heros_driver heros_base.launch\n</code></pre></div>\n<p>You may need to set the <code>host</code> parameter to the correct address.</p>\n\n<p>Copyright (c) 2014 Innok Robotics GmbH</p>\n</div>\n\n            \n          </div>'"
cv_backports,http://rosindex.github.io/r/cv_backports/,"jade,indigo",cv_backports,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cv_backports"">cv_backports</h1>\n\n<p>Backports of elements from the latest 2.4.x releases to ubuntu/rosdistro environments.</p>\n</div>\n\n            \n          </div>'"
pr2_gripper_sensor,http://rosindex.github.io/r/pr2_gripper_sensor/,"hydro,indigo","pr2_gripper_sensor,pr2_gripper_sensor_action,pr2_gripper_sensor_controller,pr2_gripper_sensor_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_tutorials,http://rosindex.github.io/r/ros_tutorials/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","ros_tutorials,roscpp_tutorials,rospy_tutorials,turtlesim","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
destruction_scenarios,http://rosindex.github.io/r/destruction_scenarios/,indigo,destruction_scenarios,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""destruction_scenarios"">destruction_scenarios</h1>\n</div>\n\n            \n          </div>'"
bond_core,http://rosindex.github.io/r/bond_core/,"hydro,electric,groovy,kinetic,diamondback,jade,indigo","bond,bond_core,bondcpp,bondpy,smclib,test_bond,actionlib,bfl,filters,nodelet,nodelet_topic_tools,pluginlib,test_nodelet,tinyxml,xacro,yaml_cpp","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
calvin_robot,http://rosindex.github.io/r/calvin_robot/,"hydro,fuerte,indigo","calvin_bringup,calvin_description,calvin_gazebo,calvin_joint_commander,calvin_moveit_config,calvin_msgs,calvin_pick_n_place,calvin_pick_server,calvin_robot,calvin_arm_navigation,calvin_object_manipulation_launch,calvin_tabletop_manipulation_launch","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""calvin_robot"">calvin_robot</h1>\n\n<p>This stack contains all necessary components to operate the Calvin robot, both in reality and simulation.</p>\n\n<p>Specifically, it provides:</p>\n\n<ul>\n<li>URDF descriptions (package <code>calvin_description</code>),</li>\n<li>configs and launch files for starting the robot (package <code>calvin_bringup</code>),</li>\n<li>configs and launch files for simulating the robot in Gazebo (package <code>calvin_gazebo</code>),</li>\n<li>a tool to publish states for the not actively actuated joints (package <code>calvin_moveit_config</code>),</li>\n<li>a pick and place behavior (package <code>calvin_pick_n_place</code>)</li>\n</ul>\n\n<p>For more information, visit the <a href=""http://www.ros.org/wiki/calvin_robot"">calvin_robot ROS wiki page</a>.</p>\n</div>\n\n            \n          </div>'"
libcsm,http://rosindex.github.io/r/libcsm/,"jade,indigo",csm,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>For more information about the C(anonical) Scan Matcher, see the webpage: <a href=""http://purl.org/censi/2007/csm"">http://purl.org/censi/2007/csm</a> .</p>\n\n<p>This is the ""master"" branch of CSM, which uses GSL.</p>\n\n<p>There is also another branch, called <a href=""https://github.com/AndreaCensi/csm/tree/csm_eigen""><code>csm_eigen</code></a>, which uses the <code>eigen</code> library. \nThis branch is the work of people working at U. Freiburg and Kuka, including\nChristoph Sprunk and Rainer Kuemmerle.</p>\n\n<h2 id=""binary-install-via-ros"">Binary install (via ROS)</h2>\n\n<p>(November 2015) Now you can install binary on Ubuntu (via ROS). As of today limited to Ubuntu Saucy and Trusty. To do so:</p>\n\n<ol>\n<li>Add ROS repository to your Ubuntu\'s download site (For detail, see <a href=""http://wiki.ros.org/indigo/Installation/Ubuntu"">ROS wiki</a>):</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo sh -c \'echo ""deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main"" &gt; /etc/apt/sources.list.d/ros-latest.list\'\nsudo apt-key adv --keyserver hkp://pool.sks-keyservers.net --recv-key 0xB01FA116\nsudo apt-get update\n\n</code></pre></div>\n<ol>\n<li>Install CSM. </li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-csm\n\n</code></pre></div>\n<p>The package name contains ""ROS"" specific info, but you can use this as a standalone CSM library. It goes into these directory:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/opt/ros/indigo/include/csm\n/opt/ros/indigo/lib/libcsm-static.a\n/opt/ros/indigo/lib/libcsm.so\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
twist_mux,http://rosindex.github.io/r/twist_mux/,"hydro,jade,indigo",twist_mux,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""twist_mux"">twist_mux</h1>\n\n<p>Twist multiplexer with support for <a href=""http://docs.ros.org/api/geometry_msgs/html/msg/Twist.html"">geometry_msgs/Twist</a> topics and <a href=""http://docs.ros.org/api/std_msgs/html/msg/Bool.html"">std_msgs/Bool</a> locks with priorities</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""twist_mux"">twist_mux</h1>\n\n<p>Twist multiplexer with support for <a href=""http://docs.ros.org/api/geometry_msgs/html/msg/Twist.html"">geometry_msgs/Twist</a> topics and <a href=""http://docs.ros.org/api/std_msgs/html/msg/Bool.html"">std_msgs/Bool</a> locks with priorities.</p>\n\n<p>See <a href=""http://wiki.ros.org/twist_mux"">documentation</a>.</p>\n\n<p><a href=""https://travis-ci.org/ros-teleop/twist_mux""><img src=""https://travis-ci.org/ros-teleop/twist_mux.png?branch=jade-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
mrp2_desktop,http://rosindex.github.io/r/mrp2_desktop/,indigo,"mrp2_desktop,mrp2_viz","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mrp2_desktop"">mrp2_desktop</h1>\n</div>\n\n            \n          </div>'"
mrp2_common,http://rosindex.github.io/r/mrp2_common/,indigo,"mrp2_analyzer,mrp2_common,mrp2_control,mrp2_description,mrp2_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mrp2-common-ros-packages"">MRP2 Common ROS Packages</h1>\n\n<p>This repository contains common ROS packages for MRP2 Robot. These packages are needed for both the robot itself and the simulation. This version has ros_control implemented with additional built-in packages developed by the community.</p>\n\n<h3 id=""1-active-packages"">1. Active Packages</h3>\n\n<ul>\n<li>mrp2_analyzer</li>\n<li>mrp2_common</li>\n<li>mrp2_control</li>\n<li>mrp2_description</li>\n<li>mrp2_navigation</li>\n</ul>\n\n<h3 id=""2-information-on-packages"">2. Information on Packages</h3>\n\n<h4 id=""2-1-mrp2_analyzer"">2.1. mrp2_analyzer</h4>\n\n<p>This package is used for diagnostic purposes. It makes use of <a href=""http://wiki.ros.org/diagnostic_aggregator"">diagnostic_aggregator</a> and publishes states of right and left motors, battery and lights.</p>\n\n<h4 id=""2-2-mrp2_common"">2.2. mrp2_common</h4>\n\n<p>This is the metapackage only. No other applications.</p>\n\n<h4 id=""2-3-mrp2_control"">2.3. mrp2_control</h4>\n\n<p>This package contains teleoperation and <a href=""http://wiki.ros.org/ros_control"">ros_control</a> related launch files and configurations.</p>\n\n<h4 id=""2-4-mrp2_description"">2.4. mrp2_description</h4>\n\n<p>This package has URDF and xacro files for description of MRP2. Both gazebo and ros_control use this package for visualization and navigation purposes.</p>\n\n<h4 id=""2-5-mrp2_navigation"">2.5. mrp2_navigation</h4>\n\n<p>This package includes launch files, parameters and maps for different navigation applications.</p>\n</div>\n\n            \n          </div>'"
robo_rescue,http://rosindex.github.io/r/robo_rescue/,"jade,indigo","p3dx_dpl,p3dx_hal_vrep,p3dx_robot,p3dx_urdf_model","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robo-rescue"">robo-rescue</h1>\n\n<p>ROS nodes for rescue robots</p>\n\n<p>This project brings P3DX robot to <a href=""http://www.ros.org/"">ROS</a>. It contains\nnodes for ROS which integrates with <a href=""http://www.coppeliarobotics.com/"">VREP</a>\nrobotic simulator. But its modular design allows easy porting to other\nsimulators and even to real robots.</p>\n\n<p>Although whole stack has been designed around VREP, it was designed with real\nrobots in mind, and should allow easy porting of algorithms to real robots.</p>\n\n<h1 id=""building"">Building</h1>\n\n<p>This project contains standard ROS <a href=""http://wiki.ros.org/catkin"">catkin</a>\npackages, which is default build system in recent ROS releases. So to to build\nyou need to <a href=""http://wiki.ros.org/ROS/Installation"">install and configure</a> your\nROS environment first.</p>\n\n<p>This steps expects your ROS environment and VREP simulator are installed and configured properly.</p>\n\n<p>Also if you want to use VREP bridge, you need <a href=""https://github.com/hrnr/robo-rescue-simulation-vrep"">robo-rescue-simulation-\nvrep</a> (this guide\nincludes steps to install it too).</p>\n\n<ol>\n<li>clone this repository</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    git clone http://github.com/hrnr/robo-rescue\n\n</code></pre></div>\n<ol>\n<li>link (or copy) VREP common bridge to your workspace (this is needed to\ncommunicate with vrep)</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ln -s &lt;VREP dir&gt;/programming/ros_packages/vrep_common &lt;catkin workspace&gt;/src/vrep_common\n\n</code></pre></div>\n<ol>\n<li>add project packages to your workspace</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    cp -r robo-rescue/src/* &lt;catkin workspace&gt;/src\n\n</code></pre></div>\n<ol>\n<li>build your catkin workspace</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    cd &lt;catkin workspace&gt;\n    catkin_make\n\n</code></pre></div>\n<p>You may also need to install other ROS packages such as <code>gmapping</code> and\n<code>move_base</code>. This dependencies can be installed by\n<a href=""http://wiki.ros.org/rosdep"">rosdep</a>.</p>\n\n<h1 id=""running-p3dx_robot"">Running <code>p3dx_robot</code>\n</h1>\n\n<p>If you have retrieved and built all packages successfully you can run robot\nwith these steps.</p>\n\n<ol>\n<li>clone repository containing VREP model and test enviroment</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    git clone https://github.com/hrnr/robo-rescue-simulation-vrep\n\n</code></pre></div>\n<ol>\n<li>run <code>roscore</code> (this must be running before VREP)</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    roscore\n\n</code></pre></div>\n<ol>\n<li>load scene and robot model in vrep</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    File &gt; open scene ... robo-rescue-simulation-vrep/test_scenes/level01.ttt\n    File &gt; load model ... robo-rescue-simulation-vrep/models/pioneer-p3dx.ttm\n\n</code></pre></div>\n<ol>\n<li><p>run simulation in VREP (PLAY button)</p></li>\n<li><p>run P3DX via roslaunch</p></li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    roslaunch p3dx_robot p3dx.launch\n\n</code></pre></div>\n<p>That\'s it, your P3DX robot is running in ROS</p>\n\n<p>You can check that everything is running with <code>rostopic list</code> robot topics\nstarts with <code>/p3dx_0</code> since this is first PD3X in simulation. Check some topic\nwith <code>rostopic echo</code>, it should publish messages.</p>\n\n<p>Run <code>rviz</code> for little demo. Load rviz config file from <code>src/pioneer-\np3dx/p3dx_robot/config/p3dx-config.rviz</code>. Set <code>2D Nav Goal</code> to robot, it will\ngo to specified location and map its environment. This is how robot looks in\nits initial pose:</p>\n\n<p><img src=""https://raw.githubusercontent.com//hrnr/robo-rescue/jade-devel//doc/rviz-initialpose.png?raw=true"" alt=""p3dx_robot after installing"" title=""p3dx_robot after installing in its initial pose""></p>\n\n<h1 id=""architecture"">Architecture</h1>\n\n<p><img src=""https://raw.githubusercontent.com//hrnr/robo-rescue/jade-devel//doc/Layers.png?raw=true"" alt=""Hierarchy model""></p>\n\n<p>This project uses layered architecture to create multiple layers of abstraction. \nBottom layer is Hardware Abstraction Layer. With aim to hide maximum of hardware differences. Middle layer (DPL) aggregates multiple data streams from HAL into single data stream. \nTop layer holds higher algorithms which operate on the whole robot. Thanks to clearly defined layers is this architecture suitable for fast prototyping of robots.</p>\n\n<h2 id=""hardware-abstraction-layer"">Hardware Abstraction Layer</h2>\n\n<p><img src=""https://raw.githubusercontent.com//hrnr/robo-rescue/jade-devel//doc/HAL.png?raw=true"" alt=""Hierarchy model""></p>\n\n<h3 id=""interface-robot-lt-gt-hal"">Interface robot &lt;-&gt; HAL</h3>\n\n<p>HAL receives raw data from sensors and sends raw low level commands to joints. Data may come from real robots as well as simulation. Nodes of HAL should transform data ,which come from variety of bus interfaces and sensor or actuator types. This layer is therefore uniquely build for each robot depending on its configuration. This layer also holds function of synchronizer. In case of simulation it should set ROS default time to simulated. Otherwise it should time-stamp data with ROS default system time.</p>\n\n<h3 id=""interface-hal-lt-gt-dpl"">Interface HAL &lt;-&gt; DPL</h3>\n\n<p>Messages send as an output from HAL must be time_stamped for use in future calculations. Every message should have set proper ID connecting submitted data with location of sensor on robots body (frame_id). Every time of sensor has predefined type of message which may publish.\n * Ultrasonic ,IR ,Bumpers : <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/Range.html"">sensor_msgs/Range</a>\n * Laser scanners :  <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/LaserScan.html"">sensor_msgs/LaserScan</a>\n * Joints ,Motors :  <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/JointState.html"">sensor_msgs/JointState</a>\n * Accelerometers, Gyroscopes, Magnetometers : <a href=""http://docs.ros.org/api/geometry_msgs/html/msg/Vector3Stamped.html"">geometry_msgs/Vector3Stamped</a></p>\n\n<p>Our HAL implements abstraction for PioneerP3dx robot simulated in V-rep.</p>\n\n<p>## Data Processing Layer\n <img src=""https://raw.githubusercontent.com//hrnr/robo-rescue/jade-devel//doc/DPL.png?raw=true"" alt=""Hierarchy model"">\n ### Overview\n DPL aggregates multiple data streams received from HAL. These messages must be fused together to provide overall robot state information. All data should be transformed to robot main frame_ID called base_link and then processed. Output from this stack of ROS packages should be come standardized ROS messages like Odom, PointCloud ,LaserScan. These messages are commonly used in algorithms. This layer also includes passing messages from algorithms to bottom layers. These are mostly represented by Twist commands for movement of the robot. Twist message is translated into angular velocities of robot motors.</p>\n\n<p>## Algorithms\n This layer includes all algorithms needed for successful navigation of robot. It includes SLAM algorithm for map building and localization. It also needs to avoid obstacles and plan robot motion. Lastly This layer will include basic robot AI.</p>\n\n<p>## TF Tree\nThis project use standard ROS TF tree. It is formation of coordinate frames of all vital parts of the robot. Robot model is described in URDF file.  TF uses forward and inverse transformation in between the frames. The main structure of the robot consists of frames:\nmap -&gt; odom -&gt; base_footprint -&gt; base_link -&gt;[robot structure ,sensors and actuators].</p>\n\n<h2 id=""namespaces"">Namespaces</h2>\n\n<p>Whole project use same hierarchical approach in naming. All names in [] are dynamically substituted.\nTopics:\n * [robot_id]/topic_name : Algorithms namespace\n * [robot_id]/dpl/topic_name : DPL namespace\n * [robot_id]/dpl/hal/[node_name]/sensor[ID]/data type  :HAL namespace</p>\n\n<p># API Documentation\n  * <a href=""http://wiki.ros.org/p3dx_urdf_model"">p3dx_urdf_model</a>\n  * <a href=""http://wiki.ros.org/p3dx_hal_vrep"">p3dx_hal_vrep</a>\n  * <a href=""http://wiki.ros.org/p3dx_dpl"">p3dx_dpl</a>\n  * <a href=""http://wiki.ros.org/p3dx_robot"">p3dx_robot</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robo-rescue"">robo-rescue</h1>\n\n<p>ROS nodes for rescue robots</p>\n\n<p>This project brings P3DX robot to <a href=""http://www.ros.org/"">ROS</a>. It contains\nnodes for ROS which integrates with <a href=""http://www.coppeliarobotics.com/"">VREP</a>\nrobotic simulator. But its modular design allows easy porting to other\nsimulators and even to real robots.</p>\n\n<p>Although whole stack has been designed around VREP, it was designed with real\nrobots in mind, and should allow easy porting of algorithms to real robots.</p>\n\n<h1 id=""building"">Building</h1>\n\n<p>This project contains standard ROS <a href=""http://wiki.ros.org/catkin"">catkin</a>\npackages, which is default build system in recent ROS releases. So to to build\nyou need to <a href=""http://wiki.ros.org/ROS/Installation"">install and configure</a> your\nROS environment first.</p>\n\n<p>This steps expects your ROS environment and VREP simulator are installed and configured properly.</p>\n\n<p>Also if you want to use VREP bridge, you need <a href=""https://github.com/hrnr/robo-rescue-simulation-vrep"">robo-rescue-simulation-\nvrep</a> (this guide\nincludes steps to install it too).</p>\n\n<ol>\n<li>clone this repository</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    git clone http://github.com/hrnr/robo-rescue\n\n</code></pre></div>\n<ol>\n<li>link (or copy) VREP common bridge to your workspace (this is needed to\ncommunicate with vrep)</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ln -s &lt;VREP dir&gt;/programming/ros_packages/vrep_common &lt;catkin workspace&gt;/src/vrep_common\n\n</code></pre></div>\n<ol>\n<li>add project packages to your workspace</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    cp -r robo-rescue/src/* &lt;catkin workspace&gt;/src\n\n</code></pre></div>\n<ol>\n<li>build your catkin workspace</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    cd &lt;catkin workspace&gt;\n    catkin_make\n\n</code></pre></div>\n<p>You may also need to install other ROS packages such as <code>gmapping</code> and\n<code>move_base</code>. This dependencies can be installed by\n<a href=""http://wiki.ros.org/rosdep"">rosdep</a>.</p>\n\n<h1 id=""running-p3dx_robot"">Running <code>p3dx_robot</code>\n</h1>\n\n<p>If you have retrieved and built all packages successfully you can run robot\nwith these steps.</p>\n\n<ol>\n<li>clone repository containing VREP model and test enviroment</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    git clone https://github.com/hrnr/robo-rescue-simulation-vrep\n\n</code></pre></div>\n<ol>\n<li>run <code>roscore</code> (this must be running before VREP)</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    roscore\n\n</code></pre></div>\n<ol>\n<li>load scene and robot model in vrep</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    File &gt; open scene ... robo-rescue-simulation-vrep/test_scenes/level01.ttt\n    File &gt; load model ... robo-rescue-simulation-vrep/models/pioneer-p3dx.ttm\n\n</code></pre></div>\n<ol>\n<li><p>run simulation in VREP (PLAY button)</p></li>\n<li><p>run P3DX via roslaunch</p></li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    roslaunch p3dx_robot p3dx.launch\n\n</code></pre></div>\n<p>That\'s it, your P3DX robot is running in ROS</p>\n\n<p>You can check that everything is running with <code>rostopic list</code> robot topics\nstarts with <code>/p3dx_0</code> since this is first PD3X in simulation. Check some topic\nwith <code>rostopic echo</code>, it should publish messages.</p>\n\n<p>Run <code>rviz</code> for little demo. Load rviz config file from <code>src/pioneer-\np3dx/p3dx_robot/config/p3dx-config.rviz</code>. Set <code>2D Nav Goal</code> to robot, it will\ngo to specified location and map its environment. This is how robot looks in\nits initial pose:</p>\n\n<p><img src=""https://raw.githubusercontent.com//hrnr/robo-rescue/master//doc/rviz-initialpose.png?raw=true"" alt=""p3dx_robot after installing"" title=""p3dx_robot after installing in its initial pose""></p>\n\n<h1 id=""architecture"">Architecture</h1>\n\n<p><img src=""https://raw.githubusercontent.com//hrnr/robo-rescue/master//doc/Layers.png?raw=true"" alt=""Hierarchy model""></p>\n\n<p>This project uses layered architecture to create multiple layers of abstraction. \nBottom layer is Hardware Abstraction Layer. With aim to hide maximum of hardware differences. Middle layer (DPL) aggregates multiple data streams from HAL into single data stream. \nTop layer holds higher algorithms which operate on the whole robot. Thanks to clearly defined layers is this architecture suitable for fast prototyping of robots.</p>\n\n<h2 id=""hardware-abstraction-layer"">Hardware Abstraction Layer</h2>\n\n<p><img src=""https://raw.githubusercontent.com//hrnr/robo-rescue/master//doc/HAL.png?raw=true"" alt=""Hierarchy model""></p>\n\n<h3 id=""interface-robot-lt-gt-hal"">Interface robot &lt;-&gt; HAL</h3>\n\n<p>HAL receives raw data from sensors and sends raw low level commands to joints. Data may come from real robots as well as simulation. Nodes of HAL should transform data ,which come from variety of bus interfaces and sensor or actuator types. This layer is therefore uniquely build for each robot depending on its configuration. This layer also holds function of synchronizer. In case of simulation it should set ROS default time to simulated. Otherwise it should time-stamp data with ROS default system time.</p>\n\n<h3 id=""interface-hal-lt-gt-dpl"">Interface HAL &lt;-&gt; DPL</h3>\n\n<p>Messages send as an output from HAL must be time_stamped for use in future calculations. Every message should have set proper ID connecting submitted data with location of sensor on robots body (frame_id). Every time of sensor has predefined type of message which may publish.\n * Ultrasonic ,IR ,Bumpers : <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/Range.html"">sensor_msgs/Range</a>\n * Laser scanners :  <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/LaserScan.html"">sensor_msgs/LaserScan</a>\n * Joints ,Motors :  <a href=""http://docs.ros.org/api/sensor_msgs/html/msg/JointState.html"">sensor_msgs/JointState</a>\n * Accelerometers, Gyroscopes, Magnetometers : <a href=""http://docs.ros.org/api/geometry_msgs/html/msg/Vector3Stamped.html"">geometry_msgs/Vector3Stamped</a></p>\n\n<p>Our HAL implements abstraction for PioneerP3dx robot simulated in V-rep.</p>\n\n<p>## Data Processing Layer\n <img src=""https://raw.githubusercontent.com//hrnr/robo-rescue/master//doc/DPL.png?raw=true"" alt=""Hierarchy model"">\n ### Overview\n DPL aggregates multiple data streams received from HAL. These messages must be fused together to provide overall robot state information. All data should be transformed to robot main frame_ID called base_link and then processed. Output from this stack of ROS packages should be come standardized ROS messages like Odom, PointCloud ,LaserScan. These messages are commonly used in algorithms. This layer also includes passing messages from algorithms to bottom layers. These are mostly represented by Twist commands for movement of the robot. Twist message is translated into angular velocities of robot motors.</p>\n\n<p>## Algorithms\n This layer includes all algorithms needed for successful navigation of robot. It includes SLAM algorithm for map building and localization. It also needs to avoid obstacles and plan robot motion. Lastly This layer will include basic robot AI.</p>\n\n<p>## TF Tree\nThis project use standard ROS TF tree. It is formation of coordinate frames of all vital parts of the robot. Robot model is described in URDF file.  TF uses forward and inverse transformation in between the frames. The main structure of the robot consists of frames:\nmap -&gt; odom -&gt; base_footprint -&gt; base_link -&gt;[robot structure ,sensors and actuators].</p>\n\n<h2 id=""namespaces"">Namespaces</h2>\n\n<p>Whole project use same hierarchical approach in naming. All names in [] are dynamically substituted.\nTopics:\n * [robot_id]/topic_name : Algorithms namespace\n * [robot_id]/dpl/topic_name : DPL namespace\n * [robot_id]/dpl/hal/[node_name]/sensor[ID]/data type  :HAL namespace</p>\n\n<p># API Documentation\n  * <a href=""http://wiki.ros.org/p3dx_urdf_model"">p3dx_urdf_model</a>\n  * <a href=""http://wiki.ros.org/p3dx_hal_vrep"">p3dx_hal_vrep</a>\n  * <a href=""http://wiki.ros.org/p3dx_dpl"">p3dx_dpl</a>\n  * <a href=""http://wiki.ros.org/p3dx_robot"">p3dx_robot</a></p>\n</div>\n\n            \n          </div>'"
mrp2_robot,http://rosindex.github.io/r/mrp2_robot/,indigo,"mrp2_bringup,mrp2_display,mrp2_hardware,mrp2_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mrp2_robot"">mrp2_robot</h1>\n</div>\n\n            \n          </div>'"
innok_heros_description,http://rosindex.github.io/r/innok_heros_description/,indigo,innok_heros_description,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
std_msgs,http://rosindex.github.io/r/std_msgs/,"hydro,fuerte,groovy,kinetic,jade,indigo",std_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
arni,http://rosindex.github.io/r/arni/,indigo,"arni_core,arni_countermeasure,arni_gui,arni_msgs,arni_nodeinterface,arni_processing,rqt_arni_gui_detail,rqt_arni_gui_overview","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""arni"">ARNI</h1>\n\n<p>This is the codebase of the Advanced ROS Network Introspection.</p>\n\n<h2 id=""what-is-arni"">What is arni?</h2>\n\n<p>Advanced ROS Network Introspection (ARNI) extends the /statistics features introduced with Indigo and completes the collected data with measurements about the hosts and nodes participating in the network. These are gathered from an extra node that has to run on each host machine. All statistics or metadata can be compared against a set of reference values using the monitoring_node. The rated statistics allow to run optional countermeasures when a deviation from the reference is detected, in order to remedy the fault or at least bring the system in a safe state.\nFurther information can be found at: <a href=""http://wiki.ros.org/arni"">http://wiki.ros.org/arni</a>\nAlso there are a few to tutorials which cover most basics: <a href=""http://wiki.ros.org/arni/Tutorials"">http://wiki.ros.org/arni/Tutorials</a></p>\n\n<p>===</p>\n\n<p>Guidelines for developers:\n- everything in this repository should be in english.\n- every commit should be commented in english.\n- python code has to follow the  <a href=""http://wiki.ros.org/PyStyleGuide"">ROS</a> and the <a href=""http://legacy.python.org/dev/peps/pep-0008/"">pep8</a>\nstyle guide (please <strong>actually</strong> read them before coding)\n- directories begin with a lower case character\n- see code-examples for some examples on code guidelines</p>\n</div>\n\n            \n          </div>'"
mrp2_simulator,http://rosindex.github.io/r/mrp2_simulator/,indigo,"mrp2_gazebo,mrp2_hardware_gazebo,mrp2_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mrp2_simulator"">mrp2_simulator</h1>\n</div>\n\n            \n          </div>'"
ros_comm_msgs,http://rosindex.github.io/r/ros_comm_msgs/,"jade,kinetic,indigo","rosgraph_msgs,std_srvs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cmake_modules,http://rosindex.github.io/r/cmake_modules/,"hydro,groovy,kinetic,jade,indigo",cmake_modules,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cmake_modules"">cmake_modules</h1>\n\n<p>A common repository for CMake Modules which are not distributed with CMake but are commonly used by ROS packages.</p>\n\n<p>See the CONTRIBUTING.md file in this repository before submitting pull requests for new modules.</p>\n\n<h2 id=""provided-modules"">Provided Modules</h2>\n\n<ol>\n<li>\n<a href=""http://eigen.tuxfamily.org/index.php?title=Main_Page""><strong>Eigen</strong></a> is a C++ template library for linear algebra: matrices, vectors, numerical solvers, and related algorithms.</li>\n<li>\n<a href=""http://www.numpy.org/""><strong>NumPy</strong></a> is the fundamental package for scientific computing with Python.</li>\n<li>\n<a href=""https://www.threadingbuildingblocks.org/""><strong>TBB</strong></a> lets you easily write parallel C++ programs that take full advantage of multicore performance.</li>\n<li>\n<a href=""http://www.grinninglizard.com/tinyxml/""><strong>TinyXML</strong></a> is a simple, small, C++ XML parser.</li>\n<li>\n<a href=""http://www.xenomai.org/""><strong>Xenomai</strong></a> is a real-time development framework cooperating with the Linux kernel.</li>\n<li>\n<a href=""http://www.gnu.org/software/gsl/""><strong>GSL</strong></a> is a numerical library for C and C++ programmers.</li>\n</ol>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>To use the CMake modules provided by this catkin package, you must <code>&lt;build_depend&gt;</code> on it in your <code>package.xml</code>, like so:</p>\n<div class=""highlight""><pre><code class=""language-xml"" data-lang=""xml""><span class=""cp"">&lt;?xml version=""1.0""?&gt;</span>\n<span class=""nt"">&lt;package&gt;</span>\n  <span class=""c"">&lt;!-- ... --&gt;</span>\n  <span class=""nt"">&lt;build_depend&gt;</span>cmake_modules<span class=""nt"">&lt;/build_depend&gt;</span>\n<span class=""nt"">&lt;/package&gt;</span>\n\n</code></pre></div>\n<p>Then you must <code>find_package</code> it in your <code>CMakeLists.txt</code> along with your other catkin build dependencies:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>catkin REQUIRED COMPONENTS ... cmake_modules ...<span class=""p"">)</span>\n\n</code></pre></div>\n<p>OR by <code>find_package</code>\'ing it directly:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>cmake_modules REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<p>After the above <code>find_package</code> invocations, the modules provided by <code>cmake_modules</code> will be available in your <code>CMAKE_MODULE_PATH</code> to be found. For example you can find <code>Eigen</code> by using the following:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>Eigen REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h3 id=""lookup-sheet"">Lookup sheet</h3>\n\n<h5 id=""eigen"">Eigen</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>Eigen REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h5 id=""numpy"">NumPY</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>NUMPY REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h5 id=""tbb"">TBB</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>TBB REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h5 id=""tinyxml"">TinyXML</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>TinyXML REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h5 id=""xenomai"">Xenomai</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>Xenomai REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h3 id=""findgsl"">FindGSL</h3>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>GSL REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cmake_modules"">cmake_modules</h1>\n\n<p>A common repository for CMake Modules which are not distributed with CMake but are commonly used by ROS packages.</p>\n\n<p>See the CONTRIBUTING.md file in this repository before submitting pull requests for new modules.</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>To use the CMake modules provided by this catkin package, you must <code>&lt;build_depend&gt;</code> on it in your <code>package.xml</code>, like so:</p>\n<div class=""highlight""><pre><code class=""language-xml"" data-lang=""xml""><span class=""cp"">&lt;?xml version=""1.0""?&gt;</span>\n<span class=""nt"">&lt;package&gt;</span>\n  <span class=""c"">&lt;!-- ... --&gt;</span>\n  <span class=""nt"">&lt;build_depend&gt;</span>cmake_modules<span class=""nt"">&lt;/build_depend&gt;</span>\n<span class=""nt"">&lt;/package&gt;</span>\n\n</code></pre></div>\n<p>Then you must <code>find_package</code> it in your <code>CMakeLists.txt</code> along with your other catkin build dependencies:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>catkin REQUIRED COMPONENTS ... cmake_modules ...<span class=""p"">)</span>\n\n</code></pre></div>\n<p>OR by <code>find_package</code>\'ing it directly:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>cmake_modules REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cmake_modules"">cmake_modules</h1>\n\n<p>A common repository for CMake Modules which are not distributed with CMake but are commonly used by ROS packages.</p>\n\n<p>See the CONTRIBUTING.md file in this repository before submitting pull requests for new modules.</p>\n\n<h2 id=""ros-distros"">ROS Distros</h2>\n\n<p>This repository has branches for minor releases (<code>0.2-devel</code>, <code>0.3-devel</code>, <code>0.4-devel</code>, etc...) and they map to specific ROS distributions like so:</p>\n\n<ul>\n<li>\n<code>0.2-devel</code>:\n\n<ul>\n<li>ROS Groovy</li>\n</ul>\n</li>\n<li>\n<code>0.3-devel</code>:\n\n<ul>\n<li>ROS Hydro</li>\n<li>ROS Indigo</li>\n</ul>\n</li>\n<li>\n<code>0.4-devel</code>:\n\n<ul>\n<li>ROS Jade</li>\n<li>ROS Kinetic</li>\n</ul>\n</li>\n</ul>\n\n<p>This mapping will be kept up-to-date in the <code>README.md</code> on the default branch.</p>\n\n<h2 id=""provided-modules"">Provided Modules</h2>\n\n<ol>\n<li>\n<a href=""http://www.numpy.org/""><strong>NumPy</strong></a> is the fundamental package for scientific computing with Python.</li>\n<li>\n<a href=""https://www.threadingbuildingblocks.org/""><strong>TBB</strong></a> lets you easily write parallel C++ programs that take full advantage of multicore performance.</li>\n<li>\n<a href=""http://www.grinninglizard.com/tinyxml/""><strong>TinyXML</strong></a> is a simple, small, C++ XML parser.</li>\n<li>\n<a href=""http://www.xenomai.org/""><strong>Xenomai</strong></a> is a real-time development framework cooperating with the Linux kernel.</li>\n<li>\n<a href=""http://www.gnu.org/software/gsl/""><strong>GSL</strong></a> is a numerical library for C and C++ programmers.</li>\n<li>\n<a href=""https://gflags.github.io/gflags/""><strong>Gflags</strong></a> is a C++ library that implements commandline flags processing with the ability to define flags in the source file in which they are used.</li>\n<li>[Deprecated] <a href=""http://eigen.tuxfamily.org/index.php?title=Main_Page""><strong>Eigen</strong></a> is a C++ template library for linear algebra: matrices, vectors, numerical solvers, and related algorithms.</li>\n</ol>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>To use the CMake modules provided by this catkin package, you must <code>&lt;build_depend&gt;</code> on it in your <code>package.xml</code>, like so:</p>\n<div class=""highlight""><pre><code class=""language-xml"" data-lang=""xml""><span class=""cp"">&lt;?xml version=""1.0""?&gt;</span>\n<span class=""nt"">&lt;package&gt;</span>\n  <span class=""c"">&lt;!-- ... --&gt;</span>\n  <span class=""nt"">&lt;build_depend&gt;</span>cmake_modules<span class=""nt"">&lt;/build_depend&gt;</span>\n<span class=""nt"">&lt;/package&gt;</span>\n\n</code></pre></div>\n<p>Then you must <code>find_package</code> it in your <code>CMakeLists.txt</code> along with your other catkin build dependencies:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>catkin REQUIRED COMPONENTS ... cmake_modules ...<span class=""p"">)</span>\n\n</code></pre></div>\n<p>OR by <code>find_package</code>\'ing it directly:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>cmake_modules REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<p>After the above <code>find_package</code> invocations, the modules provided by <code>cmake_modules</code> will be available in your <code>CMAKE_MODULE_PATH</code> to be found. For example you can find <code>TinyXML</code> by using the following:</p>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>TinyXML REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h3 id=""lookup-sheet"">Lookup sheet</h3>\n\n<h5 id=""eigen-deprecated"">Eigen [Deprecated]</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>Eigen REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h5 id=""numpy"">NumPY</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>NUMPY REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h5 id=""tbb"">TBB</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>TBB REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h5 id=""tinyxml"">TinyXML</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>TinyXML REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h5 id=""xenomai"">Xenomai</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>Xenomai REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h3 id=""findgsl"">FindGSL</h3>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>GSL REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n<h5 id=""gflags"">Gflags</h5>\n<div class=""highlight""><pre><code class=""language-cmake"" data-lang=""cmake""><span class=""nb"">find_package</span><span class=""p"">(</span>Gflags REQUIRED<span class=""p"">)</span>\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
rtshell,http://rosindex.github.io/r/rtshell/,"jade,kinetic,indigo",,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">=======\nrtshell\n=======\n\nIntroduction\n============\n\nrtshell provides commands used to manage individual RT components and\nmanagers, as well as complete RT Systems. It can be used with the\nOpenRTM-aist middleware or middlewares that use a compatible CORBA-based\nintrospection system.\n\nMany of the commands allow components and managers running on\nnameservers to be treated like a file system. Directories can be\nentered, components can be cat\'d and activated/deactivated/reset,\nconnections made and removed, and so on.\n\nOther commands are used in conjunction with RtsProfile XML/YAML files to\nmanage complete RT Systems. These are rtresurrect, rtteardown, rtcryo,\nrtstart and rtstop.\n\nThe commands are aimed at users of OpenRTM-aist who wish to manage\ncomponents on low-resource systems, systems where a GUI is not available\n(particularly where no network connection is available to manage\ncomponents from another computer), as well as those who face other\ndifficulties using RTSystemEditor.  Being familiar with using a\ncommand-line is a benefit when using these commands of rtshell.\n\nThis software is developed at the National Institute of Advanced\nIndustrial Science and Technology. Approval number\nH23PRO-1214. The development was financially supported by\nthe New Energy and Industrial Technology Development Organisation\nProject for Strategic Development of Advanced Robotics Elemental\nTechnologies.  This software is licensed under the Eclipse Public\nLicense -v 1.0 (EPL). See LICENSE.txt.\n\n\nRequirements\n============\n\nrtshell requires rtctree 3.0. It must be installed for the commands to\nfunction.\n\nThe commands that work with RtsProfile files require rtsprofile 2.0. It\nmust be installed for these commands to function/\n\nrtshell uses the new string formatting operations that were introduced\nin Python 2.6. It will not function with an earlier version of Python.\nIt has not been tested with Python 3 and it is likely that several\nchanges will be necessary to make it function using this version of\nPython.\n\nrtprint, rtinject and rtlog require the Python version of OpenRTM-aist.\n\nFor Ubuntu users, if you are using a version of Ubuntu prior to 9.04,\nyou will need to install a suitable Python version by hand. You may want\nto consider upgrading to Ubuntu 9.04 or later (10.04 offers LTS).\n\n\nInstallation\n============\n\nThere are several methods of installation available:\n\n  1. Download the source from either the repository (see ""Repository,""\n  below) or a source archive, extract it somewhere, and run the commands\n  from that directory.\n\n  2. Download the source from either the repository (see ""Repository,""\n  below) or a source archive, extract it somewhere, and install it into\n  your Python distribution:\n\n    a) Extract the source, e.g. to a directory ~/rtshell::\n\n      $ cd /home/blurgle/src/\n      $ tar -xvzf rtshell-3.0.0.tar.gz\n\n    b) Run setup.py to install rtshell to your default Python\n    installation::\n\n     $ python setup.py install\n\n    c) If necessary, set environment variables. These should be set by\n    default, but if not you will need to set them yourself. On Windows,\n    you will need to ensure that your Python site-packages directory is\n    in the PYTHONPATH variable and the Python scripts directory is in\n    the PATH variable.  Typically, these will be something like\n    ``C:\\Python26\\Lib\\site-packages\\`` and ``C:\\Python26\\Scripts\\``,\n    respectively (assuming Python 2.6 installed in ``C:\\Python26\\``).\n\n  3. Use the Windows installer. This will perform the same job as running\n  setup.py (see #2), but saves opening a command prompt. You may still need to\n  add paths to your environment variables (see step c, above).\n\n  4. In non-Windows operating systems, you must source the shell support\n  file to gain full functionaliy. Amongst other things, rtcwd will not\n  work without sourcing this file. You can find this file at\n  ``${prefix}/share/rtshell/shell_support`` (``${prefix}`` is the\n  directory where you installed rtshell). You can source it by running\n  the following command (assuming rtshell has been installed to\n  ``/usr/local``)::\n\n   source /usr/local/share/rtshell/shell_support\n\n  So that you don\'t have to run this command every time you open a\n  terminal, you can add it to your shell\'s startup file. For example, if\n  you are using a bash shell and installed rtshell to ``/usr/local``, add\n  the following line to the ``.bashrc`` file in your home directory::\n\n    source /usr/local/share/rtshell/shell_support\n\n\nRepository\n==========\n\nThe latest source is stored in a Git repository at github, available at\n``http://github.com/gbiggs/rtshell``. You can download it as a zip file\nor tarball by clicking the ""Download Source"" link in the top right of\nthe page.  Alternatively, use Git to clone the repository. This is\nbetter if you wish to contribute patches::\n\n  $ git clone git://github.com/gbiggs/rtshell.git\n\n\nDocumentation\n=============\n\nDocumentation is available in the form of man pages (on Windows, these\nare available as HTML files). These will be installed under\n``${prefix}/share/man``.  You must add this folder to your system\'s\n``$MANPATH`` environment variable to be able to use them. For example,\nif you installed rtshell into /usr/local, add the following line to your\n``.bashrc``::\n\n  export MANPATH=/usr/local/share/man:${MANPATH}\n\n\nRunning the tests\n=================\n\nThe command tests can be run from the source directory using a command\nlike the following::\n\n~/src/rtshell $ ./test/test_cmds.py ~/share/OpenRTM-aist/examples/rtcs/\n\nThe argument to the test_cmds.py command is a directory containing RTC\nshared libraries that can be loaded into a manager. It must contain the\nlibraries for Motor, Controller and Sensor.\n\nAn individual command\'s tests can be run by specifying those tests after\nthe command. For example::\n\n$ ./test/test_cmds.py ~/share/OpenRTM-aist/examples/rtcs/ rtactTests\n\nThis will run only the tests for the rtact command.\n\n\nChangelog\n=========\n\n4.0\n---\n\n- Fixed saving and restoring connection properties.\n- Fixed disabling output of colour codes on Windows\n- Adapt to OpenRTM\'s new data type specification method.\n- Changed all os.sep occurrences to \'/\' for consistency with URLs.\n- New command: rtvlog (Display RT Component log events).\n- rtact/rtdeact/rtreset: Allow changing multiple components at once.\n- rtcomp: Support managing compositions of remote components.\n- rtcon: Support making connections involving three or more ports.\n- rtdis: Support removing connections involving three or more ports.\n- rtlog: Added end pointer to simpkl log format to speed up searches.\n- rtmgr: Support corbaloc:: direct connection to managers.\n- rtmgr: Allow multiple occurrences of any commands.\n- rtmgr: Execute commands in the order specified.\n\n3.0.1\n-----\n\n- Fixed #13: Error with unknown ports when saving systems using rtcryo.\n- Fixed #14/#15: Properly handle data types that include versions and IDL\n  paths in rtprint.\n- Fixed #16: Handle component instance names that include parantheses.\n\n3.0\n---\n\n- Merged rtcshell and rtsshell into a single toolkit.\n- Added complete documentation for every command (man pages, HTML, PDF).\n- New command: rtdoc (Print component documentation - thanks to Yosuke\n  Matsusaka).\n- New command: rtexit (Make a component exit).\n- New command: rtlog (Log and replay data streams).\n- New command: rtcheck (Check a system matches an RtsProfile file).\n- New command: rtcomp (Create composite components).\n- New command: rtstodot (Visualise RT Systems - thanks to Yosuke Matsusaka).\n- New command: rtvis\n- rtconf bash completion now completes set names, parameter names and values.\n- Merged rtcwd and bash_completion bash files into a single file.\n- Overhauled rtconf command line, added option to get a parameter value\n  directly.\n- Handle zombies properly.\n- Display zombies in rtls.\n- Delete zombies in rtdel (including all zombies found).\n- Support path filters in rtctree to speed up tree creation.\n- rtcat: Option to print a single port\'s information.\n- rtcat: Changes --ll to -ll.\n- rtcat: Display information about composite components.\n- rtcryo: Print RtsProfile to standard output by default.\n- rtdis: Disconnect-by-ID allows removing only one connection.\n- rtinject/rtprint: Added support for user data types.\n- rtprint: Option to exit after receiving one round of data.\n- rtprint: Added support for user-defined formatters.\n- rtprint: Added ability to print raw Python code.\n- rtinject: Accept raw Python input from stdin.\n- rtresurrect: Don\'t recreate existing connections.\n- rtteardown: Fail if the connector ID doesn\'t match.\n- rtresurrect/rtstart/rtstop/rtteardown: Accept input from standard input.\n- Refactored former rtsshell commands into rtshell-style libraries.\n- Added tests.\n\n\nrtcshell-2.0\n------------\n\n- Fixes for Windows\n- Fixed problems handling paths referencing parent directories\n- New command: rtdel\n- New command: rtinject\n- New command: rtprint\n- rtcat: Print the number of unknown connections\n- Major refactoring: all commands can now be imported and called from Python\n  scripts easily\n- New Bash completion script (thanks to Keisuke Suzuki)\n- Support csh in rtcwd\n- rtcat: Print new information available from rtctree for execution contexts\n- rtls: Change recurse option from -r to -R to match ls\n- rtls: Handle unknown objects; display them like dead files\n\nrtsshell-2.0\n------------\n\n- Added bash-completion script.\n- Added planning capability.\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">=======\nRTShell\n=======\n\nIntroduction\n============\n\nRTShell provides commands used to manage individual RT components and\nmanagers, as well as complete RT Systems. It can be used with the\nOpenRTM-aist middleware or middlewares that use a compatible CORBA-based\nintrospection system.\n\nMany of the commands allow components and managers running on\nnameservers to be treated like a file system. Directories can be\nentered, components can be cat\'d and activated/deactivated/reset,\nconnections made and removed, and so on.\n\nOther commands are used in conjunction with RtsProfile XML/YAML files to\nmanage complete RT Systems. These are rtresurrect, rtteardown, rtcryo,\nrtstart and rtstop.\n\nThe commands are aimed at users of OpenRTM-aist who wish to manage\ncomponents on low-resource systems, systems where a GUI is not available\n(particularly where no network connection is available to manage\ncomponents from another computer), as well as those who face other\ndifficulties using RTSystemEditor.  Being familiar with using a\ncommand-line is a benefit when using these commands of RTShell.\n\nThis software is developed at the National Institute of Advanced\nIndustrial Science and Technology. Approval number\nH23PRO-1214. The development was financially supported by\nthe New Energy and Industrial Technology Development Organisation\nProject for Strategic Development of Advanced Robotics Elemental\nTechnologies.\n\nThis software is licensed under the GNU Lesser General Public License version 3\n(LGPL3). See LICENSE.txt.\n\nRequirements\n============\n\nomniORB-py 4.x is required.\n\nRTShell requires rtctree. It must be installed for the commands to function.\n\nThe commands that work with RtsProfile files require rtsprofile. It must be\ninstalled for these commands to function/\n\nRTShell requires Python 2.7. It will not function with an earlier version of\nPython. It has not been tested with Python 3 and it is likely that several\nchanges will be necessary to make it function using this version of Python.\n\nrtprint, rtinject and rtlog require the Python version of OpenRTM-aist.\n\nSphinx must be installed to build the documentation, if installing from source\n(method 2).\n\nIf RTShell is installed using pip (method 1, below), RTCTree and RTSProfile\nwill be installed automatically. omniORB-py and OpenRTM-python must still be\ninstalled manually.\n\n\nInstallation\n============\n\nThere are several methods of installation available:\n\n1. (Preferred method) Use pip to install the PyPi package.\n\n a. Install pip if it is not already installed.\n    See https://pip.pypa.io/en/latest/installing/\n\n b. Execute the following command to install RTShell::\n\n    $ pip install rtshell\n\n c. Execute the post-installation setup::\n\n    $ rtshell_post_install\n\n d. On Windows, you will need to ensure that your Python scripts directory is\n    in the PATH variable.  Typically, this will be something like\n    ``C:\\Python27\\Scripts\\`` (assuming Python 2.7 installed in\n    ``C:\\Python27\\``).\n\n2. Download the source from either the repository (see ""Repository,"" below) or\n   a source archive, extract it somewhere, and install it into your Python\n   distribution:\n\n a. Extract the source, e.g. to a directory ~/rtshell::\n\n    $ cd /home/blurgle/src/\n    $ tar -xvzf rtshell.tar.gz\n\n b. Run setup.py to install RTShell to your default Python installation::\n\n    $ python setup.py install\n\n c. Execute the post-installation setup::\n\n    $ rtshell_post_install\n\n d. On Windows, you will need to ensure that your Python scripts directory is\n    in the PATH variable.  Typically, this will be something like\n    ``C:\\Python27\\Scripts\\`` (assuming Python 2.7 installed in\n    ``C:\\Python27\\``).\n\n3. On Windows, use the Windows installer.\n\n\nRepository\n==========\n\nThe latest source is stored in a Git repository at github, available at\n``http://github.com/gbiggs/rtshell``. You can download it as a zip file or\ntarball by clicking the ""Download Source"" link on that page. Alternatively, use\nGit to clone the repository. This is better if you wish to contribute patches::\n\n  $ git clone git://github.com/gbiggs/rtshell.git\n\n\nDocumentation\n=============\n\nDocumentation is available in the form of man pages (on Windows, these\nare available as HTML files). These will be installed under\n``${prefix}/share/man``.  You must add this folder to your system\'s\n``$MANPATH`` environment variable to be able to use them. For example,\nif you installed RTShell into /home/blag, add the following line to your\n``.bashrc``::\n\n  export MANPATH=/home/blag/share/man:${MANPATH}\n\n\nRunning the tests\n=================\n\nThe command tests can be run from the source directory using a command\nlike the following::\n\n  ~/src/rtshell $ ./test/test_cmds.py ~/share/OpenRTM-aist/examples/rtcs/\n\nThe argument to the test_cmds.py command is a directory containing RTC\nshared libraries that can be loaded into a manager. It must contain the\nlibraries for Motor, Controller and Sensor.\n\nAn individual command\'s tests can be run by specifying those tests after\nthe command. For example::\n\n  $ ./test/test_cmds.py ~/share/OpenRTM-aist/examples/rtcs/ rtactTests\n\nThis will run only the tests for the rtact command.\n\n\nCreating wheels\n===============\n\nTo create a redistributable wheel package, run the following command:\n\n  $ python setup.py bdist_wheel -k\n\n\nChangelog\n=========\n\n4.1\n---\n\n- Switched setup script from distutils to setuptools\n- Dropped support for Python 2.6\n\n4.0\n---\n\n- Fixed saving and restoring connection properties.\n- Fixed disabling output of colour codes on Windows\n- Adapt to OpenRTM\'s new data type specification method.\n- Changed all os.sep occurrences to \'/\' for consistency with URLs.\n- New command: rtvlog (Display RT Component log events).\n- rtact/rtdeact/rtreset: Allow changing multiple components at once.\n- rtcomp: Support managing compositions of remote components.\n- rtcon: Support making connections involving three or more ports.\n- rtdis: Support removing connections involving three or more ports.\n- rtlog: Added end pointer to simpkl log format to speed up searches.\n- rtmgr: Support corbaloc:: direct connection to managers.\n- rtmgr: Allow multiple occurrences of any commands.\n- rtmgr: Execute commands in the order specified.\n\n3.0.1\n-----\n\n- Fixed #13: Error with unknown ports when saving systems using rtcryo.\n- Fixed #14/#15: Properly handle data types that include versions and IDL\n  paths in rtprint.\n- Fixed #16: Handle component instance names that include parantheses.\n\n3.0\n---\n\n- Merged rtcshell and rtsshell into a single toolkit.\n- Added complete documentation for every command (man pages, HTML, PDF).\n- New command: rtdoc (Print component documentation - thanks to Yosuke\n  Matsusaka).\n- New command: rtexit (Make a component exit).\n- New command: rtlog (Log and replay data streams).\n- New command: rtcheck (Check a system matches an RtsProfile file).\n- New command: rtcomp (Create composite components).\n- New command: rtstodot (Visualise RT Systems - thanks to Yosuke Matsusaka).\n- New command: rtvis\n- rtconf bash completion now completes set names, parameter names and values.\n- Merged rtcwd and bash_completion bash files into a single file.\n- Overhauled rtconf command line, added option to get a parameter value\n  directly.\n- Handle zombies properly.\n- Display zombies in rtls.\n- Delete zombies in rtdel (including all zombies found).\n- Support path filters in rtctree to speed up tree creation.\n- rtcat: Option to print a single port\'s information.\n- rtcat: Changes --ll to -ll.\n- rtcat: Display information about composite components.\n- rtcryo: Print RtsProfile to standard output by default.\n- rtdis: Disconnect-by-ID allows removing only one connection.\n- rtinject/rtprint: Added support for user data types.\n- rtprint: Option to exit after receiving one round of data.\n- rtprint: Added support for user-defined formatters.\n- rtprint: Added ability to print raw Python code.\n- rtinject: Accept raw Python input from stdin.\n- rtresurrect: Don\'t recreate existing connections.\n- rtteardown: Fail if the connector ID doesn\'t match.\n- rtresurrect/rtstart/rtstop/rtteardown: Accept input from standard input.\n- Refactored former rtsshell commands into RTShell-style libraries.\n- Added tests.\n\n\nrtcshell-2.0\n------------\n\n- Fixes for Windows\n- Fixed problems handling paths referencing parent directories\n- New command: rtdel\n- New command: rtinject\n- New command: rtprint\n- rtcat: Print the number of unknown connections\n- Major refactoring: all commands can now be imported and called from Python\n  scripts easily\n- New Bash completion script (thanks to Keisuke Suzuki)\n- Support csh in rtcwd\n- rtcat: Print new information available from rtctree for execution contexts\n- rtls: Change recurse option from -r to -R to match ls\n- rtls: Handle unknown objects; display them like dead files\n\nrtsshell-2.0\n------------\n\n- Added bash-completion script.\n- Added planning capability.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
orne_maps,http://rosindex.github.io/r/orne_maps/,indigo,orne_maps,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""orne_maps"">orne_maps</h1>\n\n<p>The repository provides sharing maps for Tsukuba Challenge.</p>\n</div>\n\n            \n          </div>'"
geometry,http://rosindex.github.io/r/geometry/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo","eigen_conversions,geometry,kdl_conversions,tf,tf_conversions,angles,bullet,eigen,kdl","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pugixml,http://rosindex.github.io/r/pugixml/,"jade,indigo",pugixml,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pugixml"">pugixml</h1>\n\n<p>This repository is a cmake wrapper, that can be used in ROS for the library pugixml: <a href=""http://pugixml.org/"">http://pugixml.org/</a>.\nCurrent version of library pugixml: 1.7</p>\n\n<h1 id=""table-of-contents"">Table of contents</h1>\n\n<ul>\n<li><a href=""#disclaimer"">Disclaimer</a></li>\n<li>\n<a href=""#repository-information"">Repository information</a>\n\n<ul>\n<li><a href=""#packages"">Packages</a></li>\n<li><a href=""#libraries-and-executables-generated-by-this-repository"">Libraries and executables generated by this repository</a></li>\n<li><a href=""#branches"">Branches</a></li>\n</ul>\n</li>\n<li>\n<a href=""#repository-requirements-and-dependencies"">Repository requirements and dependencies</a>\n\n<ul>\n<li><a href=""#system-requirements-and-compatibility"">System Requirements and Compatibility</a></li>\n<li>\n<a href=""#dependencies"">Dependencies</a>\n\n<ul>\n<li><a href=""#additional-system-dependencies"">Additional System Dependencies</a></li>\n<li><a href=""#ros-dependencies"">ROS Dependencies</a></li>\n<li><a href=""#ros-dependencies"">Extra ROS Dependencies</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<a href=""#installation-instructions"">Installation Instructions</a>\n\n<ul>\n<li><a href=""#pre-requirements"">Pre-requirements</a></li>\n<li><a href=""#installation-steps"">Installation steps</a></li>\n</ul>\n</li>\n<li><a href=""#documentation"">Documentation</a></li>\n<li><a href=""#license"">License</a></li>\n<li>\n<a href=""#contributors"">Contributors</a>\n\n<ul>\n<li><a href=""#authors-/-maintainers-/-past-contributors"">Authors / Maintainers / Past contributors</a></li>\n<li><a href=""#contact-information"">Contact information</a></li>\n<li><a href=""#new-contributors"">New contributors</a></li>\n</ul>\n</li>\n<li><a href=""#acknowledgments"">Acknowledgments</a></li>\n</ul>\n\n<h1 id=""disclaimer"">Disclaimer</h1>\n\n<p>You are using this software at your own risk. The authors decline any responsibility for personal injuries and/or property damage.</p>\n\n<h1 id=""repository-information"">Repository information</h1>\n\n<h2 id=""packages"">Packages</h2>\n\n<p>This repository is formed by one single ROS packages: </p>\n\n<ul>\n<li>pugixml: cmake wrapper, that can be used in ROS, for the library pugixml: <a href=""http://pugixml.org/"">http://pugixml.org/</a>\n</li>\n</ul>\n\n<p>Note that the use of ROS is optional.</p>\n\n<h2 id=""libraries-and-executables-generated-by-this-repository"">Libraries and executables generated by this repository</h2>\n\n<p>This repository generates:</p>\n\n<ul>\n<li>Libraries: libpugixml.a</li>\n<li>Executables: none</li>\n</ul>\n\n<h2 id=""repository-branches"">Repository Branches</h2>\n\n<p>This repository has the following branches:</p>\n\n<ul>\n<li>Master: Catkin version of the package.</li>\n</ul>\n\n<h1 id=""repository-requirements-and-dependencies"">Repository requirements and dependencies</h1>\n\n<h2 id=""system-requirements-and-compatibility"">System Requirements and Compatibility</h2>\n\n<p>This package is running under:</p>\n\n<ul>\n<li>Ubuntu: 14.04 and above</li>\n<li>ROS (optional): Indigo and above with Catkin</li>\n</ul>\n\n<p>This package has been tested under:</p>\n\n<ul>\n<li>Ubuntu: 14.04</li>\n<li>ROS (optional): Indigo and Jade with Catkin</li>\n</ul>\n\n<h2 id=""dependencies"">Dependencies</h2>\n\n<h3 id=""additional-system-dependencies"">Additional System Dependencies</h3>\n\n<p>This metapackage requires:</p>\n\n<ul>\n<li>Nothing special, just a C++ compiler and cmake.</li>\n</ul>\n\n<h3 id=""ros-dependencies"">ROS Dependencies</h3>\n\n<p>This metapackage depends on the following ROS packages:</p>\n\n<ul>\n<li>Nothing special, optional.</li>\n</ul>\n\n<h1 id=""installation-instructions"">Installation Instructions</h1>\n\n<h2 id=""pre-requirements"">Pre-requirements</h2>\n\n<p>Install all the system and ROS dependencies (for example, using rosdep install, or apt-get, or directly from source).</p>\n\n<h2 id=""installation-steps"">Installation steps</h2>\n\n<p>Installation on ROS environment:</p>\n\n<ol>\n<li>Create your ROS catkin workspace as usual.</li>\n<li>Inside your workspace, download the pugixml repository:\ngit clone <a href=""https://github.com/joselusl/pugixml"">https://github.com/joselusl/pugixml</a> ./</li>\n<li>Compile your ROS catkin workspace as usual.</li>\n</ol>\n\n<p>Installation outside ROS environment:</p>\n\n<ol>\n<li>Create your workspace as usual.</li>\n<li>Inside your workspace, download the pugixml repository:\ngit clone <a href=""https://github.com/joselusl/pugixml"">https://github.com/joselusl/pugixml</a> ./</li>\n<li>Compile your workspace as usual using cmake.</li>\n</ol>\n\n<h1 id=""documentation"">Documentation</h1>\n\n<p>For more information related to the pugixml library, please refer to: <a href=""http://pugixml.org/"">http://pugixml.org/</a>.</p>\n\n<p>This repository is the continuation of the work done by Jose Luis Sanchez-Lopez to use the pugixml library in ROS, initied in January 2013. The first version was splitted in the following repositories (already outdated and deprecated) and its dependencies:</p>\n\n<ul>\n<li><a href=""https://bitbucket.org/joselusl/lib_pugixml"">https://bitbucket.org/joselusl/lib_pugixml</a></li>\n</ul>\n\n<p>Unfortunately this repository has no more extra documentation. </p>\n\n<p>If this repository gets the interest of the community, we will continue adding information depending on the questions made by its users.</p>\n\n<h1 id=""license"">License</h1>\n\n<p>All additional distributed software are subject to the 3-clause BSD license. See the LICENSE file. </p>\n\n<p>Please, refer to <a href=""http://pugixml.org/"">http://pugixml.org/</a> to check the license of the pugixml library (MIT License).</p>\n\n<h1 id=""contributors"">Contributors</h1>\n\n<h2 id=""authors-maintainers-past-contributors"">Authors / Maintainers / Past contributors</h2>\n\n<p>List of people that have contributed:</p>\n\n<ul>\n<li>Jose Luis Sanchez-Lopez (<a href=""mailto:jl.sanchez@upm.es"">jl.sanchez@upm.es</a>): Main Author, Maintainaince, Debugging, Testing and Documentation.</li>\n</ul>\n\n<h2 id=""contact-information"">Contact information</h2>\n\n<p>Questions, suggestions, requests, ... whatever. Feel free to contact me (Jose Luis Sanchez-Lopez - <a href=""mailto:jl.sanchez@upm.es"">jl.sanchez@upm.es</a>).</p>\n\n<h2 id=""new-contributors"">New contributors</h2>\n\n<p>You are very welcome to contribute to this repository by opening a pull request via Github.</p>\n\n<h1 id=""acknowledgments"">Acknowledgments</h1>\n\n<p>Special thanks to:</p>\n\n<ul>\n<li>Computer Vision Group (CVG): <a href=""www.vision4uav.eu"">www.vision4uav.eu</a>\n</li>\n<li>Centre for Automation and Robotics (CAR): <a href=""http://www.car.upm-csic.es/"">http://www.car.upm-csic.es/</a>\n</li>\n<li>Consejo Superior de Investigaciones Cientificas (CSIC): <a href=""http://www.csic.es"">http://www.csic.es</a>\n</li>\n<li>Universidad Politecnica de Madrid (UPM): <a href=""http://www.upm.es"">http://www.upm.es</a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
arbotix,http://rosindex.github.io/r/arbotix/,"hydro,jade,groovy,indigo","arbotix,arbotix_controllers,arbotix_firmware,arbotix_msgs,arbotix_python,arbotix_sensors","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""arbotix-drivers"">Arbotix Drivers</h2>\n\n<p>This repository contains the Arbotix ROS drivers, catkinized, and ready for ROS Groovy and newer.</p>\n\n<h2 id=""changes-for-groovy-version-0-8-x"">Changes for Groovy (version 0.8.x)</h2>\n\n<p>Several executables are now installed in /opt/ros/groovy/bin allowing you to run them without using rosrun:\n * controllerGUI.py is now arbotix_gui\n * terminal.py is now arbotix_terminal</p>\n\n<p>Other executables have been renamed to alleviate any name collisions:\n * driver.py is now renamed arbotix_driver</p>\n</div>\n\n            \n          </div>'"
behavior_tree,http://rosindex.github.io/r/behavior_tree/,"jade,indigo","behavior_tree,behavior_tree_core,behavior_tree_leaves","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-behavior-tree"">ROS-Behavior-Tree <img src=""https://img.shields.io/dub/l/vibe-d.svg"" alt=""License MIT"">\n</h1>\n\n<p><img src=""https://img.shields.io/badge/version-v1.1-orange.svg"" alt=""Version""> <br> \nA ROS behavior tree library. The leaf nodes (user defined) can be either in <code>C++</code> or <code>python</code>.</p>\n\n<h2 id=""info"">INFO</h2>\n\n<p>Contains 2 packages: behavior_tree_core and behavior_tree_leaves.</p>\n\n<p>behavior_tree_core: Contains the core BT source code.</p>\n\n<p>behavior_tree_leaves: Contains action and condition specifications for BT leaf nodes</p>\n\n<p>User manual available in the project folder (BTUserManual.pdf):</p>\n\n<h2 id=""build-status"">BUILD STATUS</h2>\n\n<table align=""center"">\n  <tr>\n    <th width=""9%""></th>\n    <th width=""13%"">Hydro</th>\n    <th width=""13%"">Indigo</th>\n    <th width=""13%"">Jade</th>\n  </tr>\n    <td><b>Release</b></td>\n    <td align=""center"">\n      <img src=""http://build.ros.org/view/Jdev/job/Jdev__behavior_tree__ubuntu_trusty_amd64/badge/icon"">\n    </td>\n    <td align=""center"">\n      <img src=""http://build.ros.org/view/Jdev/job/Jdev__behavior_tree__ubuntu_trusty_amd64/badge/icon"">\n    </td>\n    <td align=""center"">\n      <img src=""http://build.ros.org/view/Jdev/job/Jdev__behavior_tree__ubuntu_trusty_amd64/badge/icon"">\n    </td>\n\n</table>\n\n<h2 id=""dependencies"">DEPENDENCIES</h2>\n\n<p>Regarding visualization purposes:\n* <a href=""https://www.opengl.org/"">Opengl</a>\n* <a href=""https://www.opengl.org/resources/libraries/glut/"">Glut</a></p>\n\n<p>Regarding thread usage:\n* <a href=""http://www.boost.org/"">Boost</a></p>\n\n<h2 id=""bt-nodes-support"">BT NODES SUPPORT</h2>\n\n<p><strong>Selector:</strong> Selector nodes are used to find and execute the first child that does not fail. A Selector node will return immediately with a status code of success or running when one of its children returns success or running. The children are ticked in order of importance, from <code>left</code> to <code>right</code>.</p>\n\n<p><strong>Sequence:</strong> Sequence nodes are used to find and execute the first child that has not yet succeeded. A sequence node will return immediately with a status code of <code>failure</code> or <code>running</code> when one of its children returns failure or running. The children are ticked in order, from <code>left</code> to <code>right</code>.</p>\n\n<p><strong>Parallel:</strong> The parallel node ticks its children in parallel and returns success if <code>M \xe2\x89\xa4 N</code> children return success, it returns failure if <code>N \xe2\x88\x92 M + 1</code> children return failure, and it returns running otherwise.</p>\n\n<p><strong>Decorator:</strong> The decorator node manipulates the return status of its child according to the policy defined by the user (e.g. it inverts the success/failure status of the child). In this library the decorators implemented are the two common ones: <em>Decorator Retry</em> which retries the execution of a node if this fails; and <em>Decorator Negation</em> That inverts the Success/Failure outcome.</p>\n\n<p><strong>Action:</strong> An Action node performs an action, and returns Success if the action is completed, Failure if it can not be completed and Running if completion is under way.</p>\n\n<p><strong>Condition:</strong> A Condition node determines if a desired condition <code>c</code> has been met. Conditions are technically a subset of the Actions, but are given a separate category and graphical symbol to improve readability of the BT and emphasize the fact that they never return running and do not change any internal states/variables of the BT.</p>\n\n<h2 id=""setup"">SETUP</h2>\n\n<p>The first step to use BT++ is to retrieve its source code. You can either download it \nhere (<a href=""https://github.com/miccol/ROS-Behavior-Tree"">https://github.com/miccol/ROS-Behavior-Tree</a>) or clone the repository:</p>\n\n<p><code>$ cd /path/to/catkin_ws/src</code> <br>\n<code>$ git clone https://github.com/miccol/ROS-Behavior-Tree.git</code><br>\n<code>$ mv Behavior\xe2\x88\x92Tree behavior_tree</code> <br></p>\n\n<p>Once you have the repository. Compile the library:</p>\n\n<p><code>$ cd /path/to/catkin_ws/</code> <br>\n<code>$ catkin_make</code> <br></p>\n\n<p>Check the installation by launching an example.</p>\n\n<p><code>$ roslaunch behavior_tree_leaves test_behavior_tree.launch</code> <br></p>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The MIT License (MIT)</p>\n\n<p>Copyright (c) 2014-2016 Michele Colledanchise</p>\n\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the ""Software""), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n\n<p>THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n</div>\n\n            \n          </div>'"
battery_monitor_rmp,http://rosindex.github.io/r/battery_monitor_rmp/,"jade,indigo",battery_monitor_rmp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""battery_monitor_rmp"">battery_monitor_rmp <a href=""https://travis-ci.org/GT-RAIL/battery_monitor_rmp""><img src=""https://api.travis-ci.org/GT-RAIL/battery_monitor_rmp.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""monitor-for-the-segway-batteries"">Monitor for the Segway Batteries</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/battery_monitor_rmp"">the ROS wiki</a>.</p>\n\n<p>Monitors the Segway batteries and uses espeak to verbalize the state fo the batteries when they are getting low.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
carl_safety,http://rosindex.github.io/r/carl_safety/,indigo,carl_safety,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""carl_safety"">carl_safety <a href=""https://travis-ci.org/GT-RAIL/carl_safety""><img src=""https://api.travis-ci.org/GT-RAIL/carl_safety.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""remote-user-safety-nodes-for-carl"">Remote User Safety Nodes for CARL</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/carl_safety"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
iot_bridge,http://rosindex.github.io/r/iot_bridge/,"jade,indigo",iot_bridge,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p>The iot_bridge provides a  bridge between the Robot Operating System (ROS) and the OpenHAB Home-Automation system. </p>\n\n<ul>\n<li><p>ROS is an extremely powerful open source set of libraries and tools that help you build robot applications - providing drivers and state-of-the-art algorithms for vision, movement, etc.\n<a href=""http://www.ros.org/"">ros.org</a></p></li>\n<li><p>OpenHAB is an open source system that connects to virtually any intelligent device, such as smoke detectors, motion detectors, temperature sensors, security systems, TV/audio, fingerprint scanners, lighting, 1-Wire, Wemo, CUPS, DMX, KNX, openpaths, Bluetooth, MQTT, Z-Wave, telephony, Insteon, weather sensors, and web services such as Twitter, etc. ROS also provides a basic Web GUI and Iphone/Android app for setting and dynamically viewing values.\n<a href=""http://www.openhab.org/features-tech.html"">openhab.org/features</a></p></li>\n</ul>\n\n<p>Combine the two and you have an incredibly powerful system.</p>\n\n<h2 id=""give-your-robot-knowledge-of-the-wider-world"">Give your robot knowledge of the wider world</h2>\n\n<p>Use Cases:</p>\n\n<ul>\n<li>A motion detector in OpenHAB triggers and ROS dispatches the robot to the location to provide a video feed.</li>\n<li>ROS facial recognition recognizes a face at the door and OpenHAB unlocks the door.</li>\n<li>A Washing Machine indicates to OpenHAB that the load is complete and ROS dispatches a robot to move the laundry to the dryer.</li>\n<li>OpenHAB MQTT binding indicates that Sarah is approaching home and an OpenHAB sensor indicates that the  temperature is hot.  ROS dispatches the robot to bring Sarah\'s favorite beer.  OpenHAB turns on her favorite rock music and lowers the house temperature.</li>\n<li>A user clicks on the OpenHAB GUI on an IPAD and selects a new room location for the robot. The message is forwarded by the iot_bridge to ROS and ROS dispatches the robot.</li>\n</ul>\n\n<p>With the iot_bridge, any OpenHAB device (essentially any IoT device) can be easily setup to publish updates to the iot_updates topic in ROS, giving a ROS robot knowledge of any Home Automation device. ROS can publish to the openhab_set topic (or openhab_command) and the device in OpenHAB will be set to the new value (or act on the specified command).</p>\n\n<h2 id=""release-history"">Release History</h2>\n\n<p>v0.1 - Initial Release</p>\n\n<p>v0.8 - Renamed openhab_bridge to iot_bridge.  <em>NOTE:</em> the ROS topic names changed from openhab_* to iot_*.  Changed from long polling to regular polling.  This significantly improves reliabilty without much performance cost.</p>\n\n<h2 id=""for-more-information"">For more information</h2>\n\n<p><a href=""http://wiki.ros.org/iot_bridge"">ros.org/iot_bridge</a></p>\n</div>\n\n            \n          </div>'"
carl_estop,http://rosindex.github.io/r/carl_estop/,"jade,indigo",carl_estop,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""carl_estop"">carl_estop <a href=""https://travis-ci.org/GT-RAIL/carl_estop""><img src=""https://api.travis-ci.org/GT-RAIL/carl_estop.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""software-emergency-stop-for-the-carl-robot"">Software Emergency Stop for the CARL Robot</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/carl_estop"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/carl_estop/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>carl_estop is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
genmsg,http://rosindex.github.io/r/genmsg/,"hydro,fuerte,groovy,kinetic,jade,indigo",genmsg,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jaco_gazebo,http://rosindex.github.io/r/jaco_gazebo/,indigo,jaco_gazebo,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jaco_gazebo"">jaco_gazebo  <a href=""https://travis-ci.org/GT-RAIL/jaco_gazebo""><img src=""https://api.travis-ci.org/GT-RAIL/jaco_gazebo.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""gazebo-support-for-the-kinova-jaco-arm"">Gazebo Support for the Kinova JACO Arm</h4>\n\n<p>For full documentation, see <a href=""http://wiki.ros.org/jaco_gazebo"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
multisense_ros,http://rosindex.github.io/r/multisense_ros/,"hydro,jade,indigo","multisense,multisense_bringup,multisense_cal_check,multisense_description,multisense_lib,multisense_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">//Multisense ROS Driver\n//Copyright 2014\n//Carnegie Robotics, LLC\n//4501 Hatfield Street, Pittsburgh, PA 15201\n//http://www.carnegierobotics.com\n//\n//Redistribution and use in source and binary forms, with or without\n//modification, are permitted provided that the following conditions are met:\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//     * Neither the name of the Carnegie Robotics, LLC nor the\n//       names of its contributors may be used to endorse or promote products\n//       derived from this software without specific prior written permission.\n//\n//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND\n//ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n//WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n//DISCLAIMED. IN NO EVENT SHALL CARNEGIE ROBOTICS, LLC BE LIABLE FOR ANY\n//DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n//(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n//LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n//ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n//(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n//SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe Multisense ROS Driver supports both rosbuild and catkin. config.sh\nis used when switcing between the two build systems. \n\nCommandline usage for config.sh is:\n\n./config.sh &lt;build_system&gt;\n\nWhere build_system is either rosbuild or catkin \n\n\n\nFor additional information about the ROS driver please see https://support.carnegierobotics.com\n\nPlease direct any additional questions or concerns to support@carnegierobotics.com\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
m4atx_battery_monitor,http://rosindex.github.io/r/m4atx_battery_monitor/,"jade,indigo",m4atx_battery_monitor,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""m4atx_battery_monitor"">m4atx_battery_monitor <a href=""https://travis-ci.org/GT-RAIL/m4atx_battery_monitor""><img src=""https://api.travis-ci.org/GT-RAIL/m4atx_battery_monitor.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""battery-monitor-for-the-m4-atx-power-module"">Battery Monitor for the M4-ATX Power Module</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/m4atx_battery_monitor"">the ROS wiki</a>.</p>\n\n<p>The node reads in and publishes the status of the battery supply. It also verbalizes the battery low warnings using <code>espeak</code>.</p>\n\n<h3 id=""setup"">Setup</h3>\n\n<p><code>$ lsusb</code></p>\n\n<p>Find Microchip Technology, Inc. and mark down the bus and device numbers.</p>\n\n<p><code>$ sudo chmod a+rw /dev/bus/usb/[bus #]/[device #]</code></p>\n\n<p>Now the node will connect and run properly.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
libuvc,http://rosindex.github.io/r/libuvc/,"hydro,indigo",libuvc,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><code>libuvc</code> is a cross-platform library for USB video devices, built atop <code>libusb</code>.\nIt enables fine-grained control over USB video devices exporting the standard USB Video Class\n(UVC) interface, enabling developers to write drivers for previously unsupported devices,\nor just access UVC devices in a generic fashion.</p>\n\n<h2 id=""getting-and-building-libuvc"">Getting and Building libuvc</h2>\n\n<p>Prerequisites: You will need <code>libusb</code> and <a href=""http://www.cmake.org/"">CMake</a> installed.</p>\n\n<p>To build, you can just run these shell commands:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/ktossell/libuvc\ncd libuvc\nmkdir build\ncd build\ncmake ..\nmake &amp;&amp; sudo make install\n</code></pre></div>\n<p>and you\'re set! If you want to change the build configuration, you can edit <code>CMakeCache.txt</code>\nin the build directory, or use a CMake GUI to make the desired changes.</p>\n\n<h2 id=""developing-with-libuvc"">Developing with libuvc</h2>\n\n<p>The documentation for <code>libuvc</code> can currently be found at <a href=""https://int80k.com/libuvc/doc/"">https://int80k.com/libuvc/doc/</a>.</p>\n\n<p>Happy hacking!</p>\n</div>\n\n            \n          </div>'"
python_ethernet_rmp,http://rosindex.github.io/r/python_ethernet_rmp/,"jade,indigo",python_ethernet_rmp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""python_ethernet_rmp"">python_ethernet_rmp <a href=""https://travis-ci.org/GT-RAIL/python_ethernet_rmp""><img src=""https://api.travis-ci.org/GT-RAIL/python_ethernet_rmp.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""segway-rmp-ethernet-python-driver"">Segway RMP Ethernet Python Driver</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/python_ethernet_rmp"">the ROS wiki</a>.</p>\n\n<p>The code provided is from <a href=""http://rmp.segway.com/"">SEGWAY Inc.</a> and is a library adapted for catkin. WPI claims no authorship of the original code. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<p>A ROS wrapper is located at <a href=""https://github.com/WPI-RAIL/ros_ethernet_rmp"">ros_ethernet_rmp</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
rail_ceiling,http://rosindex.github.io/r/rail_ceiling/,"jade,indigo",rail_ceiling,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rail_ceiling"">rail_ceiling <a href=""https://travis-ci.org/GT-RAIL/rail_ceiling""><img src=""https://api.travis-ci.org/GT-RAIL/rail_ceiling.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""overhead-camera-system-for-tracking-ar-tags"">Overhead Camera System for Tracking AR Tags</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rail_ceiling"">the ROS wiki</a>.</p>\n\n<h3 id=""contributing"">Contributing</h3>\n\n<p>rail_ceiling includes pre-compiled URDF files. To properly contribute, do the following if you modify the calibration file:</p>\n\n<ul>\n<li><code>cd /path/to/rail_ceiling</code></li>\n<li><code>rosrun xacro xacro urdf/ceiling.urdf.xacro &gt; urdf/ceiling.urdf</code></li>\n</ul>\n\n<h3 id=""license"">License</h3>\n\n<p>rail_ceiling is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
rail_segmentation,http://rosindex.github.io/r/rail_segmentation/,"jade,indigo",rail_segmentation,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rail_segmentation"">rail_segmentation <a href=""https://travis-ci.org/GT-RAIL/rail_segmentation""><img src=""https://api.travis-ci.org/GT-RAIL/rail_segmentation.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""segmentation-functionality-from-the-rail-lab"">Segmentation Functionality from the RAIL Lab</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rail_segmentation"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>rail_segmentation is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS.md</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
rail_maps,http://rosindex.github.io/r/rail_maps/,"jade,fuerte,indigo",rail_maps,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rail_maps"">rail_maps <a href=""https://travis-ci.org/GT-RAIL/rail_maps""><img src=""https://api.travis-ci.org/GT-RAIL/rail_maps.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""maps-generated-by-the-rail-lab-at-wpi"">Maps Generated by the RAIL Lab at WPI</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rail_maps"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>rail_maps is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Author: Russell Toris -- rctoris@wpi.edu\n\nFor full documentation, see: http://www.ros.org/wiki/rail_maps\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rail_user_queue_manager,http://rosindex.github.io/r/rail_user_queue_manager/,"jade,indigo",rail_user_queue_manager,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rail_user_queue_manager"">rail_user_queue_manager <a href=""https://travis-ci.org/GT-RAIL/rail_user_queue_manager""><img src=""https://api.travis-ci.org/GT-RAIL/rail_user_queue_manager.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""server-side-ros-queue-node"">Server Side ROS Queue Node</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rail_user_queue_manager"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>queue_manager is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS.md</a> file for a full list of contributors.</p>\n\n<h3 id=""notes-from-peter"">Notes From Peter</h3>\n\n<p>Topics:\n - rms_queue - publishes for each user: user id, time left in queue (valid for non 1st user only), and time left in study (valid for 1st user only)</p>\n\n<p>Services:\n - update_queue - called by the web interface when someone: loads the webpage, reloads the webpage, exist the browser, or navigates to another website</p>\n\n<h3 id=""known-bugs"">Known Bugs</h3>\n\n<ul>\n<li>study time can go negative when all users leave the queue. This has never caused any inappropriate behavior though, since it only happens when everyone leaves</li>\n<li>study time described in the Ros_Queue object may not be respected, and will default to 10 minute trials. It should work but I has at times not worked. At least you know it\'s possible.</li>\n</ul>\n</div>\n\n            \n          </div>'"
rail_collada_models,http://rosindex.github.io/r/rail_collada_models/,"jade,indigo",rail_collada_models,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rail_collada_models"">rail_collada_models <a href=""https://travis-ci.org/GT-RAIL/rail_collada_models""><img src=""https://api.travis-ci.org/GT-RAIL/rail_collada_models.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""collada-models-used-and-developed-by-the-rail-lab"">Collada Models Used and Developed by the RAIL Lab</h4>\n\n<h3 id=""contributing"">Contributing</h3>\n\n<p>rail_collada_models includes minified versions of the 3D Collada models and their materials. To properly contribute after you modify a Collada model or materials, do the following:</p>\n\n<ul>\n<li><code>sudo apt-get install jpegoptim</code></li>\n<li><code>cd /path/to/rail_collada_models</code></li>\n<li><code>./scripts/minify.bash</code></li>\n</ul>\n\n<h3 id=""license"">License</h3>\n\n<p>rail_collada_models is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
rmp_msgs,http://rosindex.github.io/r/rmp_msgs/,"jade,indigo",rmp_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rmp_msgs"">rmp_msgs <a href=""https://travis-ci.org/GT-RAIL/rmp_msgs""><img src=""https://api.travis-ci.org/GT-RAIL/rmp_msgs.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""ros-messages-for-the-segway-rmp"">ROS Messages for the Segway RMP</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rmp_msgs"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
async_web_server_cpp,http://rosindex.github.io/r/async_web_server_cpp/,"hydro,jade,indigo",async_web_server_cpp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""async_web_server_cpp"">async_web_server_cpp <a href=""https://travis-ci.org/GT-RAIL/async_web_server_cpp""><img src=""https://api.travis-ci.org/GT-RAIL/async_web_server_cpp.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""asynchronous-web-websocket-server-in-c"">Asynchronous Web/WebSocket Server in C++</h4>\n\n<p>An implementation of an HTTP web server in C++ built on top of the <a href=""http://www.boost.org/doc/libs/1_57_0/doc/html/boost_asio.html"">Boost.Asio Library</a>.\nIt also provides the ability to handle websocket upgrade requests.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>async_web_server_cpp is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""async_web_server_cpp"">async_web_server_cpp <a href=""https://travis-ci.org/WPI-RAIL/async_web_server_cpp""><img src=""https://api.travis-ci.org/WPI-RAIL/async_web_server_cpp.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""asynchronous-web-websocket-server-in-c"">Asynchronous Web/WebSocket Server in C++</h4>\n\n<p>An implementation of an HTTP web server in C++ built on top of the <a href=""http://www.boost.org/doc/libs/1_57_0/doc/html/boost_asio.html"">Boost.Asio Library</a>.\nIt also provides the ability to handle websocket upgrade requests.</p>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/async_web_server_cpp"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/async_web_server_cpp/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>async_web_server_cpp is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
carl_demos,http://rosindex.github.io/r/carl_demos/,indigo,carl_demos,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""carl_demos"">carl_demos <a href=""https://travis-ci.org/GT-RAIL/carl_demos""><img src=""https://api.travis-ci.org/GT-RAIL/carl_demos.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""demo-applications-for-carl"">Demo Applications for CARL</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/carl_demos"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
carl_navigation,http://rosindex.github.io/r/carl_navigation/,indigo,carl_navigation,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""carl_navigation"">carl_navigation <a href=""https://travis-ci.org/GT-RAIL/carl_navigation""><img src=""https://api.travis-ci.org/GT-RAIL/carl_navigation.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""autonomous-navigation-capabilities-for-carl"">Autonomous Navigation Capabilities for CARL</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/carl_navigation"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>carl_navigation is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
carl_moveit,http://rosindex.github.io/r/carl_moveit/,indigo,carl_moveit,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""carl_moveit"">carl_moveit <a href=""https://travis-ci.org/GT-RAIL/carl_moveit""><img src=""https://api.travis-ci.org/GT-RAIL/carl_moveit.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""moveit-configuration-and-ros-interface-for-carl"">MoveIt! Configuration and ROS Interface for CARL</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/carl_moveit"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
carl_bot,http://rosindex.github.io/r/carl_bot/,indigo,"carl_bot,carl_bringup,carl_description,carl_dynamixel,carl_interactive_manipulation,carl_phidgets,carl_teleop,carl_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""carl_bot"">carl_bot <a href=""https://travis-ci.org/GT-RAIL/carl_bot""><img src=""https://api.travis-ci.org/GT-RAIL/carl_bot.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""carl-crowdsourcing-for-autonomous-robot-learning"">CARL (Crowdsourcing for Autonomous Robot Learning)</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/carl_bot"">the ROS wiki</a>.</p>\n\n<h3 id=""contributing"">Contributing</h3>\n\n<p><a href=""carl_description"">carl_description</a> includes minified versions of the 3D Collada models. To properly contribute, do the following:</p>\n\n<ul>\n<li><code>cd /path/to/carl_bot/carl_description/meshes</code></li>\n<li><code>xmllint --noblanks my_modified_mesh.dae &gt; my_modified_mesh.min.dae</code></li>\n</ul>\n\n<h3 id=""carl_phidgets"">carl_phidgets</h3>\n\n<p>This package is based on CCNY\'s <a href=""http://wiki.ros.org/phidgets_drivers"">phidgets_drivers</a> package.</p>\n\n<h2 id=""first-time-setup"">First Time Setup</h2>\n\n<p>To use the Phidgets IMU as a user other than root, you need to create a udev rule.  Create a file called <code>99-phidgets.rules</code>, with the following line:</p>\n\n<ul>\n<li><code>SUBSYSTEMS==""usb"", ACTION==""add"", ATTRS{idVendor}==""06c2"", ATTRS{idProduct}==""00[3-a][0-f]"", MODE=""666""</code></li>\n</ul>\n\n<p>Copy this file into the /etc/udev/rules.d directory.  You may need to reboot your computer for this to take effect.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>carl_bot is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
ros_ethernet_rmp,http://rosindex.github.io/r/ros_ethernet_rmp/,"jade,indigo",ros_ethernet_rmp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_ethernet_rmp"">ros_ethernet_rmp <a href=""https://travis-ci.org/GT-RAIL/ros_ethernet_rmp""><img src=""https://api.travis-ci.org/GT-RAIL/ros_ethernet_rmp.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""ros-wrapper-for-the-segway-rmp-ethernet-python-driver"">ROS Wrapper for the Segway RMP Ethernet Python Driver</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/ros_ethernet_rmp"">the ROS wiki</a>.</p>\n\n<p>The code modified from examples provided by <a href=""http://rmp.segway.com/"">SEGWAY Inc.</a>. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<p>This package serves primarily as a ROS wrapper for the <a href=""https://github.com/GT-RAIL/python_ethernet_rmp"">python_ethernet_rmp</a> package.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
ecl_navigation,http://rosindex.github.io/r/ecl_navigation/,"hydro,groovy,kinetic,jade,indigo","ecl_mobile_robot,ecl_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecl_navigation"">ecl_navigation</h1>\n\n<p>This stack aims to bring the common tools and algorithms needed to develop navigation algorithms, in particular slam. It does not focus on the end-point solution, rather the tools needed to create a variety of end-point solutions.</p>\n</div>\n\n            \n          </div>'"
innok_heros_gazebo,http://rosindex.github.io/r/innok_heros_gazebo/,indigo,innok_heros_gazebo,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ecl_manipulation,http://rosindex.github.io/r/ecl_manipulation/,"hydro,groovy,kinetic,jade,indigo","ecl,ecl_manipulation,ecl_manipulators","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecl_manipulation"">ecl_manipulation</h1>\n\n<p>Includes basic manipulation related structures as well as a few algorithms currently used at Yujin Robot.  </p>\n</div>\n\n            \n          </div>'"
rwt_config_generator,http://rosindex.github.io/r/rwt_config_generator/,"jade,indigo",rwt_config_generator,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ocl,http://rosindex.github.io/r/ocl/,"hydro,jade,indigo",ocl,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">  Orocos Component Library\n  ========================\n\nThis directory consists of a series of independent Orocos\ncomponents which can be used to build a control application.\n\n* Use \'make docapi dochtml\' or the online documentation\n  to get information about the components.\n\n* See doc/CMAKE-HELP.txt if you want to add a new component\n\n* See doc/PACKAGING if you want to build a source/binary package\n\n* See INSTALL if you want to build and install Orocos Components\n  on your system.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
tiago_robot,http://rosindex.github.io/r/tiago_robot/,indigo,"tiago_bringup,tiago_controller_configuration,tiago_description,tiago_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""tiago_robot"">tiago_robot</h1>\n\n<p>For more information please refer to <a href=""http://wiki.ros.org/Robots/TIAGo"">http://wiki.ros.org/Robots/TIAGo</a></p>\n\n<p>For technical questions please write to <a href=""mailto:tiago-support@pal-robotics.com"">tiago-support@pal-robotics.com</a></p>\n\n<p><img src=""http://wiki.ros.org/Robots/TIAGo?action=AttachFile&amp;do=get&amp;target=TIAGo_titanium_right.png"" width=""350""></p>\n</div>\n\n            \n          </div>'"
tiago_moveit_config,http://rosindex.github.io/r/tiago_moveit_config/,indigo,tiago_moveit_config,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""tiago_moveit_config"">tiago_moveit_config</h1>\n\n<p>For more information please refer to <a href=""http://wiki.ros.org/Robots/TIAGo"">http://wiki.ros.org/Robots/TIAGo</a></p>\n\n<p>For technical questions please write to <a href=""mailto:tiago-support@pal-robotics.com"">tiago-support@pal-robotics.com</a></p>\n\n<p><img src=""http://wiki.ros.org/Robots/TIAGo?action=AttachFile&amp;do=get&amp;target=TIAGo_titanium_right.png"" width=""350""></p>\n</div>\n\n            \n          </div>'"
tiago_simulation,http://rosindex.github.io/r/tiago_simulation/,indigo,"tiago_gazebo,tiago_hardware_gazebo,tiago_simulation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""tiago_simulation"">tiago_simulation</h1>\n\n<p>For more information please refer to <a href=""http://wiki.ros.org/Robots/TIAGo"">http://wiki.ros.org/Robots/TIAGo</a></p>\n\n<p>For technical questions please write to <a href=""mailto:tiago-support@pal-robotics.com"">tiago-support@pal-robotics.com</a></p>\n\n<p><img src=""http://wiki.ros.org/Robots/TIAGo?action=AttachFile&amp;do=get&amp;target=TIAGo_titanium_right.png"" width=""350""></p>\n</div>\n\n            \n          </div>'"
pi_trees,http://rosindex.github.io/r/pi_trees/,"hydro,indigo","pi_trees,pi_trees_lib,pi_trees_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>A Python/ROS package for implementing Behavior Trees.</p>\n</div>\n\n            \n          </div>'"
uos_rotunit,http://rosindex.github.io/r/uos_rotunit/,"hydro,indigo","uos_rotunit,uos_rotunit_driver,uos_rotunit_snapshotter,uos_rotunit_teleop","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_robot,http://rosindex.github.io/r/pr2_robot/,"hydro,fuerte,electric,groovy,diamondback,indigo","imu_monitor,pr2_bringup,pr2_camera_synchronizer,pr2_computer_monitor,pr2_controller_configuration,pr2_ethercat,pr2_robot,pr2_run_stop_auto_restart,pr2_etherCAT","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sr_ronex,http://rosindex.github.io/r/sr_ronex/,"hydro,groovy,fuerte,indigo","sr_ronex,sr_ronex_controllers,sr_ronex_drivers,sr_ronex_examples,sr_ronex_external_protocol,sr_ronex_hardware_interface,sr_ronex_launch,sr_ronex_msgs,sr_ronex_test,sr_ronex_transmissions,sr_ronex_utilities,sr_common_msgs,sr_ronex_ethercat_drivers,sr_ronex_mechanism_model","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""sr-ronex"">sr-ronex</h1>\n\n<p>Contains ROS packages for RoNeX (Robot Nervous System). <a href=""http://www.shadowrobot.com/products/ronex/"">RoNeX</a> is a high speed low latency modular system to link your actuators, sensors, etc. to ROS. More documentation can be found <a href=""https://github.com/shadow-robot/sr-ronex/wiki"">in the wiki</a>.</p>\n\n<p>This meta-package contain the following:\n - <strong>sr_ronex</strong> convenient meta package for making it possible to install all necessary RoNeX packages.\n - <strong>sr_ronex_controllers</strong> controllers specific to RoNeX - to be able to send commands to the RoNeX.\n - <strong>sr_ronex_drivers</strong> EtherCAT drivers for the RoNeX based on the ros_ethercat drivers.\n - <strong>sr_ronex_examples</strong> a set of examples associated to their <a href=""https://github.com/shadow-robot/sr-ronex/wiki/Tutorials"">Tutorials</a>.\n - <strong>sr_ronex_external_protocol</strong> header files for the protocol used between the hardware and the software.\n - <strong>sr_ronex_hardware_interface</strong> classes for storing the RoNeX data in the CustomHW map of the hardware interface.\n - <strong>sr_ronex_launch</strong> main launch files.\n - <strong>sr_ronex_msgs</strong> messages used for sending and receiving the RoNeX data in ROS.\n - <strong>sr_ronex_transmissions</strong> transmissions to map the data store in the hardware interface to a joint state - very handy for creating a joint based robot.\n - <strong>sr_ronex_utilities</strong> light weight utility library for accessing the RoNeX.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<table>\n<thead>\n<tr>\n<th>Service</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Documentation</td>\n<td><a href=""http://sr-ronex.readthedocs.org/""><img src=""https://readthedocs.org/projects/sr-ronex/badge"" alt=""Documentation Status""></a></td>\n</tr>\n<tr>\n<td>Code style checks</td>\n<td><a href=""https://circleci.com/gh/shadow-robot/sr-ronex""><img src=""https://circleci.com/gh/shadow-robot/sr-ronex.svg?style=shield"" alt=""Circle CI""></a></td>\n</tr>\n<tr>\n<td>Unit tests</td>\n<td><a href=""https://app.shippable.com/projects/554b2991edd7f2c052e402cd""><img src=""https://img.shields.io/shippable/554b2991edd7f2c052e402cd.svg"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Install tests</td>\n<td><a href=""https://semaphoreci.com/shadow-robot/sr-ronex""><img src=""https://semaphoreci.com/api/v1/projects/b84707ef-b651-423c-bf5a-e21efe8bb8a0/530156/shields_badge.svg"" alt=""Build Status""></a></td>\n</tr>\n<tr>\n<td>Code Coverage</td>\n<td><a href=""http://codecov.io/github/shadow-robot/sr-ronex?branch=indigo-devel""><img src=""http://codecov.io/github/shadow-robot/sr-ronex/coverage.svg?branch=indigo-devel"" alt=""codecov.io""></a></td>\n</tr>\n</tbody>\n</table>\n\n<h1 id=""sr-ronex"">sr-ronex</h1>\n\n<p>Contains ROS packages for RoNeX (Robot Nervous System). <a href=""http://www.shadowrobot.com/products/ronex/"">RoNeX</a> is a high speed low latency modular system to link your actuators, sensors, etc. to ROS. More documentation can be found <a href=""https://github.com/shadow-robot/sr-ronex/wiki"">in the wiki</a>.</p>\n\n<p>This meta-package contain the following:\n - <strong>sr_ronex</strong> convenient meta package for making it possible to install all necessary RoNeX packages.\n - <strong>sr_ronex_controllers</strong> controllers specific to RoNeX - to be able to send commands to the RoNeX.\n - <strong>sr_ronex_drivers</strong> EtherCAT drivers for the RoNeX based on the ros_ethercat drivers.\n - <strong>sr_ronex_examples</strong> a set of examples associated to their <a href=""https://github.com/shadow-robot/sr-ronex/wiki/Tutorials"">Tutorials</a>.\n - <strong>sr_ronex_external_protocol</strong> header files for the protocol used between the hardware and the software.\n - <strong>sr_ronex_hardware_interface</strong> classes for storing the RoNeX data in the CustomHW map of the hardware interface.\n - <strong>sr_ronex_launch</strong> main launch files.\n - <strong>sr_ronex_msgs</strong> messages used for sending and receiving the RoNeX data in ROS.\n - <strong>sr_ronex_transmissions</strong> transmissions to map the data store in the hardware interface to a joint state - very handy for creating a joint based robot.\n - <strong>sr_ronex_utilities</strong> light weight utility library for accessing the RoNeX.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""sr-ronex"">sr-ronex</h1>\n\n<p>Contains ROS packages for RoNeX (Robot Nervous System)</p>\n</div>\n\n            \n          </div>'"
screen_grab,http://rosindex.github.io/r/screen_grab/,jade,screen_grab,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""screen_grab"">screen_grab</h1>\n\n<p>Capture the screen and publish it on a ROS <code>sensor_msgs/Image</code> topic</p>\n\n<p>Currently this runs as a nodelet.\n<code>screengrab.launch</code> shows an example launch file, it will probably need to be copied and altered for integration in a real system.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch screen_grab screengrab.launch\n</code></pre></div>\n<p>A nodelet image display window will also pop up showing the captured image of the screen, and of course <code>rqt_image_view</code> or any image subscriber can be used.</p>\n\n<p>The built package is available for jade:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-jade-screen-grab\n</code></pre></div>\n<p>But building for hydro and indigo ought to work.</p>\n\n<p>A video of an earlier version: <a href=""https://www.youtube.com/watch?v=Ys9BN4mJ_yc"">https://www.youtube.com/watch?v=Ys9BN4mJ_yc</a></p>\n\n<p>Some discussion is here: <a href=""https://plus.google.com/+LucasWalter/posts/f7fLhyWL3A4"">https://plus.google.com/+LucasWalter/posts/f7fLhyWL3A4</a></p>\n</div>\n\n            \n          </div>'"
lyap_control,http://rosindex.github.io/r/lyap_control/,"jade,kinetic,indigo",lyap_control,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>\n\n<h1 id=""clone-this-repository-into-a-quot-lyap_control-quot-folder-with-your-other-ros-packages"">Clone this repository into a ""lyap_control"" folder with your other ROS packages.</h1>\n\n<p>Clone this repository into a ""src"" folder with your other ROS packages. It will end up in a ""lyap_control"" folder.</p>\n\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>5177ab5be5f1756910f29728d069abffc9aea8dc</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</div>\n\n            \n          </div>'"
viso2,http://rosindex.github.io/r/viso2/,"hydro,groovy,fuerte,indigo","libviso2,viso2,viso2_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""viso2"">viso2</h1>\n\n<p>ROS Stack containing a wrapper for libviso2, a visual odometry library.\n<a href=""http://www.ros.org/wiki/viso2"">http://www.ros.org/wiki/viso2</a> for the list of contained packages.</p>\n</div>\n\n            \n          </div>'"
keyboard,http://rosindex.github.io/r/keyboard/,"hydro,jade,indigo",keyboard,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>= Description =</p>\n\n<p>This node uses the SDL library to grab keypresses. To do so, it opens a window where input is received. This window needs to becurrently focused, otherwise this node will not receive any key presses. </p>\n\n<p>= Topics =</p>\n\n<p>~keydown and ~keyup (keyboard/Key)</p>\n</div>\n\n            \n          </div>'"
pid,http://rosindex.github.io/r/pid/,"jade,kinetic,indigo",pid,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
common_msgs,http://rosindex.github.io/r/common_msgs/,"hydro,fuerte,groovy,kinetic,diamondback,jade,indigo","actionlib_msgs,common_msgs,diagnostic_msgs,geometry_msgs,nav_msgs,sensor_msgs,shape_msgs,stereo_msgs,trajectory_msgs,visualization_msgs,test_common_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
uos_tools,http://rosindex.github.io/r/uos_tools/,"hydro,fuerte,electric,groovy,diamondback,indigo","acc_finder,battery_guard,joint_state_muxer,move_base_straight,rgbd_rosbag_tools,rotunit_snapshotter,simple_approximate_time_synchronizer,tf_publisher_gui,uos_common_urdf,uos_diffdrive_teleop,uos_freespace,uos_gazebo_worlds,uos_maps,uos_tools","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cob_object_perception,http://rosindex.github.io/r/cob_object_perception/,"hydro,groovy,fuerte,indigo","cob_fiducials,cob_marker,cob_object_categorization,cob_object_detection_fake,cob_object_perception,cob_object_recording,cob_read_text,cob_surface_classification,cob_texture_categorization,libvlfeat,libzxing,cob_leptonica,cob_tesseract,libdmtx_python,cob_object_detection_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Travis-CI: <a href=""https://travis-ci.org/ipa320/cob_object_perception""><img src=""https://travis-ci.org/ipa320/cob_object_perception.svg?branch=indigo_dev"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
homer_mapnav,http://rosindex.github.io/r/homer_mapnav/,indigo,"homer_map_manager,homer_mapnav,homer_mapnav_msgs,homer_mapping,homer_nav_libs,homer_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""homer_mapnav-indigo-0-0-2-1"">homer_mapnav (indigo) - 0.0.2-1</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav --edit</code> on <code>Thu, 18 Feb 2016 15:35:00 -0000</code></p>\n\n<p>The <code>homer_mapnav</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.15-0</code>\n- old version: <code>0.0.2-0</code>\n- new version: <code>0.0.2-1</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.4</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-0-0-2-0"">homer_mapnav (indigo) - 0.0.2-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Thu, 18 Feb 2016 15:30:17 -0000</code></p>\n\n<p>The <code>homer_mapnav</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.15-0</code>\n- old version: <code>1.0.15-0</code>\n- new version: <code>0.0.2-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.4</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-15-0"">homer_mapnav (indigo) - 1.0.15-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Sat, 05 Dec 2015 22:32:30 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.14-0</code>\n- old version: <code>1.0.14-0</code>\n- new version: <code>1.0.15-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-14-0"">homer_mapnav (indigo) - 1.0.14-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Sat, 05 Dec 2015 14:03:49 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.13-0</code>\n- old version: <code>1.0.13-0</code>\n- new version: <code>1.0.14-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-13-0"">homer_mapnav (indigo) - 1.0.13-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Fri, 04 Dec 2015 12:50:49 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.12-0</code>\n- old version: <code>1.0.12-0</code>\n- new version: <code>1.0.13-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-12-0"">homer_mapnav (indigo) - 1.0.12-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Thu, 03 Dec 2015 20:55:14 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.11-0</code>\n- old version: <code>1.0.11-0</code>\n- new version: <code>1.0.12-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-11-0"">homer_mapnav (indigo) - 1.0.11-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Wed, 02 Dec 2015 10:48:30 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.10-0</code>\n- old version: <code>1.0.10-0</code>\n- new version: <code>1.0.11-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-10-0"">homer_mapnav (indigo) - 1.0.10-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Tue, 01 Dec 2015 23:59:02 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.9-0</code>\n- old version: <code>1.0.9-0</code>\n- new version: <code>1.0.10-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-9-0"">homer_mapnav (indigo) - 1.0.9-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Tue, 01 Dec 2015 17:52:28 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.8-0</code>\n- old version: <code>1.0.8-0</code>\n- new version: <code>1.0.9-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-8-0"">homer_mapnav (indigo) - 1.0.8-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Sun, 29 Nov 2015 23:46:05 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.7-0</code>\n- old version: <code>1.0.7-0</code>\n- new version: <code>1.0.8-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-7-0"">homer_mapnav (indigo) - 1.0.7-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Sat, 28 Nov 2015 22:58:14 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.6-0</code>\n- old version: <code>1.0.6-0</code>\n- new version: <code>1.0.7-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-6-0"">homer_mapnav (indigo) - 1.0.6-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Fri, 27 Nov 2015 14:33:00 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.5-0</code>\n- old version: <code>1.0.5-0</code>\n- new version: <code>1.0.6-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-5-0"">homer_mapnav (indigo) - 1.0.5-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Tue, 24 Nov 2015 13:28:24 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.4-0</code>\n- old version: <code>1.0.4-0</code>\n- new version: <code>1.0.5-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-4-0"">homer_mapnav (indigo) - 1.0.4-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Fri, 20 Nov 2015 02:07:32 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.2-0</code>\n- old version: <code>1.0.2-0</code>\n- new version: <code>1.0.4-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-2-0"">homer_mapnav (indigo) - 1.0.2-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav</code> on <code>Fri, 20 Nov 2015 00:10:16 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.1-5</code>\n- old version: <code>1.0.1-5</code>\n- new version: <code>1.0.2-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-1-5"">homer_mapnav (indigo) - 1.0.1-5</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav --edit</code> on <code>Tue, 17 Nov 2015 15:51:44 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.1-2</code>\n- old version: <code>1.0.1-4</code>\n- new version: <code>1.0.1-5</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-1-4"">homer_mapnav (indigo) - 1.0.1-4</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav --edit</code> on <code>Tue, 17 Nov 2015 15:42:59 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.1-2</code>\n- old version: <code>1.0.1-3</code>\n- new version: <code>1.0.1-4</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-1-3"">homer_mapnav (indigo) - 1.0.1-3</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav --edit</code> on <code>Tue, 17 Nov 2015 15:29:03 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.1-2</code>\n- old version: <code>1.0.1-2</code>\n- new version: <code>1.0.1-3</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-1-2"">homer_mapnav (indigo) - 1.0.1-2</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav --edit</code> on <code>Fri, 09 Oct 2015 09:48:20 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.1-1</code>\n- old version: <code>1.0.1-1</code>\n- new version: <code>1.0.1-2</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-1-1"">homer_mapnav (indigo) - 1.0.1-1</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav --edit</code> on <code>Fri, 25 Sep 2015 06:07:06 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- rosdistro version: <code>1.0.1-0</code>\n- old version: <code>1.0.1-0</code>\n- new version: <code>1.0.1-1</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n\n<h2 id=""homer_mapnav-indigo-1-0-1-0"">homer_mapnav (indigo) - 1.0.1-0</h2>\n\n<p>The packages in the <code>homer_mapnav</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_mapnav --edit</code> on <code>Tue, 15 Sep 2015 09:11:11 -0000</code></p>\n\n<p>These packages were released:\n- <code>homer_map_manager</code>\n- <code>homer_mapnav_msgs</code>\n- <code>homer_mapping</code>\n- <code>homer_nav_libs</code>\n- <code>homer_navigation</code></p>\n\n<p>Version of package(s) in repository <code>homer_mapnav</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git"">https://gitlab.uni-koblenz.de/robbie/homer_mapnav.git</a>\n- release repository: unknown\n- rosdistro version: <code>null</code>\n- old version: <code>null</code>\n- new version: <code>1.0.1-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n\n<h1 id=""mapping-and-navigation"">mapping and navigation</h1>\n\n<p>Here you can find the homer mapping and navigation packages</p>\n</div>\n\n            \n          </div>'"
librms,http://rosindex.github.io/r/librms/,"jade,indigo",librms,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""librms"">librms <a href=""https://travis-ci.org/GT-RAIL/librms""><img src=""https://api.travis-ci.org/GT-RAIL/librms.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""rms-data-log-client-library"">RMS Data Log Client Library</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/librms"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>librms is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
drums_ros,http://rosindex.github.io/r/drums_ros/,indigo,drums_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><a href=""https://travis-ci.org/drums-project/drums_ros""><img src=""https://travis-ci.org/drums-project/drums_ros.svg?branch=indigo-devel"" alt=""Build Status""></a></p>\n\n<h1 id=""drums_ros-ros-adapter-for-distributed-robot-monitoring-system-drums"">\n<code>drums_ros</code> - ROS Adapter for Distributed Robot Monitoring System (DRUMS)</h1>\n</div>\n\n            \n          </div>'"
ubiquity_launches,http://rosindex.github.io/r/ubiquity_launches/,indigo,ubiquity_launches,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ubiquity_launches-launch-file-repository"">\n<code>ubiquity_launches</code> Launch File Repository</h1>\n\n<p><a href=""https://travis-ci.org/UbiquityRobotics/ubiquity_launches""><img src=""https://travis-ci.org/UbiquityRobotics/ubiquity_launches.svg?branch=master"" alt=""Build Status""></a></p>\n\n<h2 id=""development-overview"">Development Overview</h2>\n\n<p>All of the Ubiquity robots use\n<a href=""http://www.ros.org/"">ROS</a> (Robot Operating System).\nROS breaks a robot application into a multitude of ROS\nnodes (i.e. processes) running on one or more processors\nthat communicate with one another via internet protocols.</p>\n\n<p>The usual method for teaching people to develop ROS robot\napplications is to point them at some ROS tutorials and say\n""go at it"".  Unfortunately, this is a little bit dumping\nbuckets of blood into shark infested waters and going for\na little swim.  At Ubiquity Robotics, we want robot application\ndevelopers to have a much less traumatic experience.  For\nthis reason, we have invested a great deal of effort to\nmake ROS robot application development as easy as possible.</p>\n\n<p>The reality is that setting up a workable software\ndevelopment environment for developing ROS applications\nis actually pretty involved.  One major complication is\nthat the robot typically does not have a display, keyboard,\nand mouse.  Even if it did, it not particularly easy to\nwalk around with the robot as it moves.  The more workable\nsolution is to develop software on a stationary platform\nlike a laptop or a desktop, and communicate with the robot\nvia a wireless internet connection.  A further complication,\nis Ubiquity Robotics is using a Raspberry Pi 2 processor\nwith the ARM7 instruction set, whereas most laptops and\ndesktops use the x86 instruction set.  We have to make sure\nthat each machine gets the right instruction set.</p>\n\n<p>The Ubiquity Robotics application development environment\nassumes that there are two processors.  The robot processor\nis attached to the robot and the development processor is\nassociated with either laptop or desktop computer.</p>\n\n<p>Ubiquity Robotics currently uses a\n<a href=""https://www.raspberrypi.org/"">Raspberry Pi Foundation</a>\n<a href=""https://www.raspberrypi.org/products/raspberry-pi-2-model-b/"">Raspberry Pi 2 Model B</a>\nfor the robot processor.  Since ""Raspberry Pi 2 Model B"" is a\nmouthful of words, we shorten it down to a more manageable ""RasPi2"".\nThe RasPi2 is a quad-core ARM Cortex-A7 CPU with 1GB of RAM,\nwith 4 USB Ports, an Ethernet port, a camera interface, and\na micro-SD card.  We plug a dual-band USB WiFi Dongle into\none of the USB port slots to provide wireless connectivity\nwith the development processor through a commercial\noff-the-shelf WiFi router.</p>\n\n<p>The development processor must be a 64-bit x86 hardware\narchitecture processor.  You can either run some flavor\nof Ubuntu natively on the processor, or you can run a\ndifferent operating system (e.g. Windows, MacOS, Solaris,\netc.) and run <a href=""https://www.virtualbox.org/"">VirtualBox</a>\nto run the Ubuntu operating system.  Neither 32-bit\nprocessors nor other virtual machines (e.g. VMWare,  Parallels,\netc.) are supported.</p>\n\n<p>ROS currently only runs under Ubuntu and its variants (e.g.\nKubuntu, Xubuntu, Lubuntu, etc.)  No other operating system\noptions are currently supported by the ROS community.\nTo be consistent, the VirtualBox image that we recommend that\nyou use has <a href=""/http://lubuntu.net/"">Lubuntu</a> installed on it.\nWe also install Lubuntu on the robot processor, just in case\nyou choose to plug a monitor/keyboard/mouse into the RasPi2.\nLubuntu is a very light weight window system that does not\nover tax the RasPi2 robot processor.</p>\n\n<p>We really encourage people not to cut corners when it comes\nto setting up your WiFi network.  If you have heard the saying\nthat ""a chain is only as strong as its weakest link"", our\nexperience is that WiFi is the weak link in robotics.  We\nstrongly recommend that people use dual band\n<a href=""https://en.wikipedia.org/wiki/IEEE_802.11ac"">802.11ac</a>\nUSB WiFi dongles to provide wireless technology.  Similarly,\nwe recommend that you invest in a superior dual-band WiFi\nrouter.  You can spend an enormous amount of time tracking\ndown and eradicating flaky WiFi issues and it is better to\nsimply avoid the issues by using better hardware and better\nantennas.</p>\n\n<p>We use a technology called\n<a href=""https://en.wikipedia.org/wiki/Zero-configuration_networking"">zeroconf</a>\nto provide human readable names for the various processors on\nthe computer network.  Each robot processor and development processor\nmust have a unique host name and <strong>MUST</strong> run zeroconf.  The\n<a href=""https://en.wikipedia.org/wiki/Domain_Name_System"">DNS</a> will\npresent the DNS names as <code>hostname.local</code> where, <code>hostname</code> is\nthe host name of the robot or development processor.</p>\n\n<p>The ROS community extensively uses\n<a href=""https://en.wikipedia.org/wiki/Secure_Shell"">Secure Shell</a>\nto communicate between computers.  The secure shell protocols\nprovide a secure and encrypted link between computers.\nWe require that password keys be properly set up between\nthe development processor and the robot processor such that\na secure link can be established without prompting the user for\na password.</p>\n\n<p>Once we have secure shell properly installed, we can do three\nthings with it:</p>\n\n<ul>\n<li><p>The <code>roslaunch</code> program can launch ROS nodes (i.e. processes)\nvia secure shell.</p></li>\n<li><p>We use the secure shell to do X11 protocol forwarding.\nX11 a fairly old (but reliable) technology for doing remote\nwindow access.  Using X11 protocol forwarding, we can debug\na program running on the robot processor with windows that\nshow up on the development processor.</p></li>\n<li><p>We can use secure shell to remotely mount a chunk of the\nfile system from the robot processor onto the development\nprocessor.  This allows you to use editors and tools on\ndevelopment system to develop robot code.  There are requirements\non how all the files are organized on both machines, but\nwhen all the rules are followed, you can easily build\nthe same ROS packages on both your development processor and\nrobot processor without any major issues.</p></li>\n</ul>\n\n<p>The secure shell technology is very useful, but requires some\neffort to set up properly.</p>\n\n<p>Lastly, we have an entire architecture for structuring ROS launch\nfiles.  A ROS Launch file is a sequence of one or more files in\nXML format, that when fed into the <code>roslaunch</code> program cause all\nof the ROS nodes needed to run a robot to be started.  The goal\nof the architecture is:</p>\n\n<ul>\n<li><p>Sharable: The launch files are shared among one another.</p></li>\n<li><p>Platform Neutral: The launch files can be used for more than on\nrobot platform.</p></li>\n<li><p>Complete: Only one top level robot launch file is specified to\nstart your robot and any ancillary visualization tools need for\nthe your robot application.</p></li>\n</ul>\n\n<p>{Summary here}</p>\n\n<h2 id=""development-environment-details"">Development Environment Details</h2>\n\n<p>This is where we go through the steps required to set up the\nUbiquity ROS development environment.  This is currently\nbroken into a bunch of steps.  Eventually, most of these\nsteps will be more automated.</p>\n\n<h3 id=""initial-setup"">Initial setup:</h3>\n\n<p>We are going to assume that you are doing all of these instructions\nfrom the comfort of your own development machine.  We further\nassume that you can connect to the <code>ubuntu</code> user on your robot.\nWe further assume that you can already access the robot via\nsecure shell.</p>\n\n<ol>\n<li>\n<p>Install some software on your development machine:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install -y ssh fuse sshfs\nsudo apt-get install -y \nsudo gpasswd -a $USER fuse\n</code></pre></div>\n</li>\n<li>\n<p>Let\'s make sure that you can log into your robot via <code>ssh</code>.\nPlease replace ROBOT with your robot host name:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ssh ubuntu@ROBOT.local echo hello\n# You will probably be prompted for the `ubuntu` account\n# password (usually `ubuntu`).  When done it will print\n# out `hello`.\n</code></pre></div>\n</li>\n<li>\n<p>Create your new USER account on the development machine.\nUSER can be up to 32 characters of upper/lower case letters,\ndigits, and underscores:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo adduser USER\n# It will prompt you for account password.\n# It will prompt for a bunch of account information.\n</code></pre></div>\n</li>\n<li>\n<p>Now log into your new USER account:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">su USER\n# It will prompt you for your new password.\n</code></pre></div>\n</li>\n<li>\n<p>Now let\'s create the same USER account on the ROBOT\nmachine.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ssh ubuntu@ROBOT.local\n# You will probably be prompted for the `ubuntu` password.\n# The prompt will probably change to `ubuntu@ROBOT`.\nsudo adduser USER\n# As before, it will for the `ubuntu` password.\n# Please fill in the rest of the account information\nsudo addgroup USER video\nexit\n# This should return you to the development processor.\n# Now verify that you can log in as USER on the\n# robot processor:\nssh USER@ROBOT.local echo yippee\n# You should be prompted for the USER password.\n# If everything worked, you should `yippee` printed out.\n</code></pre></div>\n</li>\n</ol>\n\n<p>That should get the USER account built on the robot\n   processor with access to the <code>video</code> group.</p>\n\n<h3 id=""password-free-secure-shell"">Password Free Secure Shell</h3>\n\n<p>Setting up Secure Shell to operate without prompting you for\npasswords all the time is a requirement.</p>\n\n<ol>\n<li>\n<p>Generate a public/private key on the development machine:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">if [ ! -f ~/.ssh/id_rsa ] ; then ssh-keygen -t ras ; fi\n</code></pre></div>\n</li>\n</ol>\n\n<p>If you already have an RSA public/private key, this\n   line will return with no further prompting and you need\n   not continue.  If you do get a prompt, it will probably\n   look like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    Enter file in which to save the key (/home/USER/.ssh/id_rsa):\n</code></pre></div>\n<p>Just depress the <code>[ENTER]</code> key.  Next it will prompt for \n   a pass phrase:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    Enter passphrase (empty for no passphrase):\n</code></pre></div>\n<p>Again, depress the  <code>[Enter]</code> key.  It will prompt once again:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    Enter same passphrase again:\n</code></pre></div>\n<p>Again, depress the <code>[Enter]</code> key.  Finally, it will crunch\n   on some numbers for a while, print out some more stuff and\n   finish.</p>\n\n<ol>\n<li>\n<p>Now we want to make sure that the development machine can\nuse secure shell to connect to itself without a password\nprompt:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">chmod 644 ~/.ssh/authorizied_keys\ncat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys\nchmod 444 ~/.ssh/authorizied_keys\n</code></pre></div>\n</li>\n</ol>\n\n<p>Now to verify that we succeeded, try the following (notice\n   that accent characters (`) are being used instead of single\n   quotes (\\\') :</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ssh `hostname`.local echo terrific\n</code></pre></div>\n<p>If everything worked, you should see <code>terrific</code> with no\n   password prompt.</p>\n\n<ol>\n<li>\n<p>Now we get to do the same thing over on the robot using the\nexact same technology:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo USER@ROBOT.local\n# Prompt for USER password on ROBOT.\nif [ ! -f ~/.ssh/id_rsa ] ; then ssh-keygen -t ras ; fi\n</code></pre></div>\n<p>Just depress the <code>[Enter]</code> key three times.        </p>\n</li>\n<li>\n<p>Now we want to make sure that the robot can connect to itself\nvia secure shell without any password prompts:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">chmod 644 ~/.ssh/authorized_keys\ncat ~/.ssh/id_ras.pub &gt;&gt; ~/.ssh/authorized_keys\nchmod 444 ~/.ssh/authorized_keys\n</code></pre></div>\n</li>\n</ol>\n\n<p>Now we verify that we succeeded by (again accent characters,\n   not single quote characters):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ssh `hostname`.local echo fantastic\n</code></pre></div>\n<p>There should be no prompt and <code>fantastic</code> should be printed out.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    exit\n</code></pre></div>\n<p>This should return you to the development processor.</p>\n\n<ol>\n<li>\n<p>Now we need to make it possible to log into the robot without\nany prompt.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ssh ROBOT.local chmod 644 .ssh/authorized_keys\ncat ~/.ssh/id_rsa.pub | ssh ROBOT.local \'cat &gt;&gt; .ssh/authorized_keys\'\nssh ROBOT.local chmod 444 .ssh/authorized_keys\n</code></pre></div>\n</li>\n</ol>\n\n<p>Now we verify that we succeeded:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ssh ROBOT.local echo awesome\n</code></pre></div>\n<p>There should be no password prompt, and <code>awesome</code> should be printed out.</p>\n\n<ol>\n<li>Since there is no particular need for the robot processor\nto log into the development machine, we do not do the symmetric\nstep for password free secure shell from the robot processor\nto the development processor.</li>\n</ol>\n\n<p>That covers all of the password prompt removal configuration\nof secure shell.</p>\n\n<h3 id=""x11-forwarding"">X11 Forwarding</h3>\n\n<p>In order to enable X11 forwarding via secure shell, we need\nto edit the file <code>/etc/ssh/ssh_config</code> on both the development\nprocessor and the robot processor.</p>\n\n<ol>\n<li>\n<p>Edit <code>/etc/ssh/ssh_config</code> on the devolopment machine:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo nano /etc/ssh/ssh_config\n</code></pre></div>\n</li>\n</ol>\n\n<p>Find the two lines:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    #   ForwardX11 yes\n    #   ForwardX11Trusted yes\n</code></pre></div>\n<p>and remove the <code>[#]</code> characters to make them look as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    #   ForwardX11 yes\n    #   ForwardX11Trusted yes\n</code></pre></div>\n<p>Write the contents out using <code>[Ctr-O]</code> followed by exiting\n   using <code>[Ctrl-X]</code> keys.</p>\n\n<ol>\n<li>\n<p>Verify that X11 forwarding is working on the development machine.\nPlease notice the <code>-Y</code> option:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ssh -Y ROBOT.local xterm\n</code></pre></div>\n</li>\n</ol>\n\n<p>An <code>xterm</code> window should pop up on the development processor\n   display.  The prompt inside the xterm should say <code>USER@ROBOT:~</code>.\n   With your mouse, click inside  <code>xterm</code> window and type:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    hostname\n</code></pre></div>\n<p>inside <code>xterm</code> window followed by the <code>[Enter]</code> key.  The response\n   should be <code>ROBOT</code>.  Things are working.  Again, in the <code>xterm</code>\n   window type:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    exit\n</code></pre></div>\n<p>and now the <code>xterm</code> window will go away.        </p>\n\n<ol>\n<li>\n<p>Now we do the same edits over on the robot processor.  Type\nthe following being sure to specify the <code>-Y</code> option:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ssh -Y ROBOT.local\nsudo nano /etc/ssh/ssh_config\n</code></pre></div>\n</li>\n</ol>\n\n<p>Remove the <code>#</code> characters in front of <code>ForwardX11</code> and \n   <code>ForwardX11Trusted</code>.  Write everything out with <code>[Ctrl-O]</code>\n   followed by <code>[Ctrl-X]</code>.  Please stay logged onto the\n   robot processor:</p>\n\n<ol>\n<li>\n<p>Testing that we got it write is done as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ssh -y ROBOT.local xterm\n</code></pre></div>\n</li>\n</ol>\n\n<p>will cause an xterm to pop up on the development processor.\n   (Just for your information, the X11 protocol is being forwarded\n   through two secure shell X11 protocol forwarders, since there\n   no display on the robot processor.)  Dismiss the <code>xterm</code> window\n   by typing <code>exit</code> in the <code>xterm</code> window.  Finally, exit from the\n   robot processor by typing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    exit\n</code></pre></div>\n<p>That takes care of X11 forwarding issues.</p>\n\n<h3 id=""creating-the-catkin-work-spaces"">Creating the Catkin Work Spaces</h3>\n\n<p>We will create two identical catkin work spaces on both\nthe development processor and the robot processor.  We\nassume that ROS has already been installed.</p>\n\n<ol>\n<li>\n<p>On the development machine:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">mkdir -p ~/catkin_ws/src\n</code></pre></div>\n</li>\n<li>\n<p>Now we want to populate the work space with 4 ROS packages:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/cakin_ws/src\ngit clone https://github.com/UbiquityRobotics/ubiquity_launches.git\ngit clone https://github.com/UbiquityRobotics/raspicam_node.git\ngit clone https://github.com/UbiquityRobotics/userland.git\ngit clone https://github.com/UbiquityRobotics/robot_upstart.git\nsource ~/.bashrc\n</code></pre></div>\n</li>\n</ol>\n\n<p>{Wayne: Make sure $ROS_PACKAGE_PATH is correct.}</p>\n\n<ol>\n<li>\n<p>Now we initialize the Catkin work space:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">(cd ~/catkin_ws ; cakin_make)\n</code></pre></div>\n</li>\n<li>\n<p>Now we edit <code>~/.profile</code> to recognize the catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">nano ~/.profile\n</code></pre></div>\n</li>\n</ol>\n\n<p>Now we add the following code right before the line that\n   says <code>#if running bash</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    # Only `source /opt/ros/indigo/setup.bash` if we have not already done so.\n    # We assume that this script does not change very often:\n    if [ -d ""/opt/ros/indigo/bin"" ] ; then\n        case "":$PATH:"" in\n        *:/opt/ros/indigo/bin:*) ;;\n        *) source /opt/ros/indigo/setup.bash ;;\n        esac\n    fi\n\n    # Only `source ~/catkin_ws/devel/setup` if it exists:\n    if [ -f ~/catkin_ws/devel/setup.sh ] ; then\n        source ~/catkin_ws/devel/setup.bash ;\n    fi\n\n    export ROS_CATKIN_WS=~/catkin_ws\n    export ROS_HOSTNAME=`hostname`.local\n    export ROS_MASTER_URI=http://`hostname`.local:11311\n    export ROSLAUNCH_SSH_UNKNOWN=1\n</code></pre></div>\n<ol>\n<li>\n<p>Now we do exactly the same steps over on the robot:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ssh ROBOT.local\nmkdir -p ~/catkin_ws/src\ncd ~/cakin_ws/src\ngit clone https://github.com/UbiquityRobotics/ubiquity_launches.git\ngit clone https://github.com/UbiquityRobotics/raspicam_node.git\ngit clone https://github.com/UbiquityRobotics/userland.git\n(cd ~/catkin_ws ; cakin_make)\nnano ~/.profile\n</code></pre></div>\n<p>Now edit in the exact same code from the previous step into the\nsame place in <code>~/.profile</code> and exit with <code>[Ctrl-O]</code> followed by\n<code>[Ctrl-X]</code>.</p>\n</li>\n</ol>\n\n<h3 id=""using-sshfs"">Using <code>sshfs</code>\n</h3>\n\n<p>The <code>sshfs</code> program is used to mount the <code>src</code> directory from\nthe robot processor over on to the development processor</p>\n\n<p>To mount the robot <code>~/catkin_ws/src</code> on top of the local <code>~/catkin_ws/src</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    sshfs -o nonempty -o idmap=user ROBOT.local:/home/`whoami`/catkin_ws/src ~/catkin_ws/src \n</code></pre></div>\n<p>To unmount:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    fusermount -u ~/catkin_ws/src\n</code></pre></div>\n<h3 id=""making-roscore-run-all-the-time"">Making <code>roscore</code> Run All the Time</h3>\n\n<p><em>{Wayne: make <code>n_forever</code> match <code>n_sleep_forever</code>.}</em></p>\n\n<p>This is done using the following command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ssh ROBOT.local\n    rosrun robot_upstart install --user=USER ubiquity_launches/n_sleep_forever/launch/n_sleep_forever.launch\n    sudo service ubiquity start\n</code></pre></div>\n<h3 id=""install-the-pudb-python-debugger"">Install the <code>pudb</code> Python Debugger:</h3>\n\n<p>Please do the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    sudo apt-get install -y python python-pip xterm\n    sudo pip install pudb\n</code></pre></div>\n<h3 id=""run-raspicam_view"">Run <code>raspicam_view</code>\n</h3>\n\n<p>Please do the following on the development machine:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    rosrun ubiquity_launches raspicam_view\n</code></pre></div>\n<p>When <code>rqt_image_view</code> pops up please select the\n<code>/n_raspicam/camera/image/compressed</code> topic.  When you are\ndone, please type <code>[Ctrl-C]</code>.</p>\n\n<h2 id=""launch-files"">Launch Files</h2>\n\n<p><a href=""https://travis-ci.org/UbiquityRobotics/ubiquity_launches""><img src=""https://travis-ci.org/UbiquityRobotics/ubiquity_launches.svg?branch=master"" alt=""Build Status""></a></p>\n\n<p><code>ubiquity_launches</code> is a ROS <code>git</code> repository that contains ROS\n<code>.launch</code> files and other associated ROS robot configuration files\n(e.g. <code>.yaml</code>, <code>.urdf</code>, etc.)  In addition, there are shell\nscripts that invoke the launch files.</p>\n\n<p>A  <a href=""http://wiki.ros.org/roslaunch"">ROS <code>.launch</code> file</a> is used\nused to start and configure one or more\n<a href=""http://wiki.ros.org/Nodes"">ROS nodes</a>, which when properly\nconfigured will result in the desired robot behavior.</p>\n\n<p>By imposing some structure on the organization of these\n<code>.launch</code> files, we improve the ability to reproduce\nrobot behaviors among all robot developers who share the\nuse of the <code>ubiquity_launches</code> launch files.</p>\n\n<p>Both the shell scripts and the ROS launch files have some\nadditional documentation structure.  There is a program called\n<a href=""generate_launche_md.py""><code>generate_launches_md.py</code></a>\nthat scans the <code>ubiquity_launches</code> repository and generates\na single document called <a href=""launches.md""><code>launches.md</code></a>.\nThis document provides a single location to find all of\ndocumentation for the <code>ubiquity_launches</code> repository.\nThe format of the <code>launches.md</code> document is in\n<a href=""https://en.wikipedia.org/wiki/Markdown"">markdown format</a></p>\n\n<p>When <code>launches.md</code> file is served up by a git repository\nmanagement site (e.g.\n<a href=""https://en.wikipedia.org/wiki/GitHub"">github</a>,\n<a href=""https://bitbucket.org/"">bitbucket</a>, etc.)\nit is converted into <a href=""https://en.wikipedia.org/wiki/HTML"">HTML</a>\nso that it is easier to read in a web browser.\nPlease view\n<a href=""launches.md""><code>launches.md</code></a> to see how the generated\n<code>ubiquity_launches</code> documentation is rendered in a web browser.</p>\n\n<h2 id=""download-and-install-ubiquity_launches-repository"">Download and Install <code>ubiquity_launches</code> Repository</h2>\n\n<p>The <code>ubquity_launches</code> repository is cloned into your catkin\nworkspace via the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    cd $ROS_CATKIN_WS/src\n    git clone https://github.com/UbiquityRobotics/ubiquity_launches.git\n</code></pre></div>\n<p>It is strongly recommended that the <code>bin</code> directory of the\n<code>ubiquity_launches</code> repository be placed in you execution path.\nThe preferred way to do this is by adding the following\nsomewhat arcane bash script code to your <code>~/.bashrc</code> file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    # Only `source /opt/ros/indigo/setup.bash` if we have not already\n    # done so.  We assume that this script does not change very often:\n    if [ -d ""/opt/ros/indigo/bin"" ] ; then\n        case "":$PATH:"" in\n        *:/opt/ros/indigo/bin:*) ;;\n        *) source /opt/ros/indigo/setup.bash ;;\n        esac\n    fi\n\n    # Put `.../ubiquity_launches/bin` in the path if it exists:\n    if [ -d $ROS_CATKIN_WS/ubiquity_launches/bin ] ; then\n        case "":$PATH:"" in\n        *:$ROS_CATKIN_WS/ubiquity_launches/bin:*) ;;\n        *) export PATH=$PATH:$ROS_CATKIN_WS/ubiquity_launches/bin ;;\n        esac\n    fi\n</code></pre></div>\n<p>When you are done editing <code>~/.bashrc</code>, please run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    source ~/.bashrc\n</code></pre></div>\n<h2 id=""overall-architecture"">Overall Architecture</h2>\n\n<p>The current structure of the <code>ubiquity_launch</code> repository is\nbroken in a bunch of sub directories which have the following\nnaming conventions:</p>\n\n<p>The top level directory structure is as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    repository_name/\n        README.md    # This document\n        launches.md  # Aggregated \n        bin/         # Executable shell scripts\n        n_*/         # Single ROS node launch files\n        m_*/         # Multiple ROS node launch files\n        rviz_*/      # RViz specific launch files\n</code></pre></div>\n<p>Where:</p>\n\n<ul>\n<li><p><code>README.md</code>:  <code>README.md</code> is this documentaton file.</p></li>\n<li><p><code>launches.md</code>: <code>launches.md</code> is a generated documentation file.</p></li>\n<li><p><code>bin</code>: The <code>bin</code> directory contains a bunch of executables shell\nscripts that typically fire off a launch file.  It is expected\nthat you will place this <code>bin</code> directory in your path.</p></li>\n<li><p><code>n_*</code>: The <code>n_*</code> directories contain the launch files and\nconfiguration files needed to launch a single ROS Node.</p></li>\n<li><p><code>m_*</code>: The <code>m_*</code> directories will launch Multiple ROS nodes.</p></li>\n<li><p><code>rviz_*: The</code>rviz_*` directories are used to launch the RViz\nprogram configured to view a corresponding robot program.\nThese launch files are typically executed on your laptop/desktop,\nsince most robots do not have a display head.</p></li>\n</ul>\n\n<p>Other directories and files will be added as needed.</p>\n\n<h2 id=""the-bin-sub-directory"">The <code>bin</code> Sub-Directory</h2>\n\n<p>The <code>bin</code> sub-directory contains a bunch of executables -- mostly\nshell scripts.</p>\n\n<p>The structure of an executable shell script in the <code>bin</code> sub-directory is:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    <span class=""c"">#!/usr/bin/env bash</span>\n\n    <span class=""c"">##Summary: One line summary of shell script.</span>\n    <span class=""c"">##Overview:</span>\n    <span class=""c"">##  Line 1 of multi-line documentation.</span>\n    <span class=""c"">##  ...</span>\n    <span class=""c"">##  Line N of multi-line documentation.</span>\n\n    roslaunch ...\n</code></pre></div>\n<p>The first line specifies that the file is a\n<a href=""https://en.wikipedia.org/wiki/Bash_%28Unix_shell%29"">bash</a> script.</p>\n\n<p>All lines that start with <code>##</code> are scanned into the documentation\nin <code>launches.md</code>.</p>\n\n<p>The line:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ##Summary: One line summary of shell script.\n</code></pre></div>\n<p>provides a single line summary of what the shell script is supposed to do.</p>\n\n<p>The lines:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ##Overview:\n    ##  Line 1 of multi-line documentation.\n    ##  ...\n    ##  Line N of multi-line documentation.\n</code></pre></div>\n<p>provide a fuller description of the what the script file does.</p>\n\n<p>The remaining lines are <code>bash</code> shell script commands.\nMany (but not all) script files will contain a <code>roslaunch ...</code>\ncommand that causes ROS process a ROS <code>.launch</code> file.</p>\n\n<h2 id=""ros-launch-file-issues"">ROS Launch File Issues</h2>\n\n<p>There are several issues about ROS launch files that need to\nbe discussed:</p>\n\n<ul>\n<li><p>The <code>&lt;arg&gt;</code> tag is used heavily needs to be fully understood.</p></li>\n<li><p>There are two common launch file suffixes -- <code>.launch</code> and\n<code>.launch.xml</code>.</p></li>\n<li><p>Launch file parameterization allows the same launch files\nto be used for different robot platforms and configurations.</p></li>\n<li><p>How to add documentation to the a ROS launch file.</p></li>\n</ul>\n\n<h3 id=""the-lt-arg-gt-tag"">The <code>&lt;arg&gt;</code> Tag</h3>\n\n<p>Some documentation for ROS launch files can be found by following\nthe hypertext links below:</p>\n\n<ul>\n<li><p><a href=""http://wiki.ros.org/roslaunch"">ROS Launch Overview</a> provides an\noverview of the ROS launch file architecture.</p></li>\n<li><p><a href=""http://wiki.ros.org/roslaunch/XML"">ROS launch XML file format</a>\nprovides documentation of the XML format used for writing\nROS launch files.</p></li>\n<li><p><a href=""http://wiki.ros.org/roslaunch/XML/arg"">ROS launch <code>&lt;arg&gt;</code> tag</a>\nis the documentation for the <code>&lt;arg ... &gt;</code> tag.</p></li>\n</ul>\n\n<p>The <code>&lt;arg&gt;</code> tag is singled out because it is heavily used in the\nlaunch files to pass information between launch files.\nIf you do not understand the <code>&lt;arg&gt;</code> tag, you will not understand\nthe <code>ubiquity_launches</code> launch files.</p>\n\n<p>The <code>&lt;arg&gt;</code> tag has three forms:</p>\n\n<ul>\n<li><p><code>&lt;arg name=""required"" /&gt;</code>: This specifies a launch file input name.\nThink of this as a manditory and required input argument variable\nfor launch file.</p></li>\n<li><p><code>&lt;arg name=""optional"" default=""value"" /&gt;</code>: This specifies a launch\nfile input name with a default value that will be used if not\nis specified at ""call"" time.  Think of this as an optional input\nargument for a launch file.</p></li>\n<li><p><code>&lt;arg name=""foo"" value=""bar"" /&gt;</code>: This form has two different usages.\nWhen at the level immediately inside of a <code>&lt;launch&gt; ... &lt;/launch&gt;</code>\npair, this form defines a convenience value that can be used to\nimprove overall legibility in a launch file.  Think of this as a\nkind of a macro definition.  The second form occurs immediately\ninside of a <code>&lt;include&gt; ... &lt;/include&gt;</code> pair.  This form is for\npassing explicit arguments into another launch file.</p></li>\n</ul>\n\n<p>Huh? What is going on here?  Let\'s do some examples!  The example\nbelow us Python as a metaphor for what is going on.  If you\ndo not know some basic Python, well, at least we tried.</p>\n\n<p>Here is a chunk of Python code that defines a routine:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    def n_fiducial_slam(robot_base, fiducial_size="".150""):\n      short = ""a somewhat long string""\n</code></pre></div>\n<p>This function is named <code>n_fiducial_slam</code> and has two arguments --\n<code>robot_base</code> and <code>fiducial_size</code>.  <code>robot_base</code> is a required\nargument which if not present at routine call time will cause\na run-time error.  <code>fiducial_size</code> is an optional argument that\ndoes not need to specified in the routine call, but it can be\nspecified if you want.  <code>short</code> is a local variable that can\nbe used to reduce typing.  The corresponding launch file syntax is:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    &lt;launch&gt;\n      &lt;!-- Required arguments: --&gt;\n      &lt;arg name=""robot_base"" /&gt;\n        &lt;!--robot_base: Robot base (e.g. ""magni"", ""loki"", etc.) to use. --&gt;\n\n      &lt;!-- Convenience arguments: --&gt;\n      &lt;arg name=""short value=""a somewhat long string"" /&gt;\n        &lt;!--short_value: A short name for a longer string. --&gt;\n\n      &lt;!-- Optional arguments: --&gt;\n      &lt;arg name=""fiducial_size"" default="".200"" /&gt;\n        &lt;!--fiducial_size: Width of fiducial measured in meters. --&gt;\n      ...\n\n    &lt;/launch&gt;\n</code></pre></div>\n<p>The <code>&lt;include&gt; ... &lt;/include&gt;</code> tag pair is how one launch\nfile accesses another launch file.  It is similar to a\nroutine call.  In Python, the following line:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    n_fiducial_detect(""loki"", fiducial_size="".200"")\n</code></pre></div>\n<p>would be written in launch file syntax as:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ...\n\n    &lt;include file="".../n_fiducial_detect.launch""&gt;\n      &lt;arg name=""robot_base"" value=""loki"" /&gt;\n      &lt;arg name=""fiducial_size"" value="".200"" /&gt;\n    &lt;/include&gt;\n\n    ...\n</code></pre></div>\n<p>Now that you know how to set an argument, the only other\nissue is how to access it.  That is done using substitution\narguments.  The syntax is:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    $(arg name)\n</code></pre></div>\n<p>where <code>name</code> is the argument name.  Using the ""call"" example\nabove, the following string:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ""base=$(arg robot_base) size=$(arg fiducial_size) short=\'$(arg short)\'""\n</code></pre></div>\n<p>would expand to:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ""base=loki size=.200 short=\'a somewhat long string\'""\n</code></pre></div>\n<p>The substitution syntax can only occur inside of XML attribute strings.</p>\n\n<p>Finally, you pass arguments into launch files from the <code>roslaunch</code>\ncommand via the following syntax:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    roslaunch ubiquity_launches n_fiducial_detect robot_base:=""magni""\n</code></pre></div>\n<p>It is the <code>:=</code> is detected and conceptually converted into an\n<code>&lt;arg&gt;</code> tag.  The line above would be represented in a launch\nfile as:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    &lt;include file=""$(find ubiquity_launches)/.../n_fiducial_detect.launch""&gt;\n      &lt;arg name=""robot_base"" value=""magni"" /&gt;\n    &lt;/include&gt;\n</code></pre></div>\n<p>Hopefully this explanation of the <code>&lt;arg&gt;</code> tag is a little\nmore informative that the official ROS documentation.</p>\n\n<h3 id=""launch-file-suffixes"">Launch File Suffixes:</h3>\n\n<p>There are two ROS launch file suffixes:</p>\n\n<ul>\n<li><p><code>.launch</code>: This launch file will be discovered by the <code>roslaunch</code>\ncommand via tab completion.</p></li>\n<li><p><code>.launch.xml</code>: This launch file will not be discovered by\nthe <code>roslaunch</code> command tab completion facility.</p></li>\n</ul>\n\n<p>The <a href=""http://wiki.ros.org/roslaunch""><code>roslaunch</code></a> command\nhas the following basic structure:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    roslaunch ROS_PACKAGE LAUNCH_NAME.launch\n</code></pre></div>\n<p>Basically, the <code>roslaunch</code> command searches a given ROS package\n(i.e. <code>ROS_PACKAGE</code>) for a <code>.launch</code> file (i.e. <code>LAUNCH_NAME.launch</code>.)\nOne neat thing about <code>roslaunch</code> is that it implements\n[tab completion](<a href=""https://en.wikipedia.org/wiki/Command-line_completion"">https://en.wikipedia.org/wiki/Command-line_completion</a>]\nwhereby it will reduce overall typing by allowing you few\ncharacters of the package name and/or launch file name followed\nby a tab character to cause the <code>roslaunch</code> to fill in as\nmany unambiguous characters as possible.  When it comes to finding\n<code>.launch</code> files, <code>roslaunch</code> recursively visits all of the\ndirectories and sub-directories in a ROS package and identifies\nevery file that ends in <code>.launch</code>.  It does not matter what\npackage sub-directory the .launch file is in, <code>roslaunch</code> will\nfind it.  It is really that simple. </p>\n\n<p>A robot launch file repository will have many launch files.\nMany of these file are likely to only be used via\nthe <code>&lt;include&gt;</code> tag in some other launch files.  These\nlaunch files use the <code>.launch.xml</code> suffix, so that when\nyou are using tab completion for <code>roslaunch</code>, they do not\nup as one of the possible completions.  That is all that\nis going on here.  To let <code>roslaunch</code> show a launch file\nvia tab complete, use the <code>.launch</code> suffix; otherwise,\nuse the <code>.launch.xml</code> suffix to keep <code>roslaunch</code> from\nshowing the launch file via tab completion.  It is that easy.</p>\n\n<h3 id=""launch-file-parameterization"">Launch File Parameterization</h3>\n\n<p>The goal of a robot launch repository is to provide\nhigh quality launch files that work across multiple\nrobot platforms and configurations.  It would be\npossible to build monolithic launch files that do not\nuse any <code>&lt;include&gt;</code> directives.  The reason for not\ndoing that is because you would have lots of replicated\ntext across multiple launch files.  Fixing a problem\nin one launch file would have to be manually propagated\nto all the other launch files.  This would be a maintenance\nnightmare.</p>\n\n<p>The solution is to break the launch files into a number\nof smaller launch files and create the robot configuration\nvia composition as described in the\n<a href=""http://wiki.ros.org/roslaunch/Architecture"">roslaunch Architecture</a>.</p>\n\n<p>To get additional reuse, the launch files need to be\nparameterized such that the same launch file can be\nused for multiple robots.</p>\n\n<p>For example, the most common parameter is the robot base name.\nThis is called the <code>robot_base</code> parameter and it expected to be\ngiven a robot base name (e.g. <code>loki</code>, <code>magni</code>, <code>botvac</code>, etc.)\nThis argument is used to select between different parameter\nfiles (e.g. <code>loki.yaml</code> vs. <code>magni.yaml</code>, or <code>loki.urdf</code> vs.\n<code>magni.urdf</code>, etc.)</p>\n\n<h3 id=""launch-file-documentation-structure"">Launch File Documentation Structure</h3>\n\n<p>The front portion of a launch file is structured as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    &lt;launch&gt;\n      &lt;!--Summary: One line summary of launch file --&gt;\n      &lt;!--Overview: Multi-line overview 1\n          Multi-line overview 2\n          ...\n          Multi-line overview N --&gt;\n\n      &lt;!-- Required Arguments --&gt;\n      &lt;arg name=""input_name1"" /&gt;\n        &lt;!--input_name1: Documentation about `input_name1` --&gt;\n      ...\n      &lt;arg name=""input_nameN"" /&gt;\n        &lt;!--input_nameN: Documentation about `input_nameN` --&gt;\n\n      &lt;!-- Convenience Arguments --&gt;\n      &lt;arg name=""short_name1"" value=""short value 1"" /&gt;\n      ...\n      &lt;arg name=""short_nameN"" value=""short value N"" /&gt;\n\n      &lt;!-- Optional Arguments --&gt;\n      &lt;arg name=""option_name1"" default=""default value 1"" /&gt;\n        &lt;!--optional_nameN: Documentation about `optional_nameN` --&gt;\n      ...\n      &lt;arg name=""option_nameN"" default=""default value N"" /&gt;\n        &lt;!--optional_nameN: Documentation about `optional_nameN` --&gt;\n\n      ...\n\n      &lt;!-- Rest of launch file goes here: --&gt;\n\n    &lt;/launch&gt;\n</code></pre></div>\n<p>Each comment has the form:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    &lt;!--NAME: Documentation text --&gt;\n</code></pre></div>\n<p>where <code>NAME</code> is an alpha-numeric identifier with optional underscores.\nThese comments are found and processed by the <code>generate_launches.py</code>\nprogram to extract documentation.  The <code>NAME</code> field either specifies\na launch file input argument, or the values <code>Summary</code> or <code>Overview</code>.\nThe documentation text is written using markdown formatting rules\n(e.g. <em>italics</em>, <strong>bold</strong>, <code>fixed_pitch</code>, etc.)</p>\n\n<h3 id=""launch-sub-directory-structure"">Launch Sub-Directory Structure</h3>\n\n<p>Each launch sub-directory is organized as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    LAUNCH_DIR_NAME/\n        launch/   # Usually one `.launch` (or `.launch.xml`) file\n        params/   # One or more `.yaml` (or other) parameter files\n        rviz/     # One or more `.rviz` configuration files\n        urdf/     # One or more `.urdf` configuration files\n</code></pre></div>\n<p>It is not clear why there is an additional level of sub-directory\nfor each different data type, but the turtlebot launch directories\nhave this structure, so it was decided to copy it.  (There may be\nsome subtle interaction with <a href=""http://wiki.ros.org/bloom"">ROS <code>bloom</code></a>\nthat is not yet fully understood.  Alternatively, it could be\nmonkey see, monkey do.)</p>\n\n<h3 id=""using-git-branches-to-experiment"">Using <code>git</code> Branches to Experiment</h3>\n\n<p>There is not much to say here.  If you want to tweak things\nto experiment, you can use <code>git</code> to get a copy of the files,\ncreate a branch and modify things to your hearts content.\nIf you can make a the case that you configuration works\nbetter that what is currently in the <code>ubiquity_launches</code>\ngit repository, please submit a pull request back to the\nmaster <code>ubiquity_launches</code> git repository.</p>\n\n<h2 id=""some-examples"">Some Examples</h2>\n\n<p>Below are three examples:</p>\n\n<ul>\n<li><p>A single node launch file (i.e. <code>n_*</code>.)</p></li>\n<li><p>A multi-node launch file (i.e. <code>m_*</code>.)</p></li>\n<li><p>An executable script file. (i.e. <code>bin/*</code>.)</p></li>\n</ul>\n\n<h3 id=""n_-example"">\n<code>n_*</code> Example</h3>\n\n<p>The launch file for <code>n_robot_state_publisher</code> can be found in\n<code>.../n_robot_state_publisher/launch/n_robot_state_publisher.launch.xml</code>.\n(There are uninteresting minor differences.)  The file is shown below:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    &lt;launch&gt;\n      &lt;!--Summary: Launch the ROS `robot_state_publisher` node. --&gt;\n      &lt;!--Overview: The launch file for this directory starts the ROS\n          [`robot_state_publisher`](http://wiki.ros.org/robot_state_publisher)\n          node.  This launch file selects the `.urdf` file based upon\n          the `robot_base` argument.  The URDF files are stored in\n          `...n_robot_state_publisher/urdf/{robot_base}.urf`. --&gt;\n\n      &lt;!-- Required arguments: --&gt;\n      &lt;arg name=""robot_base"" /&gt;\n        &lt;!--robot_base: Robot base name (e.g. ""magni"", ""loki"", etc."" --&gt;\n\n      &lt;!-- Convenience arguments: --&gt;\n      &lt;arg name=""root"" value=""$(find ubiquity_launches)"" /&gt;\n      &lt;arg name=""node""  value=""robot_state_publisher"" /&gt;\n\n      &lt;!-- Optional arguments: --&gt;\n      &lt;arg name=""node_name"" default=""n_$(arg node)"" /&gt;\n        &lt;!--node_name: The name of the ROS node. --&gt;\n\n      &lt;!-- Launch the robot state publisher:  --&gt;\n      &lt;param name=""robot_description""\n       textfile=""$(arg root)/n_$(arg node)/urdf/$(arg robot_base).urdf"" /&gt;\n      &lt;node name=""$(arg node_name)""\n       pkg=""$(arg node)"" type=""state_publisher"" /&gt;\n    &lt;/launch&gt;\n</code></pre></div>\n<p>Note that we have a pretty standard order in which stuff is done:</p>\n\n<ol>\n<li><p>Naturally, the <code>&lt;launch&gt;</code> tag is first.</p></li>\n<li><p>The <code>&lt;!--Summary: ... --&gt;</code> one line summary is next.</p></li>\n<li><p>The <code>&lt;!--Overview: ... --&gt;</code> multi-line summary is next.</p></li>\n<li><p>The <code>&lt;!-- Required arguments: --&gt;</code> are next.  In this case, there\nis one required argument called <code>robot_base</code>.  <code>robot_base</code> is\none of the more common arguments.</p></li>\n<li><p>The <code>&lt;!-- Convenience arguments: --&gt;</code> are next.  In this case,\nboth <code>root</code> and <code>rsp</code> are defined.  When <code>root</code> argument is\nfully expanded, it will be something like\n<code>/home/name/catkin_ws/src/ubiquity_launches</code>.  The <code>root</code> argument\nis almost always present in an <code>n_*</code> launch file.  The <code>node</code>\nargument is short hand for the package name.  In this case,\nthe package name is <code>robot_state_publisher</code>.  Using <code>$arg(node)</code>\ntakes 10 characters rather than 21 characters for\n<code>robot_state_publisher</code>.</p></li>\n<li><p>The <code>&lt;!-- Optional arguments: --&gt;</code> comes next.  In this example,\n<code>node_name</code> is defined.  This defaults to <code>n_robot_state_publisher</code>.\nNote that the <code>default=""n_$(arg node)""</code> uses one of the previously\ndefined arguments.  It should be mentioned that <code>node_name</code> is\npretty much present for every <code>n_*</code> launch file.  This lets people\ncreate multiple nodes using the same launch file, with each\nnode having a different name.</p></li>\n<li><p>The <code>&lt;param ...&gt;</code> is next.  It specifies the parameter name and\na fully qualified path to the <code>.urdf</code> file.  On the Ubiquity\nstandard Raspberry Pi system image with <code>robot_base</code> set to <code>loki</code>,\n<code>$(arg root)/n_$(arg node)/urdf/$(arg robot_base).urdf</code> expands to\n<code>/home/ubuntu/catkin_ws/ubiquity_launches/n_robot_state_publisher/urdf/loki.urdf</code></p></li>\n<li><p>The <code>&lt;node ...&gt;</code> is next.  It actually launches the ROS node.\nThe node name comes from <code>$(arg node_name)</code>, which will default\nto <code>n_robot_state_publisher</code>.  The package name comes from\n<code>$(arg node)</code> which expands to <code>robot_state_publisher</code>.</p></li>\n<li><p>The <code>&lt;/launch&gt;</code> comes last.</p></li>\n</ol>\n\n<p>That should give you a pretty good understanding of how an <code>n_*</code>\nstyle launch file tends to be structured.</p>\n\n<h3 id=""m_-example"">\n<code>m_*</code> Example</h3>\n\n<p>The launch file for <code>m_joystick_teleop</code> can be found in\n<code>.../m_joystick_teleop/launch/n_joystick_teleop.launch</code>.\n(There are some uninteresting minor differences.)\nThe file is shown below:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    &lt;launch&gt;\n      &lt;!--Summary: Start joystick remote control nodes. --&gt;\n      &lt;!--Overview: The launch file for this directory fires off the\n          joystick nodes to support the wireless PS2/XBox game controller\n          for  driving the robot around.  This launch file requires a\n          `robot_base` argument to specify which robot base is being\n          used (e.g `loki`, `magni`, etc.) --&gt;\n\n      &lt;!-- Required arguments: --&gt;\n      &lt;arg name=""robot_base"" /&gt;\n        &lt;!--robot_base: Base being used (e.g. ""magni"", ""loki"", etc.) --&gt;\n\n      &lt;!-- Convenience arguments: --&gt;\n      &lt;arg name=""root"" value=""$(find ubiquity_launches)"" /&gt;\n      &lt;arg name=""bsm""  value=""$(arg robot_base)_serial_master"" /&gt;\n      &lt;arg name=""rsp""  value=""robot_state_publisher"" /&gt;\n      &lt;arg name=""joy""  value=""joy"" /&gt;\n      &lt;arg name=""ttj""  value=""teleop_twist_joy"" /&gt;\n\n      &lt;!-- Fire off each node: --&gt;\n      &lt;include\n       file=""$(arg root)/n_$(arg bsm)/launch/n_$(arg bsm).launch.xml"" /&gt;\n\n      &lt;include\n       file=""$(arg root)/n_$(arg rsp)/launch/n_$(arg rsp).launch.xml""&gt;\n        &lt;arg name=""robot_base"" value=""$(arg robot_base)"" /&gt;\n      &lt;/include&gt;\n\n      &lt;include\n       file=""$(arg root)/n_$(arg joy)/launch/n_$(arg joy).launch.xml"" /&gt;\n\n      &lt;include\n       file=""$(arg root)/n_$(arg ttj)/launch/n_$(arg ttj).launch.xml""&gt;\n        &lt;arg name=""robot_base"" value=""$(arg robot_base)"" /&gt;\n      &lt;/include&gt;\n    &lt;/launch&gt;\n</code></pre></div>\n<p>Note that we have a pretty standard order in which stuff is done:</p>\n\n<ol>\n<li><p>The <code>launch</code>, <code>&lt;!--Summary: ...&gt;</code>, <code>&lt;--Overview: ...&gt;</code>, and\n<code>&lt;!-- Required arguments --&gt;</code>, <code>&lt;!-- Convenience arguments --&gt;</code>\nare basically the same as the <code>n_*</code> example.  There are a few\nmore convenience arguments.  Lastly, there are no \n<code>&lt;!-- Optional arguments: -&gt;</code></p></li>\n<li>\n<p>Next, we start each node.  Each node that is launched has its own\n<code>&lt;include ...&gt;</code> tag.  In this example, 4 nodes are nodes being\nlaunched, so there are for <code>&lt;include ... &gt;</code> tags.  Two of the\nnodes require the <code>robot_base</code> argument, so they look as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  &lt;include\n   file=""$(arg root)/n_$(arg rsp)/launch/n_$(arg rsp).launch.xml""&gt;\n    &lt;arg name=""robot_base"" value=""$(arg robot_base)"" /&gt;\n  &lt;/include&gt;\n</code></pre></div>\n</li>\n</ol>\n\n<p>Notice how the <code>file</code> attribibute is specified.  <code>$(arg root)</code>\n   expands to <code>$(find ubiquity_launces)</code> which further expands\n   to <code>/home/ubuntu/catkin_ws/src/ubiquity_launches</code>.  The <code>$(arg rsp)</code>\n   is a convenience argument that expands to <code>robot_state_publisher</code>.\n   When fully expanded, the full path to the desired launch file\n   is found.  The <code>&lt;arg ...&gt;</code> specifies <code>robot_base</code> value to be\n   <code>$(arg robot_base)</code> which was passed into this launch file.  Thus,\n   <code>robot_base</code> is being passed through.  The launch files without\n   required arguments do not need any <code>&lt;arg ...&gt;</code> tags.</p>\n\n<h3 id=""bin-example"">\n<code>bin/*</code> Example</h3>\n\n<p>Here is an example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    <span class=""c"">#!/usr/bin/env bash</span>\n\n    <span class=""c"">##Summary: Cause Loki to collect local costmap.</span>\n    <span class=""c"">##Overview:</span>\n    <span class=""c"">##  This program is run on the robot and starts up a Loki platform</span>\n    <span class=""c"">##  that starts up robot that is running the both the PS3/XBox</span>\n    <span class=""c"">##  joystick nodes and the fiducial detection and slam nodes.</span>\n    <span class=""c"">##  The file is focused on generating a local cost map for viewing</span>\n    <span class=""c"">##  using the `loki_rviz_local_costmap` program.</span>\n\n    roslaunch ubiquity_launches m_fiducial_slam.launch.xml robot_base:<span class=""o"">=</span>loki\n</code></pre></div>\n<h2 id=""some-extra-thoughts"">Some Extra Thoughts</h2>\n\n<p>Right now all the files in the <code>.../ubiquity_launches/bin</code> directory\nhave a platform base name embedded in them (e.g. <code>loki_raspicam</code>.)\nThis is kind of bogus.  It causes there to be a plethora of\nprograms in the <code>bin</code> directory. In order to solve this problem,\nwe need a way to identify the platform base name separate from the\nprogram name.</p>\n\n<p>For the desktop/laptop, the patform name should just be fetch\nfrom the ROS parameters table.  Something like <code>/ur/base_name</code>\nwould be fine.  Thus, <code>loki_view_raspicam</code> would simplify to\n<code>ur_view_raspicam</code> and would work for the <code>stage</code>, <code>loki</code>,\n<code>magni</code> and <code>botvac</code> bases.  The launch file, would set the\nbase via appropriate </p>\n\n<p>For the robot, we should just load the <code>/ur/base_name</code> parameter\nfrom a known file.  There a multitude of different places to store\nthe base name and get it set.  We can also have a <code>/ur/variant</code>\nparameter for different variants of the same basic base platform\n(e.g. <code>botvac50</code>, <code>xv11</code>, etc.)  After the dust settles, the user\ncan just run <code>ur_raspicam</code> and it will bring up the RaspiCam\non the appropriate Loki, Magni, or BotVac platform.</p>\n</div>\n\n            \n          </div>'"
rosauth,http://rosindex.github.io/r/rosauth/,"jade,indigo",rosauth,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosauth"">rosauth <a href=""https://travis-ci.org/GT-RAIL/rosauth""><img src=""https://api.travis-ci.org/GT-RAIL/rosauth.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""server-side-tools-for-authorization-and-authentication-of-ros-clients"">Server Side tools for Authorization and Authentication of ROS Clients</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rosauth"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/rosauth/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>rosauth is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
robot_pose_publisher,http://rosindex.github.io/r/robot_pose_publisher/,"jade,fuerte,indigo",robot_pose_publisher,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Author: Russell Toris -- rctoris@wpi.edu\n\nFor full documentation, see: http://www.ros.org/wiki/robot_pose_publisher\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_pose_publisher"">robot_pose_publisher <a href=""https://travis-ci.org/GT-RAIL/robot_pose_publisher""><img src=""https://api.travis-ci.org/GT-RAIL/robot_pose_publisher.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""a-simple-node-to-publish-the-robot-39-s-position-relative-to-the-map-using-tfs"">A Simple Node to Publish the Robot\'s Position Relative to the Map using TFs</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/robot_pose_publisher"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/robot_pose_publisher/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>robot_pose_publisher is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
voronoi_planner,http://rosindex.github.io/r/voronoi_planner/,indigo,voronoi_planner,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""voronoi_planner"">voronoi_planner</h1>\n</div>\n\n            \n          </div>'"
pr2_plugs,http://rosindex.github.io/r/pr2_plugs/,"hydro,fuerte,electric,groovy,diamondback,indigo","checkerboard_pose_estimation,outlet_pose_estimation,pr2_image_snapshot_recorder,pr2_plugs,pr2_plugs_actions,pr2_plugs_common,pr2_plugs_msgs,stereo_wall_detection,visual_pose_estimation","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
spatial_temporal_learning,http://rosindex.github.io/r/spatial_temporal_learning/,"jade,indigo","spatial_temporal_learning,world_item_observer,world_item_search,worldlib","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""spatial_temporal_learning"">spatial_temporal_learning <a href=""https://travis-ci.org/GT-RAIL/spatial_temporal_learning""><img src=""https://api.travis-ci.org/GT-RAIL/spatial_temporal_learning.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""learning-methods-based-on-spatial-and-temporal-data"">Learning Methods Based on Spatial and Temporal Data</h4>\n\n<h3 id=""license"">License</h3>\n\n<p>spatial_temporal_learning is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS.md</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
qt_ros,http://rosindex.github.io/r/qt_ros/,"hydro,groovy,fuerte,indigo","qt_build,qt_create,qt_ros,qt_tutorials","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">= Qt-Ros =\n\nRos Documentation and Tutorials: http://wiki.ros.org/qt_create\n\n=== Overview ===\n\nIncludes templates and create scripts for quickly developing qt-based ros packages.\n\n* catkin_create_qt_pkg for quickly templating a qt-ros package.\n* Includes a master chooser as a docking element.\n\n=== Roadmap ===\n\n* Check if we still need cmake support for mingw\'s static builds.\n* Support more templates.\n* Spin off into a separate python module.\n* QDesigner elements.\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">= Qt-Ros =\n\n=== Overview ===\n\nIncludes templates and create scripts for quickly developing qt-based ros packages.\n\n* roscreate-qt-pkg for quickly templating a qt-ros package.\n* Includes a master chooser as a docking element.\n* Rosbuild and rosbuild2 supported.\n\n=== Roadmap ===\n\n* Check if we still need cmake support for mingw\'s static builds.\n* Support more templates.\n* Spin off into a separate python module.\n* QDesigner elements.\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">= Qt-Ros =\n\n=== Overview ===\n\nIncludes templates and create scripts for quickly developing qt-based ros packages.\n\n* catkin-create-qt-pkg for quickly templating a qt-ros package.\n* Includes a master chooser as a docking element.\n\n=== Roadmap ===\n\n* Check if we still need cmake support for mingw\'s static builds.\n* Support more templates.\n* Spin off into a separate python module.\n* QDesigner elements.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rovio,http://rosindex.github.io/r/rovio/,"hydro,groovy,fuerte","rovio,rovio_av,rovio_ctrl,rovio_shared","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Author: Russell Toris -- rctoris@wpi.edu\n\nFor full documentation, see: http://www.ros.org/wiki/rovio\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rovio"">rovio <a href=""https://travis-ci.org/GT-RAIL/rovio""><img src=""https://api.travis-ci.org/GT-RAIL/rovio.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""control-and-query-a-wowwee-rovio"">Control and Query a WowWee Rovio</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/rovio"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/rovio/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>rovio is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
receive_xsens,http://rosindex.github.io/r/receive_xsens/,"electric,groovy,fuerte,indigo",receive_xsens,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a ROS driver for Xsens MTi-10 and MTi-100 series motion trackers. Xsens has changed the message type for its 4th generation sensors. Drivers using the old message type are not compatible with the MTi-10 and MTi-100 series. To use this driver, a license number is required for the MT Software Suite. Setting up the sensor also becomes more complicated. \n\nWiki page: http://wiki.ros.org/receive_xsens\n\nHow to use:\n\n  1) Download the MT Software Suite (any version) and install it on a Windows machine (you may skip this step and use default sensor configuration), then download the MT SDK for Linux 4.2.1 and install it on a Linux machine (this should be the machine that ROS is installed on).\n\nHere is the software website: http://www.xsens.com/en/mt-software-suite\n\n  2) Follow the instructions in the MT SDK for Linux 4.2.1 to install the software and make sure the examples run correctly with the sensor. Here is a summary of the installation procedure.\n\n    (a) Unpack the MT SDK.\n    (b) Go to /shared_object folder, put the license number in the \xe2\x80\x9cserialkey.h\xe2\x80\x9d file, then \xe2\x80\x9cmake\xe2\x80\x9d and \xe2\x80\x9csudo make system_install\xe2\x80\x9d.\n    (c) Connect the sensor to the Linux machine and run one of the examples in /shared_object folder.\n\n  (3) Connect the sensor to the Windows machine and open the MT Manager. Click the button on top of the screen for \xe2\x80\x9coutput configuration options\xe2\x80\x9d, make sure \xe2\x80\x9cTurn Rate\xe2\x80\x9d and \xe2\x80\x9cAcceleration\xe2\x80\x9d are checked. You can also change frequency on the same page. If you skip this step, the sensor is configured to give orientation only by default.\n\n  (4) Clone this driver from github to a ROS workspace. Go to the cloned folder and find the \xe2\x80\x9csrc/serialkey.h\xe2\x80\x9d file, put your license number in it and use \xe2\x80\x9ccatkin_make\xe2\x80\x9d to build it.\n\n  (5) Roslaunch the \xe2\x80\x9creceive_xsens.launch\xe2\x80\x9d file in /launch folder. The driver will publish sensor_msgs/Imu typed messages named /imu/data.\n\nAdditional notes:\n\n* Your account might require permissions to communicate with the sensor. To do this, add the username to the dialout group by \xe2\x80\x9csudo adduser username dialout\xe2\x80\x9d and reboot the computer.\n\n* The current driver does not publish data from GPS. If used with MTi-G-700, minor code change may be needed. Users can change /src/main.cpp file between lines 176-210. Also, if magnetic field data is needed, users can uncommand lines 213-215 and add a corresponding ROS message publisher under line 110. Majority of the code is taken from Xsens Linux examples and is self explanatory. Please remember to configure the sensor to return data that you need using the MT Manager on a Windows machine.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
pr2_metapackages,http://rosindex.github.io/r/pr2_metapackages/,"hydro,indigo","pr2,pr2_base,pr2_desktop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pr2_metapackages"">pr2_metapackages</h1>\n\n<p>A repo containing the pr2 metapackages for use in ROS Hydro and Indigo. </p>\n\n<p>(Indigo-devel branch)</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pr2_metapackages"">pr2_metapackages</h1>\n\n<p>A repo containing the pr2 metapackages for use in ROS Hydro and Indigo. </p>\n\n<p>(Hydro-devel branch)</p>\n</div>\n\n            \n          </div>'"
nao_extras,http://rosindex.github.io/r/nao_extras/,"hydro,jade,groovy,indigo","nao_extras,nao_path_follower,nao_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nao_extras"">nao_extras</h1>\n\n<p>ROS stack for the Nao robot, see <a href=""http://www.ros.org/wiki/nao_extras"">http://www.ros.org/wiki/nao_extras</a></p>\n\n<p>Continues from the renamed nao_common stack: <a href=""https://github.com/ahornung/nao_common"">https://github.com/ahornung/nao_common</a></p>\n</div>\n\n            \n          </div>'"
kml_util,http://rosindex.github.io/r/kml_util/,indigo,kml_util,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kml_util"">kml_util</h1>\n\n<p>Generate KML file from ROS Odometry data. Enable visualization of traversed path in GoogleEarth.</p>\n\n<p>Author: Silvio Maeta - <a href=""mailto:smaeta@andrew.cmu.edu"">smaeta@andrew.cmu.edu</a></p>\n\n<p>Install required packages:\n    $ apt-get update\n    $ apt-get install python-pip\n    $ pip install utm\n    $ easy-install pykml</p>\n\n<p>Take a look in the kml_util/launch/generate_kml.launch to configure:\n - output_filename: output path and filename for the PDF report containing the plots\n - pose_topic: Odometry message topic name - position information needs to be in UTM coordinate format. \n - utm_zone_number: UTM zone number is required because UTM coordinates are converted to LatLong in order to be saved in the KML file.</p>\n\n<p>OBS: Odometry position expected in NED coordinate frame (North=X / East=Y / Down=Z)</p>\n</div>\n\n            \n          </div>'"
plot_util,http://rosindex.github.io/r/plot_util/,indigo,plot_util,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""plot_util"">plot_util</h1>\n\n<p>Generate PDF file report using ROS Odometry data.</p>\n\n<p>Author: Silvio Maeta - <a href=""mailto:smaeta@andrew.cmu.edu"">smaeta@andrew.cmu.edu</a></p>\n\n<p>Take a look in the plot_util/launch/generate_plots.launch to configure:\n - output_filename: output path and filename for the PDF report containing the plots\n - pose_topic: Odometry message topic name</p>\n\n<p>OBS: this plot generator was developed expecting position in NED frame - North=X / East=Y / Down=Z\nThe python code can be easily modified to support other coordinate frames.</p>\n</div>\n\n            \n          </div>'"
sophus_ros_toolkit,http://rosindex.github.io/r/sophus_ros_toolkit/,indigo,sophus_ros_conversions,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kobuki_desktop,http://rosindex.github.io/r/kobuki_desktop/,"hydro,fuerte,groovy,jade,indigo","kobuki_dashboard,kobuki_desktop,kobuki_gazebo,kobuki_gazebo_plugins,kobuki_qtestsuite,kobuki_rviz_launchers,kobuki_usb_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">kobuki_simulator\n================\n\nThis is not real!\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">kobuki_desktop\n================\n\nVisualisation and simulation tools for Kobuki\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
jsk_demos,http://rosindex.github.io/r/jsk_demos/,"diamondback,electric,indigo","detect_cans_in_fridge_201202,elevator_move_base_pr2,interactive_behavior_201409,jsk_2011_07_pr2_semantic,jsk_2013_04_pr2_610,jsk_2013_05_pr2_tatu,jsk_2014_06_pr2_drcbox,drc_com_common,drc_task_common,drc_valve_task,gazebo_drive_simulator,jsk_demo_common,jsk_maps,jsk_semantic_maps,2010_05_pr2_workshop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_demos"">jsk_demos <a href=""https://travis-ci.org/jsk-ros-pkg/jsk_demos""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_demos.svg?branch=master"" alt=""Build Status""></a>\n</h1>\n\n<p>JSK demo programs</p>\n\n<h2 id=""jsk_2013_04_pr2_610""><a href=""https://github.com/jsk-ros-pkg/jsk_demos/tree/master/jsk_2013_04_pr2_610"">jsk_2013_04_pr2_610</a></h2>\n\n<p><img src=""https://gist.githubusercontent.com/k-okada/b3308c08ce31230e8947/raw/c14d6c52d8bf35fd5c244d989beccd35caa6fa8a/jsk_2013_04_pr2_irt_4.png%20=200x200"" alt=""bloom""></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
libuvc_ros,http://rosindex.github.io/r/libuvc_ros/,"hydro,groovy,fuerte,indigo","libuvc_camera,libuvc_ros,libuvc","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-driver-for-usb-video-class-cameras"">ROS Driver for USB Video Class Cameras</h1>\n\n<p><code>libuvc_camera</code> is a ROS driver that supports webcams and other UVC-standards-compliant video devices.\nIt\'s a cross-platform replacement for <code>uvc_camera</code>, a Linux-only webcam driver.</p>\n\n<p>Documentation is available on the ROS wiki: <a href=""http://wiki.ros.org/libuvc_camera"">libuvc_camera</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_in_hand_scanner,http://rosindex.github.io/r/ros_in_hand_scanner/,indigo,ros_in_hand_scanner,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_in_hand_scanner"">ros_in_hand_scanner</h1>\n\n<h2 id=""description"">Description</h2>\n\n<p>The ROS In-hand scanner provides a 3D Scanning application based on the PCL In-hand scanner for small objects by Martin S\xc3\xa4lzle and the PCL developers.</p>\n\n<p>Original PCL Documentation can be found here:</p>\n\n<p><a href=""http://pointclouds.org/documentation/tutorials/in_hand_scanner.php"">http://pointclouds.org/documentation/tutorials/in_hand_scanner.php</a></p>\n\n<p>The following video shows a scanning process using Intel RealSense Camera.\n<a href=""https://drive.google.com/file/d/0B-EoR_OK9GCgcEw3V0l1ZnNPU2s/view"">https://drive.google.com/file/d/0B-EoR_OK9GCgcEw3V0l1ZnNPU2s/view</a></p>\n\n<h2 id=""dependencies"">Dependencies</h2>\n\n<p>This package needs PCL 1.8.0 to be installed. For further information, see the following link: <a href=""http://pointclouds.org/documentation/tutorials/compiling_pcl_posix.php#experimental"">http://pointclouds.org/documentation/tutorials/compiling_pcl_posix.php#experimental</a></p>\n\n<h2 id=""installation"">Installation</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#Prepare Workspace\nsource /opt/ros/indigo/setup.bash\nmkdir -p ~/rihs_ws/src\ncd ~/rihs_ws/src\ncatkin_init_workspace\ncd ~/rihs_ws/\ncatkin_make\nsource devel/setup.bash\n\n#Get ROS In-hand scanner\ncd ~/rihs_ws/src\ngit clone http://github.com/RodBelaFarin/ros_in_hand_scanner\ncd ~/rihs_ws/\n\n#Install\nrosdep update\nrosdep install ros_in_hand_scanner\ncatkin_make\n\n</code></pre></div>\n<h2 id=""topics"">Topics</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Subscriber Topic: camera/depth_registered/points\nMessage Type: sensor_msgs/PointCloud2\nDescription: organized point cloud\n\n</code></pre></div>\n<h2 id=""usage"">Usage</h2>\n\n<p>Some quick infos on how to use.</p>\n\n<p>Start the ROS In-hand scanner:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roscore\nrosrun ros_in_hand_scanner ros_in_hand_scanner_node\n\n</code></pre></div>\n<p>Due to performance issues, a realtime registration is very slow with down to &lt; 0.1 fps.\nA workaround is to record a rosbag file during the scanprocess itself. You can use the preview window to get a view of your actual scan orientation.\nPlay the rosbag file afterwards with a low rate ~0.1 and start registration now.\nFollow the hints in the PCL documentation for your scan process.</p>\n</div>\n\n            \n          </div>'"
usb_cam,http://rosindex.github.io/r/usb_cam/,"hydro,jade,groovy,indigo",usb_cam,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""usb_cam"">usb_cam <a href=""https://travis-ci.org/bosch-ros-pkg/usb_cam""><img src=""https://api.travis-ci.org/bosch-ros-pkg/usb_cam.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""a-ros-driver-for-v4l-usb-cameras"">A ROS Driver for V4L USB Cameras</h4>\n\n<p>This package is based off of V4L devices specifically instead of just UVC.</p>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/usb_cam"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/usb_cam/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>usb_cam is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
novatel_span_driver,http://rosindex.github.io/r/novatel_span_driver/,"hydro,jade,indigo","novatel_msgs,novatel_span_driver","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""novatel_span_driver"">novatel_span_driver</h1>\n\n<p><a href=""http://jenkins.ros.org/job/devel-indigo-novatel_span_driver/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-novatel_span_driver"" alt=""Build Status""></a></p>\n\n<p>This ROS package connects via Ethernet to a <a href=""http://www.novatel.com/"">NovAtel</a> receiver running\n<a href=""http://www.novatel.com/span"">SPAN</a>.</p>\n\n<p>Please see the ROS Wiki for details: <a href=""http://wiki.ros.org/novatel_span_driver"">http://wiki.ros.org/novatel_span_driver</a></p>\n</div>\n\n            \n          </div>'"
ardrone2islab,http://rosindex.github.io/r/ardrone2islab/,indigo,ardrone2islab,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ardrone_islab"">ardrone_islab</h1>\n\n<p>[ROS - hydro] Trajectory Control of AR.Drone ver 2.0 quadrotor model</p>\n</div>\n\n            \n          </div>'"
rocon_app_platform,http://rosindex.github.io/r/rocon_app_platform/,"hydro,groovy,kinetic,indigo","rocon_app_manager,rocon_app_platform,rocon_app_utilities,rocon_apps","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon-app-platform"">rocon app platform</h1>\n\n<p>Key components for ros app manager</p>\n</div>\n\n            \n          </div>'"
console_bridge,http://rosindex.github.io/r/console_bridge/,"hydro,groovy,indigo",console_bridge,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
velodyne_simulator,http://rosindex.github.io/r/velodyne_simulator/,"jade,indigo","velodyne_description,velodyne_gazebo_plugins,velodyne_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""velodyne-simulator"">Velodyne Simulator</h1>\n\n<p>URDF description and Gazebo plugins to simulate Velodyne laser scanners</p>\n\n<p><img src=""https://bitbucket.org//DataspeedInc/velodyne_simulator.git/raw/gazebo2//img/rviz.png"" alt=""rviz screenshot""></p>\n\n<h1 id=""features"">Features</h1>\n\n<ul>\n<li>URDF with colored meshes</li>\n<li>Gazebo plugin based on gazebo_ros_block_laser</li>\n<li>Publishes PointCloud2 with same structure (x, y, z, intensity, ring)</li>\n<li>Simulated Gaussian noise</li>\n</ul>\n\n<h1 id=""known-issues"">Known Issues</h1>\n\n<ul>\n<li>Gazebo cannot maintain 10Hz with large pointclouds\n\n<ul>\n<li>Solution: User can reduce number of points in urdf</li>\n</ul>\n</li>\n<li>Gazebo versions in indigo and jade have different z orientations\n\n<ul>\n<li>Solution: Maintain separate branches for urdf changes</li>\n</ul>\n</li>\n</ul>\n\n<h1 id=""example-gazebo-robot"">Example Gazebo Robot</h1>\n\n<p><code>roslaunch velodyne_description example.launch\n</code></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""velodyne-simulator"">Velodyne Simulator</h1>\n\n<p>URDF description and Gazebo plugins to simulate Velodyne laser scanners</p>\n\n<p><img src=""https://bitbucket.org//DataspeedInc/velodyne_simulator.git/raw/master//img/rviz.png"" alt=""rviz screenshot""></p>\n\n<h1 id=""features"">Features</h1>\n\n<ul>\n<li>URDF with colored meshes</li>\n<li>Gazebo plugin based on gazebo_ros_block_laser</li>\n<li>Publishes PointCloud2 with same structure (x, y, z, intensity, ring)</li>\n<li>Simulated Gaussian noise</li>\n</ul>\n\n<h1 id=""known-issues"">Known Issues</h1>\n\n<ul>\n<li>Gazebo cannot maintain 10Hz with large pointclouds\n\n<ul>\n<li>Solution: User can reduce number of points in urdf</li>\n</ul>\n</li>\n<li>Gazebo versions in indigo and jade have different z orientations\n\n<ul>\n<li>Solution: Maintain separate branches for urdf changes</li>\n</ul>\n</li>\n</ul>\n\n<h1 id=""example-gazebo-robot"">Example Gazebo Robot</h1>\n\n<p><code>roslaunch velodyne_description example.launch\n</code></p>\n</div>\n\n            \n          </div>'"
pepper_meshes,http://rosindex.github.io/r/pepper_meshes/,"hydro,jade,indigo",pepper_meshes,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This package allows you to install the Aldebaran Pepper meshes.\nIn devel space, you have to type:\n\n   make pepper_meshes_meshes\n\nWhen building a binary package, please make sure that with the installer the user has to agree to\nCreative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License\nthat is given in the LICENSE file: this is the only requirement from Aldebaran.\n\nJustification: in French law, only clicking/entering text is recognized as a virtual signature;\nthe LICENSE file is therefore not sufficient. Aldebaran allows you to redistribute those\nmeshes as long as they are given through an installer that asks the user to click/enter ""ok/yes"".\n\n\nAlso, the history of that repo will be frequently re-written ! we don\'t want to keep the old history\nof the meshes as this could result in heavy cloning.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
openreroc_motion_sensor,http://rosindex.github.io/r/openreroc_motion_sensor/,"jade,indigo",openreroc_motion_sensor,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""openreroc_motion_sensor"">openreroc_motion_sensor</h1>\n\n<p><a href=""https://github.com/Kumikomi/OpenReroc"">OpenReroc (Open Reconfigurable Robot Component)</a> is a project to build an open source platform of reconfigurable (i.e. FPGA) devices for robot components.<br>\nThis package supports ultra sonic sensor an FPGA board (<a href=""http://zedboard.org/"">ZedBoard</a> Xilinx). \n<em>openreroc_motion_sensor</em> publishes sensor data to the topic.  </p>\n\n<p><strong>Git</strong>:         <a href=""https://github.com/Kumikomi/openreroc_motion_sensor"">https://github.com/Kumikomi/openreroc_motion_sensor</a><br>\n<strong>Author</strong>:      Kazushi Yamashina (Utsunomiya University)<br>\n<strong>Copyright</strong>:   2015, Kazushi Yamashina, Utsunomiya University<br>\n<strong>License</strong>:      new BSD License<br>\n<strong>Latest Version</strong>: 0.1.0  </p>\n\n<h1 id=""directry-tree"">Directry tree</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">openreroc_motion_sensor \n|-include/ \n|-msg/ \n|-hardware\n    |-src/\n    |-image/\n|-src/ \n|-CMakeLists.txt \n|-package.xml  \n|-LICENSE.txt\n\n</code></pre></div>\n<h1 id=""requirements"">Requirements</h1>\n\n<h2 id=""platform-for-ros-system"">Platform for ROS system</h2>\n\n<ul>\n<li><a href=""http://zedboard.org/"">ZedBoard</a></li>\n<li>\n<a href=""http://xillybus.com/xillinux"">xillinux-1.3c</a>\n\n<ul>\n<li>Xillinux is used to communicate between FPGA logic and ARM processor. Xillinux is a platform for Zynq that is released by Xillybus Ltd. Linux (Ubuntu) OS runs on the ARM processor. Xillinux can access to FPGA logic through a specific device file.</li>\n</ul>\n</li>\n<li>ROS (hydro or groovy) please install on xillinux!</li>\n<li>ssh server</li>\n</ul>\n\n<h2 id=""software"">Software</h2>\n\n<ul>\n<li>ISE 14.7 (for hardware synthesis)</li>\n</ul>\n\n<h2 id=""sensor"">Sensor</h2>\n\n<ul>\n<li><a href=""https://www.parallax.com/product/28015"">PING))) Ultrasonic Distance Sensor | 28015 | Parallax Inc</a></li>\n</ul>\n\n<p><img src=""http://aquila.is.utsunomiya-u.ac.jp/~kazushi/sonic_sensor_img.jpeg"" alt="""" height=""150""></p>\n\n<h1 id=""how-to-build-software"">How to build software</h1>\n\n<p>Please replace <strong>catkin_ws</strong> to your work space name.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\ngit clone https://github.com/Kumikomi/openreroc_motion_sensor\ncd ..\ncatkin_make \n\n</code></pre></div>\n<h1 id=""test-run"">Test Run</h1>\n\n<ol>\n<li>\n<p><a href=""http://xillybus.com/downloads/doc/xillybus_getting_started_zynq.pdf"">Xillinux installation</a></p>\n\n<ul>\n<li><a href=""http://xillybus.com/xillinux"">http://xillybus.com/xillinux</a></li>\n</ul>\n</li>\n<li><p>Hardware bitstream installation\nPlease replace <strong>xillydemo.bit</strong> on the SD card with <code>openreroc_pwm/hardware/image/openreroc_motion_sensor.bit</code></p></li>\n<li><p>Insert SD card &amp; boot system</p></li>\n<li><p>Run sample nodes </p></li>\n</ol>\n\n<p><strong>terminal 1</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/\nsource devel/setup.bash\nroscore &amp;\nrosrun openreroc_motion_sensor sample_output\n\n</code></pre></div>\n<p><strong>terminal 2</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/\nsource devel/setup.bash\nrosrun openreroc_motion_sensor openreroc_motion_sensor\n\n</code></pre></div>\n<h1 id=""how-to-build-hardware"">How to build hardware</h1>\n\n<p>It\'s too complex to describe all the necessary procedure to build hardware, so some hints are shown below.\n1 : Place of Soruce code <code>hardware/src</code><br>\n2 : Pin assignment: add the code below to <strong>xillydemo.ucf</strong>  </p>\n<div class=""highlight""><pre><code class=""language-verilog"" data-lang=""verilog""><span class=""n"">NET</span>  <span class=""n"">led</span><span class=""p"">[</span><span class=""mi"">0</span><span class=""p"">]</span>     <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">V22</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""n"">LD4</span>\n<span class=""n"">NET</span>  <span class=""n"">led</span><span class=""p"">[</span><span class=""mi"">1</span><span class=""p"">]</span>     <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">W22</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""n"">LD5</span>\n<span class=""n"">NET</span>  <span class=""n"">led</span><span class=""p"">[</span><span class=""mi"">2</span><span class=""p"">]</span>     <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">U19</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""n"">LD6</span>\n<span class=""n"">NET</span>  <span class=""n"">led</span><span class=""p"">[</span><span class=""mi"">3</span><span class=""p"">]</span>     <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">U14</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""n"">LD7</span>\n\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">7</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">K18</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA05_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">8</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">J18</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA05_P""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">9</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">L22</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA06_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">10</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">L21</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA06_P""</span>\n\n</code></pre></div>\n<p>3 : Add the ports to Top module <strong>xillydemo.v</strong></p>\n<div class=""highlight""><pre><code class=""language-verilog"" data-lang=""verilog""><span class=""kt"">inout</span> <span class=""n"">sig</span><span class=""o"">,</span>\n<span class=""kt"">output</span> <span class=""p"">[</span><span class=""mi"">3</span><span class=""o"">:</span><span class=""mi"">0</span><span class=""p"">]</span> <span class=""n"">led</span>\n\n</code></pre></div>\n<p>4 : Add the FIFO connection to Top module <strong>xillydemo.v</strong></p>\n<div class=""highlight""><pre><code class=""language-verilog"" data-lang=""verilog""><span class=""c1"">// 32-bit loopback\n//   fifo_32x512 fifo_32\n//     (\n//      .clk(bus_clk),\n//      .srst(!user_w_write_32_open &amp;&amp; !user_r_read_32_open),\n//      .din(user_w_write_32_data),\n//      .wr_en(user_w_write_32_wren),\n//      .rd_en(user_r_read_32_rden),\n//      .dout(user_r_read_32_data),\n//      .full(user_w_write_32_full),\n//      .empty(user_r_read_32_empty)\n//      );\n</span>\n<span class=""n"">sensor_ctl</span> <span class=""n"">sensor_ctl</span>\n<span class=""p"">(</span>\n    <span class=""o"">.</span><span class=""n"">clk</span><span class=""p"">(</span><span class=""n"">bus_clk</span><span class=""p"">)</span><span class=""o"">,</span>\n    <span class=""o"">.</span><span class=""n"">rst_32</span><span class=""p"">(</span><span class=""o"">!</span><span class=""n"">user_w_write_32_open</span> <span class=""o"">&amp;&amp;</span> <span class=""o"">!</span><span class=""n"">user_r_read_32_open</span><span class=""p"">)</span><span class=""o"">,</span>\n    <span class=""o"">.</span><span class=""n"">din_32</span><span class=""p"">(</span><span class=""n"">user_w_write_32_data</span><span class=""p"">)</span><span class=""o"">,</span>\n    <span class=""o"">.</span><span class=""n"">wr_en_32</span><span class=""p"">(</span><span class=""n"">user_w_write_32_wren</span><span class=""p"">)</span><span class=""o"">,</span>\n    <span class=""o"">.</span><span class=""n"">rd_en_32</span><span class=""p"">(</span><span class=""n"">user_r_read_32_rden</span><span class=""p"">)</span><span class=""o"">,</span>\n    <span class=""o"">.</span><span class=""n"">dout_32</span><span class=""p"">(</span><span class=""n"">user_r_read_32_data</span><span class=""p"">)</span><span class=""o"">,</span>\n    <span class=""o"">.</span><span class=""n"">full_32</span><span class=""p"">(</span><span class=""n"">user_w_write_32_full</span><span class=""p"">)</span><span class=""o"">,</span>\n    <span class=""o"">.</span><span class=""n"">empty_32</span><span class=""p"">(</span><span class=""n"">user_r_read_32_empty</span><span class=""p"">)</span><span class=""o"">,</span>\n    <span class=""o"">.</span><span class=""n"">sig</span><span class=""p"">(</span><span class=""n"">sig</span><span class=""p"">)</span><span class=""o"">,</span>\n    <span class=""o"">.</span><span class=""n"">led</span><span class=""p"">(</span><span class=""n"">led</span><span class=""p"">)</span>\n<span class=""p"">)</span><span class=""o"">;</span>\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
nao_meshes,http://rosindex.github.io/r/nao_meshes/,"hydro,jade,kinetic,indigo",nao_meshes,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This package allows you to install the Aldebaran NAO meshes.\nIn devel space, you have to type:\n\n   make nao_meshes_meshes\n\nWhen building a binary package, please make sure that with the installer the user has to agree to\nCreative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License\nthat is given in the LICENSE file: this is the only requirement from Aldebaran.\n\nJustification: in French law, only clicking/entering text is recognized as a virtual signature;\nthe LICENSE file is therefore not sufficient. Aldebaran allows you to redistribute those\nmeshes as long as they are given through an installer that asks the user to click/enter ""ok/yes"".\n\n\nAlso, the history of that repo will be frequently re-written ! we don\'t want to keep the old history\nof the meshes as this could result in heavy cloning.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
hector_vision,http://rosindex.github.io/r/hector_vision/,"hydro,fuerte,groovy,jade,indigo","hector_heat_detection,hector_motion_detection,hector_qrcode_detection,hector_soft_obstacle_detection,hector_thermal_self_filter","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
moveit_resources,http://rosindex.github.io/r/moveit_resources/,"hydro,jade,groovy,indigo",moveit_resources,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-resources"">MoveIt Resources</h1>\n\n<p>This repository includes various resources needed for MoveIt!</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>master branch: <a href=""https://travis-ci.org/ros-planning/moveit_resources""><img src=""https://travis-ci.org/ros-planning/moveit_resources.png?branch=master"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
robot_self_filter,http://rosindex.github.io/r/robot_self_filter/,"jade,indigo",robot_self_filter,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_self_filter"">robot_self_filter</h1>\n\n<p>Added Indigo devel</p>\n</div>\n\n            \n          </div>'"
cyton_gamma_1500_description,http://rosindex.github.io/r/cyton_gamma_1500_description/,"hydro,indigo",cyton_gamma_1500_description,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">cyton_gamma_1500\n================\n\nURDF description for the Robai Cyton Gamma 1500 robot manipulator.\n\nThe model doesn\'t work in Gazebo (works perfectly in RViz) at the moment. This is most probably due to the incompatible mesh format for Gazebo - the DAE mesh polygons have to be formatted differently. If you have a fix, let me know.\n\n\nSpecial thanks to Giorgio Toscana for providing the model extraction script!\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
barrett_hand,http://rosindex.github.io/r/barrett_hand/,"hydro,groovy,indigo","barrett_hand,bhand_controller,rqt_bhand,bhand_description","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""description"">Description</h2>\n\n<p>ROS package to control the Barrett Hand </p>\n\n<h2 id=""external-dependencies"">External dependencies</h2>\n\n<ul>\n<li>\n<p>pcan_python. Python wrapper for the Peak-CAN driver</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">https://github.com/RobotnikAutomation/pcan_python.git\n</code></pre></div>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
force_torque_tools,http://rosindex.github.io/r/force_torque_tools/,"hydro,jade,groovy,indigo","force_torque_sensor_calib,force_torque_tools,gravity_compensation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""force_torque_tools"">force_torque_tools</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Tools for gravity compensation and sensor calibration for wrist-mounted force-torque sensors in robot manipulators.</p>\n\n<ul>\n<li>force_torque_sensor_calib: calibrates force-torque sensor bias, gripper mass and center of mass of the gripper.</li>\n<li>gravity_compensation: performs gravity compensation to force-torque sensor measurements after calibrating with the  <strong>force_torque_sensor_calib</strong> package.</li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<p>Make sure you have a working catkin workspace, as described at:\n<a href=""http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace"">http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace</a></p>\n\n<p>Also make sure you have git installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Change directory to the source folder of your catkin workspace.\nIf, for instance, your workspace is <code>~/catkin_ws</code>, make sure there is\na <code>src/</code> folder within it, then execute:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\n</code></pre></div>\n<p>Download the metapackage from the github repository (<ros_distro> may be <code>groovy</code> or <code>hydro</code>):</ros_distro></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone -b &lt;ros_distro&gt; https://github.com/kth-ros-pkg/force_torque_tools.git\n</code></pre></div>\n<p>Compile your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws\ncatkin_make\n</code></pre></div>\n<h2 id=""force_torque_sensor_calib"">force_torque_sensor_calib</h2>\n\n<h3 id=""overview"">Overview</h3>\n\n<p>This package can calibrate through least-squares the following parameters related to a <strong>wrist-mounted force-torque sensor</strong>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Bias of the F/T sensor\nMass of the gripper\nLocation of the center of mass of the attached gripper\n</code></pre></div>\n<p>Running this software assumes that you have an <strong>accelerometer/imu</strong> whose reference frame is already calibrated with respect to the e.g. base frame of the robot manipulator. It also assumes that you have a manipulator previously configured to be controlled through <strong>MoveIt!</strong>. </p>\n\n<p>The software calibrates the F/T sensor by moving the manipulator into a number of different poses and using\nthe resulting F/T sensor and accelerometer signals for computing a least-squares estimate of the parameters.\nCalibration can be done by either manually specifying explicitly the manipulator poses in the parameter server (parameters <strong>pose0, pose1, pose2, ... poseN</strong>) or by executing N random poses.</p>\n\n<h3 id=""running-the-calibration-node"">Running the calibration node</h3>\n\n<p>Make sure that the robot is still and other objects don\'t obstruct the arms while they move into the calibration poses.</p>\n\n<p>You can look at the configuration/launch files in the <code>config</code> and <code>launch</code> folders for examples on how to set the parameters and launch the software for your robot. For more details on the parameters required to launch the calibration node visit the <a href=""http://wiki.ros.org/force_torque_sensor_calib"">ROS wiki page</a> of the <strong>force_torque_sensor_calib</strong> package and the <a href=""http://wiki.ros.org/force_torque_tools/Tutorials"">tutorials page</a>.</p>\n\n<p>The calibration software will produce a <strong>yaml</strong> calibration file that can later be used for gravity compensation. By default the file will be written in the <strong>~/.ros/ft_calib/</strong> directory.</p>\n\n<h2 id=""gravity_compensation"">gravity_compensation</h2>\n\n<p>Compensates gravity forces measured by a force-torque sensor.\nUses the <strong>yaml</strong> calibration file produced by the <strong>force_torque_sensor_calib</strong> package and gravity measurements given by an accelerometer whose reference frame has been previously calibrated to the frame of the robot.</p>\n\n<p>You can look at the configuration/launch files in the <code>config</code> and <code>launch</code> folders for examples on how to launch this software.</p>\n\n<p>For more details on running the software visit the package\'s <a href=""http://wiki.ros.org/gravity_compensation"">ROS wiki page</a> and the <a href=""http://wiki.ros.org/force_torque_tools/Tutorials"">tutorials page</a>.</p>\n\n<h2 id=""references"">References</h2>\n\n<p>Equations are based on <strong>""On-line Rigid Object Recognition and Pose Estimation Based on Inertial Parameters""</strong>, D. Kubus, T. Kroger, F. Wahl, IROS 2008</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""force_torque_tools"">force_torque_tools</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Tools for gravity compensation and sensor calibration for wrist-mounted force-torque sensors in robot manipulators.</p>\n\n<ul>\n<li>force_torque_sensor_calib: calibrates force-torque sensor bias, gripper mass and center of mass of the gripper.</li>\n<li>gravity_compensation: performs gravity compensation to force-torque sensor measurements after calibrating with the  <strong>force_torque_sensor_calib</strong> package.</li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<p>Make sure you have a working catkin workspace, as described at:\n<a href=""http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace"">http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace</a></p>\n\n<p>Also make sure you have git installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Change directory to the source folder of your catkin workspace.\nIf, for instance, your workspace is <code>~/catkin_ws</code>, make sure there is\na <code>src/</code> folder within it, then execute:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\n</code></pre></div>\n<p>Download the metapackage from the github repository (<ros_distro> may be <code>groovy</code> or <code>hydro</code>):</ros_distro></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone -b &lt;ros_distro&gt; https://github.com/kth-ros-pkg/force_torque_tools.git\n</code></pre></div>\n<p>Compile your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws\ncatkin_make\n</code></pre></div>\n<h2 id=""force_torque_sensor_calib"">force_torque_sensor_calib</h2>\n\n<h3 id=""overview"">Overview</h3>\n\n<p>This package can calibrate through least-squares the following parameters related to a <strong>wrist-mounted force-torque sensor</strong>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Bias of the F/T sensor\nMass of the gripper\nLocation of the center of mass of the attached gripper\n</code></pre></div>\n<p>Running this software assumes that you have an <strong>accelerometer/imu</strong> already calibrated with respect to the robot manipulator. It also assumes that you have a manipulator previously configured to be controlled through <strong>MoveIt!</strong>. </p>\n\n<p>The software calibrates the F/T sensor by moving the manipulator into a number of different poses and using\nthe resulting F/T sensor and accelerometer signals for computing a least-squares estimate of the parameters.\nCalibration can be done by either manually specifying explicitly the manipulator poses in the parameter server (parameters <strong>pose0, pose1, pose2, ... poseN</strong>) or by executing N random poses.</p>\n\n<h3 id=""running-the-calibration-node"">Running the calibration node</h3>\n\n<p>Make sure that the robot is still and other objects don\'t obstruct the arms while they move into the calibration poses.</p>\n\n<p>You can look at the configuration/launch files in the <code>config</code> and <code>launch</code> folders for examples on how to set the parameters and launch the software for your robot. For more details on the parameters required to launch the calibration node visit the <a href=""http://wiki.ros.org/force_torque_sensor_calib"">ROS wiki page</a> of the <strong>force_torque_sensor_calib</strong> package and the <a href=""http://wiki.ros.org/force_torque_tools/Tutorials"">tutorials page</a>.</p>\n\n<p>The calibration software will produce a <strong>yaml</strong> calibration file that can later be used for gravity compensation. By default the file will be written in the <strong>~/.ros/ft_calib/</strong> directory.</p>\n\n<h2 id=""gravity_compensation"">gravity_compensation</h2>\n\n<p>Compensates gravity forces measured by a force-torque sensor.\nUses the <strong>yaml</strong> calibration file produced by the <strong>force_torque_sensor_calib</strong> package and gravity measurements given by an accelerometer that has been previously calibrated to the frame of the robot.</p>\n\n<p>You can look at the configuration/launch files in the <code>config</code> and <code>launch</code> folders for examples on how to launch this software.</p>\n\n<p>For more details on running the software visit the package\'s <a href=""http://wiki.ros.org/gravity_compensation"">ROS wiki page</a> and the <a href=""http://wiki.ros.org/force_torque_tools/Tutorials"">tutorials page</a>.</p>\n\n<h2 id=""references"">References</h2>\n\n<p>Equations are based on <strong>""On-line Rigid Object Recognition and Pose Estimation Based on Inertial Parameters""</strong>, D. Kubus, T. Kroger, F. Wahl, IROS 2008</p>\n</div>\n\n            \n          </div>'"
asctec_mav_framework,http://rosindex.github.io/r/asctec_mav_framework/,"hydro,fuerte,electric,groovy,indigo","asctec_hl_comm,asctec_hl_gps,asctec_hl_interface,asctec_mav_framework,asctec_hl_firmware","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""asctec_mav_framework"">asctec_mav_framework</h1>\n\n<p>Framework for data aquisition and position control to be used with the highlevel processor of Ascending Technologies helicopters.</p>\n\n<h2 id=""dependencies"">Dependencies</h2>\n\n<p>This package depends on:</p>\n\n<p><a href=""https://github.com/ethz-asl/asctec_mav_framework"">https://github.com/ethz-asl/asctec_mav_framework</a><br>\n<a href=""https://github.com/ethz-asl/ethzasl_msf"">https://github.com/ethz-asl/ethzasl_msf</a><br>\n<a href=""https://github.com/ethz-asl/glog_catkin"">https://github.com/ethz-asl/glog_catkin</a><br>\n<a href=""https://github.com/catkin/catkin_simple"">https://github.com/catkin/catkin_simple</a>  </p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
yocs_msgs,http://rosindex.github.io/r/yocs_msgs/,"hydro,kinetic,indigo",yocs_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""yocs_msgs"">yocs_msgs</h1>\n\n<p>Yujin\'s Open Control System messages, services and actions</p>\n</div>\n\n            \n          </div>'"
joystick_sdl,http://rosindex.github.io/r/joystick_sdl/,indigo,joystick_sdl,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""joystick_sdl"">joystick_sdl <a href=""https://travis-ci.org/mikepurvis/joystick_sdl""><img src=""https://travis-ci.org/mikepurvis/joystick_sdl.svg?branch=master"" alt=""Build Status""></a>\n</h1>\n\n<p>One of the limitations of the standard ROS <a href=""https://github.com/ros-drivers/joystick_drivers/tree/indigo-devel/joy"">joy</a> package is that it\ndepends on the <code>linux/joystick.h</code> header. This sucks, especially for ROS\nusers on Windows and OS X, who would enjoy being able to remotely teleop\nrobots using a locally-connected game controller... without a VM.</p>\n\n<p>So the idea here is to piggy-back on the cross-platform joystick support\navailable in <a href=""https://wiki.libsdl.org/CategoryJoystick"">SDL</a>. So far, it is tested to work with a Logitech F710\nand DualShock 3 (wired) in Ubuntu Trusty 14.04 and Mac OS X 10.10.3,\nwith the following caveats:</p>\n\n<ul>\n<li>For Mac OS X, the F710 must be in DirectInput mode (""D"" on the top switch).</li>\n<li>Detecting disconnects on OS X works only with SDL 2.0.4 and above.</li>\n<li>Analog triggers don\'t work, nor does motion control or force feedback\n(SDL limitations). Triggers register as ordinary binary button presses.</li>\n<li>No attempt is made to expose ""hats"" or ""balls"" from the SDL API.</li>\n<li>Unlike <code>joy_node</code>, which uses IO blocking, this package polls the\njoystick at a fixed interval (default 25 Hz). This is a consequence of\nbuilding it on a game platform, where input is typically processed at\na set point in the main loop.</li>\n<li>Unlike <code>joy_node</code>, there\'s (currently) no way to differentiate multiple\ndevices connected to the same computer.</li>\n</ul>\n\n<p>Finally, SDL provides (via the <a href=""https://wiki.libsdl.org/CategoryGameController"">GameController</a> API, some ability to abstract\njoystick mappings so that disparate units can swap in for each other more\neasily (eg, every device has an ""A"" button, even if it\'s the one with an\nX on it on a PlayStation pad). There\'s some rough-in to support this here,\nbut it\'s unclear how desirable it really is going forward, as most robots\nhave a standard joystick they ship with, and a button mapping to match. For\nnow, this is unused, as it\'s more valuable to have this package be a drop-in\nreplacement for <a href=""http://wiki.ros.org/joy"">joy</a>.</p>\n\n<p>This package is under active development. Caveat emptor.</p>\n</div>\n\n            \n          </div>'"
terarangerone-ros,http://rosindex.github.io/r/terarangerone-ros/,"hydro,indigo",terarangerone,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teraranger-one-ros-module"">TeraRanger One ROS Module</h1>\n\n<p>This is the ROS module for the TeraRanger One ranging sensor (<a href=""http://www.teraranger.com"">www.teraranger.com</a>).</p>\n\n<h1 id=""using-module"">Using module</h1>\n\n<p>To use the ROS node you just need to:\n* Create a ROS Workspace\n* Copy the node terarangerone package into the workspace src directory\n* Compile using: catkin_make \n* Setup environment: source devel/setup.sh\n* Run using: rosrun terarangerone terarangerone_node _portname:=/dev/ttyUSB0</p>\n\n<p>If you want to change the operating mode, run\n* rosrun rqt_reconfigure rqt_reconfigure </p>\n\n<p>NB: remember to execute the daemon roscore before running the rosrun command</p>\n</div>\n\n            \n          </div>'"
odva_ethernetip,http://rosindex.github.io/r/odva_ethernetip/,indigo,odva_ethernetip,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""odva_ethernetip"">odva_ethernetip <a href=""https://travis-ci.org/ros-drivers/odva_ethernetip""><img src=""https://travis-ci.org/ros-drivers/odva_ethernetip.svg?branch=indigo-devel"" alt=""Build Status""></a>\n</h1>\n\n<p>This repo contains a ROS-ready library which implements EtherNet/IP (Industrial Protocol).</p>\n\n<p>Please find more information on the ROS Wiki:</p>\n\n<p><a href=""http://wiki.ros.org/odva_ethernetip"">http://wiki.ros.org/odva_ethernetip</a> (coming soon)</p>\n</div>\n\n            \n          </div>'"
barrett_hand_common,http://rosindex.github.io/r/barrett_hand_common/,indigo,"barrett_hand_common,barrett_hand_description","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""barrett_hand_common"">barrett_hand_common</h1>\n\n<p>Barrett hand common packages for ROS</p>\n\n<p>Barrett Hand description (urdf and meshes)</p>\n</div>\n\n            \n          </div>'"
lwr_hardware,http://rosindex.github.io/r/lwr_hardware/,"hydro,groovy,fuerte","kuka_lwr_fri,lwr_fri","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
libhaloc,http://rosindex.github.io/r/libhaloc/,"jade,indigo",libhaloc,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""libhaloc"">libhaloc</h1>\n\n<p>ROS library for HAsh-based LOop Closure detection. This library provides the tools for loop closing detection based on image hashing. Image hashing consists of representing every image with a small vector (hash). Then the hash of image A can be compared with the hash of image B in a super fast way in order to determine if images are similar.</p>\n\n<p>The image hashing implemented in this library is based on SIFT features so, since SIFT is invariant to scale and rotation, the image hashing will be also invariant to these properties.</p>\n\n<p>The library works for both mono and stereo cameras and provides a transformation (2d for mono and 3d for stereo) when loop closures are found.</p>\n\n<h2 id=""related-paper"">Related paper</h2>\n\n<p><a href=""http://link.springer.com/article/10.1007/s10514-015-9522-4"">Autonomous Robots</a></p>\n\n<p>CITATION:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">@Article<span class=""o"">{</span>Negre\xc2\xa0Carrasco2015,\n   <span class=""nv"">author</span><span class=""o"">=</span><span class=""s2"">""Negre\xc2\xa0Carrasco, Pep Lluis\n   and Bonin-Font, Francisco\n   and Oliver-Codina, Gabriel""</span>,\n   <span class=""nv"">title</span><span class=""o"">=</span><span class=""s2"">""Global image signature for visual loop-closure detection""</span>,\n   <span class=""nv"">journal</span><span class=""o"">=</span><span class=""s2"">""Autonomous Robots""</span>,\n   <span class=""nv"">year</span><span class=""o"">=</span><span class=""s2"">""2015""</span>,\n   <span class=""nv"">pages</span><span class=""o"">=</span><span class=""s2"">""1--15""</span>,\n   <span class=""nv"">issn</span><span class=""o"">=</span><span class=""s2"">""1573-7527""</span>,\n   <span class=""nv"">doi</span><span class=""o"">=</span><span class=""s2"">""10.1007/s10514-015-9522-4""</span>,\n   <span class=""nv"">url</span><span class=""o"">=</span><span class=""s2"">""http://dx.doi.org/10.1007/s10514-015-9522-4""</span>\n<span class=""o"">}</span>\n\n</code></pre></div>\n<h2 id=""how-to-prepare-your-slam-node"">How to prepare your SLAM node</h2>\n\n<p>Modify your CMakeLists.txt as follows:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""c""># Add this line before catkin_package()</span>\nfind_package<span class=""o"">(</span>libhaloc REQUIRED<span class=""o"">)</span>\n\n<span class=""c""># Include the libhaloc directories</span>\ninclude_directories<span class=""o"">(</span>\n  <span class=""k"">${</span><span class=""nv"">catkin_INCLUDE_DIRS</span><span class=""k"">}</span>\n  <span class=""k"">${</span><span class=""nv"">libhaloc_INCLUDE_DIRS</span><span class=""k"">}</span>\n  ...\n  <span class=""o"">)</span>\n\n<span class=""c""># Link your executable with libhaloc</span>\ntarget_link_libraries<span class=""o"">(</span>your_executable_here\n  <span class=""k"">${</span><span class=""nv"">catkin_LIBRARIES</span><span class=""k"">}</span>\n  <span class=""k"">${</span><span class=""nv"">libhaloc_LIBRARIES</span><span class=""k"">}</span>\n  ...\n  <span class=""o"">)</span>\n\n</code></pre></div>\n<p>Include the header in your .cpp file:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""c"">#include &lt;libhaloc/lc.h&gt;</span>\n\n</code></pre></div>\n<h2 id=""how-to-call-the-library"">How to call the library</h2>\n\n<p>You can use libhaloc in two different ways:\n- To generate the image hashes and then, use your own techniques to compare this hashes and retrieve the best candidates to close loop.\n- To use the full power of libhaloc to search loop closing candidates and compute the homogeneous transformation (if any).</p>\n\n<h3 id=""to-use-libhaloc-as-the-first-option"">To use libhaloc as the first option:</h3>\n\n<ul>\n<li>Declare your haloc object:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">haloc::Hash haloc_;\n\n</code></pre></div>\n<ul>\n<li>Init your haloc object (only once):</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""k"">if</span> <span class=""o"">(</span>!hash_.isInitialized<span class=""o"">())</span>\n   hash_.init<span class=""o"">(</span>c_cluster_.getSift<span class=""o"">())</span>;\n\n</code></pre></div>\n<ul>\n<li>Then, for every new image you process, extract its descriptor matrix (SIFT)</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">cv::Mat sift;\n// Use opencv to extract the SIFT matrix and <span class=""k"">then</span>:\n<span class=""gp"">vector&lt;float&gt; </span>current_hash <span class=""o"">=</span> hash_.getHash<span class=""o"">(</span>sift<span class=""o"">)</span>;\n\n</code></pre></div>\n<ul>\n<li>Now, you can store all the hashes into a table and compare it:</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">std::vector&lt;float&gt; </span>matches;\n<span class=""k"">for</span> <span class=""o"">(</span>uint <span class=""nv"">i</span><span class=""o"">=</span>0; i&lt;my_table.size<span class=""o"">()</span>; i++<span class=""o"">)</span>\n<span class=""o"">{</span>\n   float m <span class=""o"">=</span> hash_.match<span class=""o"">(</span>current_hash, my_table[i]<span class=""o"">)</span>;\n   matches.push_back<span class=""o"">(</span>matches<span class=""o"">)</span>;\n<span class=""o"">}</span>\n\n</code></pre></div>\n<ul>\n<li>Finally, sort the vector of matches from smallest to largest. Take the first 1, 2, 3 or 4 smallest values as candidates to close loop.</li>\n</ul>\n\n<h3 id=""to-use-libhaloc-as-the-second-option"">To use libhaloc as the second option:</h3>\n\n<p>1) Declare your haloc object (this object is different from the option 1!!!):</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">haloc::LoopClosure haloc_;\n\n</code></pre></div>\n<p>2) Set the haloc parameters and initialize (only once):</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">haloc::LoopClosure::Params params;\nparams.work_dir <span class=""o"">=</span> whatever;\n.\n.\n.\nhaloc_.setParams<span class=""o"">(</span>params<span class=""o"">)</span>;\nhaloc_.init<span class=""o"">()</span>;\n\n</code></pre></div>\n<p>4) Then, for every image, call the function setNode() to store the image properties and getLoopClosure() to get any possible loop closure between the last image and any previous images.</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">// Mono version\nint loop_closure_with;  // &lt;- Will contain the index of the image that closes loop with the last inserted <span class=""o"">(</span>-1 <span class=""k"">if </span>none<span class=""o"">)</span>.\ntf::Transform trans;    // &lt;- Will contain the transformation of the loop closure <span class=""o"">(</span><span class=""k"">if </span>any<span class=""o"">)</span>.\nhaloc_.setNode<span class=""o"">(</span>img<span class=""o"">)</span>;\nbool valid <span class=""o"">=</span> haloc_.getLoopClosure<span class=""o"">(</span>loop_closure_with, trans<span class=""o"">)</span>;\n\n// Stereo version\nint loop_closure_with;  // &lt;- Will contain the index of the image that closes loop with the last inserted <span class=""o"">(</span>-1 <span class=""k"">if </span>none<span class=""o"">)</span>.\ntf::Transform trans;    // &lt;- Will contain the transformation of the loop closure <span class=""o"">(</span><span class=""k"">if </span>any<span class=""o"">)</span>.\nhaloc_.setNode<span class=""o"">(</span>img_left, img_right<span class=""o"">)</span>;\nbool valid <span class=""o"">=</span> haloc_.getLoopClosure<span class=""o"">(</span>loop_closure_with, trans<span class=""o"">)</span>;\n\n</code></pre></div>\n<p>In both cases, if valid is true, then a loop closure has been found.</p>\n\n<h2 id=""example"">Example</h2>\n\n<p>Check <a href=""https://github.com/srv/stereo_slam"">this</a> integration for a 3D Stereo Slam.</p>\n\n<h2 id=""most-important-parameters"">Most Important Parameters</h2>\n\n<ul>\n<li>\n<code>work_dir</code> - Directory where the library will save the image information (must be writable!).</li>\n<li>\n<code>desc_matching_type</code> - Can be CROSSCHECK or RATIO.</li>\n<li>\n<code>desc_thresh_ratio</code> - Descriptor threshold for crosscheck matching (typically between 0.7-0.9) or ratio for ratio matching (typically between 0.6-0.8).</li>\n<li>\n<code>min_neighbor</code> - Minimum number of neighbors that will be skipped for the loop closure (typically between 5-20, but depends on the frame rate).</li>\n<li>\n<code>n_candidates</code> - Get the n first candidates of the hash matching (typically 2, 3, or 4).</li>\n<li>\n<code>min_matches</code> - Minimum number of descriptor matches to consider a matching as possible loop closure (&gt;12).</li>\n<li>\n<code>min_inliers</code> - Minimum number of inliers to consider a matching as possible loop closure (&gt;12).</li>\n</ul>\n</div>\n\n            \n          </div>'"
ackermann_msgs,http://rosindex.github.io/r/ackermann_msgs/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo",ackermann_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ackermann_msgs"">ackermann_msgs</h1>\n\n<p>ROS messages for vehicles using front-wheel <a href=""http://en.wikipedia.org/wiki/Ackermann_steering_geometry"">Ackermann\nsteering</a>. It\nwas defined by the ROS <a href=""http://www.ros.org/wiki/Ackermann%20Group"">Ackermann steering\ngroup</a>.</p>\n\n<p>ROS documentation: <a href=""http://www.ros.org/wiki/ackermann_msgs"">http://www.ros.org/wiki/ackermann_msgs</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
fetch_msgs,http://rosindex.github.io/r/fetch_msgs/,indigo,"fetch_auto_dock_msgs,fetch_driver_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fetch_msgs"">fetch_msgs</h1>\n\n<p>ROS Messages for Fetch Robots</p>\n</div>\n\n            \n          </div>'"
image_transport_plugins,http://rosindex.github.io/r/image_transport_plugins/,"hydro,fuerte,groovy,kinetic,jade,indigo","compressed_depth_image_transport,compressed_image_transport,image_transport_plugins,theora_image_transport,libtheora","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
image_common,http://rosindex.github.io/r/image_common/,"hydro,fuerte,groovy,kinetic,jade,indigo","camera_calibration_parsers,camera_info_manager,image_common,image_transport,polled_camera","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
power_msgs,http://rosindex.github.io/r/power_msgs/,"jade,indigo",power_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""power_msgs"">power_msgs</h1>\n\n<p>ROS messages for power measurement and breaker control</p>\n</div>\n\n            \n          </div>'"
homer_robot_face,http://rosindex.github.io/r/homer_robot_face/,indigo,robot_face,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""homer_robot_face-indigo-1-0-6-0"">homer_robot_face (indigo) - 1.0.6-0</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face</code> on <code>Tue, 12 Jan 2016 12:12:00 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- rosdistro version: <code>1.0.5-0</code>\n- old version: <code>1.0.5-0</code>\n- new version: <code>1.0.6-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-5-0"">homer_robot_face (indigo) - 1.0.5-0</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face</code> on <code>Mon, 11 Jan 2016 20:54:11 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- rosdistro version: <code>1.0.4-0</code>\n- old version: <code>1.0.4-0</code>\n- new version: <code>1.0.5-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-4-0"">homer_robot_face (indigo) - 1.0.4-0</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face</code> on <code>Mon, 11 Jan 2016 19:33:17 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- rosdistro version: <code>1.0.3-2</code>\n- old version: <code>1.0.3-2</code>\n- new version: <code>1.0.4-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-3-2"">homer_robot_face (indigo) - 1.0.3-2</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face</code> on <code>Sun, 03 Jan 2016 17:37:38 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- rosdistro version: <code>1.0.3-0</code>\n- old version: <code>1.0.3-1</code>\n- new version: <code>1.0.3-2</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-3-1"">homer_robot_face (indigo) - 1.0.3-1</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face</code> on <code>Sat, 02 Jan 2016 18:55:43 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- rosdistro version: <code>1.0.3-0</code>\n- old version: <code>1.0.3-0</code>\n- new version: <code>1.0.3-1</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-3-0"">homer_robot_face (indigo) - 1.0.3-0</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face --edit</code> on <code>Fri, 01 Jan 2016 23:16:34 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: unknown\n- rosdistro version: <code>null</code>\n- old version: <code>1.0.2-2</code>\n- new version: <code>1.0.3-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-2-2"">homer_robot_face (indigo) - 1.0.2-2</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face --edit</code> on <code>Fri, 09 Oct 2015 09:40:18 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- rosdistro version: <code>1.0.2-1</code>\n- old version: <code>1.0.2-1</code>\n- new version: <code>1.0.2-2</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-2-1"">homer_robot_face (indigo) - 1.0.2-1</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face --edit</code> on <code>Wed, 16 Sep 2015 12:42:18 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- rosdistro version: <code>1.0.1-1</code>\n- old version: <code>1.0.2-0</code>\n- new version: <code>1.0.2-1</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-2-0"">homer_robot_face (indigo) - 1.0.2-0</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face --edit</code> on <code>Wed, 16 Sep 2015 12:36:47 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- rosdistro version: <code>1.0.1-1</code>\n- old version: <code>1.0.1-1</code>\n- new version: <code>1.0.2-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-1-1"">homer_robot_face (indigo) - 1.0.1-1</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face</code> on <code>Thu, 10 Sep 2015 10:17:36 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: unknown\n- rosdistro version: <code>null</code>\n- old version: <code>1.0.1-0</code>\n- new version: <code>1.0.1-1</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n\n<h2 id=""homer_robot_face-indigo-1-0-1-0"">homer_robot_face (indigo) - 1.0.1-0</h2>\n\n<p>The packages in the <code>homer_robot_face</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_robot_face --edit</code> on <code>Tue, 08 Sep 2015 12:52:32 -0000</code></p>\n\n<p>The <code>robot_face</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_robot_face</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git"">https://gitlab.uni-koblenz.de/robbie/homer_robot_face.git</a>\n- release repository: unknown\n- rosdistro version: <code>null</code>\n- old version: <code>null</code>\n- new version: <code>1.0.1-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n</div>\n\n            \n          </div>'"
tf2_web_republisher,http://rosindex.github.io/r/tf2_web_republisher/,"hydro,jade,groovy,indigo",tf2_web_republisher,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""tf2_web_republisher"">tf2_web_republisher <a href=""https://travis-ci.org/RobotWebTools/tf2_web_republisher""><img src=""https://api.travis-ci.org/RobotWebTools/tf2_web_republisher.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""republishing-of-selected-tfs"">Republishing of Selected TFs</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/tf2_web_republisher"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/tf2_web_republisher/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<p>This project is released as part of the <a href=""http://robotwebtools.org/"">Robot Web Tools</a> effort.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>tf2_web_republisher is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
freefloating_gazebo,http://rosindex.github.io/r/freefloating_gazebo/,"jade,indigo",freefloating_gazebo,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""freefloating_gazebo-for-jade"">freefloating_gazebo for Jade</h1>\n\n<p>A Gazebo plugin to simulate underwater vehicles and visualize with UWsim.</p>\n\n<h2 id=""gazebo-plugins"">Gazebo plugins</h2>\n\n<p>The package builds two Gazebo plugins:</p>\n\n<ul>\n<li><p>freefloating_gazebo_fluid (world plugin)\nsimulates buoyancy and viscous force from water</p></li>\n<li><p>freefloating_gazebo_control (model plugin)\nopens topics for wrench and joint states, in order to control the considered robots</p></li>\n</ul>\n\n<h2 id=""other-executables"">Other executables</h2>\n\n<p>Also builds an external PID controler: pid_control\nThese PID\'s allow position or velocity control of the vehicle body and joints. \nSubscribes to setpoint and states topics, and publishes on the wrench and torque topics that are subscribed to by the freefloating_gazebo_control plugin.</p>\n\n<h2 id=""examples"">Examples</h2>\n\n<p>The examples can be downloaded from the freefloating_gazebo_demo package.</p>\n\n<h2 id=""references"">References</h2>\n\n<p>Please use the following reference when citing this work:</p>\n\n<p><a href=""https://hal.inria.fr/hal-01065812"">O. Kermorgant, ""A dynamic simulator for underwater vehicle-manipulators"", International Conference on Simulatation, Modeling and Programming for Autonomous Robots SIMPAR 2014, Oct 2014</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""freefloating_gazebo-for-indigo"">freefloating_gazebo for Indigo</h1>\n\n<p>A Gazebo plugin to simulate underwater vehicles and visualize with UWsim.</p>\n\n<h2 id=""gazebo-plugins"">Gazebo plugins</h2>\n\n<p>The package builds two Gazebo plugins:</p>\n\n<ul>\n<li><p>freefloating_gazebo_fluid (world plugin)\nsimulates buoyancy and viscous force from water</p></li>\n<li><p>freefloating_gazebo_control (model plugin)\nopens topics for wrench and joint states, in order to control the considered robots</p></li>\n</ul>\n\n<h2 id=""other-executables"">Other executables</h2>\n\n<p>Also builds an external PID controler: pid_control\nThese PID\'s allow position or velocity control of the vehicle body and joints. \nSubscribes to setpoint and states topics, and publishes on the wrench and torque topics that are subscribed to by the freefloating_gazebo_control plugin.</p>\n\n<h2 id=""examples"">Examples</h2>\n\n<p>The examples can be downloaded from the freefloating_gazebo_demo package.</p>\n\n<h2 id=""references"">References</h2>\n\n<p>Please use the following reference when citing this work:</p>\n\n<p><a href=""https://hal.inria.fr/hal-01065812"">O. Kermorgant, ""A dynamic simulator for underwater vehicle-manipulators"", International Conference on Simulatation, Modeling and Programming for Autonomous Robots SIMPAR 2014, Oct 2014</a></p>\n</div>\n\n            \n          </div>'"
libnabo,http://rosindex.github.io/r/libnabo/,"hydro,indigo",libnabo,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>libnabo is a fast K Nearest Neighbour library for low-dimensional spaces.\nIt provides a clean, legacy-free, scalar-type\xe2\x80\x93agnostic API thanks to C++ templates.\nIts current CPU implementation is strongly inspired by <a href=""http://www.cs.umd.edu/%7Emount/ANN"">ANN</a>, but with more compact data types.\nOn the average, libnabo is 5% to 20% faster than <a href=""http://www.cs.umd.edu/%7Emount/ANN"">ANN</a>.</p>\n\n<p>libnabo depends on <a href=""http://eigen.tuxfamily.org"">Eigen</a>, a modern C++ matrix and linear-algebra library.\nlibnabo works with either version 2 or 3 of Eigen.\nlibnabo also depends on <a href=""http://www.boost.org"">Boost</a>, a C++ general library.</p>\n\n<p>libnabo was developed by <a href=""http://stephane.magnenat.net"">St\xc3\xa9phane Magnenat</a> as part of his work at <a href=""http://www.asl.ethz.ch"">ASL-ETH</a> and is now maintained by <a href=""http://www.asl.ethz.ch/people/slynen"">Simon Lynen</a>.</p>\n\n<h1 id=""download"">Download</h1>\n\n<p>Ubuntu builds are available on my PPA at: <a href=""https://launchpad.net/%7Estephane.magnenat"">https://launchpad.net/~stephane.magnenat</a>\nThey provide a package with the shared library, another with the development headers and a third with the documentation.</p>\n\n<p>The source code is available from github, you can clone the git tree by doing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone git://github.com/ethz-asl/libnabo.git\n</code></pre></div>\n<h1 id=""compilation"">Compilation</h1>\n\n<p>libnabo uses <a href=""http://www.cmake.org"">CMake</a> as build system.\nThe complete compilation process depends on the system you are using (Linux, Mac OS X or Windows).\nYou will find a nice introductory tutorial in <a href=""http://www.youtube.com/watch?v=CLvZTyji_Uw"">this video</a>.</p>\n\n<h2 id=""prerequisites"">Prerequisites</h2>\n\n<p>If your operating system does not provide it, you must get <a href=""http://eigen.tuxfamily.org"">Eigen</a> and <a href=""http://www.boost.org"">Boost</a>.\n<a href=""http://eigen.tuxfamily.org"">Eigen</a> only needs to be downloaded and extracted.\nYou also need <code>grep</code>, which is available in standard on Linux or Mac OS X, you can get the window version <a href=""http://gnuwin32.sourceforge.net/packages/grep.htm"">here</a>.</p>\n\n<h2 id=""compilation-options"">Compilation options</h2>\n\n<p>libnabo provides the following compilation options, available through <a href=""http://www.cmake.org"">CMake</a>:</p>\n\n<ul>\n<li>\n<code>SHARED_LIBS</code> (boolean, default: <code>false</code>): if <code>true</code>, build a shared library, otherwise build a static library</li>\n</ul>\n\n<p>You can specify them with a command-line tool, <code>ccmake</code>, or with a graphical tool, <code>cmake-gui</code>.\nPlease read the <a href=""http://www.cmake.org/cmake/help/cmake2.6docs.html"">CMake documentation</a> for more information.</p>\n\n<h2 id=""quick-compilation-and-installation-under-unix"">Quick compilation and installation under Unix</h2>\n\n<p>Under Unix, assuming that <a href=""http://eigen.tuxfamily.org"">Eigen</a> and <a href=""http://www.boost.org"">Boost</a> are installed system-wide, you can compile (with optimisation and debug information) and install libnabo in <code>/usr/local</code> with the following commands run in the top-level directory of libnabo\'s sources:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">SRC_DIR=`pwd`\nBUILD_DIR=${SRC_DIR}/build\nmkdir -p ${BUILD_DIR} &amp;&amp; cd ${BUILD_DIR}\ncmake -DCMAKE_BUILD_TYPE=RelWithDebInfo ${SRC_DIR}\n# if Eigen or Boost are not available system-wide, run at that point: \n#   cmake-gui .\n# cmake-gui allows you to tell the location of Eigen or Boost\nmake\nsudo make install\n</code></pre></div>\n<p>These lines will compile libnabo in a <code>build</code> sub-directory and therefore keep your source tree clean.\nNote that you could compile libnabo anywhere you have write access, such as in <code>/tmp/libnabo</code>.\nThis out-of-source build is a nice feature of <a href=""http://www.cmake.org"">CMake</a>.\nIf <a href=""http://eigen.tuxfamily.org"">Eigen</a> or <a href=""http://www.boost.org"">Boost</a> are not installed system-wide, you might have to tell <a href=""http://www.cmake.org"">CMake</a> where to find them (using <code>ccmake</code> or <code>cmake-gui</code>).</p>\n\n<p>You can generate the documentation by typing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">make doc\n</code></pre></div>\n<h1 id=""usage"">Usage</h1>\n\n<p>libnabo is easy to use. For example, assuming that you are working with floats and that you have a point set <code>M</code> and a query point <code>q</code>, you can find the <code>K</code> nearest neighbours of <code>q</code> in <code>M</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include ""nabo/nabo.h""\nusing namespace Nabo;\nusing namespace Eigen;\n...\nNNSearchF* nns = NNSearchF::createKDTreeLinearHeap(M);\n\nconst int K = 5;\nVectorXi indices(K);\nVectorXf dists2(K);\n\nnns-&gt;knn(q, indices, dists2, K);\n</code></pre></div>\n<p>In this example, <code>M</code> is an <a href=""refering%20to%20the%20software,%20not%20to%20the%20math"">Eigen</a> matrix (column major, float) and <code>q</code> is an <a href=""http://eigen.tuxfamily.org"">Eigen</a> vector (float). Note that <code>M</code> <strong>must stay alive</strong> throughout the use of libnabo, otherwise the results of <code>knn</code> are undefined.\nThe results <code>indices</code> and <code>dists2</code> are <a href=""http://eigen.tuxfamily.org"">Eigen</a> vectors of indices and squared distances refering to the columns of <code>M</code>.\nSee <code>examples/trivial.cpp</code> for a compilable version of this example, and <code>examples/usage.cpp</code> for a slightly more complex example involving multi-point queries.</p>\n\n<p>Running <code>make doc</code> in your build directory will generate a browsable documentation in <code>doc/html</code>.\nThe main page <code>doc/html/index.html</code> contains a detailed overview of the usage of libnabo.</p>\n\n<h1 id=""python-bindings"">Python bindings</h1>\n\n<p>libnabo includes python bindings that are compiled if python is available.\nThe resulting module is called pynabo, you can see an example in <code>python/test.py</code>.\nYou can find more information in the docstring-based documentation:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">python -c ""import pynabo; help(pynabo.NearestNeighbourSearch)""\n</code></pre></div>\n<h1 id=""unit-testing"">Unit testing</h1>\n\n<p>The distribution of libnabo integrates a unit test module, based on CTest.\nJust type:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">make test\n</code></pre></div>\n<p>...in the build directory to run the tests.\nTheir outputs are available in the <code>Testing</code> directory.\nThese consist of validation and benchmarking tests.\nIf <a href=""http://www.cs.umd.edu/%7Emount/ANN"">ANN</a> or <a href=""http://www.cs.ubc.ca/%7Emariusm/index.php/FLANN/FLANN"">FLANN</a> are detected when compiling libnabo, <code>make test</code> will also perform comparative benchmarks.</p>\n\n<h1 id=""citing-libnabo"">Citing libnabo</h1>\n\n<p>If you use libnabo in the academic context, please cite this paper that evaluates its performances in the contex of ICP:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">@article{elsebergcomparison,\n    title={Comparison of nearest-neighbor-search strategies and implementations for efficient shape registration},\n    author={Elseberg, J. and Magnenat, S. and Siegwart, R. and N{\\""u}chter, A.},\n    journal={Journal of Software Engineering for Robotics (JOSER)},\n    pages={2--12},\n    volume={3},\n    number={1},\n    year={2012},\n    issn={2035-3928}\n}\n</code></pre></div>\n<h1 id=""bug-reporting"">Bug reporting</h1>\n\n<p>Please use <a href=""http://github.com/ethz-asl/libnabo/issues"">github\'s issue tracker</a> to report bugs.</p>\n\n<h1 id=""license"">License</h1>\n\n<p>libnabo is released under a permissive BSD license.</p>\n</div>\n\n            \n          </div>'"
baxter_simulator,http://rosindex.github.io/r/baxter_simulator/,indigo,"baxter_gazebo,baxter_sim_controllers,baxter_sim_examples,baxter_sim_hardware,baxter_sim_io,baxter_sim_kinematics,baxter_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>baxter_simulator ==============</p>\n\n<p>Gazebo simulation with emulated interfaces for the Baxter Research Robot</p>\n\n<h1 id=""code-amp-tickets"">Code &amp; Tickets</h1>\n\n<hr>\n\n<p>Documentation   <a href=""http://sdk.rethinkrobotics.com/wiki"">http://sdk.rethinkrobotics.com/wiki</a></p>\n\n<p>Issues          <https: ues></https:></p>\n\n<p>Contributions   <a href=""http://sdk.rethinkrobotics.com/wiki/Contributions"">http://sdk.rethinkrobotics.com/wiki/Contributions</a></p>\n\n<hr>\n\n<h1 id=""baxter_simulator-repository-overview"">baxter_simulator Repository Overview</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">.\n|\n+-- baxter_simulator/        baxter_simulator metapackage\n|\n+-- baxter_gazebo/           Gazebo interface for the Baxter that loads the models into simulation\n|   +-- src/\n|   +-- launch/\n|   +-- worlds/\n|\n+-- baxter_sim_controllers/  Controller plugins for Baxter\n|   +-- src/\n|   +-- include/\n|   +-- config/\n|\n+-- baxter_sim_examples/     Examples specific to Baxter in Simulation\n|   +-- scripts/             (use baxter_examples for examples that will work both in\n|   +-- include/              simulation AND the real Baxter robot)\n|   +-- launch/\n|   +-- models/\n|\n+-- baxter_sim_hardware/     This emulates the hardware interfaces of Baxter \n|   +-- src/\n|   +-- include/\n|   +-- config/\n|   +-- launch/\n|\n+-- baxter_sim_io/           QT based navigator plugins for baxter\n|   +-- src/\n|   +-- include/\n|   +-- ui/\n|\n+-- baxter_sim_kinematics/     Implementation of IK, FK and gravity compensation for baxter \n|   +-- src/\n|   +-- include/\n|   +-- launch/\n</code></pre></div>\n<h1 id=""other-baxter-repositories"">Other Baxter Repositories</h1>\n\n<hr>\n\n<p>baxter             <a href=""https://github.com/RethinkRobotics/baxter"">https://github.com/RethinkRobotics/baxter</a>\n  baxter_interface  <a href=""https://github.com/RethinkRobotics/baxter_interface"">https://github.com/RethinkRobotics/baxter_interface</a>\n  baxter_tools      <a href=""https://github.com/RethinkRobotics/baxter_tools"">https://github.com/RethinkRobotics/baxter_tools</a>\n  baxter_examples   <a href=""https://github.com/RethinkRobotics/baxter_examples"">https://github.com/RethinkRobotics/baxter_examples</a>\n  baxter_common     <a href=""https://github.com/RethinkRobotics/baxter_common"">https://github.com/RethinkRobotics/baxter_common</a></p>\n\n<hr>\n\n<h1 id=""latest-release-information"">Latest Release Information</h1>\n\n<p><a href=""http://sdk.rethinkrobotics.com/wiki/Release-Changes"">http://sdk.rethinkrobotics.com/wiki/Release-Changes</a></p>\n</div>\n\n            \n          </div>'"
husky_simulator,http://rosindex.github.io/r/husky_simulator/,"hydro,groovy,fuerte,indigo","husky_gazebo,husky_simulator,husky_gazebo_plugins","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""husky_simualtor"">husky_simualtor</h1>\n\n<p>Simulator ROS packages for the Clearpath Husky.</p>\n\n<ul>\n<li>husky_gazebo : Gazebo plugin definitions and extensions to the robot URDF.</li>\n</ul>\n\n<p>For Husky instructions and tutorials, please see <a href=""http://wiki.ros.org/Robots/Husky"">http://wiki.ros.org/Robots/Husky</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
stage_ros,http://rosindex.github.io/r/stage_ros/,"hydro,jade,kinetic,indigo",stage_ros,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cmvision_3d,http://rosindex.github.io/r/cmvision_3d/,hydro,cmvision_3d,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cmvision_3d"">cmvision_3d</h1>\n\n<p>This is a package using the /blobs topic produced by cmvision, in addition to 3D data from a registered depth image, to publish both 1. the position of each color blob relative to its camera frame, and 2. frames in the tf stack for each color.</p>\n\n<h2 id=""usage"">Usage:</h2>\n\n<p>See <a href=""http://wiki.ros.org/cmvision_3d"">http://wiki.ros.org/cmvision_3d</a></p>\n</div>\n\n            \n          </div>'"
baxter,http://rosindex.github.io/r/baxter/,"hydro,groovy,indigo",baxter_sdk,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""baxter-sdk"">Baxter SDK</h1>\n\n<p>The Baxter SDK provides a platform for development of custom\napplications for the Baxter Research Robot</p>\n\n<p>This repository contains metapackages and files for installation/use of\nthe Baxter SDK</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>Please follow the Getting Started wiki page for instructions on\ninstallation of the Baxter SDK:\\\n<a href=""http://sdk.rethinkrobotics.com/wiki/Workstation_Setup"">http://sdk.rethinkrobotics.com/wiki/Workstation_Setup</a></p>\n\n<h2 id=""code-amp-tickets"">Code &amp; Tickets</h2>\n\n<hr>\n\n<p>Documentation   <a href=""http://sdk.rethinkrobotics.com/wiki"">http://sdk.rethinkrobotics.com/wiki</a>\n  Issues          <a href=""https://github.com/RethinkRobotics/baxter/issues"">https://github.com/RethinkRobotics/baxter/issues</a>\n  Contributions   <a href=""http://sdk.rethinkrobotics.com/wiki/Contributions"">http://sdk.rethinkrobotics.com/wiki/Contributions</a></p>\n\n<hr>\n\n<h2 id=""baxter-repository-overview"">Baxter Repository Overview</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">.\n|\n+-- baxter_sdk/              baxter metapackage containing all baxter sdk packages\n|\n+-- baxter_sdk.rosinstall    rosinstall script containing all baxter sdk packages\n|\n+-- baxter.sh                convenient environment initialization script\n</code></pre></div>\n<h2 id=""other-baxter-repositories"">Other Baxter Repositories</h2>\n\n<hr>\n\n<p>baxter_interface  <a href=""https://github.com/RethinkRobotics/baxter_interface"">https://github.com/RethinkRobotics/baxter_interface</a>\n  baxter_tools      <a href=""https://github.com/RethinkRobotics/baxter_tools"">https://github.com/RethinkRobotics/baxter_tools</a>\n  baxter_common     <a href=""https://github.com/RethinkRobotics/baxter_common"">https://github.com/RethinkRobotics/baxter_common</a>\n  baxter_examples   <a href=""https://github.com/RethinkRobotics/baxter_examples"">https://github.com/RethinkRobotics/baxter_examples</a></p>\n\n<hr>\n\n<h2 id=""latest-release-information"">Latest Release Information</h2>\n\n<p><a href=""http://sdk.rethinkrobotics.com/wiki/Release-Changes"">http://sdk.rethinkrobotics.com/wiki/Release-Changes</a></p>\n</div>\n\n            \n          </div>'"
openreroc_pwm,http://rosindex.github.io/r/openreroc_pwm/,"hydro,jade,groovy,indigo",openreroc_pwm,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""openreroc_pwm"">openreroc_pwm</h1>\n\n<p><a href=""http://ros.org"">ROS</a> is Robot Operating System developed by <a href=""http://osrfoundation.org/"">OSRF</a> and open source communities.\nThis package supports a motor control by PWM using an FPGA board (<a href=""http://zedboard.org/"">ZedBoard</a> Xilinx). \nThe duty ratio of the mortor can be inputted from openreroc_pwm. </p>\n\n<p><strong>Git</strong>:         <a href=""https://github.com/Kumikomi/openreroc_pwm.git"">https://github.com/Kumikomi/openreroc_pwm.git</a><br>\n<strong>Author</strong>:      Kazushi Yamashina (Utsunomiya University)<br>\n<strong>Copyright</strong>:   2015, Kazushi Yamashina, Utsunomiya University<br>\n<strong>License</strong>:      new BSD License<br>\n<strong>Latest Version</strong>: 0.1.0  </p>\n\n<h1 id=""directry-tree"">Directry tree</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">openreroc_pwm \n|-include/ \n|-msg/ \n|-hardware\n    |-src/\n    |-image/\n|-src/ \n|-CMakeLists.txt \n|-package.xml  \n|-LICENSE.txt\n\n</code></pre></div>\n<h1 id=""requirements"">Requirements</h1>\n\n<h2 id=""platform-for-ros-system"">Platform for ROS system</h2>\n\n<ul>\n<li><a href=""http://zedboard.org/"">ZedBoard</a></li>\n<li>\n<a href=""http://xillybus.com/xillinux"">xillinux-1.3c</a>\n\n<ul>\n<li>Xillinux is used to communicate between FPGA logic and ARM processor. Xillinux is a platform for Zynq that is released by Xillybus Ltd. Linux (Ubuntu) OS runs on the ARM processor. Xillinux can access to FPGA logic through a specific device file.</li>\n</ul>\n</li>\n<li>ROS (hydro or groovy) please install on xillinux!</li>\n<li>ssh server</li>\n</ul>\n\n<h2 id=""software"">Software</h2>\n\n<ul>\n<li>ISE 14.7 (for hardware synthesis)</li>\n</ul>\n\n<h1 id=""how-to-build-software"">How to build software</h1>\n\n<p>Please replace <strong>catkin_ws</strong> to your work space name.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\ngit clone https://github.com/Kumikomi/openreroc_pwm.git \ncd ..\ncatkin_make \n\n</code></pre></div>\n<h1 id=""test-run"">Test Run</h1>\n\n<ol>\n<li>\n<p><a href=""http://xillybus.com/downloads/doc/xillybus_getting_started_zynq.pdf"">Xillinux installation</a></p>\n\n<ul>\n<li><a href=""http://xillybus.com/xillinux"">http://xillybus.com/xillinux</a></li>\n</ul>\n</li>\n<li><p>Hardware bitstream installation\nPlease replace <strong>xillydemo.bit</strong> on the SD card with <code>openreroc_pwm/hardware/image/openreroc_pwm.bit</code></p></li>\n<li><p>Insert SD card &amp; boot system</p></li>\n<li><p>Run sample nodes </p></li>\n</ol>\n\n<p><strong>terminal 1</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/\nsource devel/setup.bash\nroscore &amp;\nrosrun openreroc_pwm openreroc_pwm\n\n</code></pre></div>\n<p><strong>terminal 2</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/\nsource devel/setup.bash\nrosrun openreroc_pwm sample_input\n\n</code></pre></div>\n<h1 id=""how-to-build-hardware"">How to build hardware</h1>\n\n<p>It\'s too complex to describe all the necessary procedure to build hardware, so some hints are shown below.\n1 : Place of Soruce code <code>hardware/src</code><br>\n2 : Pin assignment: add the code below to <strong>xillydemo.ucf</strong>  </p>\n<div class=""highlight""><pre><code class=""language-verilog"" data-lang=""verilog""><span class=""p"">#</span> <span class=""n"">Pmod</span> <span class=""n"">JB</span>\n<span class=""n"">NET</span>  <span class=""n"">dir_out_r</span>  <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">W12</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span>  <span class=""n"">en_out_r</span>   <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">W11</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span>  <span class=""n"">dir_out_l</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">V12</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span>  <span class=""n"">en_out_l</span>  <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">W10</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span> <span class=""n"">sub_port</span><span class=""p"">[</span><span class=""mi"">0</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">V10</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span> <span class=""n"">sub_port</span><span class=""p"">[</span><span class=""mi"">1</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">W8</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span> <span class=""n"">sub_port</span><span class=""p"">[</span><span class=""mi"">2</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">V9</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span> <span class=""n"">sub_port</span><span class=""p"">[</span><span class=""mi"">3</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">V8</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n\n\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">32</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">M20</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA00_CC_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">33</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">M19</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA00_CC_P""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">34</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">N20</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA01_CC_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">35</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">N19</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA01_CC_P""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">36</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">P18</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA02_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">37</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">P17</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA02_P""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">38</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">P22</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA03_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">39</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">N22</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA03_P""</span>\n\n</code></pre></div>\n<p>3 : Add the ports to Top module <strong>xillydemo.v</strong></p>\n<div class=""highlight""><pre><code class=""language-verilog"" data-lang=""verilog""><span class=""kt"">output</span> <span class=""n"">dir_out_r</span><span class=""o"">,</span>\n<span class=""kt"">output</span> <span class=""n"">dir_out_l</span><span class=""o"">,</span>\n<span class=""kt"">output</span> <span class=""n"">en_out_r</span><span class=""o"">,</span>\n<span class=""kt"">output</span> <span class=""n"">en_out_l</span><span class=""o"">,</span>\n<span class=""kt"">input</span> <span class=""p"">[</span><span class=""mi"">3</span><span class=""o"">:</span><span class=""mi"">0</span><span class=""p"">]</span> <span class=""n"">sub_port</span>\n\n</code></pre></div>\n<p>4 : Add the FIFO connection to Top module <strong>xillydemo.v</strong></p>\n<div class=""highlight""><pre><code class=""language-verilog"" data-lang=""verilog""><span class=""c1"">// 32-bit loopback\n//   fifo_32x512 fifo_32\n//     (\n//      .clk(bus_clk),\n//      .srst(!user_w_write_32_open &amp;&amp; !user_r_read_32_open),\n//      .din(user_w_write_32_data),\n//      .wr_en(user_w_write_32_wren),\n//      .rd_en(user_r_read_32_rden),\n//      .dout(user_r_read_32_data),\n//      .full(user_w_write_32_full),\n//      .empty(user_r_read_32_empty)\n//      );\n</span>\n<span class=""n"">motor_ctl</span> <span class=""n"">motor_ctl</span>\n<span class=""p"">(</span>\n<span class=""o"">.</span><span class=""n"">clk</span><span class=""p"">(</span><span class=""n"">bus_clk</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">rst_32</span><span class=""p"">(</span><span class=""o"">!</span><span class=""n"">user_w_write_32_open</span> <span class=""o"">&amp;&amp;</span> <span class=""o"">!</span><span class=""n"">user_r_read_32_open</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">din_32</span><span class=""p"">(</span><span class=""n"">user_w_write_32_data</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">wr_en_32</span><span class=""p"">(</span><span class=""n"">user_w_write_32_wren</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">rd_en_32</span><span class=""p"">(</span><span class=""n"">user_r_read_32_rden</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">dout_32</span><span class=""p"">(</span><span class=""n"">user_r_read_32_data</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">full_32</span><span class=""p"">(</span><span class=""n"">user_w_write_32_full</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">empty_32</span><span class=""p"">(</span><span class=""n"">user_r_read_32_empty</span><span class=""p"">)</span><span class=""o"">,</span>\n\n<span class=""o"">.</span><span class=""n"">dir_out_r</span><span class=""p"">(</span><span class=""n"">dir_out_r</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">dir_out_l</span><span class=""p"">(</span><span class=""n"">dir_out_l</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">en_out_r</span><span class=""p"">(</span><span class=""n"">en_out_r</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">en_out_l</span><span class=""p"">(</span><span class=""n"">en_out_l</span><span class=""p"">)</span>\n<span class=""p"">)</span><span class=""o"">;</span>\n\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""openreroc_pwm"">openreroc_pwm</h1>\n\n<p><a href=""https://github.com/Kumikomi/OpenReroc"">OpenReroc (Open Reconfigurable Robot Component)</a> is a project to build an open source platform of reconfigurable (i.e. FPGA) devices for robot components.</p>\n\n<p>This package supports a motor control by PWM using an FPGA board (<a href=""http://zedboard.org/"">ZedBoard</a> Xilinx). \nThe duty ratio of the mortor can be inputted from openreroc_pwm. </p>\n\n<p><strong>Git</strong>:         <a href=""https://github.com/Kumikomi/openreroc_pwm.git"">https://github.com/Kumikomi/openreroc_pwm.git</a><br>\n<strong>Author</strong>:      Kazushi Yamashina (Utsunomiya University)<br>\n<strong>Copyright</strong>:   2015, Kazushi Yamashina, Utsunomiya University<br>\n<strong>License</strong>:      new BSD License<br>\n<strong>Latest Version</strong>: 0.1.0  </p>\n\n<h1 id=""directry-tree"">Directry tree</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">openreroc_pwm \n|-include/ \n|-msg/ \n|-hardware\n    |-src/\n    |-image/\n|-src/ \n|-CMakeLists.txt \n|-package.xml  \n|-LICENSE.txt\n\n</code></pre></div>\n<h1 id=""requirements"">Requirements</h1>\n\n<h2 id=""platform-for-ros-system"">Platform for ROS system</h2>\n\n<ul>\n<li><a href=""http://zedboard.org/"">ZedBoard</a></li>\n<li>\n<a href=""http://xillybus.com/xillinux"">xillinux-1.3c</a>\n\n<ul>\n<li>Xillinux is used to communicate between FPGA logic and ARM processor. Xillinux is a platform for Zynq that is released by Xillybus Ltd. Linux (Ubuntu) OS runs on the ARM processor. Xillinux can access to FPGA logic through a specific device file.</li>\n</ul>\n</li>\n<li>ROS (hydro or groovy) please install on xillinux!</li>\n<li>ssh server</li>\n</ul>\n\n<h2 id=""software"">Software</h2>\n\n<ul>\n<li>ISE 14.7 (for hardware synthesis)</li>\n</ul>\n\n<h1 id=""how-to-build-software"">How to build software</h1>\n\n<p>Please replace <strong>catkin_ws</strong> to your work space name.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\ngit clone https://github.com/Kumikomi/openreroc_pwm.git \ncd ..\ncatkin_make \n\n</code></pre></div>\n<h1 id=""test-run"">Test Run</h1>\n\n<ol>\n<li>\n<p><a href=""http://xillybus.com/downloads/doc/xillybus_getting_started_zynq.pdf"">Xillinux installation</a></p>\n\n<ul>\n<li><a href=""http://xillybus.com/xillinux"">http://xillybus.com/xillinux</a></li>\n</ul>\n</li>\n<li><p>Hardware bitstream installation\nPlease replace <strong>xillydemo.bit</strong> on the SD card with <code>openreroc_pwm/hardware/image/openreroc_pwm.bit</code></p></li>\n<li><p>Insert SD card &amp; boot system</p></li>\n<li><p>Run sample nodes </p></li>\n</ol>\n\n<p><strong>terminal 1</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/\nsource devel/setup.bash\nroscore &amp;\nrosrun openreroc_pwm openreroc_pwm\n\n</code></pre></div>\n<p><strong>terminal 2</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/\nsource devel/setup.bash\nrosrun openreroc_pwm sample_input\n\n</code></pre></div>\n<h1 id=""how-to-build-hardware"">How to build hardware</h1>\n\n<p>It\'s too complex to describe all the necessary procedure to build hardware, so some hints are shown below.\n1 : Place of Soruce code <code>hardware/src</code><br>\n2 : Pin assignment: add the code below to <strong>xillydemo.ucf</strong>  </p>\n<div class=""highlight""><pre><code class=""language-verilog"" data-lang=""verilog""><span class=""p"">#</span> <span class=""n"">Pmod</span> <span class=""n"">JB</span>\n<span class=""n"">NET</span>  <span class=""n"">dir_out_r</span>  <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">W12</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span>  <span class=""n"">en_out_r</span>   <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">W11</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span>  <span class=""n"">dir_out_l</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">V12</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span>  <span class=""n"">en_out_l</span>  <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">W10</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span> <span class=""n"">sub_port</span><span class=""p"">[</span><span class=""mi"">0</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">V10</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span> <span class=""n"">sub_port</span><span class=""p"">[</span><span class=""mi"">1</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">W8</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span> <span class=""n"">sub_port</span><span class=""p"">[</span><span class=""mi"">2</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">V9</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n<span class=""n"">NET</span> <span class=""n"">sub_port</span><span class=""p"">[</span><span class=""mi"">3</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">V8</span> <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span> <span class=""o"">=</span> <span class=""n"">LVCMOS33</span><span class=""o"">;</span>\n\n\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">32</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">M20</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA00_CC_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">33</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">M19</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA00_CC_P""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">34</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">N20</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA01_CC_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">35</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">N19</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA01_CC_P""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">36</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">P18</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA02_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">37</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">P17</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA02_P""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">38</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">P22</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA03_N""</span>\n<span class=""n"">NET</span> <span class=""n"">PS_GPIO</span><span class=""p"">[</span><span class=""mi"">39</span><span class=""p"">]</span> <span class=""n"">LOC</span> <span class=""o"">=</span> <span class=""n"">N22</span>  <span class=""o"">|</span> <span class=""n"">IOSTANDARD</span><span class=""o"">=</span><span class=""n"">LVCMOS33</span><span class=""o"">;</span>  <span class=""p"">#</span> <span class=""s"">""FMC-LA03_P""</span>\n\n</code></pre></div>\n<p>3 : Add the ports to Top module <strong>xillydemo.v</strong></p>\n<div class=""highlight""><pre><code class=""language-verilog"" data-lang=""verilog""><span class=""kt"">output</span> <span class=""n"">dir_out_r</span><span class=""o"">,</span>\n<span class=""kt"">output</span> <span class=""n"">dir_out_l</span><span class=""o"">,</span>\n<span class=""kt"">output</span> <span class=""n"">en_out_r</span><span class=""o"">,</span>\n<span class=""kt"">output</span> <span class=""n"">en_out_l</span><span class=""o"">,</span>\n<span class=""kt"">input</span> <span class=""p"">[</span><span class=""mi"">3</span><span class=""o"">:</span><span class=""mi"">0</span><span class=""p"">]</span> <span class=""n"">sub_port</span>\n\n</code></pre></div>\n<p>4 : Add the FIFO connection to Top module <strong>xillydemo.v</strong></p>\n<div class=""highlight""><pre><code class=""language-verilog"" data-lang=""verilog""><span class=""c1"">// 32-bit loopback\n//   fifo_32x512 fifo_32\n//     (\n//      .clk(bus_clk),\n//      .srst(!user_w_write_32_open &amp;&amp; !user_r_read_32_open),\n//      .din(user_w_write_32_data),\n//      .wr_en(user_w_write_32_wren),\n//      .rd_en(user_r_read_32_rden),\n//      .dout(user_r_read_32_data),\n//      .full(user_w_write_32_full),\n//      .empty(user_r_read_32_empty)\n//      );\n</span>\n<span class=""n"">motor_ctl</span> <span class=""n"">motor_ctl</span>\n<span class=""p"">(</span>\n<span class=""o"">.</span><span class=""n"">clk</span><span class=""p"">(</span><span class=""n"">bus_clk</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">rst_32</span><span class=""p"">(</span><span class=""o"">!</span><span class=""n"">user_w_write_32_open</span> <span class=""o"">&amp;&amp;</span> <span class=""o"">!</span><span class=""n"">user_r_read_32_open</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">din_32</span><span class=""p"">(</span><span class=""n"">user_w_write_32_data</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">wr_en_32</span><span class=""p"">(</span><span class=""n"">user_w_write_32_wren</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">rd_en_32</span><span class=""p"">(</span><span class=""n"">user_r_read_32_rden</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">dout_32</span><span class=""p"">(</span><span class=""n"">user_r_read_32_data</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">full_32</span><span class=""p"">(</span><span class=""n"">user_w_write_32_full</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">empty_32</span><span class=""p"">(</span><span class=""n"">user_r_read_32_empty</span><span class=""p"">)</span><span class=""o"">,</span>\n\n<span class=""o"">.</span><span class=""n"">dir_out_r</span><span class=""p"">(</span><span class=""n"">dir_out_r</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">dir_out_l</span><span class=""p"">(</span><span class=""n"">dir_out_l</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">en_out_r</span><span class=""p"">(</span><span class=""n"">en_out_r</span><span class=""p"">)</span><span class=""o"">,</span>\n<span class=""o"">.</span><span class=""n"">en_out_l</span><span class=""p"">(</span><span class=""n"">en_out_l</span><span class=""p"">)</span>\n<span class=""p"">)</span><span class=""o"">;</span>\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
baxter_common,http://rosindex.github.io/r/baxter_common/,"hydro,groovy,indigo","baxter_common,baxter_core_msgs,baxter_description,baxter_maintenance_msgs,rethink_ee_description","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""baxter_common"">baxter_common</h1>\n\n<p>URDF, meshes, and custom messages describing the Baxter Research Robot\nfrom Rethink Robotics</p>\n\n<h2 id=""code-amp-tickets"">Code &amp; Tickets</h2>\n\n<hr>\n\n<p>Documentation   <a href=""http://sdk.rethinkrobotics.com/wiki"">http://sdk.rethinkrobotics.com/wiki</a></p>\n\n<p>Issues          <https:></https:></p>\n\n<p>Contributions   <a href=""http://sdk.rethinkrobotics.com/wiki/Contributions"">http://sdk.rethinkrobotics.com/wiki/Contributions</a></p>\n\n<hr>\n\n<h2 id=""baxter_common-repository-overview"">baxter_common Repository Overview</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">.\n|\n+-- baxter_common/           baxter_common metapackage\n|\n+-- baxter_description/      urdf and meshes describing baxter\n|   +-- urdf/\n|   +-- meshes/\n|\n+-- baxter_core_msgs/        messages and services for communication with baxter\n|   +-- msgs/\n|   +-- srvs/\n|\n+-- baxter_maintenance_msgs/ messages for baxter maintenance routines\n|   +-- msgs/\n|\n+-- rethink_ee_description/  urdf and meshes describing end effectors\n|   +-- urdf/\n|   +-- meshes/\n</code></pre></div>\n<h2 id=""other-baxter-repositories"">Other Baxter Repositories</h2>\n\n<hr>\n\n<p>baxter             <a href=""https://github.com/RethinkRobotics/baxter"">https://github.com/RethinkRobotics/baxter</a>\n  baxter_interface  <a href=""https://github.com/RethinkRobotics/baxter_interface"">https://github.com/RethinkRobotics/baxter_interface</a>\n  baxter_tools      <a href=""https://github.com/RethinkRobotics/baxter_tools"">https://github.com/RethinkRobotics/baxter_tools</a>\n  baxter_examples   <a href=""https://github.com/RethinkRobotics/baxter_examples"">https://github.com/RethinkRobotics/baxter_examples</a></p>\n\n<hr>\n\n<h2 id=""latest-release-information"">Latest Release Information</h2>\n\n<p><a href=""http://sdk.rethinkrobotics.com/wiki/Release-Changes"">http://sdk.rethinkrobotics.com/wiki/Release-Changes</a></p>\n</div>\n\n            \n          </div>'"
baxter_interface,http://rosindex.github.io/r/baxter_interface/,"hydro,groovy,indigo",baxter_interface,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""baxter_interface"">baxter_interface</h1>\n\n<p>Python interface classes and action servers for control of the Baxter\nResearch Robot from Rethink Robotics</p>\n\n<h2 id=""code-amp-tickets"">Code &amp; Tickets</h2>\n\n<hr>\n\n<p>Documentation   <a href=""http://sdk.rethinkrobotics.com/wiki"">http://sdk.rethinkrobotics.com/wiki</a></p>\n\n<p>Issues          <https: ues></https:></p>\n\n<p>Contributions   <a href=""http://sdk.rethinkrobotics.com/wiki/Contributions"">http://sdk.rethinkrobotics.com/wiki/Contributions</a></p>\n\n<hr>\n\n<h2 id=""baxter_interface-repository-overview"">baxter_interface Repository Overview</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">.\n|\n+-- src/                                  baxter_interface api\n|   +-- baxter_interface/                 baxter component classes\n|       +-- analog_io.py\n|       +-- camera.py\n|       +-- digital_io.py\n|       +-- gripper.py\n|       +-- head.py\n|       +-- limb.py\n|       +-- navigator.py\n|       +-- robot_enable.py\n|       +-- robust_controller.py\n|       +-- settings.py\n|   +-- baxter_control/                   generic control utilities\n|   +-- baxter_dataflow/                  timing/program flow utilities\n|   +-- joint_trajectory_action/          joint trajectory action implementation\n|   +-- gripper_action/                   gripper action implementation\n|   +-- head_action/                      head action implementation\n|\n+-- scripts/                              action server executables\n|   +-- joint_trajectory_action_server.py\n|   +-- gripper_action_server.py\n|   +-- head_action_server.py\n|\n+-- cfg/                                  dynamic reconfigure action configs\n</code></pre></div>\n<h2 id=""other-baxter-repositories"">Other Baxter Repositories</h2>\n\n<hr>\n\n<p>baxter             <a href=""https://github.com/RethinkRobotics/baxter"">https://github.com/RethinkRobotics/baxter</a>\n  baxter_tools      <a href=""https://github.com/RethinkRobotics/baxter_tools"">https://github.com/RethinkRobotics/baxter_tools</a>\n  baxter_examples   <a href=""https://github.com/RethinkRobotics/baxter_examples"">https://github.com/RethinkRobotics/baxter_examples</a>\n  baxter_common     <a href=""https://github.com/RethinkRobotics/baxter_common"">https://github.com/RethinkRobotics/baxter_common</a></p>\n\n<hr>\n\n<h2 id=""latest-release-information"">Latest Release Information</h2>\n\n<p><a href=""http://sdk.rethinkrobotics.com/wiki/Release-Changes"">http://sdk.rethinkrobotics.com/wiki/Release-Changes</a></p>\n</div>\n\n            \n          </div>'"
baxter_examples,http://rosindex.github.io/r/baxter_examples/,"hydro,groovy,indigo",baxter_examples,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""baxter_examples"">baxter_examples</h1>\n\n<p>Example SDK usage for the Baxter Research Robot from Rethink Robotics</p>\n\n<h2 id=""code-amp-tickets"">Code &amp; Tickets</h2>\n\n<hr>\n\n<p>Documentation   <a href=""http://sdk.rethinkrobotics.com/wiki"">http://sdk.rethinkrobotics.com/wiki</a></p>\n\n<p>Issues          <https: es></https:></p>\n\n<p>Contributions   <a href=""http://sdk.rethinkrobotics.com/wiki/Contributions"">http://sdk.rethinkrobotics.com/wiki/Contributions</a></p>\n\n<hr>\n\n<h2 id=""baxter_examples-repository-overview"">baxter_examples Repository Overview</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">.\n|\n+-- scripts/                                  example program executables\n|   +-- analog_io_rampup.py\n|   +-- digital_io_blink.py\n|   +-- gripper_action_client.py\n|   +-- gripper_cuff_control.py\n|   +-- gripper_joystick.py\n|   +-- gripper_keyboard.py\n|   +-- head_action_client.py\n|   +-- head_wobbler.py\n|   +-- ik_service_client.py\n|   +-- joint_position_file_playback.py\n|   +-- joint_position_joystick.py\n|   +-- joint_position_keyboard.py\n|   +-- joint_position_waypoints.py\n|   +-- joint_recorder.py\n|   +-- joint_torque_springs.py\n|   +-- joint_trajectory_client.py\n|   +-- joint_trajectory_file_playback.py\n|   +-- joint_velocity_puppet.py\n|   +-- joint_velocity_wobbler.py\n|   +-- navigator_io.py\n|   +-- send_urdf_fragment.py\n|   +-- xdisplay_image.py\n|\n+-- launch/                                   example program launch scripts\n|   +-- gripper_action_client.launch\n|   +-- gripper_joystick.launch\n|   +-- joint_position_joystick.launch\n|   +-- joint_trajectory_client.launch\n|   +-- joint_trajectory_file_playback.launch\n|\n+-- src/                                      baxter_examples api\n|   +-- baxter_examples/                      example classes\n|   +-- baxter_external_devices/              external device classes\n|\n+-- share/                                    shared example program resources\n|\n+-- cfg/                                      dynamic reconfigure example configs\n</code></pre></div>\n<h2 id=""other-baxter-repositories"">Other Baxter Repositories</h2>\n\n<hr>\n\n<p>baxter             <a href=""https://github.com/RethinkRobotics/baxter"">https://github.com/RethinkRobotics/baxter</a>\n  baxter_interface  <a href=""https://github.com/RethinkRobotics/baxter_interface"">https://github.com/RethinkRobotics/baxter_interface</a>\n  baxter_tools      <a href=""https://github.com/RethinkRobotics/baxter_tools"">https://github.com/RethinkRobotics/baxter_tools</a>\n  baxter_common     <a href=""https://github.com/RethinkRobotics/baxter_common"">https://github.com/RethinkRobotics/baxter_common</a></p>\n\n<hr>\n\n<h2 id=""latest-release-information"">Latest Release Information</h2>\n\n<p><a href=""http://sdk.rethinkrobotics.com/wiki/Release-Changes"">http://sdk.rethinkrobotics.com/wiki/Release-Changes</a></p>\n</div>\n\n            \n          </div>'"
baxter_tools,http://rosindex.github.io/r/baxter_tools/,"hydro,groovy,indigo",baxter_tools,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""baxter_tools"">baxter_tools</h1>\n\n<p>Useful operational and maintenance tools for use with the Baxter\nResearch Robot from Rethink Robotics</p>\n\n<h2 id=""code-amp-tickets"">Code &amp; Tickets</h2>\n\n<hr>\n\n<p>Documentation   <a href=""http://sdk.rethinkrobotics.com/wiki"">http://sdk.rethinkrobotics.com/wiki</a>\n  Issues          <a href=""https://github.com/RethinkRobotics/baxter_tools/issues"">https://github.com/RethinkRobotics/baxter_tools/issues</a>\n  Contributions   <a href=""http://sdk.rethinkrobotics.com/wiki/Contributions"">http://sdk.rethinkrobotics.com/wiki/Contributions</a></p>\n\n<hr>\n\n<h2 id=""baxter_tools-repository-overview"">baxter_tools Repository Overview</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">.\n|\n+-- scripts/              baxter operational/maintenance tools\n|   +-- calibrate_arm.py\n|   +-- camera_control.py\n|   +-- enable_robot.py\n|   +-- smoke_test.py\n|   +-- tare.py\n|   +-- tuck_arms.py\n|   +-- update_robot.py\n|\n+-- src/                  tool program classes\n|\n+-- shared/               shared tools resources\n</code></pre></div>\n<h2 id=""other-baxter-repositories"">Other Baxter Repositories</h2>\n\n<hr>\n\n<p>baxter             <a href=""https://github.com/RethinkRobotics/baxter"">https://github.com/RethinkRobotics/baxter</a>\n  baxter_interface  <a href=""https://github.com/RethinkRobotics/baxter_interface"">https://github.com/RethinkRobotics/baxter_interface</a>\n  baxter_examples   <a href=""https://github.com/RethinkRobotics/baxter_examples"">https://github.com/RethinkRobotics/baxter_examples</a>\n  baxter_common     <a href=""https://github.com/RethinkRobotics/baxter_common"">https://github.com/RethinkRobotics/baxter_common</a></p>\n\n<hr>\n\n<h2 id=""latest-release-information"">Latest Release Information</h2>\n\n<p><a href=""http://sdk.rethinkrobotics.com/wiki/Release-Changes"">http://sdk.rethinkrobotics.com/wiki/Release-Changes</a></p>\n</div>\n\n            \n          </div>'"
omron,http://rosindex.github.io/r/omron/,indigo,omron_os32c_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""omron-os32c"">OMRON OS32C <a href=""https://travis-ci.org/ros-drivers/omron""><img src=""https://travis-ci.org/ros-drivers/omron.svg?branch=indigo-devel"" alt=""Build Status""></a>\n</h1>\n\n<p>This repo contains a ROS device driver for the OMRON OS32C, an EtherNet/IP-based\nsafety-rated laser scanner (LIDAR). You can find more information on this product\nhere:</p>\n\n<p><a href=""https://www.ia.omron.com/products/family/2717/"">https://www.ia.omron.com/products/family/2717/</a></p>\n\n<p>Please find information on the ROS Wiki:</p>\n\n<p><a href=""http://wiki.ros.org/omron_os32c_driver"">http://wiki.ros.org/omron_os32c_driver</a></p>\n</div>\n\n            \n          </div>'"
md49_base_controller,http://rosindex.github.io/r/md49_base_controller/,"jade,groovy,kinetic,indigo","md49_base_controller,md49_messages,md49_serialport","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""md49_base_controller"">md49_base_controller</h1>\n\n<p>ROS Package for the serial dual motor driver board MD49, designed to use with two EMG49 motors</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>Package md49_base_controller binarydeb_trusty_amd64: <a href=""http://jenkins.ros.org/job/ros-indigo-md49-base-controller_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/job/ros-indigo-md49-base-controller_binarydeb_trusty_amd64/badge/icon"" alt=""Build Status""></a></p>\n\n<p>Package md49_base_controller binarydeb_trusty_i386: <a href=""http://jenkins.ros.org/job/ros-indigo-md49-base-controller_binarydeb_trusty_i386/""><img src=""http://jenkins.ros.org/job/ros-indigo-md49-base-controller_binarydeb_trusty_i386/badge/icon"" alt=""Build Status""></a></p>\n\n<p>Package md49_base_controller binarydeb_saucy_amd64: <a href=""http://jenkins.ros.org/job/ros-indigo-md49-base-controller_binarydeb_saucy_amd64/""><img src=""http://jenkins.ros.org/job/ros-indigo-md49-base-controller_binarydeb_saucy_amd64/badge/icon"" alt=""Build Status""></a></p>\n\n<p>Package md49_base_controller binarydeb_saucy_i386: <a href=""http://jenkins.ros.org/job/ros-indigo-md49-base-controller_binarydeb_saucy_i386/""><img src=""http://jenkins.ros.org/job/ros-indigo-md49-base-controller_binarydeb_saucy_i386/badge/icon"" alt=""Build Status""></a></p>\n\n<p>Package md49_base_controller doc-indigo-md49_base_controller: <a href=""http://jenkins.ros.org/job/doc-indigo-md49_base_controller/""><img src=""http://jenkins.ros.org/job/doc-indigo-md49_base_controller/badge/icon"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
pr2_simulator,http://rosindex.github.io/r/pr2_simulator/,"hydro,indigo","pr2_controller_configuration_gazebo,pr2_gazebo,pr2_gazebo_plugins,pr2_simulator","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_emacs_utils,http://rosindex.github.io/r/ros_emacs_utils/,"jade,indigo","ros_emacs_utils,rosemacs,roslisp_repl,slime_ros,slime_wrapper","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_emacs_utils"">ros_emacs_utils</h1>\n\n<p>This is a collection of packages to work on ROS-based software from Emacs.</p>\n\n<p>Supported are the versions of Emacs &gt;= 24.3. For older versions please use the\n<a href=""https://github.com/code-iai/ros_emacs_utils/tree/older-than-emacs24.3"">older-than-emacs24.3 branch</a>.</p>\n\n<p>The repo contains a \n<code>rosemacs\n</code> package, which provides functions for starting a roscore,\nmonitoring ROS nodes etc (with corresponding Emacs key bindings).\nAnd, in addition to that, it has a number of packages to simplify\ndevelopment of roslisp-based packages. Among them is\na wrapper for Slime (Lisp interactive development environment) called \n<code>slime_wrapper\n</code>,\na contrib for Slime to work with ROS \n<code>slime_ros\n</code>,\nand a Slime REPL called \n<code>roslisp_repl\n</code>, configured to start slime, slime_ros and setup roslisp.</p>\n\n<p>This document only gives you instructions on installation.\nFor other information consult the official wiki pages of the packages:\n<a href=""http://wiki.ros.org/rosemacs"">rosemacs</a> for non Lisp programmers\nand <a href=""http://wiki.ros.org/roslisp_repl"">roslisp_repl</a> otherwise.</p>\n\n<h2 id=""not-a-common-lisp-programmer"">Not a Common Lisp programmer</h2>\n\n<p>If you don\'t work with Common Lisp and just use Emacs for C++ or Python\nor Java or Lisp dialects other than Common Lisp or whatever else,\nyou just need to add the following lines to your <a href=""http://www.emacswiki.org/emacs/InitFile"">Emacs initialization file</a> (init.el or similar):</p>\n<div class=""highlight""><pre><code class=""language-lisp"" data-lang=""lisp"">(add-to-list \'load-path ""/opt/ros/DISTRO/share/emacs/site-lisp"")\n(require \'rosemacs-config)\n\n</code></pre></div>\n<p>where \n<code>DISTRO\n</code> is the name of your ROS distribution, e.g. \n<code>indigo\n</code>.</p>\n\n<h2 id=""common-lisp-programmer"">Common Lisp programmer</h2>\n\n<h3 id=""for-users"">For users</h3>\n\n<p>If you work with roslisp, all you need to do is to start \n<code>roslisp_repl\n</code> in the terminal.</p>\n\n<p>If you want to start the REPL from inside of your Emacs process, add the following to your Emacs init script:</p>\n<div class=""highlight""><pre><code class=""language-lisp"" data-lang=""lisp"">(require \'slime-config ""PATH_TO_SLIME_ROS/slime-config.el"")\n\n</code></pre></div>\n<p>where \n<code>PATH_TO_SLIME_ROS\n</code> is what \n<code>rospack find slime_ros\n</code> gives you, e.g. \n<code>""/opt/ros/indigo/share/slime_ros""\n</code>, or \n<code>""YOUR_CATKIN_WS/src/ros_emacs_utils/slime_ros""\n</code>\nif you\'re installing from source. After that line you can add the usual Slime\ncustomization commands, like setting the \n<code>inferior-lisp-program\n</code> or\nturning off the \n<code>slime-startup-animation\n</code> etc.</p>\n\n<p>Then you need to run</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun slime_ros slime_ros_init\n\n</code></pre></div>\n<p>which will create \n<code>.sbclrc-ros\n</code> in your home directory\nand add an entry into your \n<code>.sbclrs\n</code> to load \n<code>.sbclrc-ros\n</code>.</p>\n\n<p>Once set up, you can start the REPL from your Emacs by pressing \n<code>M-x slime\n</code>,\nwhich means holding the \n<code>Alt\n</code> key and pressing \n<code>x\n</code> and then typing</p>\n<div class=""highlight""><pre><code class=""language-slime"" data-lang=""slime"">``` .\n\n### For developers\n\nThere is one detail to take into account when **compiling ros_emacs_utils from source**:\nin order for the code to work you not only need to run \n```catkin_make\n``` on the packages,\nbut also install them (\n```catkin_make install\n```).\n\nWhy do we need to \n```catkin_make install\n```? (Skip the next two paragraphs if you don\'t care.)\n\nAll the packages have their Emacs Lisp part contained in a single or multiple \n```*.el\n``` files.\nDuring installation of the packages those files are being copied\ninto \n```YOUR_INSTALL_DIR/share/emacs/site-lisp\n```. Therefore, you need to tell Emacs\nin the initialization script to add that directory to the Emacs \n```load-path\n</code></pre></div>\n<p>in a recursive way. That is done in \n<code>rosemacs-config.el\n</code>.</p>\n\n<p>In addition to the Emacs Lisp part, all the packages except \n<code>rosemacs\n</code>\nhave a Common Lisp part, and all the \n<code>*.lisp\n</code> files are being copied\ninto \n<code>YOUR_INSTALL_DIR/share/common-lisp/source\n</code>,\nthis replicates the Debian approach to installing Emacs Lisp and Common Lisp files.\nTherefore, you need to tell your Common Lisp compiler, actually linker, i.e. ASDF,\nto search for systems in that directory. That is done in \n<code>.sbclrc\n</code>,\nor, more correctly, in \n<code>.sbclrc-ros\n</code>. As you can see, right now only SBCL is supported.\nThe original file can be found in your \n<code>slime_ros\n</code> ROS package under the name \n<code>sbclrc-ros\n</code>.\nWhen starting the \n<code>roslisp_repl\n</code> executable, \n<code>slime_ros_init\n</code> is called,\nwhich in its turn copies \n<code>sbclrc-ros\n</code> into the home directory,\nand adds a necessary entry into \n<code>.sbclrc\n</code>.\nCheck the \n<code>slime_ros_init\n</code> executable from \n<code>slime_ros\n</code> package for more info.</p>\n\n<h2 id=""system-requirements"">System requirements</h2>\n\n<ul>\n<li>Emacs24.3+</li>\n<li>For Common Lisp developers: SBCL as the preferred compiler</li>\n</ul>\n\n<h2 id=""faq"">FAQ</h2>\n\n<ul>\n<li>Q: Why doesn\'t my \n<code>roslisp_repl\n</code> start properly / find \n<code>rosemacs\n</code>?\n* A: Probably because you didn\'t install the \n<code>ros_emacs_utils\n</code> packages,\ne.g. \n<code>catkin_make install\n</code> them.\nJust follow the directions in the error pop up winodw (or echo buffer) of your Emacs.</li>\n</ul>\n\n<p>-</p>\n\n<ul>\n<li>Q: It says component ""swank"" cannot be found.</li>\n<li>A: There might be something wrong in your \n<code>.sbclrc\n</code> or \n<code>.sbclrc-ros\n</code>.\nTry calling \n<code>rosrun slime_ros slime_ros_init\n</code> if you haven\'t done that yet.\n(When starting REPL through \n<code>roslisp_repl\n</code> the script is called automatically.) </li>\n</ul>\n\n<p>-</p>\n\n<ul>\n<li>Q: It still doesn\'t work!</li>\n<li>A: Please file a bug report on Github.</li>\n</ul>\n</div>\n\n            \n          </div>'"
homer_gui,http://rosindex.github.io/r/homer_gui/,indigo,homer_gui,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""homer_gui-indigo-1-0-5-1"">homer_gui (indigo) - 1.0.5-1</h2>\n\n<p>The packages in the <code>homer_gui</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_gui</code> on <code>Tue, 15 Dec 2015 21:42:02 -0000</code></p>\n\n<p>The <code>homer_gui</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_gui</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_gui.git"">https://gitlab.uni-koblenz.de/robbie/homer_gui.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_gui.git"">https://gitlab.uni-koblenz.de/robbie/homer_gui.git</a>\n- rosdistro version: <code>1.0.4-1</code>\n- old version: <code>1.0.5-0</code>\n- new version: <code>1.0.5-1</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_gui-indigo-1-0-5-0"">homer_gui (indigo) - 1.0.5-0</h2>\n\n<p>The packages in the <code>homer_gui</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_gui</code> on <code>Tue, 15 Dec 2015 21:35:31 -0000</code></p>\n\n<p>The <code>homer_gui</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_gui</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_gui.git"">https://gitlab.uni-koblenz.de/robbie/homer_gui.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_gui.git"">https://gitlab.uni-koblenz.de/robbie/homer_gui.git</a>\n- rosdistro version: <code>1.0.4-1</code>\n- old version: <code>1.0.4-1</code>\n- new version: <code>1.0.5-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_gui-indigo-1-0-4-1"">homer_gui (indigo) - 1.0.4-1</h2>\n\n<p>The packages in the <code>homer_gui</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_gui</code> on <code>Mon, 14 Dec 2015 20:07:35 -0000</code></p>\n\n<p>The <code>homer_gui</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_gui</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_gui.git"">https://gitlab.uni-koblenz.de/robbie/homer_gui.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_gui.git"">https://gitlab.uni-koblenz.de/robbie/homer_gui.git</a>\n- rosdistro version: <code>1.0.3-0</code>\n- old version: <code>1.0.4-0</code>\n- new version: <code>1.0.4-1</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_gui-indigo-1-0-4-0"">homer_gui (indigo) - 1.0.4-0</h2>\n\n<p>The packages in the <code>homer_gui</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_gui</code> on <code>Mon, 14 Dec 2015 20:01:22 -0000</code></p>\n\n<p>The <code>homer_gui</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_gui</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_gui.git"">https://gitlab.uni-koblenz.de/robbie/homer_gui.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_gui.git"">https://gitlab.uni-koblenz.de/robbie/homer_gui.git</a>\n- rosdistro version: <code>1.0.3-0</code>\n- old version: <code>1.0.3-0</code>\n- new version: <code>1.0.4-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_gui-indigo-1-0-3-0"">homer_gui (indigo) - 1.0.3-0</h2>\n\n<p>The packages in the <code>homer_gui</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_gui --edit</code> on <code>Mon, 14 Dec 2015 14:51:00 -0000</code></p>\n\n<p>The <code>homer_gui</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>homer_gui</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_gui.git"">https://gitlab.uni-koblenz.de/robbie/homer_gui.git</a>\n- release repository: unknown\n- rosdistro version: <code>null</code>\n- old version: <code>null</code>\n- new version: <code>1.0.3-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n</div>\n\n            \n          </div>'"
orocos_toolchain,http://rosindex.github.io/r/orocos_toolchain/,"hydro,fuerte,electric,groovy,indigo",orocos_toolchain,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rtt,http://rosindex.github.io/r/rtt/,"hydro,jade,indigo",rtt,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nThe Orocos Real-Time Toolkit\n============================\n\nQuick Installation\n==================\n\nThe Orocos RTT requires the \'cmake\' program to be present, version\n2.6.2 or later is required. http://www.cmake.org\n\nDownload the latest version from http://www.orocos.org/rtt\n\n    tar -xvjf orocos-rtt-&lt;version&gt;-src.tar.bz2\n    cd orocos-rtt-&lt;version&gt;\n    mkdir build\n    cd build\n    cmake ..\n    make\n    make check\n    make install\n\nThe installation manual can be found in the doc dir.  You can also\nconsult it online on the http://www.orocos.org website.\n\n\nConfiguring Orocos RTT\n======================\n\nInstead of \'cmake ..\', issue \'ccmake ..\' from your build\ndirectory.  The keys to use are \'arrows\'/\'enter\' to modify a setting,\n\'c\' to run a configuration check (may be required multiple times), \'g\'\nto generate the makefiles. If an additional configuration check is\nrequired, the \'g\' key can not be used and you must press \'c\' and\nexamine the output.\n\nCORBA\n=====\nCorba is not enabled by default. If you have ACE/TAO or Omniorb installed, use\n\n  cmake .. -DENABLE_CORBA=ON -DCORBA_IMPLEMENTATION=TAO\nor\n  cmake .. -DENABLE_CORBA=ON -DCORBA_IMPLEMENTATION=OMNIORB\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
demo_pioneer,http://rosindex.github.io/r/demo_pioneer/,"hydro,jade,indigo",demo_pioneer,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""demo_pioneer"">demo_pioneer</h1>\n\n<p>A set of demos using a Pioneer robot and based on ViSP. This package is documented on <a href=""http://wiki.ros.org/demo_pioneer"">ROS wiki</a>.</p>\n\n<h1 id=""installation"">Installation</h1>\n\n<h2 id=""get-the-source"">Get the source</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_ws/src\n</code></pre></div>\n<p>Get rosaria stack that allows to control a real Pioneer robot</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ git clone https://github.com/amor-ros-pkg/rosaria.git (master branch)\n</code></pre></div>\n<p>Get demo_pioneer stack that does the visual servoing</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ git clone https://github.com/lagadic/demo_pioneer.git (master branch)\n</code></pre></div>\n<h2 id=""update-the-dependencies-to-control-the-real-pionner"">Update the dependencies to control the real Pionner</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ source ~/catkin_ws/devel/setup.bash\n$ rosdep install rosaria\n$ rosdep install demo_pioneer\n</code></pre></div>\n<h2 id=""build-the-catkin-packages-from-source"">Build the catkin packages from source</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_ws\n$ catkin_make -DCMAKE_BUILD_TYPE=Release --pkg rosaria\n$ catkin_make -DCMAKE_BUILD_TYPE=Release --pkg demo_pioneer\n</code></pre></div>\n<h1 id=""usage"">Usage</h1>\n\n<h2 id=""test-pioneer-tele-operation-from-gamepad"">Test pioneer tele operation from gamepad</h2>\n\n<p>Check if you have the read/write rights in /dev/ttyUSB0. If not</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo chmod a+rw /dev/ttyUSB0\n</code></pre></div>\n<p>or even better edit \'/etc/udev/rules.d/51-local.rules\' and add the following line:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ KERNEL==""ttyUSB*"", MODE=""0666""\n</code></pre></div>\n<p>First check if the Pioneer can be tele operated</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ source ~/catkin_ws/devel/setup.bash\n$ roslaunch demo_pioneer pioneer-teleop.launch\n</code></pre></div>\n<h2 id=""start-the-visual-servoing-demo-on-the-pioneer"">Start the visual servoing demo on the Pioneer</h2>\n\n<p>Then start the demo with a real Pioneer robot using:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ source ~/catkin_ws/devel/setup.bash\n$ roslaunch demo_pioneer demo-visual-servo-pioneer.launch\n</code></pre></div>\n<h1 id=""usage-only-in-the-lab-where-the-pioneer-is-equipped-with-a-biclops-pt-head"">Usage only in the lab where the Pioneer is equipped with a Biclops PT head</h1>\n\n<h2 id=""prerequisities"">Prerequisities</h2>\n\n<p>Get visp_ros stack that does the control of the Biclops head using ViSP vpRobotBiclops class, a wrapper over Biclops low level controller that is not open source </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_ws/src\n$ git clone https://github.com/lagadic/visp_ros.git (master branch)\n$ cd ~/catkin_ws\n$ catkin_make -DCMAKE_BUILD_TYPE=Release --pkg visp_ros\n</code></pre></div>\n<h2 id=""start-the-visual-servoing-demo-on-the-pioneer-equipped-with-a-biclops-pt-head"">Start the visual servoing demo on the Pioneer equipped with a Biclops PT head</h2>\n\n<p>Then start the demo with a real Pioneer robot using:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ source ~/catkin_ws/devel/setup.bash\n$ roslaunch visp_ros biclops.launch\n$ roslaunch demo_pioneer demo-visual-servo-pioneer-pan.launch\n</code></pre></div>\n</div>\n\n            \n          </div>'"
innok_heros_control,http://rosindex.github.io/r/innok_heros_control/,indigo,innok_heros_control,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
uga_tum_ardrone,http://rosindex.github.io/r/uga_tum_ardrone/,"hydro,groovy,fuerte,indigo","uga_tum_ardrone,tum_ardrone","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">------------ camera calibration: -----------------------\n- front, old drone: 0.672049, 0.899033, 0.502065, 0.513876, 0.271972\n- front, new drone: 0.771557, 1.368560, 0.552779, 0.444056, 1.156010\n\ncalibrate with ethzasl_ptam.\nto work with colored images, in src/CameraCalibrator.cc change:\n- add #include &lt;cv_bridge/cv_bridge.h&gt;\n- change function imageCallback(...) to\nvoid CameraCalibrator::imageCallback(const sensor_msgs::ImageConstPtr &amp; img)\n{\n    cv_bridge::CvImagePtr cv_ptr = cv_bridge::toCvCopy(img, sensor_msgs::image_encodings::MONO8);\n\n    if(mCurrentImage.size().x != img-&gt;width || mCurrentImage.size().y != img-&gt;height)\n        mCurrentImage.resize(CVD::ImageRef(img-&gt;width, img-&gt;height));\n\n    memcpy(mCurrentImage.data(),cv_ptr-&gt;image.data,img-&gt;width * img-&gt;height);\n\n    mNewImage = true;\n}\n\n\n\n------------ Parameters: c1 to c8 -----------------------------\ncan be estimated easily by \n- recording a flight: rosbag record -O calibFlight.bag /ardrone/image_raw /ardrone/navdata /cmd_vel\n- playing back that flight: rosbag play -l calibFlight.bag\n- starting two stateestimation nodes, one with remapped name and output:\n  - rosrun tum_ardrone drone_stateestimation __name:=drone_stateestimationn2 /ardrone/predictedPose:=/ardrone/predictedPose2\n  - rosrun tum_ardrone drone_stateestimation\n- plotting the respective estimated values\n  - e.g.: rxplot /ardrone/predictedPose/dx,/ardrone/predictedPose2/dx\n- using dynamic reconfigure to \n  - in drone_stateestimation2, use only control gains\n  - in drone_stateestimation, use NO control gains, but instead navdata / speeds / PTAM.\n- setting c_i in drone_stateestimation2 such that graphs match best (play around).\n\n\n\n\n------------ Parameters: PID control -----------------------------\napproximate in ""simulation"" based on c1 to c8:\n- play back any record, to make stateestimation run (dont play /cmd_vel)\n  - rosbag play -l calibFlightZ.bag --topics /ardrone/image_raw /ardrone/navdata\n- run stateestimation, in dynamic reconfigure set only control updates to be used\n- run gui and autopilot, and control\n- plot control / respective pose e.g. with \n  - rxplot /ardrone/predictedPose/yaw /cmd_vel/angular/z\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""package-tum_ardrone"">Package tum_ardrone</h1>\n\n<p>This package contains the implementation corresponding to the following publications:</p>\n\n<ul>\n<li>\n<a href=""https://vision.in.tum.de/_media/spezial/bib/engel14ras.pdf"">Scale-Aware Navigation of a Low-Cost Quadrocopter with a Monocular Camera</a> (J. Engel, J. Sturm, D. Cremers)</li>\n<li>\n<a href=""https://vision.in.tum.de/_media/spezial/bib/engel12iros.pdf"">Camera-Based Navigation of a Low-Cost Quadrocopter</a> (J. Engel, J. Sturm, D. Cremers)</li>\n<li>\n<a href=""https://vision.in.tum.de/_media/spezial/bib/engel12vicomor.pdf"">Accurate Figure Flying with a Quadrocopter Using Onboard Visual and Inertial Sensing</a> (J. Engel, J. Sturm, D. Cremers) </li>\n</ul>\n\n<p>You can find a <a href=""https://www.youtube.com/watch?feature=player_embedded&amp;v=eznMokFQmpc"">video</a> on <em>youtube</em>.\nThis Package builds on the well known monocular SLAM framework PTAM presented by Klein &amp; Murray in their paper at ISMAR07. Please study the original PTAM website and the corresponding paper for more information on this part of the software. Also, be aware of the license that comes with it. </p>\n\n<p>The code works for both the AR.Drone 1.0 and 2.0, the default-parameters however are optimized for the AR.Drone 2.0 by now.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""with-catkin"">with catkin</h3>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""nb"">cd </span>catkin_ws/src\ngit clone https://github.com/tum-vision/tum_ardrone.git -b hydro-devel\n<span class=""nb"">cd</span> ..\nrosdep install tum_ardrone\ncatkin_make\n\n</code></pre></div>\n<h2 id=""quick-start"">Quick start</h2>\n\n<h4 id=""launch-the-nodes"">Launch the nodes</h4>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">roslaunch tum_ardrone ardrone_driver.launch\nroslaunch tum_ardrone tum_ardrone.launch\n\n</code></pre></div>\n<h4 id=""check-status"">Check status</h4>\n\n<p>On the GUI, under Drone Communication Status, you should see:\n- Drone Navdata: XHz (X &gt; 100)\n- Pose Estimates: 33Hz</p>\n\n<h4 id=""keyboard-control"">Keyboard control</h4>\n\n<ul>\n<li>focus drone_gui window</li>\n<li>press ESC to activate KB control</li>\n<li>fly around with KB (see <a href=""#drone_gui"">drone_gui</a> for key assignments)</li>\n</ul>\n\n<h4 id=""joystick-control"">Joystick control</h4>\n\n<ul>\n<li>rosrun joy joy_node</li>\n<li>press PS button on controller to activate it</li>\n<li>fly around (see <a href=""#drone_gui"">drone_gui</a> for key assignments)</li>\n</ul>\n\n<h4 id=""autopilot"">Autopilot</h4>\n\n<ul>\n<li>type command ""autoInit 500 800"" in top-left text-field</li>\n<li>click Clear and Send (maybe click Reset first)\n=&gt; drone will takeoff &amp; init PTAM, then hold position.</li>\n<li>click on video to interactively set target (relative to current position); see <a href=""#drone_stateestimation"">drone_stateestimation</a>\n=&gt; first fly up 1m and then down 1m to facilitate a good scale estimate, dont start e.g. by flying horizontally over uneven terrain (!).</li>\n<li>always have a finger on ESC or on the joystick for emergency-keyboard control :)</li>\n</ul>\n\n<h2 id=""nodes"">Nodes</h2>\n\n<h3 id=""drone_stateestimation"">drone_stateestimation</h3>\n\n<p>Estimates the drone\'s position based on sent navdata, sent control commands and PTAM.</p>\n\n<blockquote>\n<p>IMPORTANT: requires messages to be sent on both /ardrone/navdata (&gt;100Hz) and /ardrone/image_raw (&gt;10Hz), i.e. a connected drone with running ardrone_autonomy node, or a .bag replay of at least those two channels. ardrone_autonomy should be started with:</p>\n</blockquote>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rosrun ardrone_autonomy ardrone_driver _navdata_demo:<span class=""o"">=</span>0 _loop_rate:<span class=""o"">=</span>500\n\n</code></pre></div>\n<h4 id=""subscribed-topics"">\xc2\xa0Subscribed topics</h4>\n\n<ul>\n<li>/ardrone/navdata</li>\n<li>/ardrone/image_raw</li>\n<li>/cmd_vel</li>\n<li>/tum_ardrone/com</li>\n</ul>\n\n<h4 id=""published-topics"">Published topics</h4>\n\n<ul>\n<li>/ardrone/predictedPose</li>\n<li>/tum_ardrone/com</li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<p>None</p>\n\n<h4 id=""parameters"">\xc2\xa0Parameters</h4>\n\n<ul>\n<li>~publishFreq: frequency, at which the drone\'s estimated position is calculated &amp; published. Default: 30Hz</li>\n<li>~calibFile: camera calibration file. If not set, the defaults are used (camcalib/ardroneX_default.txt).</li>\n<li>UseControlGains: whether to use control gains for EKF prediction.</li>\n<li>UsePTAM: whether to use PTAM pose estimates as EKF update</li>\n<li>\n<p>UseNavdata: whether to use Navdata information for EKF update</p>\n\n<blockquote>\n<p>UsePTAM and UseNavdata are set to false, the EKF is never updated and acts as a pure simulator, prediciting the pose based on the control commands received (on /cmd_vel). Nice for experimenting.</p>\n</blockquote>\n</li>\n<li><p>PTAMMapLock: lock PTAM map (no more KF)</p></li>\n<li><p>PTAMSyncLock: lock PTAM map sync (fix scale and pose offsets etc.)</p></li>\n<li><p>PTAMMaxKF: maximum amount of KF PTAM takes. </p></li>\n<li><p>PTAMMinKFDist: min. distance between two KF (in meters)</p></li>\n<li><p>PTAMMinKFWiggleDist: min. distance between two KF (relative to mean scene depth).</p></li>\n<li>\n<p>PTAMMinKFTimeDiff: min time between two KF.</p>\n\n<blockquote>\n<p>PTAM takes a new KF if (PTAMMinKFTimeDiff AND (PTAMMinKFDist OR PTAMMinKFWiggleDist)), and tracking is good etc.</p>\n</blockquote>\n</li>\n<li><p>RescaleFixOrigin: If the scale of the Map is reestimated, only one point in the mapping PTAM &lt;-&gt; World remains fixed.\nIf RescaleFixOrigin == false, this is the current pos. of the drone (to avoid sudden, large ""jumps""). this however makes the map ""drift"".\nIf RescaleFixOrigin == true, by default this is the initialization point where the second KF has been taken (drone pos. may jump suddenly, but map remains fixed.). The fixpoint may be set by the command ""lockScaleFP"".</p></li>\n<li><p>c1 ... c8: prediction model parameters of the EKF. see ""Camera-Based Navigation of a Low-Cost Quadrocopter""</p></li>\n</ul>\n\n<h4 id=""required-tf-transforms"">\xc2\xa0Required tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""provided-tf-transforms"">\xc2\xa0Provided tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""using-it"">Using it</h4>\n\n<p>To properly estimate PTAM\'s scale, it is best to fly up and down a little bit (e.g. 1m up and 1m down) immediately after initialization.\nThere are two windows, one shows the video and PTAM\'s map points, the other one the map. To issue key commands, focus the respective window and hit a key. This generates a command on /tum_ardrone/com, which in turn is parsed and does something.</p>\n\n<h6 id=""video-window"">Video Window</h6>\n\n<p><img src=""http://wiki.ros.org/tum_ardrone/drone_stateestimation?action=AttachFile&amp;do=get&amp;target=video.png"" alt=""Video window""></p>\n\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>/tum_adrone/com message</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>""p reset""</td>\n<td>resets PTAM</td>\n</tr>\n<tr>\n<td>u</td>\n<td>""p toggleUI""</td>\n<td>changes view</td>\n</tr>\n<tr>\n<td>space</td>\n<td>""p space""</td>\n<td>takes first / second Keyframe for PTAM\'s initialization</td>\n</tr>\n<tr>\n<td>k</td>\n<td>""p keyframe""</td>\n<td>forces PTAM to take a keyframe</td>\n</tr>\n<tr>\n<td>l</td>\n<td>""toggleLog""</td>\n<td>starts / stops extensive logging of all kinds of values to a file</td>\n</tr>\n<tr>\n<td>m</td>\n<td>""p toggleLockMap""</td>\n<td>locks map, equivalent to parameter PTAMMapLock</td>\n</tr>\n<tr>\n<td>n</td>\n<td>""p toggleLockSync""</td>\n<td>locks sync, equivalent to parameter PTAMSyncLock</td>\n</tr>\n</tbody>\n</table>\n\n<p>Clicking on the video window will generate waypoints, which are sent to drone_autopilot (if running):\n- left-click: fly (x,y,0)m relative to the current position. image-center is (0,0), borders are 2m respectively.\n- right-click: fly (0,0,y)m and rotate yaw by x degree. image-center is (0,0), borders are 2m and 90 degree respectively.</p>\n\n<h6 id=""map-window"">Map Window</h6>\n\n<p><img src=""http://wiki.ros.org/tum_ardrone/drone_stateestimation?action=AttachFile&amp;do=get&amp;target=map.png"" alt=""Map window""></p>\n\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>/tum_adrone/com message</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>""f reset""</td>\n<td>resets EKF and PTAM</td>\n</tr>\n<tr>\n<td>u</td>\n<td>""m toggleUI""</td>\n<td>changes view</td>\n</tr>\n<tr>\n<td>v</td>\n<td>""m resetView""</td>\n<td>resets viewpoint of viewer</td>\n</tr>\n<tr>\n<td>l</td>\n<td>""toggleLog""</td>\n<td>starts / stops extensive logging of all kinds of values to a file</td>\n</tr>\n<tr>\n<td>v</td>\n<td>""m clearTrail""</td>\n<td>clears green drone-trail</td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""drone_autopilot"">drone_autopilot</h3>\n\n<p>PID controller for the drone. Also includes basic way-point-following and automatic initialization. Requires <a href=""#drone_stateestimation"">drone_stateestimation</a> to be running. The target is set via the /tum_ardrone/com topic.</p>\n\n<h4 id=""subscribed-topics"">\xc2\xa0Subscribed topics</h4>\n\n<ul>\n<li>/ardrone/predictedPose</li>\n</ul>\n\n<h4 id=""published-topics"">Published topics</h4>\n\n<ul>\n<li>/cmd_vel</li>\n<li>/ardrone/land</li>\n<li>/ardrone/takeoff</li>\n<li>/ardrone/reset</li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<p>None</p>\n\n<h4 id=""parameters"">\xc2\xa0Parameters</h4>\n\n<ul>\n<li>~minPublishFreq: usually, a control command is sent for each pose estimate received from drone_stateestimation. However, if no pose estimate is received for more than minPublishFreq milliseconds, a HOVER command is sent, causing the drone to hover if for example drone_stateestimation is shut down suddenly. Default: 110.</li>\n<li>Ki_X, Kd_X, Kp_X: PID controller parameters for roll/pitch, gaz (up/down) and yaw.</li>\n<li>max_X: maximal respective control command sent (ever).</li>\n<li>rise_fac: rise commands are larger than respective drop commands by this factor. This is due to the drone sometimes dropping unpredictably fast for large drop commands, however rising somethimes requires large rise commands.\naggressiveness: multiplied to PI-component of all commands sent. Low values lead to the drone flying ""slower"".</li>\n</ul>\n\n<h4 id=""required-tf-transforms"">\xc2\xa0Required tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""provided-tf-transforms"">\xc2\xa0Provided tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""using-it"">Using it</h4>\n\n<p>The behavior of the autopilot is set by sending commands on /tum_ardrone/com of the form ""c COMMAND"". A Queue of commands is kept, and as soon as one command is finished (for example a way point reached), the next command is popped. The queue can be cleared by sending ""c clearCommands"". Commands can be sent using the <a href=""#drone_gui"">drone_gui</a> node. Some example scripts can be found in /flightPlans/*.txt. Possible commands are:</p>\n\n<ul>\n<li>\n<p>autoInit [int moveTimeMS] [int waitTimeMS] [int riseTimeMs] [float initSpeed]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">takes control, starts drone, initializes PTAM. That is:\n- starts the drone &amp; and waits riseTimeMs, the drone will rise to approx. \n  a height of 1m. \n- initializes PTAM by taking the first KF, flying up (sending initSpeed as control command) for moveTimeMS, \n  waiting waitTimeMS and then taking the second KF. \n  This is done until success (flying up and down respectively).\n- good default values are ""autoInit 500 800 4000 0.5"" \n</code></pre></div>\n</li>\n<li>\n<p>autoTakeover [int moveTimeMS] [int waitTimeMS] [int riseTimeMs] [float initSpeed]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">takes control, initializes PTAM. The same as autoInit ..., \nbut to be used when the drone is already flying (skipps the first step).\n</code></pre></div>\n</li>\n<li>\n<p>takeoff </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">- takes control, starts drone.\n- does not reset map or initialize PTAM\n</code></pre></div>\n</li>\n<li>\n<p>setReference [doube x] [double y] [double z] [double yaw]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sets reference point (used in goto X X X X).\n</code></pre></div>\n</li>\n<li>\n<p>setMaxControl [double cap = 1.0]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">maximal control sent is capped at [cap], causing the drone to fly slower.\n</code></pre></div>\n</li>\n<li>\n<p>setInitialReachDist [double dist = 0.2]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">drone has to come this close to a way point initially\n</code></pre></div>\n</li>\n<li>\n<p>setStayWithinDist [double dist = 0.5]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">drone has to stay this close to a way point for a certain amount of time.\n</code></pre></div>\n</li>\n<li>\n<p>setStayTime [double seconds = 2.0]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">time the drone has to stay within [stayWithinDist] for target to be reached.\n</code></pre></div>\n</li>\n<li>\n<p>clearCommands</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">clears all targets, such that the next command is executed immediately.\n</code></pre></div>\n</li>\n<li>\n<p>goto [doube x] [double y] [double z] [double yaw]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">flies to position (x,y,z yaw), relative to current reference point.\nblocks until target is reached according to set parameters\n</code></pre></div>\n</li>\n<li>\n<p>moveBy [doube x] [double y] [double z] [double yaw]</p>\n\n<p>moves by (x,y,z,yaw), relative to the current target position\n    blocks until target is reached according to set parameters</p>\n</li>\n<li>\n<p>moveByRel [doube x] [double y] [double z] [double yaw]</p>\n\n<p>moves by (x,y,z,yaw), relative to the current estimated position \n    of the drone\n    blocks until target is reached according to set parameters</p>\n</li>\n<li>\n<p>land</p>\n\n<p>initializes landing (use auto-land of drone)</p>\n</li>\n<li>\n<p>lockScaleFP</p>\n\n<p>sets the one point that does not change when the scale is re-estimated \n    to the current drone position. The scaleFP can only be set when PTAM is \n    good, i.e. this is delayed until PTAM is initialized and good.\n    Need to set useWorldFixpoint in dynammic_reconfigure.</p>\n</li>\n</ul>\n\n<h3 id=""drone_gui"">drone_gui</h3>\n\n<p>This node offers a simple QT GUI to control the <a href=""#drone_autopilot"">drone_autopilot</a> node, the <a href=""#drone_stateestimation"">drone_stateestimation</a> node and fly the drone manually via keyboard or joystick.</p>\n\n<h4 id=""subscribed-topics"">\xc2\xa0Subscribed topics</h4>\n\n<ul>\n<li>/cmd_vel</li>\n<li>/tum_ardrone/com</li>\n<li>/ardrone/takeoff</li>\n<li>/ardrone/land</li>\n<li>/ardrone/reset</li>\n<li>/ardrone/predictedPose</li>\n<li>/ardrone/navdata</li>\n<li>/joy</li>\n</ul>\n\n<h4 id=""published-topics"">Published topics</h4>\n\n<ul>\n<li>/cmd_vel</li>\n<li>/tum_ardrone/com</li>\n<li>/ardrone/takeoff</li>\n<li>/ardrone/land</li>\n<li>/ardrone/reset</li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<ul>\n<li>calls /ardrone/togglecam</li>\n<li>calls /ardrone/flattrim</li>\n</ul>\n\n<h4 id=""parameters"">\xc2\xa0Parameters</h4>\n\n<p>None</p>\n\n<h4 id=""required-tf-transforms"">\xc2\xa0Required tf transforms</h4>\n\n<p>None</p>\n\n<h4 id=""provided-tf-transforms"">\xc2\xa0Provided tf transforms</h4>\n\n<p>None</p>\n\n<h4 id=""using-it"">Using it</h4>\n\n<p><img src=""http://wiki.ros.org/tum_ardrone/drone_gui?action=AttachFile&amp;do=get&amp;target=ui.png"" alt=""Drone GUI""></p>\n\n<h6 id=""monitor-drone-autopilot-and-stateestimation-nodes-top-right-part"">Monitor Drone, Autopilot and Stateestimation Nodes (top-right part).</h6>\n\n<p>On the top-right, the current publish-frequency of important topics is displayed:\n- Drone Navdata: monitors /ardrone/navdata. Should be around 150 to 200Hz with a connected drone, and running (and correctly configured) ardrone_autonomy node.\n- Drone Control: monitors /cmd_vel. This is the frequency of how often control commands are published (and sent to the drone).\n- Pose Estimates: monitors /ardrone/predictedPose. These are the state predictions generated by the drone_stateestimation node. By default, this should be 30Hz.\n- Joy Input: monitors /joy. If you have a connected game-pad and running joy_node, this should be different from 0Hz.\n- Pings (RTT): current wireless LAN latency (RTT in ms) for 500B and 20kB packages. If these are too high, reduce Wlan clutter.</p>\n\n<h6 id=""manual-or-joystick-control-of-the-drone"">Manual or joystick control of the drone.</h6>\n\n<p>The current control source has to be set (i.e. joystick or KB). The autopilot is only allowed to send control commands, if this is set to autopilot.</p>\n\n<ul>\n<li>\n<p>Joystick control requires a connected joystick and running ""rosrun joy joy_node"". We use a PS3 sixaxis controller.\nto make the controller work, a small linux-hack is required (set controller rights).</p>\n\n<ul>\n<li>left joystick is horizontal pos. control; right joystick is height and yaw control.</li>\n<li>L1 to take off, release L1 to land.</li>\n<li>R1 to toggle emergency state.\n=&gt; by moving any of the two joysticks, the Control Source is immediately sent to Joystick.\ncan be used for safety (autopilot does wired stuff -&gt; immediately take over, disabling the autopilot and enabeling manual control).</li>\n</ul>\n</li>\n<li>\n<p>KB control requires the GUI window to have focus, but NOT the upper-left text field.\n=&gt; make the GUI the active window and press ESC to immediately enable KB control and set focus such that KB control works properly.\n can be used for safety (autopilot does wired stuff -&gt; press ESC and immediately take over, disabling the autopilot and enabeling manual control).</p>\n\n<ul>\n<li>q,a: fly up &amp; down.</li>\n<li>i,j,k,l: fly horizontally.</li>\n<li>u,o: rotate yaw.</li>\n<li>F1: toggle emergency</li>\n<li>s: takeoff</li>\n<li>d: land</li>\n</ul>\n</li>\n<li><p>Buttons Land, Takeoff, ToggleCam, Emergency (toggles emergency state).</p></li>\n</ul>\n\n<h6 id=""autopilot-control"">Autopilot Control</h6>\n\n<ul>\n<li>write commands in top-left text field (or load eample from one of the files). You can simply add .txt files to flightplans/.</li>\n<li>click Send to transmit commands to the autopilot\'s command queue (automatically sets Control Source to Autopilot).</li>\n<li>click Clear to clear autopilot command queue and current target.</li>\n<li>click Reset to reset Autopilot, PTAM and EKF.</li>\n</ul>\n\n<h2 id=""troubleshooting"">Troubleshooting</h2>\n\n<ul>\n<li>if drone doesnt start:\n\n<ul>\n<li>battery empty? (drone does not start if battery &lt; ~18%)</li>\n<li>Drone in emergency state? (if so, the four led\'s are red. click Emergency to reset).</li>\n</ul>\n</li>\n<li>cannot control drone:\n\n<ul>\n<li>selected correct control source? maybe re-select.</li>\n</ul>\n</li>\n<li>drone flies unstable using the autopilot:\n\n<ul>\n<li>adjust / reduce control parameters using dynamic_reconfigure (see readme_autopilot).</li>\n</ul>\n</li>\n<li>drone broken: buy a new one.</li>\n</ul>\n\n<h2 id=""known-bugs-amp-issues"">Known Bugs &amp; Issues</h2>\n\n<ul>\n<li>as the software was originally developed for the Ar.Drone 1.0, the pressure sensor and magnetometer are not used.</li>\n<li>drone_stateestimation crashes occasionally when PTAM init fails (crash occurs in PTAM code). \nHappens in oarticular if there is no baseline in between the first two keyframes, hardly ever happens in praxis.</li>\n</ul>\n\n<h2 id=""tips-and-tricks"">Tips and Tricks</h2>\n\n<h4 id=""camera-calibration"">Camera calibration</h4>\n\n<ul>\n<li>front, old drone: 0.672049, 0.899033, 0.502065, 0.513876, 0.271972</li>\n<li>front, new drone: 0.771557, 1.368560, 0.552779, 0.444056, 1.156010</li>\n</ul>\n\n<p>calibrate with ethzasl_ptam.\nto work with colored images, in src/CameraCalibrator.cc change:\n- add #include <cv_bridge>\n- change function imageCallback(...) to</cv_bridge></p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""kt"">void</span> <span class=""n"">CameraCalibrator</span><span class=""o"">::</span><span class=""n"">imageCallback</span><span class=""p"">(</span><span class=""k"">const</span> <span class=""n"">sensor_msgs</span><span class=""o"">::</span><span class=""n"">ImageConstPtr</span> <span class=""o"">&amp;</span> <span class=""n"">img</span><span class=""p"">)</span>\n<span class=""p"">{</span>\n    <span class=""n"">cv_bridge</span><span class=""o"">::</span><span class=""n"">CvImagePtr</span> <span class=""n"">cv_ptr</span> <span class=""o"">=</span> <span class=""n"">cv_bridge</span><span class=""o"">::</span><span class=""n"">toCvCopy</span><span class=""p"">(</span><span class=""n"">img</span><span class=""p"">,</span> <span class=""n"">sensor_msgs</span><span class=""o"">::</span><span class=""n"">image_encodings</span><span class=""o"">::</span><span class=""n"">MONO8</span><span class=""p"">);</span>\n\n    <span class=""k"">if</span><span class=""p"">(</span><span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">size</span><span class=""p"">().</span><span class=""n"">x</span> <span class=""o"">!=</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">width</span> <span class=""o"">||</span> <span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">size</span><span class=""p"">().</span><span class=""n"">y</span> <span class=""o"">!=</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">height</span><span class=""p"">)</span>\n        <span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">resize</span><span class=""p"">(</span><span class=""n"">CVD</span><span class=""o"">::</span><span class=""n"">ImageRef</span><span class=""p"">(</span><span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">width</span><span class=""p"">,</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">height</span><span class=""p"">));</span>\n\n    <span class=""n"">memcpy</span><span class=""p"">(</span><span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">data</span><span class=""p"">(),</span><span class=""n"">cv_ptr</span><span class=""o"">-&gt;</span><span class=""n"">image</span><span class=""p"">.</span><span class=""n"">data</span><span class=""p"">,</span><span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">width</span> <span class=""o"">*</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">height</span><span class=""p"">);</span>\n\n    <span class=""n"">mNewImage</span> <span class=""o"">=</span> <span class=""nb"">true</span><span class=""p"">;</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<h4 id=""parameters-c1-to-c8"">Parameters: c1 to c8</h4>\n\n<p>can be estimated easily by \n- recording a flight: rosbag record -O calibFlight.bag /ardrone/image_raw /ardrone/navdata /cmd_vel\n- playing back that flight: rosbag play -l calibFlight.bag\n- starting two stateestimation nodes, one with remapped name and output:\n  - rosrun tum_ardrone drone_stateestimation _<em>name:=drone_stateestimationn2 /ardrone/predictedPose:=/ardrone/predictedPose2\n  - rosrun tum_ardrone drone_stateestimation\n- plotting the respective estimated values\n  - e.g.: rxplot /ardrone/predictedPose/dx,/ardrone/predictedPose2/dx\n- using dynamic reconfigure to \n  - in drone</em>stateestimation2, use only control gains\n  - in drone_stateestimation, use NO control gains, but instead navdata / speeds / PTAM.\n- setting c_i in drone_stateestimation2 such that graphs match best (play around).</p>\n\n<h4 id=""parameters-pid-control"">Parameters: PID control</h4>\n\n<p>approximate in ""simulation"" based on c1 to c8:\n- play back any record, to make stateestimation run (dont play /cmd_vel)\n  - rosbag play -l calibFlightZ.bag --topics /ardrone/image_raw /ardrone/navdata\n- run stateestimation, in dynamic reconfigure set only control updates to be used\n- run gui and autopilot, and control\n- plot control / respective pose e.g. with \n  - rxplot /ardrone/predictedPose/yaw /cmd_vel/angular/z</p>\n\n<h2 id=""licence"">Licence</h2>\n\n<p>The major part of this software package - that is everything except PTAM - is licensed under the GNU General Public License Version 3 (GPLv3), see <a href=""http://www.gnu.org/licenses/gpl.html"">http://www.gnu.org/licenses/gpl.html</a>. PTAM (comprised of all files in /src/stateestimation/PTAM) has it\'s own licence, see <a href=""http://www.robots.ox.ac.uk/%7Egk/PTAM/download.html"">http://www.robots.ox.ac.uk/~gk/PTAM/download.html</a>. This licence in particular prohibits commercial use of the software.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""package-uga_tum_ardrone"">Package uga_tum_ardrone</h1>\n\n<p>This package is a fork of the popular <a href=""https://github.com/tum-vision/tum_ardrone"">tum_ardrone</a> package. Currently, the changes are:</p>\n\n<ul>\n<li>Replace the PID controller with a more specialized controller based on a damped spring</li>\n<li>Improve the accuracy of the state estimation </li>\n<li>Small bug fixes and improvements to the user experience</li>\n</ul>\n\n<p>This package contains the implementation corresponding to the following publications:</p>\n\n<ul>\n<li>\n<a href=""https://vision.in.tum.de/_media/spezial/bib/engel14ras.pdf"">Scale-Aware Navigation of a Low-Cost Quadrocopter with a Monocular Camera</a> (J. Engel, J. Sturm, D. Cremers)</li>\n<li>\n<a href=""https://vision.in.tum.de/_media/spezial/bib/engel12iros.pdf"">Camera-Based Navigation of a Low-Cost Quadrocopter</a> (J. Engel, J. Sturm, D. Cremers)</li>\n<li>\n<a href=""https://vision.in.tum.de/_media/spezial/bib/engel12vicomor.pdf"">Accurate Figure Flying with a Quadrocopter Using Onboard Visual and Inertial Sensing</a> (J. Engel, J. Sturm, D. Cremers) </li>\n</ul>\n\n<p>You can find a <a href=""https://www.youtube.com/watch?feature=player_embedded&amp;v=eznMokFQmpc"">video</a> on <em>youtube</em>.\nThis Package builds on the well known monocular SLAM framework PTAM presented by Klein &amp; Murray in their paper at ISMAR07. Please study the original PTAM website and the corresponding paper for more information on this part of the software. Also, be aware of the license that comes with it. </p>\n\n<p>The code works for both the AR.Drone 1.0 and 2.0, the default-parameters however are optimized for the AR.Drone 2.0 by now.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""with-catkin"">with catkin</h3>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""nb"">cd </span>catkin_ws/src\ngit clone https://github.com/thinclab/uga_tum_ardrone.git -b indigo-devel\n<span class=""nb"">cd</span> ..\nrosdep install uga_tum_ardrone\ncatkin_make\n\n</code></pre></div>\n<h2 id=""quick-start"">Quick start</h2>\n\n<h4 id=""launch-the-nodes"">Launch the nodes</h4>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">roslaunch uga_tum_ardrone ardrone_driver.launch\nroslaunch uga_tum_ardrone uga_tum_ardrone.launch\n\n</code></pre></div>\n<h4 id=""check-status"">Check status</h4>\n\n<p>On the GUI, under Drone Communication Status, you should see:\n- Drone Navdata: XHz (X &gt; 100)\n- Pose Estimates: 33Hz</p>\n\n<h4 id=""keyboard-control"">Keyboard control</h4>\n\n<ul>\n<li>focus drone_gui window</li>\n<li>press ESC to activate KB control</li>\n<li>fly around with KB (see <a href=""#drone_gui"">drone_gui</a> for key assignments)</li>\n</ul>\n\n<h4 id=""joystick-control"">Joystick control</h4>\n\n<ul>\n<li>rosrun joy joy_node</li>\n<li>press PS button on controller to activate it</li>\n<li>fly around (see <a href=""#drone_gui"">drone_gui</a> for key assignments)</li>\n</ul>\n\n<h4 id=""autopilot"">Autopilot</h4>\n\n<ul>\n<li>type command ""autoInit 500 800"" in top-left text-field</li>\n<li>click Clear and Send (maybe click Reset first)\n=&gt; drone will takeoff &amp; init PTAM, then hold position.</li>\n<li>click on video to interactively set target (relative to current position); see <a href=""#drone_stateestimation"">drone_stateestimation</a>\n=&gt; first fly up 1m and then down 1m to facilitate a good scale estimate, dont start e.g. by flying horizontally over uneven terrain (!).</li>\n<li>always have a finger on ESC or on the joystick for emergency-keyboard control :)</li>\n</ul>\n\n<h2 id=""nodes"">Nodes</h2>\n\n<h3 id=""drone_stateestimation"">drone_stateestimation</h3>\n\n<p>Estimates the drone\'s position based on sent navdata, sent control commands and PTAM.</p>\n\n<blockquote>\n<p>IMPORTANT: requires messages to be sent on both /ardrone/navdata (&gt;100Hz) and /ardrone/image_raw (&gt;10Hz), i.e. a connected drone with running ardrone_autonomy node, or a .bag replay of at least those two channels. ardrone_autonomy should be started with:</p>\n</blockquote>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rosrun ardrone_autonomy ardrone_driver _navdata_demo:<span class=""o"">=</span>0 _loop_rate:<span class=""o"">=</span>500\n\n</code></pre></div>\n<h4 id=""subscribed-topics"">\xc2\xa0Subscribed topics</h4>\n\n<ul>\n<li>/ardrone/navdata</li>\n<li>/ardrone/image_raw</li>\n<li>/cmd_vel</li>\n<li>/uga_tum_ardrone/com</li>\n</ul>\n\n<h4 id=""published-topics"">Published topics</h4>\n\n<ul>\n<li>/ardrone/predictedPose</li>\n<li>/uga_tum_ardrone/com</li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<p>None</p>\n\n<h4 id=""parameters"">\xc2\xa0Parameters</h4>\n\n<ul>\n<li>~publishFreq: frequency, at which the drone\'s estimated position is calculated &amp; published. Default: 30Hz</li>\n<li>~calibFile: camera calibration file. If not set, the defaults are used (camcalib/ardroneX_default.txt).</li>\n<li>UseControlGains: whether to use control gains for EKF prediction.</li>\n<li>UsePTAM: whether to use PTAM pose estimates as EKF update</li>\n<li>\n<p>UseNavdata: whether to use Navdata information for EKF update</p>\n\n<blockquote>\n<p>UsePTAM and UseNavdata are set to false, the EKF is never updated and acts as a pure simulator, prediciting the pose based on the control commands received (on /cmd_vel). Nice for experimenting.</p>\n</blockquote>\n</li>\n<li><p>PTAMMapLock: lock PTAM map (no more KF)</p></li>\n<li><p>PTAMSyncLock: lock PTAM map sync (fix scale and pose offsets etc.)</p></li>\n<li><p>PTAMMaxKF: maximum amount of KF PTAM takes. </p></li>\n<li><p>PTAMMinKFDist: min. distance between two KF (in meters)</p></li>\n<li><p>PTAMMinKFWiggleDist: min. distance between two KF (relative to mean scene depth).</p></li>\n<li>\n<p>PTAMMinKFTimeDiff: min time between two KF.</p>\n\n<blockquote>\n<p>PTAM takes a new KF if (PTAMMinKFTimeDiff AND (PTAMMinKFDist OR PTAMMinKFWiggleDist)), and tracking is good etc.</p>\n</blockquote>\n</li>\n<li><p>RescaleFixOrigin: If the scale of the Map is reestimated, only one point in the mapping PTAM &lt;-&gt; World remains fixed.\nIf RescaleFixOrigin == false, this is the current pos. of the drone (to avoid sudden, large ""jumps""). this however makes the map ""drift"".\nIf RescaleFixOrigin == true, by default this is the initialization point where the second KF has been taken (drone pos. may jump suddenly, but map remains fixed.). The fixpoint may be set by the command ""lockScaleFP"".</p></li>\n<li><p>MinTolerance: min. scale to accept, prevents initialization failures that could cause the drone to crash (physically)</p></li>\n<li><p>MaxTolerance: max. scale to accept, prevents initialization failures that could cause the drone to crash (physically)</p></li>\n<li><p>c1 ... c8: prediction model parameters of the EKF. see ""Camera-Based Navigation of a Low-Cost Quadrocopter""</p></li>\n<li><p>zDriftThreshold: ignore changes in Z below this threshold when landed, prevents drifting when on the ground and tracking is lost</p></li>\n<li><p>yawDriftThreshold: ingore changes in Yaw below this threshold when landed, prevents drifting when on the ground and tracking is lost</p></li>\n</ul>\n\n<h4 id=""required-tf-transforms"">\xc2\xa0Required tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""provided-tf-transforms"">\xc2\xa0Provided tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""using-it"">Using it</h4>\n\n<p>To properly estimate PTAM\'s scale, it is best to fly up and down a little bit (e.g. 1m up and 1m down) immediately after initialization.\nThere are two windows, one shows the video and PTAM\'s map points, the other one the map. To issue key commands, focus the respective window and hit a key. This generates a command on /uga_tum_ardrone/com, which in turn is parsed and does something.</p>\n\n<h6 id=""video-window"">Video Window</h6>\n\n<p><img src=""http://wiki.ros.org/tum_ardrone/drone_stateestimation?action=AttachFile&amp;do=get&amp;target=video.png"" alt=""Video window""></p>\n\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>/tum_adrone/com message</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>""p reset""</td>\n<td>resets PTAM</td>\n</tr>\n<tr>\n<td>u</td>\n<td>""p toggleUI""</td>\n<td>changes view</td>\n</tr>\n<tr>\n<td>space</td>\n<td>""p space""</td>\n<td>takes first / second Keyframe for PTAM\'s initialization</td>\n</tr>\n<tr>\n<td>k</td>\n<td>""p keyframe""</td>\n<td>forces PTAM to take a keyframe</td>\n</tr>\n<tr>\n<td>l</td>\n<td>""toggleLog""</td>\n<td>starts / stops extensive logging of all kinds of values to a file</td>\n</tr>\n<tr>\n<td>m</td>\n<td>""p toggleLockMap""</td>\n<td>locks map, equivalent to parameter PTAMMapLock</td>\n</tr>\n<tr>\n<td>n</td>\n<td>""p toggleLockSync""</td>\n<td>locks sync, equivalent to parameter PTAMSyncLock</td>\n</tr>\n</tbody>\n</table>\n\n<p>Clicking on the video window will generate waypoints, which are sent to drone_autopilot (if running):\n- left-click: fly (x,y,0)m relative to the current position. image-center is (0,0), borders are 2m respectively.\n- right-click: fly (0,0,y)m and rotate yaw by x degree. image-center is (0,0), borders are 2m and 90 degree respectively.</p>\n\n<h6 id=""map-window"">Map Window</h6>\n\n<p><img src=""http://wiki.ros.org/tum_ardrone/drone_stateestimation?action=AttachFile&amp;do=get&amp;target=map.png"" alt=""Map window""></p>\n\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>/tum_adrone/com message</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>""f reset""</td>\n<td>resets EKF and PTAM</td>\n</tr>\n<tr>\n<td>u</td>\n<td>""m toggleUI""</td>\n<td>changes view</td>\n</tr>\n<tr>\n<td>v</td>\n<td>""m resetView""</td>\n<td>resets viewpoint of viewer</td>\n</tr>\n<tr>\n<td>l</td>\n<td>""toggleLog""</td>\n<td>starts / stops extensive logging of all kinds of values to a file</td>\n</tr>\n<tr>\n<td>v</td>\n<td>""m clearTrail""</td>\n<td>clears green drone-trail</td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""drone_autopilot"">drone_autopilot</h3>\n\n<p>Critically damped spring based controller for the drone (see: <a href=""https://en.wikipedia.org/wiki/Damping"">Wikipedia: Damping</a> ). Also includes basic way-point-following and automatic initialization. Requires <a href=""#drone_stateestimation"">drone_stateestimation</a> to be running. The target is set via the /uga_tum_ardrone/com topic.</p>\n\n<p>Two dimensions (Yaw and Z) can be controlled directly by the drone\'s motors.  The other two (X and Y) are controlled by the drone ""leaning"" in that direction, which complicates control slightly. \nThe damped springs provide a target force that the drone tries to generate with its motors and leaning, while still maintaining it\'s altitude.</p>\n\n<h4 id=""subscribed-topics"">\xc2\xa0Subscribed topics</h4>\n\n<ul>\n<li>/ardrone/predictedPose</li>\n</ul>\n\n<h4 id=""published-topics"">Published topics</h4>\n\n<ul>\n<li>/cmd_vel</li>\n<li>/ardrone/land</li>\n<li>/ardrone/takeoff</li>\n<li>/ardrone/reset</li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<p>None</p>\n\n<h4 id=""parameters"">\xc2\xa0Parameters</h4>\n\n<ul>\n<li>~minPublishFreq: usually, a control command is sent for each pose estimate received from drone_stateestimation. However, if no pose estimate is received for more than minPublishFreq milliseconds, a HOVER command is sent, causing the drone to hover if for example drone_stateestimation is shut down suddenly. Default: 110.</li>\n<li>K_direct, K_rp: spring strength of the directly controlled dimensions (yaw and Z) and the leaning dimensions (X and Y) respectively</li>\n<li>droneMassInKilos: needed for proper damping</li>\n<li>max_yaw: can be used to limit the speed of yaw\'ing (the drone can spin quite fast!)</li>\n<li>xy_damping_factor: due to the use of leaning the drone can only roughly approximate a damped spring, tune this parameter to account for things like air resistance and wind</li>\n<li>max_rp_radians: this should match the corresponding parameter in ardrone_autonomy</li>\n<li>max_gaz_rise: limit the maximum positive Z speed (m/s)</li>\n<li>max_gaz_drop: limit the maximum negative Z speed (m/s)</li>\n<li><p>max_rp: limit the maximum leaning command sent (x and y)</p></li>\n<li><p>rise_fac: rise commands are larger than respective drop commands by this factor. This is due to the drone sometimes dropping unpredictably fast for large drop commands, however rising somethimes requires large rise commands.</p></li>\n<li><p>aggressiveness: multiplied to PI-component of all commands sent. Low values lead to the drone flying ""slower"".</p></li>\n</ul>\n\n<h4 id=""required-tf-transforms"">\xc2\xa0Required tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""provided-tf-transforms"">\xc2\xa0Provided tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""using-it"">Using it</h4>\n\n<p>The behavior of the autopilot is set by sending commands on /uga_tum_ardrone/com of the form ""c COMMAND"". A Queue of commands is kept, and as soon as one command is finished (for example a way point reached), the next command is popped. The queue can be cleared by sending ""c clearCommands"". Commands can be sent using the <a href=""#drone_gui"">drone_gui</a> node. Some example scripts can be found in /flightPlans/*.txt. Possible commands are:</p>\n\n<ul>\n<li>\n<p>autoInit [int moveTimeMS] [int waitTimeMS] [int riseTimeMs] [float initSpeed]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">takes control, starts drone, initializes PTAM. That is:\n- starts the drone &amp; and waits riseTimeMs, the drone will rise to approx. \n  a height of 1m. \n- initializes PTAM by taking the first KF, flying up (sending initSpeed as control command) for moveTimeMS, \n  waiting waitTimeMS and then taking the second KF. \n  This is done until success (flying up and down respectively).\n- good default values are ""autoInit 500 800 4000 0.5"" \n</code></pre></div>\n</li>\n<li>\n<p>setInitialYaw [double yaw]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sets the yaw the drone is started at.  Most useful with the ardrone 2.0\nwith absolute yaw control, as it allows you to specify some other yaw\nas the zero point rather than due north.\n</code></pre></div>\n</li>\n<li>\n<p>autoTakeover [int moveTimeMS] [int waitTimeMS] [int riseTimeMs] [float initSpeed]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">takes control, initializes PTAM. The same as autoInit ..., \nbut to be used when the drone is already flying (skipps the first step).\n</code></pre></div>\n</li>\n<li>\n<p>takeoff </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">- takes control, starts drone.\n- does not reset map or initialize PTAM\n</code></pre></div>\n</li>\n<li>\n<p>setReference [doube x] [double y] [double z] [double yaw]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sets reference point (used in goto X X X X).\n</code></pre></div>\n</li>\n<li>\n<p>setMaxControl [double cap = 1.0]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">maximal control sent is capped at [cap], causing the drone to fly slower.\n</code></pre></div>\n</li>\n<li>\n<p>setInitialReachDist [double dist = 0.2]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">drone has to come this close to a way point initially\n</code></pre></div>\n</li>\n<li>\n<p>setStayWithinDist [double dist = 0.5]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">drone has to stay this close to a way point for a certain amount of time.\n</code></pre></div>\n</li>\n<li>\n<p>setStayTime [double seconds = 2.0]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">time the drone has to stay within [stayWithinDist] for target to be reached.\n</code></pre></div>\n</li>\n<li>\n<p>clearCommands</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">clears all targets, such that the next command is executed immediately.\n</code></pre></div>\n</li>\n<li>\n<p>goto [doube x] [double y] [double z] [double yaw]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">flies to position (x,y,z yaw), relative to current reference point.\nblocks until target is reached according to set parameters\n</code></pre></div>\n</li>\n<li>\n<p>moveBy [doube x] [double y] [double z] [double yaw]</p>\n\n<p>moves by (x,y,z,yaw), relative to the current target position\n    blocks until target is reached according to set parameters</p>\n</li>\n<li>\n<p>moveByRel [doube x] [double y] [double z] [double yaw]</p>\n\n<p>moves by (x,y,z,yaw), relative to the current estimated position \n    of the drone\n    blocks until target is reached according to set parameters</p>\n</li>\n<li>\n<p>land</p>\n\n<p>initializes landing (use auto-land of drone)</p>\n</li>\n<li>\n<p>lockScaleFP</p>\n\n<p>sets the one point that does not change when the scale is re-estimated \n    to the current drone position. The scaleFP can only be set when PTAM is \n    good, i.e. this is delayed until PTAM is initialized and good.\n    Need to set useWorldFixpoint in dynammic_reconfigure.</p>\n</li>\n</ul>\n\n<h3 id=""drone_gui"">drone_gui</h3>\n\n<p>This node offers a simple QT GUI to control the <a href=""#drone_autopilot"">drone_autopilot</a> node, the <a href=""#drone_stateestimation"">drone_stateestimation</a> node and fly the drone manually via keyboard or joystick.</p>\n\n<h4 id=""subscribed-topics"">\xc2\xa0Subscribed topics</h4>\n\n<ul>\n<li>/cmd_vel</li>\n<li>/uga_tum_ardrone/com</li>\n<li>/ardrone/takeoff</li>\n<li>/ardrone/land</li>\n<li>/ardrone/reset</li>\n<li>/ardrone/predictedPose</li>\n<li>/ardrone/navdata</li>\n<li>/joy</li>\n</ul>\n\n<h4 id=""published-topics"">Published topics</h4>\n\n<ul>\n<li>/cmd_vel</li>\n<li>/uga_tum_ardrone/com</li>\n<li>/ardrone/takeoff</li>\n<li>/ardrone/land</li>\n<li>/ardrone/reset</li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<ul>\n<li>calls /ardrone/togglecam</li>\n<li>calls /ardrone/flattrim</li>\n</ul>\n\n<h4 id=""parameters"">\xc2\xa0Parameters</h4>\n\n<ul>\n<li><p>DroneIP: IP address to periodically ping in order to estimate the latency of drone control. DO NO IGNORE THIS PARAMETER, it significantly affects performance.</p></li>\n<li><p>KBsensRP: Sensitivity for roll/pitch Keyboard control</p></li>\n<li><p>KBsensYaw: Sensitivity for yaw Keyboard control</p></li>\n<li><p>KBsensGAZ: Sensitivity for gaz Keyboard control</p></li>\n</ul>\n\n<h4 id=""required-tf-transforms"">\xc2\xa0Required tf transforms</h4>\n\n<p>None</p>\n\n<h4 id=""provided-tf-transforms"">\xc2\xa0Provided tf transforms</h4>\n\n<p>None</p>\n\n<h4 id=""using-it"">Using it</h4>\n\n<p><img src=""http://wiki.ros.org/tum_ardrone/drone_gui?action=AttachFile&amp;do=get&amp;target=ui.png"" alt=""Drone GUI""></p>\n\n<h6 id=""monitor-drone-autopilot-and-stateestimation-nodes-top-right-part"">Monitor Drone, Autopilot and Stateestimation Nodes (top-right part).</h6>\n\n<p>On the top-right, the current publish-frequency of important topics is displayed:\n- Drone Navdata: monitors /ardrone/navdata. Should be around 150 to 200Hz with a connected drone, and running (and correctly configured) ardrone_autonomy node.\n- Drone Control: monitors /cmd_vel. This is the frequency of how often control commands are published (and sent to the drone).\n- Pose Estimates: monitors /ardrone/predictedPose. These are the state predictions generated by the drone_stateestimation node. By default, this should be 30Hz.\n- Joy Input: monitors /joy. If you have a connected game-pad and running joy_node, this should be different from 0Hz.\n- Pings (RTT): current wireless LAN latency (RTT in ms) for 500B and 20kB packages. If these are too high, reduce Wlan clutter.</p>\n\n<h6 id=""manual-or-joystick-control-of-the-drone"">Manual or joystick control of the drone.</h6>\n\n<p>The current control source has to be set (i.e. joystick or KB). The autopilot is only allowed to send control commands, if this is set to autopilot.</p>\n\n<ul>\n<li>\n<p>Joystick control requires a connected joystick and running ""rosrun joy joy_node"". We use a PS3 sixaxis controller.\nto make the controller work, a small linux-hack is required (set controller rights).</p>\n\n<ul>\n<li>left joystick is horizontal pos. control; right joystick is height and yaw control.</li>\n<li>L1 to take off, release L1 to land.</li>\n<li>R1 to toggle emergency state.\n=&gt; by moving any of the two joysticks, the Control Source is immediately sent to Joystick.\ncan be used for safety (autopilot does wired stuff -&gt; immediately take over, disabling the autopilot and enabeling manual control).</li>\n</ul>\n</li>\n<li>\n<p>KB control requires the GUI window to have focus, but NOT the upper-left text field.\n=&gt; make the GUI the active window and press ESC to immediately enable KB control and set focus such that KB control works properly.\n can be used for safety (autopilot does wired stuff -&gt; press ESC and immediately take over, disabling the autopilot and enabeling manual control).</p>\n\n<ul>\n<li>q,a: fly up &amp; down.</li>\n<li>i,j,k,l: fly horizontally.</li>\n<li>u,o: rotate yaw.</li>\n<li>F1: toggle emergency</li>\n<li>s: takeoff</li>\n<li>d: land</li>\n</ul>\n</li>\n<li><p>Buttons Land, Takeoff, ToggleCam, Emergency (toggles emergency state).</p></li>\n</ul>\n\n<h6 id=""autopilot-control"">Autopilot Control</h6>\n\n<ul>\n<li>write commands in top-left text field (or load eample from one of the files). You can simply add .txt files to flightplans/.</li>\n<li>click Send to transmit commands to the autopilot\'s command queue (automatically sets Control Source to Autopilot).</li>\n<li>click Clear to clear autopilot command queue and current target.</li>\n<li>click Reset to reset Autopilot, PTAM and EKF.</li>\n</ul>\n\n<h2 id=""troubleshooting"">Troubleshooting</h2>\n\n<ul>\n<li>if drone doesnt start:\n\n<ul>\n<li>battery empty? (drone does not start if battery &lt; ~18%)</li>\n<li>Drone in emergency state? (if so, the four led\'s are red. click Emergency to reset).</li>\n</ul>\n</li>\n<li>cannot control drone:\n\n<ul>\n<li>selected correct control source? maybe re-select.</li>\n</ul>\n</li>\n<li>drone flies unstable using the autopilot:\n\n<ul>\n<li>adjust / reduce control parameters using dynamic_reconfigure (see readme_autopilot).</li>\n</ul>\n</li>\n<li>drone broken: buy a new one.</li>\n</ul>\n\n<h2 id=""known-bugs-amp-issues"">Known Bugs &amp; Issues</h2>\n\n<ul>\n<li>as the software was originally developed for the Ar.Drone 1.0, the pressure sensor and magnetometer are not used.</li>\n<li>drone_stateestimation crashes occasionally when PTAM init fails (crash occurs in PTAM code). \nHappens in oarticular if there is no baseline in between the first two keyframes, hardly ever happens in praxis.</li>\n</ul>\n\n<h2 id=""tips-and-tricks"">Tips and Tricks</h2>\n\n<h4 id=""camera-calibration"">Camera calibration</h4>\n\n<ul>\n<li>front, old drone: 0.672049, 0.899033, 0.502065, 0.513876, 0.271972</li>\n<li>front, new drone: 0.771557, 1.368560, 0.552779, 0.444056, 1.156010</li>\n</ul>\n\n<p>calibrate with ethzasl_ptam.\nto work with colored images, in src/CameraCalibrator.cc change:\n- add #include <cv_bridge>\n- change function imageCallback(...) to</cv_bridge></p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""kt"">void</span> <span class=""n"">CameraCalibrator</span><span class=""o"">::</span><span class=""n"">imageCallback</span><span class=""p"">(</span><span class=""k"">const</span> <span class=""n"">sensor_msgs</span><span class=""o"">::</span><span class=""n"">ImageConstPtr</span> <span class=""o"">&amp;</span> <span class=""n"">img</span><span class=""p"">)</span>\n<span class=""p"">{</span>\n    <span class=""n"">cv_bridge</span><span class=""o"">::</span><span class=""n"">CvImagePtr</span> <span class=""n"">cv_ptr</span> <span class=""o"">=</span> <span class=""n"">cv_bridge</span><span class=""o"">::</span><span class=""n"">toCvCopy</span><span class=""p"">(</span><span class=""n"">img</span><span class=""p"">,</span> <span class=""n"">sensor_msgs</span><span class=""o"">::</span><span class=""n"">image_encodings</span><span class=""o"">::</span><span class=""n"">MONO8</span><span class=""p"">);</span>\n\n    <span class=""k"">if</span><span class=""p"">(</span><span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">size</span><span class=""p"">().</span><span class=""n"">x</span> <span class=""o"">!=</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">width</span> <span class=""o"">||</span> <span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">size</span><span class=""p"">().</span><span class=""n"">y</span> <span class=""o"">!=</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">height</span><span class=""p"">)</span>\n        <span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">resize</span><span class=""p"">(</span><span class=""n"">CVD</span><span class=""o"">::</span><span class=""n"">ImageRef</span><span class=""p"">(</span><span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">width</span><span class=""p"">,</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">height</span><span class=""p"">));</span>\n\n    <span class=""n"">memcpy</span><span class=""p"">(</span><span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">data</span><span class=""p"">(),</span><span class=""n"">cv_ptr</span><span class=""o"">-&gt;</span><span class=""n"">image</span><span class=""p"">.</span><span class=""n"">data</span><span class=""p"">,</span><span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">width</span> <span class=""o"">*</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">height</span><span class=""p"">);</span>\n\n    <span class=""n"">mNewImage</span> <span class=""o"">=</span> <span class=""nb"">true</span><span class=""p"">;</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<h4 id=""parameters-c1-to-c8"">Parameters: c1 to c8</h4>\n\n<p>can be estimated easily by \n- recording a flight: rosbag record -O calibFlight.bag /ardrone/image_raw /ardrone/navdata /cmd_vel\n- playing back that flight: rosbag play -l calibFlight.bag\n- starting two stateestimation nodes, one with remapped name and output:\n  - rosrun uga_tum_ardrone drone_stateestimation _<em>name:=drone_stateestimationn2 /ardrone/predictedPose:=/ardrone/predictedPose2\n  - rosrun uga_tum_ardrone drone_stateestimation\n- plotting the respective estimated values\n  - e.g.: rxplot /ardrone/predictedPose/dx,/ardrone/predictedPose2/dx\n- using dynamic reconfigure to \n  - in drone</em>stateestimation2, use only control gains\n  - in drone_stateestimation, use NO control gains, but instead navdata / speeds / PTAM.\n- setting c_i in drone_stateestimation2 such that graphs match best (play around).</p>\n\n<h4 id=""parameters-pid-control"">Parameters: PID control</h4>\n\n<p>approximate in ""simulation"" based on c1 to c8:\n- play back any record, to make stateestimation run (dont play /cmd_vel)\n  - rosbag play -l calibFlightZ.bag --topics /ardrone/image_raw /ardrone/navdata\n- run stateestimation, in dynamic reconfigure set only control updates to be used\n- run gui and autopilot, and control\n- plot control / respective pose e.g. with \n  - rxplot /ardrone/predictedPose/yaw /cmd_vel/angular/z</p>\n\n<h2 id=""licence"">Licence</h2>\n\n<p>The major part of this software package - that is everything except PTAM - is licensed under the GNU General Public License Version 3 (GPLv3), see <a href=""http://www.gnu.org/licenses/gpl.html"">http://www.gnu.org/licenses/gpl.html</a>. PTAM (comprised of all files in /src/stateestimation/PTAM) has it\'s own licence, see <a href=""http://www.robots.ox.ac.uk/%7Egk/PTAM/download.html"">http://www.robots.ox.ac.uk/~gk/PTAM/download.html</a>. This licence in particular prohibits commercial use of the software.</p>\n</div>\n\n            \n          </div>'"
forte_rc_robot,http://rosindex.github.io/r/forte_rc_robot/,indigo,"forte_rc_description,forte_rc_driver,forte_rc_robot,forte_rc_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""forte_rc_robot"">forte_rc_robot</h1>\n\n<p>ROS driver for robot Forte_RC</p>\n</div>\n\n            \n          </div>'"
lms1xx,http://rosindex.github.io/r/lms1xx/,"jade,kinetic,indigo",lms1xx,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""lms1xx"">LMS1xx <a href=""https://travis-ci.org/clearpathrobotics/LMS1xx""><img src=""https://travis-ci.org/clearpathrobotics/LMS1xx.svg?branch=master"" alt=""Build Status""></a>\n</h1>\n\n<p>ROS driver for the SICK LMS1xx family of laser scanners. Originally from <a href=""https://github.com/RCPRG-ros-pkg/RCPRG_laser_drivers"">RCPRG</a>.</p>\n</div>\n\n            \n          </div>'"
rosh_core,http://rosindex.github.io/r/rosh_core/,"hydro,jade,indigo","rosh,rosh_core,roshlaunch","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""></div>\n\n            \n          </div>'"
graph_msgs,http://rosindex.github.io/r/graph_msgs/,"hydro,jade,indigo",graph_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""graph_msgs"">graph_msgs</h1>\n\n<p>ROS messages for publishing graphs of different data types</p>\n\n<h2 id=""supported-graph-types"">Supported Graph Types</h2>\n\n<p>Each graph is simply a node of some message type, and an edge that connects those two nodes</p>\n\n<ul>\n<li>geometry_msgs::Point</li>\n</ul>\n\n<h2 id=""future-direction"">Future Direction</h2>\n\n<ul>\n<li>Add new data types</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""graph_msgs"">graph_msgs</h1>\n\n<p>ROS messages for publishing graphs of different data types</p>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/graph_msgs""><img src=""https://travis-ci.org/davetcoleman/graph_msgs.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-indigo-graph_msgs""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-graph_msgs"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-indigo-graph-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-graph-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<h2 id=""supported-graph-types"">Supported Graph Types</h2>\n\n<p>Each graph is simply a node of some message type, and an edge that connects those two nodes</p>\n\n<ul>\n<li>geometry_msgs::Point</li>\n</ul>\n\n<h2 id=""future-direction"">Future Direction</h2>\n\n<ul>\n<li>Add new data types</li>\n</ul>\n</div>\n\n            \n          </div>'"
cartesian_msgs,http://rosindex.github.io/r/cartesian_msgs/,"jade,indigo",cartesian_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cartesian-msgs"">Cartesian Msgs</h1>\n\n<p>Experimental messages for sending Cartesian commands to a robot. There has never been a consensus for what this should look like, see <a href=""http://wiki.ros.org/trajectory_msgs/Reviews/Cartesian%20Trajectories_API_Review_2013_06_05"">Cartesian Trajectories API Review</a> for related discission.</p>\n\n<p>Features:</p>\n\n<ul>\n<li>A single message, that specifies the pose and how long to achieve that point</li>\n</ul>\n\n<p>Status:</p>\n\n<ul>\n<li>\n<a href=""https://travis-ci.org/davetcoleman/cartesian_msgs""><img src=""https://travis-ci.org/davetcoleman/cartesian_msgs.svg"" alt=""Build Status""></a> Travis CI</li>\n<li>\n<a href=""http://jenkins.ros.org/job/devel-jade-cartesian_msgs""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-jade-cartesian_msgs"" alt=""Devel Job Status""></a> Devel Job Status</li>\n<li>\n<a href=""http://jenkins.ros.org/job/ros-jade-cartesian-msgs_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-jade-cartesian-msgs_binarydeb_trusty_amd64"" alt=""Build Status""></a> AMD64 Debian Job Status</li>\n</ul>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-jade-cartesian-msgs\n\n</code></pre></div>\n<h2 id=""code-api"">Code API</h2>\n\n<p>See <a href=""http://docs.ros.org/jade/api/cartesian_msgs/html/"">Class Reference</a></p>\n\n<h2 id=""contribute"">Contribute</h2>\n\n<p>Please add new, related message types or details as you need.</p>\n</div>\n\n            \n          </div>'"
iav_depthimage_to_laserscan,http://rosindex.github.io/r/iav_depthimage_to_laserscan/,"hydro,indigo",iav_depthimage_to_laserscan,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""iav_depthimage_to_laserscan"">iav_depthimage_to_laserscan</h1>\n\n<p>ROS node that convert a depth image to a laser scan for use with navigation and localization. Furthermore, it allows the use for one camera or more\n(launch example for two cameras Asus Xtion Pro Live) and generates only one general laser scan for all of them, i.e. it allows create a 360\xc2\xb0 laser scan \nwith using up to two cameras. For this just add one subscriber (with callback) and one variable Param (the parameters of the new camera) for each camera. </p>\n\n<p>It was implemented a Resolution Mapping that allows a bigger or smaller number of laser points than the resolution of the cameras.</p>\n\n<p>The generated laser works like a 3D laser since shows not only what there are directly in front of the camera but what there are below and above as well, \nensuring a better environmental vision. This is done through the parameters height_max (&gt; 0) and height_min (&lt; 0). </p>\n\n<h1 id=""how-to-build-iav_depthimage_to_laserscan-ros-package"">How to build iav_depthimage_to_laserscan ros package</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">1) Clone this project to your catkin\'s workspace src folder\n2) Running catkin_make to build iav_depthimage_to_laserscan node\n</code></pre></div>\n<h1 id=""how-to-run-iav_depthimage_to_laserscan-ros-package"">How to run iav_depthimage_to_laserscan ros package</h1>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch iav_depthimage_to_laserscan itl_test.launch\n</code></pre></div>\n<p>You should see the scan result in the rviz.</p>\n\n<p>NOTE: Remember, the launch was prepared for using with two cameras.</p>\n\n<h1 id=""transformation-from-laser-frame-to-camera_frame"">Transformation from Laser frame to camera_frame</h1>\n\n<p>The transformations from laser to cameras were calculated from parameters and transmited via tf broadcaster to ROS system. So rviz can display the camera image in a correct way.</p>\n</div>\n\n            \n          </div>'"
conman,http://rosindex.github.io/r/conman/,hydro,"conman,conman_blocks,conman_examples,conman_msgs,conman_ros,rqt_conman,rtt_conman_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""conman"">Conman</h1>\n\n<p><a href=""https://travis-ci.org/jbohren/conman""><img src=""https://travis-ci.org/jbohren/conman.png?branch=master"" alt=""Build Status""></a></p>\n\n<h2 id=""introduction"">Introduction</h2>\n\n<p><em>Conman</em> is a controller and state estimator manager built on top of the\n<a href=""http://www.orocos.org"">Oroocos Toolchain</a> and designed to create a common\nplatform for sharing robot controllers and state estimators. Conman enforces\nadditional constraints on when and how components can be running in order to\nprevent errors and improve robustness when switching components in and out\nof the control loop at runtime.</p>\n\n<h3 id=""audience"">Audience</h3>\n\n<p>This tool is meant for robotics researchers who wish to do real-time robot\nstate estimation and control within the Orocos real-time toolkit (RTT). While\nthis is a ROS-independent framework, tools for ROS integration are provided in\nthe <strong>conman_ros</strong> package. </p>\n\n<h3 id=""scope"">Scope</h3>\n\n<p><em>Conman</em> not trying to solve the world. <em>Conman</em> is just trying to get rich\nquick. As such, it is designed with the following goals:</p>\n\n<ul>\n<li>Provide a common interface for running Orocos components for robot state\nestimation and control.</li>\n<li>Provide a more-constrained modeling paradigm for robot state estimation and\ncontrol.</li>\n<li>Determine the computational scheduling of these blocks from their data flow\nconnections and desired execution rates.</li>\n<li>Enable external manipulation of the running set of estimators and controllers\nso that single blocks and groups of blocks can be enabled and disabled at\nruntime.</li>\n<li>Provide a special component, not a special framework to perform these roles.</li>\n</ul>\n\n<h3 id=""approach"">Approach</h3>\n\n<h4 id=""schemes-serialized-control-hardware-and-estimation-model-execution"">Schemes: Serialized Control, Hardware, and Estimation Model Execution</h4>\n\n<p>A <em>Conman</em> ""scheme"" models the data flow of and execution constraints on a set\nof RTT components connected by data flow ports. The scheme is an RTT component,\nitself, and when executed at runtime, it serially executes a subset of its peers\naccording to their input and output data flow ports. </p>\n\n<p>The execution schedule guarantees that all inputs to a given component are\ngenerated before said component, and each component is executed in a single\nupdate of the scheme. This schedule corresponds to a topological sort of the\ndata flow graph. As such, cycles in data flow need to be explicitly broken\nthrough ""latching."" Latching the data connections from component <em>A</em> to\ncomponent <em>B</em> means that the data that component <em>B</em> reads at cycle <em>(k)</em> will\nbe the data that component <em>A</em> wrote at cycle <em>(k-1)</em>.</p>\n\n<h4 id=""scheme-internals"">Scheme Internals</h4>\n\n<p>Internally, the scheme is represented by three graphs:</p>\n\n<ol>\n<li>\n<strong>Data Flow Graph</strong> (DFG): An exact directed graph model of the data flow\nbetween the scheme members. Each vertex represents an RTT task, and each\narc represets a set of data flow connections between two tasks.\nThis graph may be cyclic.</li>\n<li>\n<strong>Execution Scheduling Graph</strong> (ESG): The DFG with ""latched"" edges removed.\nThis graph is always acyclic, and is used to compute the execution order of\nthe scheme members via standard topological sort.</li>\n<li>\n<strong>Runtime Conflict Graph</strong> (RCG): An undirected graph of members where\nadjacent members cannot be run simultaneously due to some resource conflict.</li>\n</ol>\n\n<h4 id=""scheme-construction"">Scheme Construction</h4>\n\n<p>Components are added to and removed from a scheme procedurally. Each time a\ncomponent is added, the scheme regnerates its model of the data flow and\nconflict relationships between all the scheme members.</p>\n\n<p>Currently, the scheme topology can only be changed when it is not in the <em>Running</em>\nstate. In the future, the scheme model will be double-buffered so that a copy of\nit can be modified at runtime and then swapped in real-time with the active one.</p>\n\n<h4 id=""edge-latching"">Edge Latching</h4>\n\n<p>If the addition of a component to the scheme adds a cycle to the data flow\ngraph, one of the connections in the cycle must be latched before the scheme can\nbe executed in an unambiguous order. Latches are also set procedurally.</p>\n\n<h4 id=""component-grouping"">Component Grouping</h4>\n\n<p>Components in the scheme can be grouped together under alphanumeric labes (and\ngroups can contain other groups). Groups are useful for starting and stopping\nmultiple scheme components simultaneously at runtime. The manipulation of groups\ndoes not change the graph topology.</p>\n\n<h4 id=""scheme-orchestration-at-runtime"">Scheme Orchestration at Runtime</h4>\n\n<p>Components can be started and stopped synchonously with the execution of the\nentire scheme at runtime. If numerous components are specified, they are started\nin topological order, and stopped in reverse-topological order.</p>\n\n<h3 id=""designing-components-for-use-in-conman"">Designing Components for Use in Conman</h3>\n\n<p>Conman imposes a few constraints on the design of RTT components. For components\nto be used with Conman, they need the following properties:</p>\n\n<ul>\n<li>The component should be compatible with the <code>SlaveActivity</code> execution pattern.\nEach component added to a Scheme is assigned a <code>SlaveActivity</code> which enables\nit to be executed in the Scheme\'s thread.</li>\n<li>The component\'s <code>startHook()</code>, <code>updateHook()</code>, and <code>stopHook()</code> should be\nrealtime-safe and not block for long durations. Components should either\ncompute their results with bounded latency, or coordinate without locking with\na separate activity. </li>\n<li>Data ports should only be written to and read from in a component\'s\n<code>startHook()</code> and <code>updateHook()</code>. The assumption of the sched</li>\n</ul>\n\n<h4 id=""running-components-at-different-rates"">Running Components at Different Rates</h4>\n\n<p>The <em>Conman</em> scheme will run at a fixed rate (the rate at which you want to\ncontrol the fastest hardware in the scheme), but you may want to have components\nwhich run slower than that. If this is the case, then they can still run at\nintegral multiples of the loop rate.</p>\n\n<p>Each member of the scheme has a minimum execution period associated with it. By\ndefault, this minimum execution period is 0.0 seconds. A minimum execution\nperiod of 0.0 seconds means that the block will be executed as fast as the\nscheme, itself.</p>\n\n<h4 id=""common-rtt-port-interfaces"">Common RTT Port Interfaces</h4>\n\n<p><strong><em>IN PROGRESS</em></strong></p>\n\n<p>We do not want to define <em>yet another</em> datatype or message specification.\nInstead, we want to take existing datatypes (Eigen, KDL, ROS, etc) and annotate\nthem with relevant metadata needed to make sense of them. Essentially, we want\nany given port to be self-describing. </p>\n\n<p>For example, a port in joint-space should provide both the number of degrees of\nfreedom of the joint group, as well as the ordered list of joint names, and a\nport in cartesian-space should also provide the name of its origin frame.</p>\n\n<h5 id=""joint-space-quantity"">Joint-Space Quantity</h5>\n\n<h5 id=""cartesian-space-quantity"">Cartesian-Space Quantity</h5>\n\n<h2 id=""tutorials"">Tutorials</h2>\n\n<h3 id=""running-a-conman-scheme"">Running a Conman Scheme</h3>\n\n<p><strong>TBD</strong></p>\n\n<h3 id=""writing-a-state-estimation-block"">Writing a State Estimation Block</h3>\n\n<p><strong>TBD</strong></p>\n\n<h3 id=""managing-a-scheme-at-runtime"">Managing a Scheme At Runtime</h3>\n\n<p><strong>TBD</strong></p>\n\n<h3 id=""running-conman-in-gazebo"">Running Conman In Gazebo</h3>\n\n<p><strong>TBD</strong></p>\n\n<h3 id=""loading-a-ros_control-based-controller-into-conman"">Loading a ros_control-based Controller Into Conman</h3>\n\n<p><strong>TBD</strong></p>\n\n<h3 id=""loading-a-ros_control-based-hardware-interface-into-conman"">Loading a ros_control-based Hardware Interface Into Conman</h3>\n\n<p><strong>TBD</strong></p>\n\n<h2 id=""motivating-use-cases"">Motivating Use Cases</h2>\n\n<h3 id=""teaching-my-first-controller"">Teaching: My First Controller\xe2\x84\xa2</h3>\n\n<p><strong>TBD</strong></p>\n\n<h3 id=""controller-switching-at-runtime"">Controller Switching at Runtime</h3>\n\n<p><strong>TBD</strong></p>\n\n<h3 id=""automatic-state-estimation-switching-at-runtime"">Automatic State Estimation Switching at Runtime</h3>\n\n<p><strong>TBD</strong></p>\n\n<h3 id=""visual-feedback-for-robotic-manipulator-control"">Visual Feedback for Robotic Manipulator Control</h3>\n\n<p><strong>TBD</strong></p>\n\n<h2 id=""future-work"">Future Work</h2>\n\n<h3 id=""running-multiple-schemes"">Running Multiple Schemes</h3>\n\n<p>Since <em>Conman</em> schemes do not <em>own</em> the RTT components involved\nin them, it\'s possible to run multiple schemes either in parallel or serialized.\nOf course there\'s nothing to worry about if the two schemes do not interact, but\nif they do, you can still run them in parallel...</p>\n</div>\n\n            \n          </div>'"
homer_object_recognition,http://rosindex.github.io/r/homer_object_recognition/,indigo,"or_libs,or_msgs,or_nodes","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""homer_object_recognition-indigo-0-0-3-0"">homer_object_recognition (indigo) - 0.0.3-0</h2>\n\n<p>The packages in the <code>homer_object_recognition</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_object_recognition --edit</code> on <code>Mon, 07 Dec 2015 17:57:23 -0000</code></p>\n\n<p>These packages were released:\n- <code>or_libs</code>\n- <code>or_msgs</code>\n- <code>or_nodes</code></p>\n\n<p>Version of package(s) in repository <code>homer_object_recognition</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git"">https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git"">https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git</a>\n- rosdistro version: <code>0.0.2-1</code>\n- old version: <code>0.0.2-1</code>\n- new version: <code>0.0.3-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""homer_object_recognition-indigo-0-0-2-1"">homer_object_recognition (indigo) - 0.0.2-1</h2>\n\n<p>The packages in the <code>homer_object_recognition</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_object_recognition --edit</code> on <code>Sun, 27 Sep 2015 08:06:08 -0000</code></p>\n\n<p>These packages were released:\n- <code>or_libs</code>\n- <code>or_msgs</code>\n- <code>or_nodes</code></p>\n\n<p>Version of package(s) in repository <code>homer_object_recognition</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git"">https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git"">https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git</a>\n- rosdistro version: <code>0.0.2-0</code>\n- old version: <code>0.0.2-0</code>\n- new version: <code>0.0.2-1</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n\n<h2 id=""homer_object_recognition-indigo-0-0-2-0"">homer_object_recognition (indigo) - 0.0.2-0</h2>\n\n<p>The packages in the <code>homer_object_recognition</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo homer_object_recognition --edit</code> on <code>Tue, 15 Sep 2015 11:40:34 -0000</code></p>\n\n<p>These packages were released:\n- <code>or_libs</code>\n- <code>or_msgs</code>\n- <code>or_nodes</code></p>\n\n<p>Version of package(s) in repository <code>homer_object_recognition</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git"">https://gitlab.uni-koblenz.de/robbie/homer_object_recognition.git</a>\n- release repository: unknown\n- rosdistro version: <code>null</code>\n- old version: <code>null</code>\n- new version: <code>0.0.2-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.7</code>\n- rosdep version: <code>0.11.1</code>\n- rosdistro version: <code>0.4.1</code>\n- vcstools version: <code>0.1.36</code></p>\n</div>\n\n            \n          </div>'"
roscompile,http://rosindex.github.io/r/roscompile/,indigo,roscompile,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>roscompile is a tool that examines ROS (Catkin) packages, analyzes the files within, fixes common errors and tweaks the style. To run, simply navigate to a folder containing the packages you\'d like to tweak, and type\n <code>rosrun roscompile roscompile</code></p>\n\n<h1 id=""features"">Features</h1>\n\n<h2 id=""dependencies"">Dependencies</h2>\n\n<ul>\n<li>Checks for dependencies by looking in the source code and launch files. </li>\n<li>Inserts build and run dependencies into your package.xml</li>\n<li>Inserts dependencies into your CMakeLists.txt</li>\n<li>Sorts lists of dependencies (in both package.xml/CMakeLists.txt)</li>\n</ul>\n\n<h2 id=""cmakelists-txt"">CMakeLists.txt</h2>\n\n<ul>\n<li>Automatically looks for msg/srv/action/dynamic_reconfigure definitions and ensures they are properly documented in the CMakeLists.txt</li>\n<li>Enforces the ordering of the commands</li>\n</ul>\n\n<h2 id=""legacy-comments"">Legacy Comments</h2>\n\n<ul>\n<li>Removes auto-generated comments from your CMakeLists.txt and package.xml</li>\n</ul>\n\n<h2 id=""python"">Python</h2>\n\n<ul>\n<li>If you have python code, will automatically generate setup.py for you.</li>\n</ul>\n\n<h2 id=""plugins"">Plugins</h2>\n\n<ul>\n<li>If you use pluginlib, will search your code for PLUGINLIB_EXPORT_CLASS macros, and update your plugin xml accordingly. </li>\n</ul>\n\n<h2 id=""people"">People</h2>\n\n<ul>\n<li>Reads the &lt;author&gt; and &lt;maintainer&gt; tags</li>\n<li>Allows you to specify a canonical name and email address to replace all variants on your name </li>\n<li>\'dlu\', \'Dave Lu\', \'David Lu\'\', \'dlu@TODO\' can all become \'David V. Lu!!\'</li>\n</ul>\n\n<h2 id=""configuration"">Configuration</h2>\n\n<ul>\n<li>Each of these features can be disabled by changing the <code>~/.ros/roscompile.yaml</code> file, which is written after your first usage. </li>\n</ul>\n</div>\n\n            \n          </div>'"
ecto_ros,http://rosindex.github.io/r/ecto_ros/,"hydro,groovy,kinetic,jade,indigo",ecto_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ecto_ros"">ecto_ros</h1>\n\n<p>These are common ecto bindings for the ROS (Robot Operating System).</p>\n</div>\n\n            \n          </div>'"
jsk_smart_apps,http://rosindex.github.io/r/jsk_smart_apps/,indigo,"docomo_perception,hrp4_pan_tilt,jsk_android_apps,jsk_android_gui,jsk_android_gui_api9,jsk_android_setup,jsk_pr2_core_apps,jsk_smart_gui,local_app_manager,my_android_package","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jsk_smart_apps"">jsk_smart_apps <a href=""https://travis-ci.org/jsk-ros-pkg/jsk_smart_apps""><img src=""https://travis-ci.org/jsk-ros-pkg/jsk_smart_apps.png?branch=master"" alt=""Build Status""></a>\n</h1>\n</div>\n\n            \n          </div>'"
robbie_architecture,http://rosindex.github.io/r/robbie_architecture/,indigo,robbie_architecture,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""robbie_architecture-indigo-1-0-8-0"">robbie_architecture (indigo) - 1.0.8-0</h2>\n\n<p>The packages in the <code>robbie_architecture</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo robbie_architecture</code> on <code>Tue, 01 Dec 2015 23:52:29 -0000</code></p>\n\n<p>The <code>robbie_architecture</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>robbie_architecture</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- rosdistro version: <code>1.0.7-0</code>\n- old version: <code>1.0.7-0</code>\n- new version: <code>1.0.8-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""robbie_architecture-indigo-1-0-7-0"">robbie_architecture (indigo) - 1.0.7-0</h2>\n\n<p>The packages in the <code>robbie_architecture</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo robbie_architecture</code> on <code>Tue, 01 Dec 2015 14:59:36 -0000</code></p>\n\n<p>The <code>robbie_architecture</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>robbie_architecture</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- rosdistro version: <code>1.0.6-0</code>\n- old version: <code>1.0.6-0</code>\n- new version: <code>1.0.7-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""robbie_architecture-indigo-1-0-6-0"">robbie_architecture (indigo) - 1.0.6-0</h2>\n\n<p>The packages in the <code>robbie_architecture</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo robbie_architecture</code> on <code>Sun, 29 Nov 2015 23:34:14 -0000</code></p>\n\n<p>The <code>robbie_architecture</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>robbie_architecture</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- rosdistro version: <code>1.0.5-0</code>\n- old version: <code>1.0.5-0</code>\n- new version: <code>1.0.6-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""robbie_architecture-indigo-1-0-5-0"">robbie_architecture (indigo) - 1.0.5-0</h2>\n\n<p>The packages in the <code>robbie_architecture</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo robbie_architecture</code> on <code>Fri, 27 Nov 2015 15:00:23 -0000</code></p>\n\n<p>The <code>robbie_architecture</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>robbie_architecture</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- rosdistro version: <code>1.0.3-1</code>\n- old version: <code>1.0.4-0</code>\n- new version: <code>1.0.5-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""robbie_architecture-indigo-1-0-4-0"">robbie_architecture (indigo) - 1.0.4-0</h2>\n\n<p>The packages in the <code>robbie_architecture</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo robbie_architecture</code> on <code>Fri, 27 Nov 2015 14:46:23 -0000</code></p>\n\n<p>The <code>robbie_architecture</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>robbie_architecture</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- rosdistro version: <code>1.0.3-1</code>\n- old version: <code>1.0.3-1</code>\n- new version: <code>1.0.4-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""robbie_architecture-indigo-1-0-3-1"">robbie_architecture (indigo) - 1.0.3-1</h2>\n\n<p>The packages in the <code>robbie_architecture</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo robbie_architecture</code> on <code>Fri, 27 Nov 2015 13:29:20 -0000</code></p>\n\n<p>The <code>robbie_architecture</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>robbie_architecture</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- rosdistro version: <code>1.0.2-0</code>\n- old version: <code>1.0.3-0</code>\n- new version: <code>1.0.3-1</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""robbie_architecture-indigo-1-0-3-0"">robbie_architecture (indigo) - 1.0.3-0</h2>\n\n<p>The packages in the <code>robbie_architecture</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo robbie_architecture</code> on <code>Wed, 25 Nov 2015 18:52:42 -0000</code></p>\n\n<p>The <code>robbie_architecture</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>robbie_architecture</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- release repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- rosdistro version: <code>1.0.2-0</code>\n- old version: <code>1.0.2-0</code>\n- new version: <code>1.0.3-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""robbie_architecture-indigo-1-0-2-0"">robbie_architecture (indigo) - 1.0.2-0</h2>\n\n<p>The packages in the <code>robbie_architecture</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo robbie_architecture</code> on <code>Tue, 24 Nov 2015 13:03:58 -0000</code></p>\n\n<p>The <code>robbie_architecture</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>robbie_architecture</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- release repository: unknown\n- rosdistro version: <code>null</code>\n- old version: <code>1.0.1-0</code>\n- new version: <code>1.0.2-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n\n<h2 id=""robbie_architecture-indigo-1-0-1-0"">robbie_architecture (indigo) - 1.0.1-0</h2>\n\n<p>The packages in the <code>robbie_architecture</code> repository were released into the <code>indigo</code> distro by running <code>/usr/bin/bloom-release --rosdistro indigo --track indigo robbie_architecture --edit</code> on <code>Tue, 24 Nov 2015 12:27:43 -0000</code></p>\n\n<p>The <code>robbie_architecture</code> package was released.</p>\n\n<p>Version of package(s) in repository <code>robbie_architecture</code>:\n- upstream repository: <a href=""https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git"">https://gitlab.uni-koblenz.de/robbie/robbie_architecture.git</a>\n- release repository: unknown\n- rosdistro version: <code>null</code>\n- old version: <code>null</code>\n- new version: <code>1.0.1-0</code></p>\n\n<p>Versions of tools used:\n- bloom version: <code>0.5.20</code>\n- catkin_pkg version: <code>0.2.10</code>\n- rosdep version: <code>0.11.4</code>\n- rosdistro version: <code>0.4.2</code>\n- vcstools version: <code>0.1.38</code></p>\n</div>\n\n            \n          </div>'"
moveit_simple_grasps,http://rosindex.github.io/r/moveit_simple_grasps/,"hydro,indigo",moveit_simple_grasps,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""support-for-this-package-has-ended"">SUPPORT FOR THIS PACKAGE HAS ENDED</h1>\n\n<p>Sorry, too many things to maintain. Use at your own risk, without support.</p>\n\n<h1 id=""moveit-simple-grasps"">MoveIt! Simple Grasps</h1>\n\n<p>A basic grasp generator for simple objects such as blocks or cylinders for use with the MoveIt! pick and place pipeline. Does not consider friction cones or other dynamics. </p>\n\n<p>Its current implementation simple takes as input a pose vector (postition and orientation) and generates a large number of potential grasp approaches and directions. Also includes a grasp filter for removing kinematically infeasible grasps via threaded IK solvers.</p>\n\n<p>This package includes:</p>\n\n<ul>\n<li>Simple pose-based grasp generator for a block</li>\n<li>Separate grasp generators for custom objects such as rectanguar or cylindrical objects</li>\n<li>Grasp filter</li>\n<li>Test code and visualizations</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee"">Dave Coleman</a> at the Correll Robotics Lab, University of Colorado Boulder with outside contributors.</p>\n\n<p><img align=""right"" src=""https://raw.github.com/davetcoleman/moveit_simple_grasps/hydro-devel/resources/demo.png""> </p>\n\n<h2 id=""video-demo"">Video Demo</h2>\n\n<p>A simple demo with Baxter:</p>\n\n<p><a href=""https://www.youtube.com/watch?v=WEDITCR2qH4""><img src=""http://img.youtube.com/vi/WEDITCR2qH4/0.jpg"" alt=""Baxter Grasp Test""></a>  </p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/davetcoleman/moveit_simple_grasps""><img src=""https://travis-ci.org/davetcoleman/moveit_simple_grasps.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n\n<p>Hydro:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-hydro-moveit-simple-grasps\n\n</code></pre></div>\n<p>Indigo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-moveit-simple-grasps\n\n</code></pre></div>\n<h3 id=""install-from-source"">Install From Source</h3>\n\n<p>Clone this repository into a catkin workspace, then use the rosdep install tool to automatically download its dependencies. Depending on your current version of ROS, use:</p>\n\n<p>Hydro:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro hydro\n\n</code></pre></div>\n<p>Indigo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro indigo\n\n</code></pre></div>\n<h2 id=""robot-agnostic-configuration"">Robot-Agnostic Configuration</h2>\n\n<p>You will first need a configuration file that described your robot\'s end effector geometry. Currently an example format can be seen in this repository at <a href=""https://github.com/davetcoleman/moveit_simple_grasps/blob/hydro-devel/config/baxter_grasp_data.yaml"">config/baxter_grasp_data.yaml</a>. See the comments within that file for explanations. </p>\n\n<p>To load that file at launch, you copy the example in the file <a href=""https://github.com/davetcoleman/moveit_simple_grasps/blob/hydro-devel/launch/grasp_test.launch"">launch/grasp_test.launch</a> where you should see the line <code>&lt;rosparam command=""load"" file=""$(find moveit_simple_grasps)/config/baxter_grasp_data.yaml""/&gt;</code>.</p>\n\n<h2 id=""code-usage"">Code Usage</h2>\n\n<p>Note: You might find the moveit_blocks.h example, discussed at the bottom of this page, most helpful.</p>\n\n<p>We will discuss how to use the generation, filtering, and visualization components.</p>\n\n<p>Within your robot\'s ROS package, add this package to your package.xml, CMakeLists.txt. Then in whatever C++ file add this to your includes:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Grasp generation and visualization\n#include &lt;moveit_simple_grasps/simple_grasps.h&gt;\n#include &lt;moveit_simple_grasps/grasp_data.h&gt;\n#include &lt;moveit_visual_tools/moveit_visual_tools.h&gt;\n\n</code></pre></div>\n<p>Add to your class\'s member variables the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Grasp generator\nmoveit_simple_grasps::SimpleGraspsPtr simple_grasps_;\n\n// class for publishing stuff to rviz\nmoveit_visual_tools::MoveItVisualToolsPtr visual_tools_;\n\n// robot-specific data for generating grasps\nmoveit_simple_grasps::GraspData grasp_data_;\n\n</code></pre></div>\n<p>In your class\' constructor initialize the visualization tools;</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Load the Robot Viz Tools for publishing to Rviz\nvisual_tools_.reset(new moveit_visual_tools::MoveItVisualTools(""base_link""));\n\n</code></pre></div>\n<p>Change the first parameter of visual tools to the name of your robot\'s base link. For more information on that package, see <a href=""https://github.com/davetcoleman/moveit_visual_tools"">moveit_visual_tools</a>.</p>\n\n<p>Then load your robot\'s custom .yaml grasp data file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Load grasp data specific to our robot\nros::NodeHandle nh(""~"");\nif (!grasp_data_.loadRobotGraspData(nh, ""left_hand""))\n  ros::shutdown();\n\n</code></pre></div>\n<p>Where ""left_hand"" is the name of one your SRDF-defined MoveIt! end effectors from the Setup Assistant. This data is loaded from a file that you must load to the parameter server within a roslaunch file, as desribed above.</p>\n\n<p>Now load grasp generator:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Load grasp generator\nsimple_grasps_.reset( new moveit_simple_grasps::SimpleGrasps(visual_tools_) );\n\n</code></pre></div>\n<p>To generate grasps, you first need the pose of the object you want to grasp, such as a block. Here\'s an example pose:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">geometry_msgs::Pose object_pose;\nobject_pose.position.x = 0.4;\nobject_pose.position.y = -0.2;\nobject_pose.position.z = 0.0;\n\n// Orientation\ndouble angle = M_PI / 1.5;\nEigen::Quaterniond quat(Eigen::AngleAxis&lt;double&gt;(double(angle), Eigen::Vector3d::UnitZ()));\nobject_pose.orientation.x = quat.x();\nobject_pose.orientation.y = quat.y();\nobject_pose.orientation.z = quat.z();\nobject_pose.orientation.w = quat.w();\n\n</code></pre></div>\n<p>If you want to visualize this object pose as a block:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_-&gt;publishBlock(object_pose, rviz_visual_tools::BLUE, 0.04);\n\n</code></pre></div>\n<p>Now generate the grasps:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">std::vector&lt;moveit_msgs::Grasp&gt; possible_grasps;\nsimple_grasps_-&gt;generateBlockGrasps( object_pose, grasp_data_, possible_grasps);\n\n</code></pre></div>\n<p>To visualize:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_-&gt;publishAnimatedGrasps(possible_grasps, grasp_data_.ee_parent_link_);\n\n</code></pre></div>\n<h2 id=""grasp-filter-usage"">Grasp Filter Usage</h2>\n\n<p>This component creates several threads and tests a large number of potential grasps for kinematic feasibility.</p>\n\n<p><img align=""right"" src=""https://raw.github.com/davetcoleman/moveit_simple_grasps/hydro-devel/resources/filter.png""></p>\n\n<p>To filter grasps after generating them:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Filter the grasp for only the ones that are reachable\nbool filter_pregrasps = true;\nstd::vector&lt;trajectory_msgs::JointTrajectoryPoint&gt; ik_solutions; // save each grasps ik solution for visualization\ngrasp_filter_-&gt;filterGrasps(possible_grasps, ik_solutions, filter_pregrasps, grasp_data_.ee_parent_link_, planning_group_name_);\n\n</code></pre></div>\n<p>To view the filtered grasps along with the planning group pose:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_-&gt;publishIKSolutions(ik_solutions, planning_group_name_, 0.25);\n\n</code></pre></div>\n<p>There is more that is undocumented but I\'m tired of writing this.</p>\n\n<h2 id=""tested-robots"">Tested Robots</h2>\n\n<ul>\n<li><a href=""https://github.com/davetcoleman/baxter_cpp"">Baxter</a></li>\n<li><a href=""http://wiki.ros.org/Robots/REEM"">REEM</a></li>\n</ul>\n\n<h2 id=""example-code"">Example Code</h2>\n\n<p>A new (still in development) example tool is <code>moveit_blocks.h</code> located in the <code>include</code> folder. It gives you a complete pick and place pipeline using this package and MoveIt, and all you need is the appropriate config file and launch file. An example launch file can be found <a href=""https://github.com/davetcoleman/clam/blob/master/clam_pick_place/launch/pick_place.launch"">here</a>.</p>\n\n<p>There are currently example implementations:</p>\n\n<ul>\n<li><a href=""https://github.com/davetcoleman/baxter_cpp/tree/hydro-devel/baxter_pick_place"">baxter_pick_place</a></li>\n<li><a href=""https://github.com/pal-robotics/reem_tabletop_grasping"">reem_tabletop_grasping</a></li>\n<li><a href=""https://github.com/davetcoleman/clam/tree/master/clam_pick_place"">clam_pick_place</a></li>\n</ul>\n\n<h2 id=""testing"">Testing</h2>\n\n<p>There are two tests scripts in this package. To view the tests, first start Rviz with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_simple_grasps grasp_test_rviz.launch\n\n</code></pre></div>\n<p>To test just grasp generation for randomly placed blocks:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_simple_grasps grasp_test.launch \n\n</code></pre></div>\n<p>To also test the IK grasp filtering:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_simple_grasps grasp_filter_test.launch\n\n</code></pre></div>\n<h2 id=""todo"">TODO</h2>\n\n<p>Features we\'d like to see added to this project:</p>\n\n<ul>\n<li>Ability to reason about any shape, not just centroid of a bounding box\n\n<ul>\n<li>Input arbitrary meshes</li>\n<li>Auto create a bounding box around that mesh</li>\n</ul>\n</li>\n<li>Better reasoning about support surfaces (table)</li>\n<li>Integrate collision checking to verify feasibility of grasp</li>\n<li>Support non-parallel gripper end effectors</li>\n<li>Make grasp quality metric better informed</li>\n<li>Make this project easier to setup for new robots\n\n<ul>\n<li>Integrate into Setup Assistant GUI</li>\n</ul>\n</li>\n<li>Improve simple pick and place pipline header file</li>\n</ul>\n\n<h2 id=""contributors"">Contributors</h2>\n\n<ul>\n<li>Dave Coleman, CU Boulder @davetcoleman</li>\n<li>Bence Magyar, PAL Robotics @bmagyar</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""moveit-simple-grasps"">MoveIt! Simple Grasps</h1>\n\n<p>A basic grasp generator for simple objects such as blocks or cylinders for use with the MoveIt! pick and place pipeline. Does not consider friction cones or other dynamics. </p>\n\n<p>Its current implementation simple takes as input a pose vector (postition and orientation) and generates a large number of potential grasp approaches and directions. Also includes a grasp filter for removing kinematically infeasible grasps via threaded IK solvers.</p>\n\n<p>This package includes:</p>\n\n<ul>\n<li>Simple pose-based grasp generator for a block</li>\n<li>Separate grasp generators for custom objects such as rectanguar or cylindrical objects</li>\n<li>Grasp filter</li>\n<li>Test code and visualizations</li>\n</ul>\n\n<p>Developed by <a href=""http://dav.ee"">Dave Coleman</a> at the Correll Robotics Lab, University of Colorado Boulder with outside contributors.</p>\n\n<p><img align=""right"" src=""https://raw.github.com/davetcoleman/moveit_simple_grasps/hydro-devel/resources/demo.png""> </p>\n\n<h2 id=""video-demo"">Video Demo</h2>\n\n<p>A simple demo with Baxter:</p>\n\n<p><a href=""https://www.youtube.com/watch?v=WEDITCR2qH4""><img src=""http://img.youtube.com/vi/WEDITCR2qH4/0.jpg"" alt=""Baxter Grasp Test""></a>  </p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p><a href=""https://travis-ci.org/davetcoleman/moveit_simple_grasps""><img src=""https://travis-ci.org/davetcoleman/moveit_simple_grasps.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n\n<h2 id=""install"">Install</h2>\n\n<h3 id=""ubuntu-debian"">Ubuntu Debian</h3>\n\n<p>Hydro:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-hydro-moveit-simple-grasps\n\n</code></pre></div>\n<p>Indigo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-moveit-simple-grasps\n\n</code></pre></div>\n<h3 id=""install-from-source"">Install From Source</h3>\n\n<p>Clone this repository into a catkin workspace, then use the rosdep install tool to automatically download its dependencies. Depending on your current version of ROS, use:</p>\n\n<p>Hydro:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro hydro\n\n</code></pre></div>\n<p>Indigo:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths src --ignore-src --rosdistro indigo\n\n</code></pre></div>\n<h2 id=""robot-agnostic-configuration"">Robot-Agnostic Configuration</h2>\n\n<p>You will first need a configuration file that described your robot\'s end effector geometry. Currently an example format can be seen in this repository at <a href=""https://github.com/davetcoleman/moveit_simple_grasps/blob/hydro-devel/config/baxter_grasp_data.yaml"">config/baxter_grasp_data.yaml</a>. See the comments within that file for explanations. </p>\n\n<p>To load that file at launch, you copy the example in the file <a href=""https://github.com/davetcoleman/moveit_simple_grasps/blob/hydro-devel/launch/grasp_test.launch"">launch/grasp_test.launch</a> where you should see the line <code>&lt;rosparam command=""load"" file=""$(find moveit_simple_grasps)/config/baxter_grasp_data.yaml""/&gt;</code>.</p>\n\n<h2 id=""code-usage"">Code Usage</h2>\n\n<p>Note: You might find the moveit_blocks.h example, discussed at the bottom of this page, most helpful.</p>\n\n<p>We will discuss how to use the generation, filtering, and visualization components.</p>\n\n<p>Within your robot\'s ROS package, add this package to your package.xml, CMakeLists.txt. Then in whatever C++ file add this to your includes:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Grasp generation and visualization\n#include &lt;moveit_simple_grasps/simple_grasps.h&gt;\n#include &lt;moveit_simple_grasps/grasp_data.h&gt;\n#include &lt;moveit_visual_tools/visual_tools.h&gt;\n\n</code></pre></div>\n<p>Add to your class\'s member variables the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Grasp generator\nmoveit_simple_grasps::SimpleGraspsPtr simple_grasps_;\n\n// class for publishing stuff to rviz\nmoveit_visual_tools::VisualToolsPtr visual_tools_;\n\n// robot-specific data for generating grasps\nmoveit_simple_grasps::GraspData grasp_data_;\n\n</code></pre></div>\n<p>In your class\' constructor initialize the visualization tools;</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Load the Robot Viz Tools for publishing to Rviz\nvisual_tools_.reset(new moveit_visual_tools::VisualTools(""base_link""));\n\n</code></pre></div>\n<p>Change the first parameter of visual tools to the name of your robot\'s base link. For more information on that package, see <a href=""https://github.com/davetcoleman/moveit_visual_tools"">moveit_visual_tools</a>.</p>\n\n<p>Then load your robot\'s custom .yaml grasp data file:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Load grasp data specific to our robot\nros::NodeHandle nh(""~"");\nif (!grasp_data_.loadRobotGraspData(nh, ""left_hand""))\n  ros::shutdown();\n\n</code></pre></div>\n<p>Where ""left_hand"" is the name of one your SRDF-defined MoveIt! end effectors from the Setup Assistant. This data is loaded from a file that you must load to the parameter server within a roslaunch file, as desribed above.</p>\n\n<p>Now load grasp generator:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Load grasp generator\nsimple_grasps_.reset( new moveit_simple_grasps::SimpleGrasps(visual_tools_) );\n\n</code></pre></div>\n<p>To generate grasps, you first need the pose of the object you want to grasp, such as a block. Here\'s an example pose:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">geometry_msgs::Pose object_pose;\nobject_pose.position.x = 0.4;\nobject_pose.position.y = -0.2;\nobject_pose.position.z = 0.0;\n\n// Orientation\ndouble angle = M_PI / 1.5;\nEigen::Quaterniond quat(Eigen::AngleAxis&lt;double&gt;(double(angle), Eigen::Vector3d::UnitZ()));\nobject_pose.orientation.x = quat.x();\nobject_pose.orientation.y = quat.y();\nobject_pose.orientation.z = quat.z();\nobject_pose.orientation.w = quat.w();\n\n</code></pre></div>\n<p>If you want to visualize this object pose as a block:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_-&gt;publishBlock(object_pose, moveit_visual_tools::BLUE, 0.04);\n\n</code></pre></div>\n<p>Now generate the grasps:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">std::vector&lt;moveit_msgs::Grasp&gt; possible_grasps;\nsimple_grasps_-&gt;generateBlockGrasps( object_pose, grasp_data_, possible_grasps);\n\n</code></pre></div>\n<p>To visualize:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_-&gt;publishAnimatedGrasps(possible_grasps, grasp_data_.ee_parent_link_);\n\n</code></pre></div>\n<h2 id=""grasp-filter-usage"">Grasp Filter Usage</h2>\n\n<p>This component creates several threads and tests a large number of potential grasps for kinematic feasibility.</p>\n\n<p><img align=""right"" src=""https://raw.github.com/davetcoleman/moveit_simple_grasps/hydro-devel/resources/filter.png""></p>\n\n<p>To filter grasps after generating them:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">// Filter the grasp for only the ones that are reachable\nbool filter_pregrasps = true;\nstd::vector&lt;trajectory_msgs::JointTrajectoryPoint&gt; ik_solutions; // save each grasps ik solution for visualization\ngrasp_filter_-&gt;filterGrasps(possible_grasps, ik_solutions, filter_pregrasps, grasp_data_.ee_parent_link_, planning_group_name_);\n\n</code></pre></div>\n<p>To view the filtered grasps along with the planning group pose:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">visual_tools_-&gt;publishIKSolutions(ik_solutions, planning_group_name_, 0.25);\n\n</code></pre></div>\n<p>There is more that is undocumented but I\'m tired of writing this.</p>\n\n<h2 id=""tested-robots"">Tested Robots</h2>\n\n<ul>\n<li><a href=""https://github.com/davetcoleman/baxter_cpp"">Baxter</a></li>\n<li><a href=""http://wiki.ros.org/Robots/REEM"">REEM</a></li>\n</ul>\n\n<h2 id=""example-code"">Example Code</h2>\n\n<p>A new (still in development) example tool is <code>moveit_blocks.h</code> located in the <code>include</code> folder. It gives you a complete pick and place pipeline using this package and MoveIt, and all you need is the appropriate config file and launch file. An example launch file can be found <a href=""https://github.com/davetcoleman/clam/blob/master/clam_pick_place/launch/pick_place.launch"">here</a>.</p>\n\n<p>There are currently example implementations:</p>\n\n<ul>\n<li><a href=""https://github.com/davetcoleman/baxter_cpp/tree/hydro-devel/baxter_pick_place"">baxter_pick_place</a></li>\n<li><a href=""https://github.com/pal-robotics/reem_tabletop_grasping"">reem_tabletop_grasping</a></li>\n<li><a href=""https://github.com/davetcoleman/clam/tree/master/clam_pick_place"">clam_pick_place</a></li>\n</ul>\n\n<h2 id=""testing"">Testing</h2>\n\n<p>There are two tests scripts in this package. To view the tests, first start Rviz with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_simple_grasps grasp_test_rviz.launch\n\n</code></pre></div>\n<p>To test just grasp generation for randomly placed blocks:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_simple_grasps grasp_test.launch \n\n</code></pre></div>\n<p>To also test the IK grasp filtering:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch moveit_simple_grasps grasp_filter_test.launch\n\n</code></pre></div>\n<h2 id=""contributors"">Contributors</h2>\n\n<ul>\n<li>Dave Coleman, CU Boulder @davetcoleman</li>\n<li>Bence Magyar, PAL Robotics @bmagyar</li>\n</ul>\n</div>\n\n            \n          </div>'"
srdfdom,http://rosindex.github.io/r/srdfdom/,"hydro,jade,groovy,indigo",srdfdom,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""srdfdom"">srdfdom</h1>\n\n<p>Parser for Semantic Robot Description Format (SRDF).</p>\n\n<p>Includes a cpp and a python parser</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>master branch: <a href=""https://travis-ci.org/ros-planning/srdfdom""><img src=""https://travis-ci.org/ros-planning/srdfdom.png?branch=master"" alt=""Build Status""></a></p>\n\n<h2 id=""authors"">Authors</h2>\n\n<p>Original reflection implementation for SDF and URDF.\n*   Thomas Moulard - <code>urdfpy</code> implementation, integration\n*   David Lu - <code>urdf_python</code> implementation, integration\n*   Kelsey Hawkins - <code>urdf_parser_python</code> implementation, integration\n*   Antonio El Khoury - bugfixes\n*   Eric Cousineau - reflection (serialization?) changes\nReused for srdf python parser\n*   Guillaume Walck - <code>srdfpy</code> conversion, integration</p>\n\n<h2 id=""cpp-example"">Cpp example</h2>\n\n<p>test_parser.cpp contains examples how to access the srdf elements from the cpp parser</p>\n\n<h2 id=""python-example"">Python example</h2>\n\n<p>test.py contains examples how to access the srdf elements from the python parser</p>\n\n<p>display_srdf reads a srdf from a file given in command line argument \nor from parameter server (robot_description_semantic) and displays it in a yaml format\nif an output option (-o <filename>) is provided, dumps the xml (re-generated from parsed input xml)</filename></p>\n\n<p>example :\nrosrun srdfdom display_srdf test/res/pr2_desc.3.srdf</p>\n\n<h2 id=""test"">Test</h2>\n\n<p>catkin_make run_tests_srdfdom</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""srdfdom"">srdfdom</h1>\n\n<p>Parser for Semantic Robot Description Format (SRDF).</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>master branch: <a href=""https://travis-ci.org/ros-planning/srdfdom""><img src=""https://travis-ci.org/ros-planning/srdfdom.png?branch=master"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
pr2_props,http://rosindex.github.io/r/pr2_props/,"hydro,indigo",pr2_props,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""></div>\n\n            \n          </div>'"
serial,http://rosindex.github.io/r/serial/,"hydro,fuerte,groovy,kinetic,jade,indigo",serial,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""serial-communication-library"">Serial Communication Library</h1>\n\n<p><a href=""https://travis-ci.org/wjwwood/serial""><img src=""https://travis-ci.org/wjwwood/serial.svg?branch=master"" alt=""Build Status""></a><em>(Linux and OS X)</em> <a href=""https://ci.appveyor.com/project/wjwwood/serial""><img src=""https://ci.appveyor.com/api/projects/status/github/wjwwood/serial"" alt=""Build Status""></a><em>(Windows)</em></p>\n\n<p>This is a cross-platform library for interfacing with rs-232 serial like ports written in C++. It provides a modern C++ interface with a workflow designed to look and feel like PySerial, but with the speed and control provided by C++. </p>\n\n<p>This library is in use in several robotics related projects and can be built and installed to the OS like most unix libraries with make and then sudo make install, but because it is a catkin project it can also be built along side other catkin projects in a catkin workspace.</p>\n\n<p>Serial is a class that provides the basic interface common to serial libraries (open, close, read, write, etc..) and requires no extra dependencies. It also provides tight control over timeouts and control over handshaking lines. </p>\n\n<h3 id=""documentation"">Documentation</h3>\n\n<p>Website: <a href=""http://wjwwood.github.com/serial/"">http://wjwwood.github.com/serial/</a></p>\n\n<p>API Documentation: <a href=""http://wjwwood.github.com/serial/doc/1.1.0/index.html"">http://wjwwood.github.com/serial/doc/1.1.0/index.html</a></p>\n\n<h3 id=""dependencies"">Dependencies</h3>\n\n<ul>\n<li>\n<a href=""http://www.ros.org/wiki/catkin"">catkin</a> - cmake and Python based buildsystem\n\n<ul>\n<li>\n<a href=""http://www.cmake.org"">cmake</a> - buildsystem</li>\n<li>\n<a href=""http://www.python.org"">Python</a> - scripting language</li>\n<li>\n<a href=""http://www.alcyone.com/pyos/empy/"">empy</a> - Python templating library</li>\n<li>\n<a href=""http://pypi.python.org/pypi/catkin_pkg/"">catkin_pkg</a> - Runtime Python library for catkin</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=""install"">Install</h3>\n\n<p>Get the code:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/wjwwood/serial.git\n</code></pre></div>\n<p>Build:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">make\n</code></pre></div>\n<p>Build and run the tests:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">make test\n</code></pre></div>\n<p>Build the documentation:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">make docs\n</code></pre></div>\n<p>Install:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">make install\n</code></pre></div>\n<p>Uninstall:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">make uninstall\n</code></pre></div>\n<h3 id=""license"">License</h3>\n\n<p>The MIT License</p>\n\n<p>Copyright (c) 2012 William Woodall, John Harrison</p>\n\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\n\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\n\n<p>THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>William Woodall <a href=""mailto:wjwwood@gmail.com"">wjwwood@gmail.com</a>\nJohn Harrison <a href=""mailto:ash.gti@gmail.com"">ash.gti@gmail.com</a></p>\n\n<h3 id=""contact"">Contact</h3>\n\n<p>William Woodall <a href=""mailto:william@osrfoundation.org"">william@osrfoundation.org</a></p>\n</div>\n\n            \n          </div>'"
frontier_exploration,http://rosindex.github.io/r/frontier_exploration/,"hydro,jade,indigo","exploration,exploration_msgs,frontier_exploration,polygon_layer","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""frontier_exploration"">frontier_exploration <img src=""https://travis-ci.org/paulbovbel/frontier_exploration.svg?branch=hydro-devel"" alt=""asdf"">\n</h1>\n\n<p>Implementation of frontier exploration (<a href=""http://www.robotfrontier.com/papers/cira97.pdf"">http://www.robotfrontier.com/papers/cira97.pdf</a>) for ROS Hydro, extending on the existing navigation stack (costmap_2d, move_base).</p>\n\n<p>Wiki: <a href=""http://wiki.ros.org/frontier_exploration"">http://wiki.ros.org/frontier_exploration</a></p>\n\n<p>API Doc: <a href=""http://docs.ros.org/hydro/api/frontier_exploration/html/annotated.html"">http://docs.ros.org/hydro/api/frontier_exploration/html/annotated.html</a></p>\n\n<p>Video:</p>\n\n<p><a href=""https://www.youtube.com/watch?v=3W1ufJ7rpCA""><img src=""http://img.youtube.com/vi/3W1ufJ7rpCA/0.jpg"" alt=""Demo Video""></a></p>\n</div>\n\n            \n          </div>'"
common_tutorials,http://rosindex.github.io/r/common_tutorials/,"hydro,fuerte,groovy,kinetic,jade,indigo","actionlib_tutorials,common_tutorials,nodelet_tutorial_math,pluginlib_tutorials,turtle_actionlib","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
spur,http://rosindex.github.io/r/spur/,indigo,"spur,spur_2dnav,spur_bringup,spur_controller,spur_description,spur_gazebo","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Could not convert RST to MD: pandoc: Cannot decode byte \'\\xb6\': Data.Text.Internal.Encoding.Fusion.streamUtf8: Invalid UTF-8 stream</p>\n</div>\n\n            \n          </div>'"
skeleton_markers,http://rosindex.github.io/r/skeleton_markers/,"hydro,groovy,indigo",skeleton_markers,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Track and display skeleton markers using ROS and OpenNI.</p>\n</div>\n\n            \n          </div>'"
pi_tracker,http://rosindex.github.io/r/pi_tracker/,"hydro,groovy,indigo",pi_tracker,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Skeleton Tracker Teleop Package for the Pi Robot Project.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Skeleton Tracker Teleop Package for the Pi Robot Project.</p>\n\n<p>The Hydro version (branch hydro-devel) has been catkinized and now depends on skeleton_markers for the skeleton_tracker node.</p>\n</div>\n\n            \n          </div>'"
ohm_tsd_slam,http://rosindex.github.io/r/ohm_tsd_slam/,"jade,indigo",ohm_tsd_slam,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ohm_tsd_slam"">ohm_tsd_slam</h1>\n\n<p>SLAM approach based on truncated signed distance transform</p>\n</div>\n\n            \n          </div>'"
numatac_can_driver,http://rosindex.github.io/r/numatac_can_driver/,indigo,numatac_can_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""numatac_can_driver"">numatac_can_driver <a href=""https://travis-ci.org/clearpathrobotics/numatac_can_driver""><img src=""https://travis-ci.org/clearpathrobotics/numatac_can_driver.svg?branch=indigo-devel"" alt=""Build Status""></a>\n</h1>\n\n<p>ROS driver for NumaTac tactile sensors. See <a href=""http://www.syntouchllc.com/Products/NumaTac/_media/NumaTac_Product_Manual.pdf"">product manual</a> for details.</p>\n\n<h3 id=""bring-up"">Bring-up</h3>\n\n<p>To bring up the NumaTac tactile sensors on Ubuntu 14.04, plug in the USB connector.  Configure the CAN interface by running the following command in a command line prompt:</p>\n\n<p><code>sudo ip link set can0 type can bitrate 1000000</code></p>\n\n<p>and finally bring-up the CAN interface using:</p>\n\n<p><code>sudo ifconfig can0 up</code></p>\n\n<p>To run the driver use:</p>\n\n<p><code>roslaunch numatac_can_driver numatac_can_driver.launch</code></p>\n</div>\n\n            \n          </div>'"
linux_networking,http://rosindex.github.io/r/linux_networking/,"hydro,indigo","access_point_control,asmach,asmach_tutorials,ddwrt_access_point,hostapd_access_point,ieee80211_channels,linksys_access_point,linux_networking,multi_interface_roam,network_control_tests,network_detector,network_monitor_udp,network_traffic_control","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosaria,http://rosindex.github.io/r/rosaria/,"hydro,jade,fuerte,indigo",rosaria,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>For information on how to use RosAria, see <a href=""http://wiki.ros.org/ROSARIA"">http://wiki.ros.org/ROSARIA</a>,\nespecially <http: to use rosaria>.</http:></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cram_core,http://rosindex.github.io/r/cram_core/,"hydro,electric,groovy","cram_core,cram_designators,cram_execution_trace,cram_language,cram_math,cram_process_modules,cram_projection,cram_reasoning,cram_test_utilities,cram_utilities","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robot_calibration,http://rosindex.github.io/r/robot_calibration/,"jade,indigo","robot_calibration,robot_calibration_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot-calibration"">Robot Calibration</h1>\n\n<p>This package offers calibration of a number of parameters of a robot, such as:</p>\n\n<ul>\n<li>3D Camera intrinsics and extrinsics</li>\n<li>Joint angle offsets</li>\n<li>Robot frame offsets</li>\n</ul>\n\n<p>These parameters are then inserted into an updated URDF, or updated camera\nconfiguration YAML in the case of camera intrinsics.</p>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Calibration works in two steps. The first step involves the capture of data\nsamples from the robot. Each ""sample"" comprises the measured joint positions\nof the robot and two or more ""observations"". An observation is a collection\nof points that have been detected by a ""sensor"". For instance, a robot could\nuse a camera and an arm to ""detect"" the pose of corners on a checkerboard.\nIn the case of the camera sensor, the collection of points is simply the\ndetected positions of each corner of the checkerboard, relative to the pose\nof the camera reference frame. For the arm, it is assumed that the checkerboard\nis fixed relative to a virtual frame which is fixed relative to the end\neffector of the arm. Within the virtual frame, we know the position of each\npoint of the checkerboard corners.</p>\n\n<p>The second step of calibration involves optimization of the robot parameters\nto minimize the errors. Errors are defined as the difference in the pose\nof the points based on reprojection throuhg each sensor. In the case of our\ncheckerboard above, the transform between the virtual frame and the end\neffector becomes additional free parameters. By estimating these parameters\nalongside the robot parameters, we can find a set of parameters such that\nthe reprojection of the checkerboard corners through the arm is as closely\naligned with the reprojection through the camera (and any associated\nkinematic chain, for instance, a pan/tilt head).</p>\n\n<h2 id=""configuration"">Configuration</h2>\n\n<p>Configuration is typically handled through two sets of YAML files. The first\nYAML file specifies the details needed for data capture:</p>\n\n<ul>\n<li>chains - The kinematic chains of the robot which should be controlled,\nand how to control them so that we can move the robot to each desired pose\nfor sampling.</li>\n<li>feature_finders - The configuration for the various ""feature finders"" that\nwill be making our observations at each sample pose. Current finders include\nan LED detector and a checkerboard finder.</li>\n</ul>\n\n<p>The second configuration file specifies the configuration for optimization.\nThis specifies several items:</p>\n\n<ul>\n<li>models - Models define how to reproject points. The basic model is a\nkinematic chain. Additional models can reproject through a kinematic\nchain and then a sensor, such as a camera.</li>\n<li>free_params - Defines the names of single-value free parameters. These\ncan be the names of a joint for which the joint offset should be calculated,\ncamera parameters such as focal lengths, or other parameters, such as\ndriver offsets for Primesense devices.</li>\n<li>free_frames - Defines the names of multi-valued free parameters that\nare 6-d transforms. Also defines which axis are free. X, Y, and Z can all\nbe independently set to free parameters. Roll, pitch and yaw can also be\nset free, however it is important to note that because calibration\ninternally uses an angle-axis representation, either all 3 should be set\nfree, or only one should be free. You should never set two out of three\nto be free parameters.</li>\n<li>error_blocks - These define the actual errors to compare during optimization.\nThere are several error blocks available at this time:\n\n<ul>\n<li>camera3d_to_arm - This error block can compute the difference in\nreprojection between a 3D camera and a kinematic chain which is holding\nthe projected points.</li>\n<li>outrageous - Sometimes, the calibration is ill-defined in certain dimensions,\nand we would like to avoid one of the free parameters from becoming\nabsurd. An outrageous error block can be used to limit a particular\nparameter.</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""exported-results"">Exported Results</h2>\n\n<p>The exported results consist of an updated URDF file, and one or more updated\ncamera calibration YAML files. By default, these files will by exported into\nthe /tmp folder, with filenames that include a timestamp of generation. These\nfiles need to be installed in the correct places to be properly loaded.</p>\n\n<p>The <a href=""https://github.com/fetchrobotics/fetch_ros/tree/indigo-devel/fetch_calibration"">fetch_calibration</a>\npackage has an example python script for installing the updated files.</p>\n\n<h1 id=""status"">Status</h1>\n\n<ul>\n<li>Devel Job Status: <a href=""http://jenkins.ros.org/job/devel-indigo-robot_calibration/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-robot_calibration"" alt=""Devel Job Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://jenkins.ros.org/job/ros-indigo-robot-calibration_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-robot-calibration_binarydeb_trusty_amd64"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
rangeonly_driver,http://rosindex.github.io/r/rangeonly_driver/,indigo,"nanotron_swarm,rangeonly_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rangeonly_driver"">rangeonly_driver</h1>\n\n<p>ROS stack for range-only sensors. </p>\n</div>\n\n            \n          </div>'"
puma_motor_driver,http://rosindex.github.io/r/puma_motor_driver/,indigo,"puma_motor_driver,puma_motor_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""puma_motor_driver"">puma_motor_driver <a href=""https://travis-ci.org/clearpathrobotics/puma_motor_driver""><img src=""https://travis-ci.org/clearpathrobotics/puma_motor_driver.svg?branch=master"" alt=""Build Status""></a>\n</h1>\n\n<p>A socketcan-based ROS driver for the Puma, a brushed DC motor driver based on the BDC-RDK24 kit from TI.</p>\n</div>\n\n            \n          </div>'"
naoqi_bridge_msgs,http://rosindex.github.io/r/naoqi_bridge_msgs/,"jade,kinetic,indigo",naoqi_bridge_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robotnik_msgs,http://rosindex.github.io/r/robotnik_msgs/,"hydro,groovy,indigo",robotnik_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robotnik_msgs"">robotnik_msgs</h1>\n\n<p>Definition of msgs and services used by some Robotnik\'s packages</p>\n</div>\n\n            \n          </div>'"
cit_adis_imu,http://rosindex.github.io/r/cit_adis_imu/,indigo,cit_adis_imu,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cit_adis_imu"">cit_adis_imu</h1>\n\n<p><a href=""https://travis-ci.org/open-rdc/cit_adis_imu""><img src=""https://travis-ci.org/open-rdc/cit_adis_imu.svg"" alt=""Build Status""></a></p>\n\n<p>cit_adis_imu for ADIS IMUs with the interface board made by Chiba Institute of Technology.</p>\n\n<h2 id=""license"">License</h2>\n\n<p>License-check is open source software under the BSD license.</p>\n</div>\n\n            \n          </div>'"
lama_utilities,http://rosindex.github.io/r/lama_utilities/,indigo,"crossing_detector,dfs_explorer,goto_crossing,lama_common,local_map,map_ray_caster,nj_escape_crossing,nlj_dummy","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Common functionalities used by the Large Maps Framework (<a href=""http://wiki.ros.org/Large%20Maps%20Framework"">http://wiki.ros.org/Large%20Maps%20Framework</a>).</p>\n\n<p>The repository includes the following packages:\n* crossing_detector: <a href=""http://wiki.ros.org/crossing_detector"">http://wiki.ros.org/crossing_detector</a>\n* dfs_explorer: <a href=""http://wiki.ros.org/dfs_explorer"">http://wiki.ros.org/dfs_explorer</a>\n* goto_crossing: <a href=""http://wiki.ros.org/goto_crossing"">http://wiki.ros.org/goto_crossing</a>\n* lama_common: <a href=""http://wiki.ros.org/lama_common"">http://wiki.ros.org/lama_common</a>\n* local_map: <a href=""http://wiki.ros.org/local_map"">http://wiki.ros.org/local_map</a>\n* map_ray_caster: <a href=""http://wiki.ros.org/map_ray_caster"">http://wiki.ros.org/map_ray_caster</a>\n* nj_escape_crossing: <a href=""http://wiki.ros.org/nj_escape_crossing"">http://wiki.ros.org/nj_escape_crossing</a>\n* nlj_dummy: <a href=""http://wiki.ros.org/nlj_dummy"">http://wiki.ros.org/nlj_dummy</a></p>\n</div>\n\n            \n          </div>'"
screenrun,http://rosindex.github.io/r/screenrun/,"hydro,indigo",screenrun,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""screenrun"">screenrun</h1>\n\n<p>screenrun is a small tool that pushes commands into a screen window.\nUse \\015 after a command for ENTER, i.e. executing it.</p>\n</div>\n\n            \n          </div>'"
rosR,http://rosindex.github.io/r/rosR/,indigo,rosR,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosr"">rosR</h1>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Authors</td>\n<td>Andr\xc3\xa9 Dietrich &amp; Sebastian Zug</td>\n</tr>\n<tr>\n<td>Source (64bit)</td>\n<td>\n<code>git clone</code> <a href=""https://gitlab.com/OvGU-ESS/rosR.git"">https://gitlab.com/OvGU-ESS/rosR.git</a>\n</td>\n</tr>\n<tr>\n<td>(32bit)</td>\n<td>\n<code>git clone -b 32-bit</code> <a href=""https://gitlab.com/OvGU-ESS/rosR.git"">https://gitlab.com/OvGU-ESS/rosR.git</a>\n</td>\n</tr>\n<tr>\n<td>Email</td>\n<td>\n<a href=""mailto:dietrich@ivs.cs.uni-magdeburg.de"">dietrich@ivs.cs.uni-magdeburg.de</a> &amp; <a href=""mailto:zug@ivs.cs.uni-magdeburg.de"">zug@ivs.cs.uni-magdeburg.de</a>\n</td>\n</tr>\n<tr>\n<td>Publication</td>\n<td><a href=""http://journal.r-project.org/archive/2013-2/dietrich-zug-kaiser.pdf"">The R in Robotics</a></td>\n</tr>\n<tr>\n<td>Talk By</td>\n<td>Jan Wijffels <a href=""http://www.r-bloggers.com/using-r-in-robotics-applications-with-ros"">http://www.r-bloggers.com/using-r-in-robotics-applications-with-ros</a>\n</td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>This package provides an simple interface of standard ros-functionalities for the programming\nlanguage R. We hope that it might be useful to make the R capabilities for statistical\nanalyses and visualization also usable for the robotic community. In contrast to other language\nimplementations, such as rospy, rosjava, etc. this is not a pure R implementation, it is a\nmixture of pure R, SWIG generated functions, and system commands. This combination was required\nto overcome some limitations of R, such as single threaded, lacking support for sockets and\nhandling of raw streams. Nevertheless, this package can be used to define and use typical ROS\npublishers and subscribers in R, messages are automatically and online generated from the\ndefinition files, and it integrates the possibility to read and therefore analyse bag-files in\nR. We will explain this in more detail within the next sections.</p>\n\n<p>See also <a href=""https://gitlab.com/OvGU-ESS/rosR_demos.git"">rosR_demos</a>.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>We divided this section into two parts. For those who come from the ROS side, it will be\nprobably easy to install and to use this packet (of course they will probably have to cope with\nthe R-code). Coming from the R side with no experience about ROS, it will be hard to install\nand run this package.</p>\n\n<h3 id=""ros-side"">ROS-Side</h3>\n\n<p>If you have already some expertise on working with ROS, then you can install rosR just like any\nordinary ros-package. Three additional dependencies are required before you can compile it:</p>\n\n<ul>\n<li>Swig3.0 is required for interfacing C code, and only swig3.0 can generate appropriate code\nfor R.</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">  <span class=""nv"">$ </span>sudo apt-get install swig3.0\n\n</code></pre></div>\n<ul>\n<li>The second part is an R base installation</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">  <span class=""nv"">$ </span>sudo apt-get install r-base\n\n</code></pre></div>\n<ul>\n<li>r-cran-rcpp includes all required C source to develop R packages</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">  <span class=""nv"">$ </span>sudo apt-get install r-cran-rcpp\n\n</code></pre></div>\n<p>Afterwards compile this package with <code>catkin_make</code>... That\'s all folks!</p>\n\n<p>If the compilation fails, because lib <code>lRcpp</code> was not found, search for it:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>locate Rcpp.so\n/usr/lib/R/site-library/Rcpp/libs/Rcpp.so\n\n</code></pre></div>\n<p>enter the directory and create a symbolic link:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span><span class=""nb"">cd</span> /lib/R/site-library/Rcpp/libs\n<span class=""gp"">$ </span>sudo ln -s Rcpp.so libRcpp.so\n<span class=""gp"">$ </span><span class=""nb"">cd</span> -\n\n</code></pre></div>\n<p>and run <code>catkin_make</code> again ...</p>\n\n<h3 id=""r-side"">R-Side</h3>\n\n<p>Within this subsection we will describe all steps that are required to install ros-indigo under\nan Ubuntu 14.04 32-bit (with long time support) and then our extension for the R-programming\nlanguage (especially for users with totally no ROS experience). The first steps were taken from\nthe manual (<a href=""http://www.ros.org/wiki/indigo/Installation/Ubuntu"">http://www.ros.org/wiki/indigo/Installation/Ubuntu</a>) and we guess, you already have\ninstalled Ubuntu on your PC.</p>\n\n<h2 id=""publish-subscribe"">Publish Subscribe</h2>\n\n<h3 id=""r-publisher"">R\xe2\x80\x93Publisher</h3>\n\n<p>Defining a publisher in R is nearly as simple as in Python. First of all you will have to load\nthis package into your R environment, what can be done with the following command:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">source</span><span class=""p"">(</span><span class=""n"">paste</span><span class=""p"">(</span><span class=""n"">system</span><span class=""p"">(</span><span class=""s2"">""rospack find rosR""</span><span class=""p"">,</span><span class=""n"">intern</span><span class=""o"">=</span><span class=""nb"">T</span><span class=""p"">),</span><span class=""s2"">""/lib/ros.R""</span><span class=""p"">,</span><span class=""n"">sep</span><span class=""o"">=</span><span class=""s2"">""""</span><span class=""p"">),</span><span class=""n"">chdir</span><span class=""o"">=</span><span class=""nb"">T</span><span class=""p"">)</span><span class=""w"">\n\n</span></code></pre></div>\n<p>This looks a bit complex, but have trust, this is the only complex command that is required.\nWe did not develop a package that can be directly installed in R but more a ros package and\ntherefore it can be somewhere on your systems, as ros packages do it normaly. Therefore the\ncommandline program rospack is involved to find the location of your rosR installation. But\nthats all, now you can use all of our ros-functions in R.</p>\n\n<p>As in most programs you start with the initialization of your new ros node and so we do:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.Init</span><span class=""p"">(</span><span class=""s2"">""R_node""</span><span class=""p"">)</span><span class=""w"">\n\n</span></code></pre></div>\n<p>And the new node appears... Let us now generate the publisher:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">publisher</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""n"">ros.Publisher</span><span class=""p"">(</span><span class=""s2"">""chatter""</span><span class=""p"">,</span><span class=""w""> </span><span class=""s2"">""std_msgs/String""</span><span class=""p"">)</span><span class=""w"">\n\n</span></code></pre></div>\n<p>Simply call ros.Publisher with the new topic, in our case \xe2\x80\x9cchatter\xe2\x80\x9d, and the message type\nthat is transmitted \xe2\x80\x9cstd_msgs/String\xe2\x80\x9d. In the same way it is also possible to define a new\nmessage:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">message</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""n"">ros.Message</span><span class=""p"">(</span><span class=""s2"">""std_msgs/String""</span><span class=""p"">)</span><span class=""w"">\n\n</span></code></pre></div>\n<p>Messages in our case are always defined as list, that may include further list. So it is\npossible to set and get messages values in a similar war, as you know you know it from other\nROS language implementations:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">message</span><span class=""o"">$</span><span class=""n"">data</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""s2"">""hello world""</span><span class=""w"">\n\n</span></code></pre></div>\n<p>Now we can pass this message to the publisher as follows:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.WriteMessage</span><span class=""p"">(</span><span class=""n"">publisher</span><span class=""p"">,</span><span class=""w""> </span><span class=""n"">message</span><span class=""p"">)</span><span class=""w"">\n\n</span></code></pre></div>\n<p>And that was all ... cange the content of your message and republish it:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">message</span><span class=""o"">$</span><span class=""n"">data</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""s2"">""hello world""</span><span class=""w"">\n\n</span></code></pre></div>\n<p>Have look at some complete examples in folder nodes/test/publisher.R</p>\n\n<h3 id=""r-subscriber"">R-Subscriber</h3>\n\n<p>Creating a subscriber is as simple creating a publisher. At first you have to load the\npackage, initialize the node and then create the subscriber:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">source</span><span class=""p"">(</span><span class=""n"">paste</span><span class=""p"">(</span><span class=""n"">system</span><span class=""p"">(</span><span class=""s2"">""rospack find rosR""</span><span class=""p"">,</span><span class=""n"">intern</span><span class=""o"">=</span><span class=""nb"">T</span><span class=""p"">),</span><span class=""s2"">""/lib/ros.R""</span><span class=""p"">,</span><span class=""n"">sep</span><span class=""o"">=</span><span class=""s2"">""""</span><span class=""p"">),</span><span class=""n"">chdir</span><span class=""o"">=</span><span class=""nb"">T</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.Init</span><span class=""p"">(</span><span class=""s2"">""R_node2""</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">subscriber</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""n"">ros.Subscriber</span><span class=""p"">(</span><span class=""s2"">""chatter""</span><span class=""p"">,</span><span class=""w""> </span><span class=""s2"">""std_msgs/String""</span><span class=""p"">)</span><span class=""w"">\n\n</span></code></pre></div>\n<p>As mentioned before, R is single threaded, and calling callback functions is nearly not\npossible. To circumvent this tiny drawback, you have to poll, if a new messages was\nreceived or not. Therefore, you have to call:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.SpinOnce</span><span class=""p"">()</span><span class=""w"">\n</span><span class=""kc"">NULL</span><span class=""w"">\n\n</span></code></pre></div>\n<p>to fill the subscriber with possibly new messages. The receipt of a new message can than\nbe identified by calling the following method:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.SubscriberHasNewMessage</span><span class=""p"">(</span><span class=""n"">subscriber</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""kc"">TRUE</span><span class=""w"">\n\n</span></code></pre></div>\n<p>This function call will return TRUE if a new message was received otherwise FALSE. If a\nnew message was received, this can simply be read with:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">message</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""n"">ros.ReadMessage</span><span class=""p"">(</span><span class=""n"">subscriber</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">print</span><span class=""p"">(</span><span class=""n"">message</span><span class=""o"">$</span><span class=""n"">data</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""n"">hello</span><span class=""w""> </span><span class=""n"">world</span><span class=""w"">\n\n</span></code></pre></div>\n<p>Check out the examples in folder rosR/nodes.</p>\n\n<h3 id=""messages"">Messages</h3>\n\n<p>The subscriber generates automatically the correct message format. If you publish a message\nit is recommended to use function:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">msg</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""n"">ros.Message</span><span class=""p"">(</span><span class=""s2"">""std_msgs/String""</span><span class=""p"">)</span><span class=""w"">\n\n</span></code></pre></div>\n<p>If you want to get a message of another format, like for example a laserscan, you wil get\nthe following result:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">msg</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""n"">ros.Message</span><span class=""p"">(</span><span class=""s2"">""sensor_msgs/LaserScan""</span><span class=""p"">)</span><span class=""w"">\n\n</span></code></pre></div>\n<p>A message in this case is always a composition of lists, therefor single elements are accessed\nwith ""$"". Thus, the structure of a message is quite similar to the structures in other languages,\nbut instead of a point, you have to use a dollar. Changing and reading the header sequence would\nthan be done as follows:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">print</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">header</span><span class=""o"">$</span><span class=""n"">seq</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""p"">[[</span><span class=""m"">1</span><span class=""p"">]]</span><span class=""w"">\n</span><span class=""n"">integer</span><span class=""p"">(</span><span class=""m"">0</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">header</span><span class=""o"">$</span><span class=""n"">seq</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""m"">100</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">print</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">header</span><span class=""o"">$</span><span class=""n"">seq</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""m"">100</span><span class=""w"">\n\n</span></code></pre></div>\n<p>The handling of arrays is a bit tricky, because in the background these are handled as C\nstructures std::vector. Thus, the size of our new LaserScan is currently 0:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; length(msg$ranges)\n[1] 0\n\n</code></pre></div>\n<p>and you can add new elements and read these values in the normal manner:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">append</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">ranges</span><span class=""p"">,</span><span class=""w""> </span><span class=""nf"">c</span><span class=""p"">(</span><span class=""m"">1</span><span class=""p"">,</span><span class=""m"">2</span><span class=""p"">,</span><span class=""m"">3</span><span class=""p"">,</span><span class=""m"">4</span><span class=""p"">,</span><span class=""m"">5</span><span class=""p"">,</span><span class=""m"">6</span><span class=""p"">,</span><span class=""m"">7</span><span class=""p"">))</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""nf"">length</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">ranges</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""m"">7</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">ranges</span><span class=""p"">[</span><span class=""m"">2</span><span class=""o"">:</span><span class=""m"">4</span><span class=""p"">]</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""m"">2</span><span class=""w""> </span><span class=""m"">3</span><span class=""w""> </span><span class=""m"">4</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">ranges</span><span class=""p"">[</span><span class=""m"">2</span><span class=""o"">:</span><span class=""m"">4</span><span class=""p"">]</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""nf"">c</span><span class=""p"">(</span><span class=""m"">4</span><span class=""p"">,</span><span class=""m"">3</span><span class=""p"">,</span><span class=""m"">2</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">ranges</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""m"">1</span><span class=""w""> </span><span class=""m"">4</span><span class=""w""> </span><span class=""m"">3</span><span class=""w""> </span><span class=""m"">2</span><span class=""w""> </span><span class=""m"">5</span><span class=""w""> </span><span class=""m"">6</span><span class=""w""> </span><span class=""m"">7</span><span class=""w"">\n\n</span></code></pre></div>\n<p>But calling functions like sum(msg$ranges) or median(msg$ranges) will not work, unless you define\nit in file lib/std_vector.R, or you call:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""nf"">sum</span><span class=""p"">(</span><span class=""n"">scan</span><span class=""o"">$</span><span class=""n"">ranges</span><span class=""p"">[</span><span class=""m"">1</span><span class=""o"">:</span><span class=""m"">7</span><span class=""p"">])</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""m"">28</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">median</span><span class=""p"">(</span><span class=""n"">scan</span><span class=""o"">$</span><span class=""n"">ranges</span><span class=""p"">[</span><span class=""m"">1</span><span class=""o"">:</span><span class=""m"">7</span><span class=""p"">])</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""m"">4</span><span class=""w"">\n\n</span></code></pre></div>\n<p>This generates a copy of the structures within the std::vector and returns a R vector:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">typeof</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">ranges</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""s2"">""S4""</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">typeof</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""o"">$</span><span class=""n"">ranges</span><span class=""p"">[</span><span class=""m"">1</span><span class=""o"">:</span><span class=""m"">7</span><span class=""p"">])</span><span class=""w"">\n</span><span class=""p"">[</span><span class=""m"">1</span><span class=""p"">]</span><span class=""w""> </span><span class=""s2"">""double""</span><span class=""w"">\n\n</span></code></pre></div>\n<p>Otherwise it would slow down the conversion of messages, just think of a camera image with 800x600\npixels with 24bits ... The handling of std::vectors in R is defined in lib/std_vector.R you are free\nto add new functionality ...</p>\n\n<h2 id=""other-functions"">Other Functions</h2>\n\n<h3 id=""bag-files"">Bag-Files</h3>\n\n<p>At the moment it is only possible to load bagfiles into R. Use therefore the following function:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">bag</span><span class=""w""> </span><span class=""o"">&lt;-</span><span class=""w""> </span><span class=""n"">ros.BagRead</span><span class=""p"">(</span><span class=""n"">file</span><span class=""p"">,</span><span class=""w""> </span><span class=""nf"">c</span><span class=""p"">(</span><span class=""s2"">""topic_1""</span><span class=""p"">,</span><span class=""w""> </span><span class=""s2"">""topic_2""</span><span class=""p"">,</span><span class=""w""> </span><span class=""n"">...</span><span class=""p"">,</span><span class=""w""> </span><span class=""s2"">""topic_n""</span><span class=""p"">))</span><span class=""w"">\n\n</span></code></pre></div>\n<p>You will receive a list, containing the messages, the timestamps, topics, and datatypes of every\nmessage:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">bag</span><span class=""o"">$</span><span class=""n"">topic</span><span class=""p"">[</span><span class=""m"">2</span><span class=""p"">]</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">bag</span><span class=""o"">$</span><span class=""n"">message</span><span class=""p"">[</span><span class=""m"">2</span><span class=""p"">]</span><span class=""o"">$</span><span class=""n"">...</span><span class=""w""> </span><span class=""c1""># handled in the same way, as a normal message\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">bag</span><span class=""o"">$</span><span class=""n"">datatype</span><span class=""p"">[</span><span class=""m"">2</span><span class=""p"">]</span><span class=""w"">\n\n</span></code></pre></div>\n<h3 id=""parameter-server"">Parameter-Server</h3>\n\n<p>todo</p>\n\n<h3 id=""misc"">Misc</h3>\n\n<p>There is also other functionality defined in src/ros.cpp and lib/ros.R like:</p>\n<div class=""highlight""><pre><code class=""language-R"" data-lang=""R""><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.TimeNow</span><span class=""p"">()</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.Info</span><span class=""p"">(</span><span class=""s2"">""info""</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.Debug</span><span class=""p"">(</span><span class=""s2"">""...""</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.Error</span><span class=""p"">(</span><span class=""s2"">""...""</span><span class=""p"">)</span><span class=""w"">\n</span><span class=""o"">&gt;</span><span class=""w""> </span><span class=""n"">ros.Warn</span><span class=""p"">(</span><span class=""s2"">""...""</span><span class=""p"">)</span><span class=""w"">\n\n</span></code></pre></div>\n</div>\n\n            \n          </div>'"
dynamixel_motor,http://rosindex.github.io/r/dynamixel_motor/,"hydro,jade,groovy,indigo","dynamixel_controllers,dynamixel_driver,dynamixel_motor,dynamixel_msgs,dynamixel_tutorials","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""dynamixel_motor"">dynamixel_motor</h1>\n\n<p>ROS stack for interfacing with Robotis Dynamixel line of servo motors.</p>\n</div>\n\n            \n          </div>'"
ar_tools,http://rosindex.github.io/r/ar_tools/,"hydro,indigo","ar_pose,ar_tools,artoolkit","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
micros_dynamic_objects_filter,http://rosindex.github.io/r/micros_dynamic_objects_filter/,indigo,micros_dynamic_objects_filter,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""dynamic_object_filter"">Dynamic_object_filter</h1>\n</div>\n\n            \n          </div>'"
rqt_pr2_dashboard,http://rosindex.github.io/r/rqt_pr2_dashboard/,"hydro,groovy,indigo",rqt_pr2_dashboard,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
grizzly,http://rosindex.github.io/r/grizzly/,"hydro,jade,indigo","grizzly_description,grizzly_motion,grizzly_msgs,grizzly_navigation,grizzly_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""grizzly"">grizzly</h1>\n\n<p>Lightweight Grizzly packages common to robot and desktop</p>\n</div>\n\n            \n          </div>'"
riskrrt,http://rosindex.github.io/r/riskrrt/,indigo,"dynamic_map,new_riskrrt,riskrrt","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">**installing riskrrt**\n\n$ sudo apt-get install ros-indigo-navigation\n$ cd ~/catkin_ws/src\n$ git clone https://github.com/Spalanza/riskrrt_ros.git\n$ catkin_make\n\n\n\n**running the examples scenarios**\n\nsome examples scenarios (using stage) are provided in worlds/\nrun the scenario with\n$ roslaunch riskrrt scenario_name.launch\nchange the planner behavior by modifying the parameters in params/riskrrt_params.yaml\n\n\n\n**provided nodes**\n\ncontroller: a path following node for differential drive robots\n            subscribed topics: trajectory (riskrrt/Trajectory) \n                               robot pose (geometry_msgs/PoseWithCovarianceStamped)\n            published topics: controller feedback, true if robot is on trajectory (std_msgs/Bool)\n                              velocity commands (geometry_msgs/Twist)\ngoal_pub: automatic goal publisher\n          args: pose x (m), pose y (m) with respect to map\n          published topics: goal (geometry_msgs/PoseStamped)\nog_builder*: some occupany grid array publishers\n             args: number of humans, human speed (m/s)\n             subscribed topics: map (nav_msgs/OccupancyGrid)\n                                human odometry (nav_msgs/Odometry)\n             published topics: human velocity (geometry_msgs/Twist)\n                               occupancy grid array (riskrrt/OccupancyGridArray)\nriskrrt_planner: the riskrrt planner\n         subscribed topics: occupancy grid array (riskrrt/OccupancyGridArray)\n                            goal (geometry_msgs/PoseStamped)\n                            controller feedback (std_msgs/Bool)\n                            robot pose (geometry_msgs/PoseWithCovarianceStamped)\n                            robot odometry (nav_msgs/Odometry)\n         published topics: trajectory (riskrrt/Trajectory)\n\n\n\n**publishing your own map**\n\nuse the maxDepth and timeStep parameters from params/riskrrt_params.yaml\n-maxDepth should be the occupancy grid array size\n-timeStep should be the time gap between each grid\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
lama_costmap,http://rosindex.github.io/r/lama_costmap/,indigo,"fake_laser,lj_costmap,nj_costmap,nj_oa_costmap","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
barrett_hand_sim,http://rosindex.github.io/r/barrett_hand_sim/,indigo,"barrett_hand_control,barrett_hand_gazebo,barrett_hand_sim","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""barrett_hand_sim"">barrett_hand_sim</h1>\n\n<p>Barrett hand simulation package for ROS</p>\n\n<p>Launch the Gazebo simulation:</p>\n\n<p>roslaunch barrett_hand_gazebo barrett_hand.launch</p>\n\n<p>How to switch to available hand models: </p>\n\n<p>Edit file barrett_hand_description/robots/bh_alone.urdf.xacro and change the name of the included file (bh282.urdf.xacro or bh280.urdf.xacro)</p>\n\n<p>Publish topics to control the hand:</p>\n\n<p>rostopic pub /bh_j11_position_controller/command std_msgs/Float64 \'desired_angle\'</p>\n\n<p>Controller list:</p>\n\n<p>bh_j11_position_controller -&gt; spread DoF</p>\n\n<p>bh_j12_position_controller -&gt; finger 1 grasp</p>\n\n<p>bh_j22_position_controller -&gt; finger 2 grasp</p>\n\n<p>bh_j32_position_controller -&gt; finger 3 grasp</p>\n</div>\n\n            \n          </div>'"
markov_decision_making,http://rosindex.github.io/r/markov_decision_making/,hydro,"markov_decision_making,mdm_example,mdm_library,mdm_topological_tools,predicate_manager","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""markov_decision_making"">markov_decision_making</h1>\n\n<p>This repository contains the source code for the Markov Decision Making (MDM) metapackage for ROS. MDM is a library to support the deployment of decision-making methodologies based on Markov Decision Processes (MDPs) to teams of robots using ROS. </p>\n\n<p>Please visit the ROSwiki page at <a href=""http://wiki.ros.org/markov_decision_making"">http://wiki.ros.org/markov_decision_making</a> for more details.</p>\n</div>\n\n            \n          </div>'"
lama,http://rosindex.github.io/r/lama/,indigo,"lama_interfaces,lama_jockeys,lama_core,lama_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""the-large-maps-framework-lama"">The Large Maps Framework (LaMa)</h1>\n\n<p>This repository is the place where the core functionalities of the Large Maps Framework (LaMa) go.</p>\n\n<p>The main page for the documentation of the Large Maps Framework is on <a href=""http://wiki.ros.org/Large%20Maps%20Framework"">http://wiki.ros.org/Large%20Maps%20Framework</a>.</p>\n\n<p>The repository includes the following packages:\n * lama_interfaces: <a href=""http://wiki.ros.org/lama_interfaces"">http://wiki.ros.org/lama_interfaces</a>\n * lama_jockeys: <a href=""http://wiki.ros.org/lama_jockeys"">http://wiki.ros.org/lama_jockeys</a>\n * lama_msgs: <a href=""http://wiki.ros.org/lama_msgs"">http://wiki.ros.org/lama_msgs</a></p>\n\n<p>The repository includes the following metapackages:\n * lama_core </p>\n</div>\n\n            \n          </div>'"
bride,http://rosindex.github.io/r/bride/,"hydro,groovy,indigo","bride,bride_compilers,bride_plugin_source,bride_templates,bride_tutorials","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bride-the-mde-tool-chain-for-ros"">BRIDE - The MDE tool chain for ROS</h1>\n\n<p>BRIDE is a model driven engineering tool chain based on Eclipse for the development of ROS components, systems and applications.</p>\n\n<p><img src=""http://cybernotic.org/bride/img/small_system.png"" alt=""BRIDE screenshot"" title=""BRIDE screenshot""></p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h2 id=""from-official-ros-repositories"">From official ROS repositories</h2>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""gp"">$ </span>sudo apt-get install ros-hydro-bride\n</code></pre></div>\n<h2 id=""from-source"">From source</h2>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""gp"">$ </span>mkdir -p ~/git/bride_ws/src                  <span class=""o"">(</span>or somewhere <span class=""k"">else</span><span class=""o"">)</span>\n<span class=""gp"">$ </span><span class=""nb"">cd </span>git/bride_ws/src\n<span class=""gp"">$ </span>catkin_init_workspace\n</code></pre></div>\n<p>Clone the release version of the BRIDE repository</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""gp"">$ </span>git clone https://github.com/ipa320/bride.git\n<span class=""gp"">$ </span><span class=""nb"">cd</span> ..\n</code></pre></div>\n<p>Install eclipse and the necessary plugins by building the workspace:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""gp"">$ </span>catkin_make\n</code></pre></div>\n<p>Run bride from the workspace </p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""gp"">$ </span><span class=""nb"">source </span>devel/setup.sh\n<span class=""gp"">$ </span>rosrun bride eclipse\n</code></pre></div>\n<h2 id=""updating-a-source-installation"">Updating a source installation</h2>\n\n<p>If you installed BRIDE from source you can update your installed version by updating the repository with git:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""gp"">$ </span>git pull origin develop\n</code></pre></div>\n<p>Afterwards start BRIDE as usually and go into the ""Help"" menu and select ""Check for Updates"". If there are updates in the generated plugins in the repository, Eclipse should install them during the update process.</p>\n\n<h2 id=""development"">Development</h2>\n\n<p>Please report issues here on github. If you want to develop for BRIDE you can find documentation on the setup here:\n<a href=""https://github.com/ipa320/bride/wiki/Developer-setup"">https://github.com/ipa320/bride/wiki/Developer-setup</a></p>\n\n<h2 id=""tutorials"">Tutorials</h2>\n\n<p>You can find detailed examples and tutorials on the <a href=""http://wiki.ros.org/bride"">ROS wiki pages</a>.</p>\n\n<h2 id=""status"">Status</h2>\n\n<p><a href=""https://travis-ci.org/ipa320/bride""><img src=""https://travis-ci.org/ipa320/bride.png"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""status"">Status</h2>\n\n<p><a href=""https://travis-ci.org/abubeck/bride""><img src=""https://travis-ci.org/abubeck/bride.png"" alt=""Build Status""></a></p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>Checkout repository into a directory that is part of your $ROS_PACKAGE_PATH (or add bride directory into $ROS_PACKAGE_PATH afterwards)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  # git clone git://github.com/ipa320/bride.git\n</code></pre></div>\n<p>Install eclipse and all necessary plugins</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  # roscd bride\n\n  # make\n</code></pre></div>\n<p>To start bride use:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  # rosrun bride eclipse\n</code></pre></div>\n<h2 id=""updating-installation"">Updating Installation</h2>\n\n<p>After updates in the brics plugins a complete installation is not necessary. \nTo reinstall the updated brics plugins in your existing bride installation do the following steps:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  # roscd bride\n\n  # make update\n</code></pre></div>\n</div>\n\n            \n          </div>'"
pr2_controllers,http://rosindex.github.io/r/pr2_controllers/,"hydro,jade,groovy,indigo","ethercat_trigger_controllers,joint_trajectory_action,pr2_calibration_controllers,pr2_controllers,pr2_controllers_msgs,pr2_gripper_action,pr2_head_action,pr2_mechanism_controllers,robot_mechanism_controllers,single_joint_position_action,control_toolbox","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
moveit_python,http://rosindex.github.io/r/moveit_python/,"hydro,jade,indigo",moveit_python,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""moveit_python"">moveit_python</h2>\n\n<p>This is a set of pure-python bindings to the ROS interface of MoveIt! based on the\nearlier moveit_utils package that was developed as part of the chess_player package.</p>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>There are three interfaces currently:</p>\n\n<ul>\n<li>MoveGroupInterface -- used to move the arm using the move_group action.</li>\n<li>PlanningSceneInterface -- used to add/remove collision and attached objects.\nCan also set the colors of objects.</li>\n<li>PickPlaceInterface -- used to interface to the pick and place actions.</li>\n</ul>\n\n<h2 id=""movegroupinterface"">MoveGroupInterface</h2>\n\n<p>The MoveGroupInterface is quite easy to use:</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">import</span> <span class=""nn"">rospy</span>\n<span class=""kn"">from</span> <span class=""nn"">moveit_python</span> <span class=""kn"">import</span> <span class=""o"">*</span>\n\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">init_node</span><span class=""p"">(</span><span class=""s"">""moveit_py""</span><span class=""p"">)</span>\n<span class=""n"">g</span> <span class=""o"">=</span> <span class=""n"">MoveGroupInterface</span><span class=""p"">(</span><span class=""s"">""planning_group_name""</span><span class=""p"">,</span> <span class=""s"">""base_link""</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>Obviously, you might need different values for base_link, and your planning group\nis probably not called ""planning_group_name"".</p>\n\n<h2 id=""planningsceneinterface"">PlanningSceneInterface</h2>\n\n<p>The PlanningSceneInterface allows you to easily insert and remove objects from\nthe MoveIt! planning scene. Unlike the moveit_commander, this module tracks when\nobjects are added removed, and will re-attempt add/remove if a message is loss.</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">import</span> <span class=""nn"">rospy</span>\n<span class=""kn"">from</span> <span class=""nn"">moveit_python</span> <span class=""kn"">import</span> <span class=""o"">*</span>\n\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">init_node</span><span class=""p"">(</span><span class=""s"">""moveit_py""</span><span class=""p"">)</span>\n<span class=""c""># create a planning scene interface, provide name of root link</span>\n<span class=""n"">p</span> <span class=""o"">=</span> <span class=""n"">PlanningSceneInterface</span><span class=""p"">(</span><span class=""s"">""base_link""</span><span class=""p"">)</span>\n\n<span class=""c""># add a cube of 0.1m size, at [1, 0, 0.5] in the base_link frame</span>\n<span class=""n"">p</span><span class=""o"">.</span><span class=""n"">addCube</span><span class=""p"">(</span><span class=""s"">""my_cube""</span><span class=""p"">,</span> <span class=""mf"">0.1</span><span class=""p"">,</span> <span class=""mi"">1</span><span class=""p"">,</span> <span class=""mi"">0</span><span class=""p"">,</span> <span class=""mf"">0.5</span><span class=""p"">)</span>\n\n<span class=""c""># do something</span>\n\n<span class=""c""># remove the cube</span>\n<span class=""n"">p</span><span class=""o"">.</span><span class=""n"">removeCollisionObject</span><span class=""p"">(</span><span class=""s"">""my_cube""</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>Each time an object is added or removed, the planning scene interface will\nwait until it recieves confirmation that the request has been processed by MoveIt!\nIf sending a large number of objects, it would be more efficient to only wait\nfor synchronization at the end, this can be achieved by doing like so:</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""n"">p</span><span class=""o"">.</span><span class=""n"">addCube</span><span class=""p"">(</span><span class=""s"">""my_cube""</span><span class=""p"">,</span> <span class=""mf"">0.1</span><span class=""p"">,</span> <span class=""mi"">1</span><span class=""p"">,</span> <span class=""mi"">0</span><span class=""p"">,</span> <span class=""mf"">0.5</span><span class=""p"">,</span> <span class=""n"">wait</span><span class=""o"">=</span><span class=""bp"">False</span><span class=""p"">)</span>\n<span class=""n"">p</span><span class=""o"">.</span><span class=""n"">addCube</span><span class=""p"">(</span><span class=""s"">""my_other_cube""</span><span class=""p"">,</span> <span class=""mf"">0.1</span><span class=""p"">,</span> <span class=""mi"">2</span><span class=""p"">,</span> <span class=""mi"">0</span><span class=""p"">,</span> <span class=""mf"">0.5</span><span class=""p"">,</span> <span class=""n"">wait</span><span class=""o"">=</span><span class=""bp"">False</span><span class=""p"">)</span>\n<span class=""n"">p</span><span class=""o"">.</span><span class=""n"">waitForSync</span><span class=""p"">()</span>\n\n</code></pre></div>\n<h2 id=""pickplaceinterface"">PickPlaceInterface</h2>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">import</span> <span class=""nn"">rospy</span>\n<span class=""kn"">from</span> <span class=""nn"">moveit_python</span> <span class=""kn"">import</span> <span class=""o"">*</span>\n<span class=""kn"">from</span> <span class=""nn"">moveit_msgs.msg</span> <span class=""kn"">import</span> <span class=""n"">Grasp</span><span class=""p"">,</span> <span class=""n"">PlaceLocation</span>\n\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">init_node</span><span class=""p"">(</span><span class=""s"">""moveit_py""</span><span class=""p"">)</span>\n<span class=""c""># provide arm group and gripper group names</span>\n<span class=""c""># also takes a third parameter ""plan_only"" which defaults to False</span>\n<span class=""n"">p</span> <span class=""o"">=</span> <span class=""n"">PickPlaceInterface</span><span class=""p"">(</span><span class=""s"">""arm""</span><span class=""p"">,</span> <span class=""s"">""gripper""</span><span class=""p"">)</span>\n\n<span class=""n"">g</span> <span class=""o"">=</span> <span class=""n"">Grasp</span><span class=""p"">()</span>\n<span class=""c""># fill in g</span>\n<span class=""c""># setup object named object_name using PlanningSceneInterface</span>\n<span class=""n"">p</span><span class=""o"">.</span><span class=""n"">pickup</span><span class=""p"">(</span><span class=""s"">""object_name""</span><span class=""p"">,</span> <span class=""p"">[</span><span class=""n"">g</span><span class=""p"">,</span> <span class=""p"">],</span> <span class=""n"">support_name</span> <span class=""o"">=</span> <span class=""s"">""supporting_surface""</span><span class=""p"">)</span>\n\n<span class=""n"">l</span> <span class=""o"">=</span> <span class=""n"">PlaceLocation</span><span class=""p"">()</span>\n<span class=""c""># fill in l</span>\n<span class=""n"">p</span><span class=""o"">.</span><span class=""n"">place</span><span class=""p"">(</span><span class=""s"">""object_name""</span> <span class=""p"">[</span><span class=""n"">l</span><span class=""p"">,</span> <span class=""p"">],</span> <span class=""n"">goal_is_eef</span> <span class=""o"">=</span> <span class=""bp"">True</span><span class=""p"">,</span> <span class=""n"">support_name</span> <span class=""o"">=</span> <span class=""s"">""supporting_surface""</span><span class=""p"">)</span>\n\n</code></pre></div>\n<h2 id=""migration-from-moveit_utils"">Migration from moveit_utils</h2>\n\n<ul>\n<li>GraspingInterface renamed to PickPlaceInterface\n\n<ul>\n<li>The pick/place functions now return the entire action result, in moveit_utils they returned only the error_code. To access the error code as it used to be returned, you would use result.error_code.val</li>\n</ul>\n</li>\n<li>ObjectManager renamed to PlanningSceneInterface\n\n<ul>\n<li>remove function is now removeCollisionObject and removeAttachedObject</li>\n</ul>\n</li>\n<li>ArmInterface renamed to MoveGroupInterface</li>\n</ul>\n</div>\n\n            \n          </div>'"
pr2_mechanism_msgs,http://rosindex.github.io/r/pr2_mechanism_msgs/,jade,pr2_mechanism_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_mechanism,http://rosindex.github.io/r/pr2_mechanism/,"hydro,fuerte,electric,groovy,diamondback,jade,indigo","pr2_controller_interface,pr2_controller_manager,pr2_hardware_interface,pr2_mechanism,pr2_mechanism_diagnostics,pr2_mechanism_model,pr2_mechanism_msgs,realtime_tools","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rsv_balance_simulator,http://rosindex.github.io/r/rsv_balance_simulator/,jade,"rsv_balance_gazebo,rsv_balance_gazebo_control,rsv_balance_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rsv_balance_simulator"">rsv_balance_simulator</h1>\n\n<p>Simulator packages for Robosavvy\'s balancing platform</p>\n\n<hr>\n\n<h2 id=""packages"">Packages</h2>\n\n<ul>\n<li>\n<code>rsv_balance_gazebo</code> </li>\n</ul>\n\n<p>Package containing all necessary tools to run self-balancing platform on simulation:\n  * Gazebo models.\n  * Gazebo worlds.\n      1. Empty.\n      1. Inclined terrain.\n      1. Natural terrain.\n  * Launch files for:\n      1. Gazebo worlds.\n      1. RVIZ simulation visualization.\n  * Gazebo plugin for the platform model which behaves just like the real thing.</p>\n\n<ul>\n<li><code>rsv_balance_gazebo_control</code></li>\n</ul>\n\n<p>Self-balancing control algorithm for the Gazebo plugin.</p>\n\n<hr>\n\n<h3 id=""todo-further-improvements"">ToDo: Further improvements</h3>\n\n<ol>\n<li>Refactor controller for better generalization. So we can easily test other control methods.</li>\n<li>URDF parser for automatic building of control matrices and control gains.</li>\n</ol>\n</div>\n\n            \n          </div>'"
imu_pipeline,http://rosindex.github.io/r/imu_pipeline/,"hydro,groovy,fuerte,indigo","imu_pipeline,imu_processors,imu_transformer","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""imu_transformer"">imu_transformer</h1>\n\n<p>Transforms sensor_msgs/Imu messages into new coordinate frames using tf</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>IMU Pipeline includes tools for processing and pre-processing IMU messages for easier use by later subscribers.</p>\n\n<h1 id=""imu_transformer"">imu_transformer</h1>\n\n<p>Transforms sensor_msgs/Imu messages into new coordinate frames using tf</p>\n\n<h1 id=""imu_integrator"">imu_integrator</h1>\n\n<p>Simple planar imu integration tool.</p>\n\n<h1 id=""imu_bias_remover"">imu_bias_remover</h1>\n\n<p>Tool to recalibrate imu bias based on /cmd_vel or /odom</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>IMU Pipeline metapackage includes tools for processing and pre-processing IMU messages for easier use by later subscribers.</p>\n\n<h1 id=""imu_transformer"">imu_transformer</h1>\n\n<p>Transforms sensor_msgs/Imu and sensor_msgs/MagneticField messages into new coordinate frames using tf2</p>\n\n<h1 id=""imu_processors"">imu_processors</h1>\n\n<p>Includes misc preprocessors for IMU data:\n* imu_integrator: Simple planar imu integration tool.\n* imu_bias_remover: Tool to recalibrate imu bias based on /cmd_vel or /odom</p>\n</div>\n\n            \n          </div>'"
hrl_kdl,http://rosindex.github.io/r/hrl_kdl/,"hydro,groovy,fuerte,indigo","hrl_geom,hrl_kdl,pykdl_utils","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""hrl-kdl"">hrl-kdl</h1>\n\n<p>Kinematics and geometry utilities for KDL</p>\n\n<p>See documentation here: <a href=""http://wiki.ros.org/hrl-kdl"">http://wiki.ros.org/hrl-kdl</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cassandra_ros,http://rosindex.github.io/r/cassandra_ros/,indigo,cassandra_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cassandra_ros"">cassandra_ros</h1>\n\n<p>Library and tools for dynamically storing ROS messages in Apache Cassandra.</p>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Authors</td>\n<td>Andr\xc3\xa9 Dietrich &amp; Sebastian Zug</td>\n</tr>\n<tr>\n<td>Source</td>\n<td>\n<code>git clone</code> <a href=""https://gitlab.com/OvGU-ESS/cassandra_ros.git"">https://gitlab.com/OvGU-ESS/cassandra_ros.git</a>\n</td>\n</tr>\n<tr>\n<td>Email</td>\n<td>\n<a href=""mailto:dietrich@ivs.cs.uni-magdeburg.de"">dietrich@ivs.cs.uni-magdeburg.de</a> &amp; <a href=""mailto:zug@ivs.cs.uni-magdeburg.de"">zug@ivs.cs.uni-magdeburg.de</a>\n</td>\n</tr>\n<tr>\n<td>Publication</td>\n<td>ROS Meets Cassandra: Data Management in Smart Environments with NoSQL</td>\n</tr>\n<tr>\n<td></td>\n<td><a href=""http://eos.cs.ovgu.de/wp-content/uploads/2014/09/ROS-Meets-Cassandra-Data-Management-in-Smart-Environments-with-NoSQL.pdf"">http://eos.cs.ovgu.de/wp-content/uploads/2014/09/ROS-Meets-Cassandra-Data-Management-in-Smart-Environments-with-NoSQL.pdf</a></td>\n</tr>\n<tr>\n<td>Slides</td>\n<td><a href=""http://eos.cs.ovgu.de/wp-content/uploads/2015/06/sozi-presentation.svg"">http://eos.cs.ovgu.de/wp-content/uploads/2015/06/sozi-presentation.svg</a></td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>This package provides an interface to the Cassandra database system, which can\nbe used to store any types of ROS-messages in column families, similar to\nMongoDB. But in contrast to MongoDB you are able to choose the format you would\nlike to store your messages. You can choose between various formats and thus,\nexplore your data afterwards by using Cassandra\'s CQL capabilities.</p>\n\n<h2 id=""media"">Media</h2>\n\n<p><a href=""http://www.youtube.com/watch?v=lQczBtVmomc"" title=""click to watch""><img src=""http://img.youtube.com/vi/lQczBtVmomc/0.jpg"" alt=""YouTube""></a></p>\n\n<p><a href=""http://www.youtube.com/watch?v=tfczj1jb3B4"" title=""click to watch""><img src=""http://img.youtube.com/vi/tfczj1jb3B4/0.jpg"" alt=""YouTube""></a></p>\n\n<p><a href=""http://www.youtube.com/watch?v=czLQ-yxBYC4"" title=""click to watch""><img src=""http://img.youtube.com/vi/czLQ-yxBYC4/0.jpg"" alt=""YouTube""></a></p>\n\n<p><a href=""http://www.youtube.com/watch?v=y6LqLNB4VDk"" title=""click to watch""><img src=""http://img.youtube.com/vi/y6LqLNB4VDk/0.jpg"" alt=""YouTube""></a></p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>First of all you need to download and install CassandraDB manually form apache:</p>\n\n<p><a href=""http://cassandra.apache.org/download/"">http://cassandra.apache.org/download/</a></p>\n\n<p>Then change the Cassandra partitioner to ""ByteOrdered"", which can be set in</p>\n\n<p>cassandra-install/conf/cassandra.yaml</p>\n\n<p>search for section partitioner and change it to the following:</p>\n\n<p>partitioner: org.apache.cassandra.dht.ByteOrderedPartitioner</p>\n\n<p>ByteOrdered partitioner is required to retrieve requested data ordered,\notherwise it will appear. For more information, have look on the documentation\non <a href=""http://docs.datastax.com/en/cassandra/2.0/cassandra/architecture/architecturePartitionerAbout_c.html"">http://docs.datastax.com/en/cassandra/2.0/cassandra/architecture/architecturePartitionerAbout_c.html</a></p>\n\n<p>Secondly, you will have to install pycassa, an python interface for CassandraDB.\nThe project is hosted on:</p>\n\n<p>pycassa.github.com/pycassa/</p>\n\n<p>All information including installation, documentation, or a tutorial, are there\navailable.</p>\n\n<h2 id=""first-run"">First run</h2>\n\n<p>First of all you will need start Cassandra, what is done in most cases by going\ninto the folder, where Cassandra was installed and than by typing in:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>bin/cassandra -f\n\n</code></pre></div>\n<p>The option -f hinders Cassandra to start a deamon in backgroud, for more\ninformation and help visit : <a href=""http://wiki.apache.org/cassandra/GettingStarted"">http://wiki.apache.org/cassandra/GettingStarted</a></p>\n\n<p>We added three simple launch-files, with which you can test, if your\ninstallation was successful. You will need a webcam to run these examples,\ncamera-settings can be changed in the launch-file. First of all run</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roslaunch cassandra_ros recordCamera.launch\n\n</code></pre></div>\n<p>a window with the camera-stream should appear, furthermore this starts\ncassandraBag.py, a service which stores this stream in a CassandraDB. If you\nabort, recording will stop automatically. If this does not work, or you see the\nmessage:</p>\n<div class=""highlight""><pre><code class=""language-plain"" data-lang=""plain"">Not starting RPC server as requested. Use JMX (StorageService-&gt;startRPCServer())\nor nodetool (enablethrift) to start it ...\n\n</code></pre></div>\n<p>then simply run:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>sudo nodetool <span class=""o"">(</span>enablethrift<span class=""o"">)</span>\n\n</code></pre></div>\n<p>By running:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roslaunch cassandra_ros replayCamera.launch\n\n</code></pre></div>\n<p>the previous recorded stream will be replayed. If you could see yourself,\neverything seems to be correct installed and configured. By running:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roslaunch cassandra_ros deleteCamera.launch\n\n</code></pre></div>\n<p>the column-family, in which the stream was stored, gets deleted. The service\ncassandra_ros/node/bag/cassandraBag.py was in this case responsible for handling\ntopics, if you want to use it as a command-line tool, see section \xe2\x80\xa6</p>\n\n<h2 id=""suggestions"">Suggestions</h2>\n\n<p>There are a some graphical user interfaces available for Cassandra, which\nsimplify the interaction with Cassandra. Using these it is quite easy to check,\nweather storing was successful or not, or to graphically explore your data. We\nrecommend the usage of the following tools:</p>\n\n<h3 id=""cassandra-cluster-admin"">Cassandra Cluster Admin:</h3>\n\n<p>A php-tool similar to phpmyadmin and available under:\n<a href=""https://github.com/sebgiroux/Cassandra-Cluster-Admin"">https://github.com/sebgiroux/Cassandra-Cluster-Admin</a></p>\n\n<h3 id=""cassandra-gui"">Cassandra-Gui:</h3>\n\n<p>A simple java-tool, which can be downloaded from:\n<a href=""http://code.google.com/a/apache-extras.org/p/cassandra-gui/"">http://code.google.com/a/apache-extras.org/p/cassandra-gui/</a></p>\n\n<h3 id=""others"">Others:</h3>\n\n<p>Check the following link:\n<a href=""http://wiki.apache.org/cassandra/Administration%20Tools"">http://wiki.apache.org/cassandra/Administration%20Tools</a></p>\n\n<h1 id=""tutorial"">Tutorial</h1>\n\n<h2 id=""philosophy"">Philosophy</h2>\n\n<ol>\n<li>These are some design-principles we made for data handling, which might a bit\nconfusing, if you examine your data with other tools or one of the\nrecommended GUIs.</li>\n<li>Each topic is stored within its own column-family, one message per row.</li>\n<li>Due to the maximum column-family-name-length of 42 Bytes, we use the\nhash-value of the topic-name as the column-family-name. But you do not need\nto bother with hash-values, using our interface you can still work with\ntopic-names, everything is hidden.</li>\n<li>All meta information about a topic, including type, storage-format,\nkey-format, etc. are stored within the comment-field of every column-family.\nNo other column-family is required or has to be updated to store\nmeta-information, what reduces the amount of additional effort, but forbids\nto change the comment-field manually. Everything is handled within the\nbackground.</li>\n</ol>\n\n<h2 id=""basic-interface"">Basic Interface</h2>\n\n<p>There are only 2 classes, you need to be aware of, if you want to store and\naccess ros-messages within Cassandra. RosCassandra, which can be seen as the\nmanagement-interface to Cassandra in a ROS typical manner. CassandraTopic is\nrequired to handle the access to every topic/colum-family.</p>\n\n<h2 id=""let-us-start-by-connecting-to-cassandra"">Let us start by connecting to Cassandra:</h2>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">import</span> <span class=""nn"">rospy</span>\n<span class=""kn"">import</span> <span class=""nn"">roslib</span><span class=""p"">;</span> <span class=""n"">roslib</span><span class=""o"">.</span><span class=""n"">load_manifest</span><span class=""p"">(</span><span class=""s"">""cassandra_ros""</span><span class=""p"">)</span>\n<span class=""kn"">import</span> <span class=""nn"">RosCassandra.RosCassandra</span> <span class=""kn"">as</span> <span class=""nn"">rc</span>\n\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">init_node</span><span class=""p"">(</span><span class=""s"">\'CassandraTest\'</span><span class=""p"">)</span>\n\n<span class=""c""># in most cases this is the standard configuration</span>\n<span class=""n"">host</span> <span class=""o"">=</span> <span class=""s"">\'localhost\'</span>\n<span class=""n"">port</span> <span class=""o"">=</span> <span class=""mi"">9160</span>\n\n<span class=""c""># that is nearly enough, only a keyspace is missing</span>\n<span class=""n"">rosCas</span> <span class=""o"">=</span> <span class=""n"">rc</span><span class=""o"">.</span><span class=""n"">RosCassandra</span><span class=""p"">(</span><span class=""n"">host</span><span class=""p"">,</span> <span class=""n"">port</span><span class=""p"">)</span>\n\n<span class=""c""># check if the keyspace exits</span>\n<span class=""k"">if</span> <span class=""ow"">not</span> <span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">connectToKeyspace</span><span class=""p"">(</span><span class=""s"">\'test\'</span><span class=""p"">):</span>\n    <span class=""c""># if not, create one</span>\n    <span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">createKeyspace</span><span class=""p"">(</span><span class=""s"">\'test\'</span><span class=""p"">)</span>\n\n<span class=""c""># connect again</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">connectToKeyspace</span><span class=""p"">(</span><span class=""s"">\'test\'</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>Thats it, now we are connected. In the next step we will create a new\ntopic/column-family:</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""c""># this is the datatype we will store</span>\n<span class=""kn"">from</span> <span class=""nn"">std_msgs.msg</span> <span class=""kn"">import</span> <span class=""n"">String</span>\n<span class=""n"">topic</span> <span class=""o"">=</span> <span class=""s"">\'test_topic\'</span>\n<span class=""n"">key_format</span><span class=""o"">=</span><span class=""s"">\'time\'</span>       <span class=""c""># this means, that we will use a timestamp as primary</span>\n                        <span class=""c""># key, other formats are \'hash\' or \'msg_part\'</span>\n<span class=""n"">format</span> <span class=""o"">=</span> <span class=""s"">\'binary\'</span>       <span class=""c""># the format that is used for conversation,</span>\n                        <span class=""c""># other formats are \'string\', \'ros\', or \'yaml\',</span>\n\n<span class=""c""># at first we create the new topic with the following command</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">addTopic</span><span class=""p"">(</span><span class=""n"">topic</span><span class=""p"">,</span>\n                <span class=""n"">format</span><span class=""p"">,</span>\n                <span class=""s"">\'String\'</span><span class=""p"">,</span>\n                <span class=""s"">\'std_msgs\'</span><span class=""p"">,</span>\n                <span class=""n"">key_format</span><span class=""p"">,</span>\n                <span class=""bp"">None</span><span class=""p"">,</span> <span class=""c""># &lt;only required if you use define key-format \'manually\'</span>\n                <span class=""n"">comment</span><span class=""o"">=</span><span class=""s"">\'some additional comments...\'</span><span class=""p"">)</span>\n\n<span class=""c""># if everything worked well, there should be a new topic and the</span>\n<span class=""c""># following command should evaluate to true</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">existTopic</span><span class=""p"">(</span><span class=""n"">topic</span><span class=""p"">)</span>\n\n<span class=""c""># getting a list with all topics</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">getAllTopics</span><span class=""p"">()</span>\n\n</code></pre></div>\n<p>In the next step we will start to insert some messages into the database</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""c""># get the topic-containerros</span>\n<span class=""n"">topicContainer</span> <span class=""o"">=</span> <span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">getTopic</span><span class=""p"">(</span><span class=""n"">topic</span><span class=""p"">)</span>\n\n<span class=""c""># thus we can now start to insert some messages</span>\n<span class=""n"">msg</span> <span class=""o"">=</span> <span class=""n"">String</span><span class=""p"">()</span>\n\n<span class=""k"">for</span> <span class=""n"">i</span> <span class=""ow"">in</span> <span class=""nb"">range</span><span class=""p"">(</span><span class=""mi"">100</span><span class=""p"">):</span>\n    <span class=""n"">msg</span><span class=""o"">.</span><span class=""n"">data</span> <span class=""o"">=</span> <span class=""s"">\'test \'</span> <span class=""o"">+</span> <span class=""nb"">str</span><span class=""p"">(</span><span class=""n"">i</span><span class=""p"">)</span>\n    <span class=""n"">topicContainer</span><span class=""o"">.</span><span class=""n"">addData</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""p"">)</span>\n\n<span class=""c""># because I do not know your time, we can simply get all messages by calling</span>\n<span class=""n"">topicContainer</span><span class=""o"">.</span><span class=""n"">getAllData</span><span class=""p"">(</span><span class=""n"">queue</span><span class=""o"">=</span><span class=""mi"">100</span><span class=""p"">)</span>\n\n<span class=""c""># if you know the primary keys exactly, you can also query by using them</span>\n<span class=""c""># topicContainer.getData(key, to_key, queue=100)</span>\n\n<span class=""c""># remove everything</span>\n<span class=""n"">topicContainer</span><span class=""o"">.</span><span class=""n"">removeAllData</span><span class=""p"">()</span>\n<span class=""c""># or if you want to delete a special message, use:</span>\n<span class=""c""># topicContainer.removeData(key, to_key, queue=100):</span>\n\n<span class=""c""># now let us change the format for storing data and the key</span>\n<span class=""c""># we could either delete the whole container by calling:</span>\n<span class=""c""># rosCas.removeTopic(topic)</span>\n<span class=""c""># or we change the meta-information \xe2\x80\xa6 this works only, if</span>\n<span class=""c""># the column-family is empty</span>\n<span class=""n"">meta</span> <span class=""o"">=</span> <span class=""n"">topicContainer</span><span class=""o"">.</span><span class=""n"">getMeta</span><span class=""p"">()</span>\n\n<span class=""c"">#meta is always a dictionary, where we change values as follows</span>\n<span class=""n"">meta</span><span class=""p"">[</span><span class=""s"">\'cassandra_format\'</span><span class=""p"">]</span> <span class=""o"">=</span> <span class=""s"">\'ros\'</span>\n<span class=""n"">meta</span><span class=""p"">[</span><span class=""s"">\'key_format\'</span><span class=""p"">]</span> <span class=""o"">=</span> <span class=""s"">\'manual\'</span>\n\n<span class=""c""># write it back to the topic</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">setTopicMeta</span><span class=""p"">(</span><span class=""n"">topic</span><span class=""p"">,</span> <span class=""n"">meta</span><span class=""p"">)</span>\n\n<span class=""c""># because we had changed the storage format, we have to renew the</span>\n<span class=""c""># topic-container, this will be explained in more detail within the next</span>\n<span class=""c""># section</span>\n<span class=""n"">topicContainer</span> <span class=""o"">=</span> <span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">getTopic</span><span class=""p"">(</span><span class=""n"">topic</span><span class=""p"">)</span>\n\n<span class=""k"">for</span> <span class=""n"">i</span> <span class=""ow"">in</span> <span class=""nb"">range</span><span class=""p"">(</span><span class=""mi"">100</span><span class=""p"">):</span>\n    <span class=""n"">msg</span><span class=""o"">.</span><span class=""n"">data</span> <span class=""o"">=</span> <span class=""s"">\'test \'</span> <span class=""o"">+</span> <span class=""nb"">str</span><span class=""p"">(</span><span class=""n"">i</span><span class=""p"">)</span>\n    <span class=""n"">topicContainer</span><span class=""o"">.</span><span class=""n"">addData</span><span class=""p"">(</span><span class=""n"">msg</span><span class=""p"">,</span> <span class=""s"">\'</span><span class=""si"">%.2</span><span class=""s"">d\'</span><span class=""o"">%</span><span class=""n"">i</span><span class=""p"">)</span>\n\n<span class=""c""># as you see, adding keys looks a bit weird, but they are always stored</span>\n<span class=""c""># as strings... requesting data looks as follows \xe2\x80\xa6.</span>\n<span class=""n"">topicContainer</span><span class=""o"">.</span><span class=""n"">getData</span><span class=""p"">(</span><span class=""s"">\'04\'</span><span class=""p"">,</span> <span class=""s"">\'20\'</span><span class=""p"">)</span>\n<span class=""c""># you will get a list consisting of (key, value) pairs ...</span>\n\n<span class=""c""># also allowed is something like this: topicContainer.addData(msg, \'XXX\'))</span>\n\n</code></pre></div>\n<h2 id=""storage-formats"">Storage Formats</h2>\n\n<p>As mentioned before, we support different ways of storing data, it is either\npossible to store messages in a binary format, which enables fast conversion and\nstoring. But currently it is also possible to store messages as ""strings"",\n""yaml"", or ""ros"" format. The type of conversion is defined at the creation of a\ntopic-container:</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">addTopic</span><span class=""p"">(</span><span class=""n"">topic</span><span class=""p"">,</span>\n                <span class=""n"">format</span><span class=""p"">,</span> <span class=""c""># exactly in here ... \'string\', \'yaml\', \'ros\', \'binary\'</span>\n                <span class=""s"">\'String\'</span><span class=""p"">,</span>\n                <span class=""s"">\'std_msgs\'</span><span class=""p"">,</span>\n                <span class=""n"">key_format</span><span class=""p"">,</span>\n                <span class=""bp"">None</span><span class=""p"">,</span>\n                <span class=""n"">comment</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>If you would like to run CQL-Queries on your stored messages, you will have to\nuse the \'ros\' \xe2\x80\x93 format (might not work with every datatype). Every message is\ntherefore translated into a linar form and column are strongly typed, according\nto the defined message formats. A Message of type\n""geometry_msgs/TransformStamped"":</p>\n<div class=""highlight""><pre><code class=""language-plain"" data-lang=""plain"">std_msgs/Header header\n   uint32 seq\n   time stamp\n   string frame_id\n   string child_frame_id\ngeometry_msgs/Transform transform\n   geometry_msgs/Vector3 translation\n     float64 x\n     float64 y\n     float64 z\n   geometry_msgs/Quaternion rotation\n     float64 x\n     float64 y\n     float64 z\n     float64 w\n\n</code></pre></div>\n<p>is then transformed into Cassandra format:</p>\n<div class=""highlight""><pre><code class=""language-plain"" data-lang=""plain"">.header.seq : INT_TYPE\n.header.stamp : DATE_TYPE\n.header.frame_id : UTF8_TYPE\n.transform.translation.x : DOUBLE_TYPE\n.transform.translation.y : DOUBLE_TYPE\n.transform.translation.z : DOUBLE_TYPE\n.transform.rotation.x : DOUBLE_TYPE\n.transform.rotation.y : DOUBLE_TYPE\n.transform.rotation.z : DOUBLE_TYPE\n.transform.rotation.w : DOUBLE_TYPE\n\n</code></pre></div>\n<p>which allows to query and analyze your data afterwards, by using CQL (as\ndescribed within the next section).</p>\n\n<p>How does it work? If you take a look into cassandra_ros/lib ... you will see a\ncouple of files in the form of CassandraTopic_\'format\'.py, which are all\ndescendants of CassandraTopic_.py. And each of them overwrites the methods:</p>\n\n<p><code>getColumnValidationClasses</code>: as the name suggests, is used to define the\ncolumn validation classes of the column-family * encode is used to encode the\nROS message into a Cassandra storable format * and decode translates it back,\nfrom Cassandra to ROS.</p>\n\n<p>As you could see so far, you only work with the single class of CassandraTopic.\nIn fact, this class inherits those methods, required for encoding and decoding\nof messages, and only those of the required parent class. If you are seeking for\nmore information, have a look at the follwing link:\n<a href=""http://www.aizac.info/a-solution-to-the-diamond-problem-in-python/"">http://www.aizac.info/a-solution-to-the-diamond-problem-in-python/</a></p>\n\n<p>So you are free to define an own format for conversion.</p>\n\n<h2 id=""cql"">CQL</h2>\n\n<p>If you want to analyze your data by using CQL, the CassandraQueryLanguage, you\nwill have to generate at first secondary indexes. Because this might be\nexpensive and not required for every part of a message, this has to be done\nmanually, as follows:</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""c""># this will automatically generate the appropriate index</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">createIndex</span><span class=""p"">(</span><span class=""n"">topic</span><span class=""p"">,</span> <span class=""s"">\'.data\'</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>For an automatic translation of topics, use the following method, this will\nreplace topicnames with their hash-value.</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""c""># will return everything</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">exequteCQL</span><span class=""p"">(</span><span class=""s"">\'SELECT * FROM ""test_topic""\'</span><span class=""p"">)</span>\n\n<span class=""c""># only a list that contains all keys</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">exequteCQL</span><span class=""p"">(</span><span class=""s"">\'SELECT KEY FROM ""test_topic""\'</span><span class=""p"">)</span>\n\n<span class=""c""># a list with all elements stored in .data</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">exequteCQL</span><span class=""p"">(</span><span class=""s"">\'SELECT "".data"" FROM ""test_topic""\'</span><span class=""p"">)</span>\n\n<span class=""c""># will return a list of keys</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">exequteCQL</span><span class=""p"">(</span><span class=""s"">\'SELECT KEY FROM ""test_topic"" WHERE "".data""=</span><span class=""se"">\\\'</span><span class=""s"">test 12</span><span class=""se"">\\\'</span><span class=""s"">;\'</span><span class=""p"">)</span>\n\n<span class=""c""># if you want to get the whole messages bag, this requires 2 steps</span>\n<span class=""c""># first of all store the keys of your statements, let us take the last</span>\n<span class=""n"">keys</span><span class=""o"">=</span><span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">exequteCQL</span><span class=""p"">(</span><span class=""s"">\'SELECT KEY FROM ""test_topic"" WHERE "".data""=</span><span class=""se"">\\\'</span><span class=""s"">test 12</span><span class=""se"">\\\'</span><span class=""s"">;\'</span><span class=""p"">)</span>\n<span class=""n"">messages</span> <span class=""o"">=</span> <span class=""n"">topicContainer</span><span class=""o"">.</span><span class=""n"">getData</span><span class=""p"">(</span><span class=""n"">keys</span><span class=""p"">)</span>\n\n<span class=""c""># remove your indexes as follows</span>\n<span class=""n"">rosCas</span><span class=""o"">.</span><span class=""n"">removeIndex</span><span class=""p"">(</span><span class=""n"">topic</span><span class=""p"">,</span> <span class=""s"">\'.data\'</span><span class=""p"">)</span>\n\n</code></pre></div>\n<p>For more information on CQL, check the following website:\n<a href=""http://www.datastax.com/docs/1.0/references/cql/index"">http://www.datastax.com/docs/1.0/references/cql/index</a></p>\n\n<h1 id=""cassandrabag"">CassandraBag</h1>\n\n<p>If you already checked, if your package is working, than you already had used\ncassandraBag. This is a simple service, which stores and replays messages\nsimilar to rosbag. Simply start the application with:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>roslaunch cassandra_ros cassandraBag.launch\n\n</code></pre></div>\n<p>You can also change some of the parameters in the launch-file. Storing and\nreplaying or deleting topics requires to use the following command-line tool:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun cassandra_ros cassandraBag-cli.py\n\n</code></pre></div>\n<p>To get a list of all currently stored topics, use the parameter \'list\':</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun  cassandra_ros cassandraBag-cli.py list\n\n</code></pre></div>\n<p>Use record to store online messages, while option -f denotes the storage-format\nrosrun cassandra_ros cassandraBag-cli.py record -f string start topic and use\nrecord stop to finish recoring</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun cassandra_ros cassandraBag-cli.py record stop topic\n\n</code></pre></div>\n<p>You can bag as many topics as Cassandra supports in parallel and stop and run\nrecording dynamically</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun cassandra_ros cassandraBag-cli.py play start /usb_cam/image_raw/compressed\n\n</code></pre></div>\n<p>and if you want to delete some topics use delete, for more help, just run</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun cassandra_ros cassandraBag-cli.py -h\n\n</code></pre></div>\n<p>or something like, which will support you with some command-line options ...</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun cassandra_ros cassandraBag-cli.py play\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
rsv_balance,http://rosindex.github.io/r/rsv_balance/,jade,"rsv_balance,rsv_balance_description,rsv_balance_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rsv_balance"">rsv_balance</h1>\n\n<p>Common packages for RoboSavvy\'s balancing platform</p>\n\n<hr>\n\n<h2 id=""packages"">Packages</h2>\n\n<ul>\n<li><code>rsv_balance_description</code></li>\n</ul>\n\n<p>Robot URDF and meshes.</p>\n\n<ul>\n<li><code>rsv_balance_msgs</code></li>\n</ul>\n\n<p>Definition of:\n  * Service messages\n  * Topic messages</p>\n</div>\n\n            \n          </div>'"
open_industrial_ros_controllers,http://rosindex.github.io/r/open_industrial_ros_controllers/,"hydro,indigo","open_controllers_interface,open_industrial_ros_controllers","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""open-industrial-ros-controllers"">Open Industrial ROS Controllers</h1>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""open-industrial-ros-controllers"">Open Industrial ROS Controllers <a href=""https://travis-ci.org/start-jsk/open_industrial_ros_controllers""><img src=""https://travis-ci.org/start-jsk/open_industrial_ros_controllers.svg?branch=indigo-devel"" alt=""Build Status""></a>\n</h1>\n</div>\n\n            \n          </div>'"
iiwa,http://rosindex.github.io/r/iiwa/,hydro,iiwa,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lama_laser,http://rosindex.github.io/r/lama_laser/,indigo,"lj_laser,lj_laser_heading,nj_laser,nj_oa_laser,nlj_laser","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
termcolor,http://rosindex.github.io/r/termcolor/,indigo,termcolor,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">                          //  termcolor  //\n\n               a library for printing colored messages\n\n                          by Igor Kalnitsky\n\n\n    ~ What is termcolor?\n\n      Termcolor is a header-only C++ library for printing colored\n      messages to the terminal. Written just for fun with a help of\n      the Force.\n\n\n    ~ How to use?\n\n      Add `termcolor.hpp` to the project and use provided stream\n      manimulators from the `termcolor` namespace.\n\n      For example:\n\n          std::cout &lt;&lt; termcolor::red &lt;&lt; termcolor::on_blue\n                    &lt;&lt; ""Red text on blue background!""\n                    &lt;&lt; termcolor::reset &lt;&lt; std::endl;\n\n      Please, don\'t forgot to reset termcolor\'s settings on the stream!\n\n\n    ~ What terminals are supported?\n\n      Termcolor supports ANSI color formatting. This formatting is\n      supported by most popular terminals on Linux, Unix and Mac OS.\n\n\n    ~ Where the docs?\n\n      http://termcolor.readthedocs.org/\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rsv_balance_desktop,http://rosindex.github.io/r/rsv_balance_desktop/,jade,"rsv_balance_desktop,rsv_balance_rqt,rsv_balance_viz","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rsv_balance_desktop"">rsv_balance_desktop</h1>\n\n<p>Desktop packages for RoboSavvy\'s balancing platform</p>\n\n<hr>\n\n<h2 id=""packages"">Packages</h2>\n\n<ul>\n<li><code>rsv_balance_rqt</code></li>\n</ul>\n\n<p>RQT plugin for selecting between operating modes.</p>\n\n<ul>\n<li><code>rsv_balance_viz</code></li>\n</ul>\n\n<p>Launch files for RVIZ URDF model and robot visualization.</p>\n\n<hr>\n\n<h3 id=""todo-further-improvements"">ToDo: Further improvements</h3>\n\n<ol>\n<li>More complete dashboard for displaying battery levels, other diagnostics and selecting self-balancing behavior.</li>\n</ol>\n</div>\n\n            \n          </div>'"
fovis,http://rosindex.github.io/r/fovis/,"hydro,groovy,fuerte,indigo","fovis,fovis_ros,libfovis","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fovis"">fovis</h1>\n\n<p>ROS Stack containing a wrapper for fovis, a visual odometry library.\n<a href=""http://www.ros.org/wiki/fovis"">http://www.ros.org/wiki/fovis</a> for the list of contained packages.</p>\n</div>\n\n            \n          </div>'"
libfovis,http://rosindex.github.io/r/libfovis/,"hydro,groovy,indigo",libfovis,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This software is constructed according to the Pods software policies and\ntemplates.  The policies and templates can be found at:\n\n  http://sourceforge.net/projects/pods\n\nAbout this project\n==================\n\nName:         libfovis\nAuthors:      Albert Huang &lt;ashuang@gmail.com&gt;\n              Abraham Bachrach &lt;abachrach@gmail.com&gt;\n              Daniel Maturana &lt;dimatura@gmail.com&gt;\n\nSummary:      Visual odometry with a depth camera (e.g., Kinect/Primesense) or\n              stereo camera.\n\nRequirements:\n\n  CMake       (http://www.cmake.org)\n  Eigen 3     (http://eigen.tuxfamily.org)\n  Intel SSE2\n\n  Fovis was developed on Ubuntu, but may work with other platforms.\n\n\nBuild Instructions\n==================\n\nFor system-wide installation:\n\n  $ mkdir build\n  $ cd build\n  $ cmake ..\n  $ make\n  $ sudo make install\n  $ sudo ldconfig\n\n  This usually installs Fovis to /usr/local or something like that.\n\nFor use in the source directory:\n\n  $ mkdir build\n  $ make\n\n\nDocumentation\n=============\n\n  Fovis is documented using Doxygen (http://www.doxygen.org).  To build the documentation:\n\n  $ cd doc\n  $ doxygen\n\n  Following that, open up doc/html/index.html in your web browser.\n\n\nLicense\n=======\n\n  fovis is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License version 2 as\n  published by the Free Software Foundation.\n\n  fovis is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with fovis.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This software is constructed according to the Pods software policies and\ntemplates.  The policies and templates can be found at:\n\n  http://sourceforge.net/projects/pods\n\nAbout this project\n==================\n\nName:         libfovis\nAuthors:      Albert Huang &lt;ashuang@gmail.com&gt;\n              Abraham Bachrach &lt;abachrach@gmail.com&gt;\n              Daniel Maturana &lt;dimatura@gmail.com&gt;\n\nSummary:      Visual odometry with a depth camera (e.g., Kinect/Primesense) or\n              stereo camera.\n\nRequirements:\n\n  CMake       (http://www.cmake.org)\n  Eigen 3     (http://eigen.tuxfamily.org)\n\n  Fovis was developed on Ubuntu, but may work with other platforms.\n\n\nBuild Instructions\n==================\n\nFor system-wide installation:\n\n  $ mkdir build\n  $ cd build\n  $ cmake ..\n  $ make\n  $ sudo make install\n  $ sudo ldconfig\n\n  This usually installs Fovis to /usr/local or something like that.\n\nFor use in the source directory:\n\n  $ mkdir build\n  $ make\n\n\nIntel SSE\n---------\n  By default, Fovis is configured to use Intel SSE2 and SSE3 instructions.  You\n  can disable this option (e.g., if you\'re targeting a platform without those\n  instructions) by using the CMake option USE_SSE:\n\n  $ cd build\n  $ cmake .. -DUSE_SSE=OFF\n  $ make\n\n\nDocumentation\n=============\n\n  Fovis is documented using Doxygen (http://www.doxygen.org).  To build the documentation:\n\n  $ cd doc\n  $ doxygen\n\n  Following that, open up doc/html/index.html in your web browser.\n\n\nLicense\n=======\n\n  fovis is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License version 2 as\n  published by the Free Software Foundation.\n\n  fovis is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with fovis.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
camera1394stereo,http://rosindex.github.io/r/camera1394stereo/,"hydro,groovy,fuerte,indigo",camera1394stereo,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""camera1394stereo"">camera1394stereo</h1>\n\n<p>ROS package containing a driver for Firewire stereo cameras. See <a href=""http://www.ros.org/wiki/camera1394stereo"">http://www.ros.org/wiki/camera1394stereo</a> for more information.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mtig_driver,http://rosindex.github.io/r/mtig_driver/,indigo,mtig_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nHow to use:\n\n  1) Download the MT Software Suite and install it on a Windows machine (you may skip this step and use default sensor configuration), then download the MT SDK for Linux and install it on a Linux machine (this should be the machine that ROS is installed on).\n\nHere is the software website: http://www.xsens.com/en/mt-software-suite\n\n  2) Follow the instructions in the MT SDK for Linux to install the software and make sure the examples run correctly with the sensor. Here is a summary of the installation procedure.\n\n    (a) Unpack the MT SDK.\n    (b) Run installer: ./mtsdk_linux_4.3.sh\n    (c) Examples here: /usr/local/xsens/examples/mtsdk\n\n  (3) Connect the sensor to the Windows machine and open the MT Manager. Click the button on top of the screen for \xe2\x80\x9coutput configuration options\xe2\x80\x9d, make sure \xe2\x80\x9cTurn Rate\xe2\x80\x9d and \xe2\x80\x9cAcceleration\xe2\x80\x9d are checked. You can also change frequency on the same page. If you skip this step, the sensor is configured to give orientation only by default.\n\n  (4) Clone this driver from github to a ROS workspace. Go to the cloned folder and find the \xe2\x80\x9csrc/serialkey.h\xe2\x80\x9d file, put your license number in it and use \xe2\x80\x9crosmake\xe2\x80\x9d to build it.\n\n  (5) You may need to install the kernel available at https://github.com/xsens/xsens_mt\n  (6) Verify if the usb device was recognized by using the following command:\n\n   &gt;&gt; ls /dev/ttyUSB0\n\n    you may need to replace the 0 for another number if there are more usb devices in your computer\n\n  (7)Once you found the MTi-G-700 address in /dev, you have to enable executioon using the command\n   sudo chmod 777 /dev/ttyUSB0\n   here, again, the 0 may change depending on your setup\n\n  (5) Roslaunch the \xe2\x80\x9creceive_xsens.launch\xe2\x80\x9d file in /launch folder. The driver will publish sensor_msgs/Imu typed messages named /imu/data.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
people,http://rosindex.github.io/r/people/,"hydro,fuerte,electric,groovy,diamondback,jade,indigo","face_detector,leg_detector,people,people_msgs,people_tracking_filter,people_velocity_tracker,social_navigation_layers","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""people"">People</h1>\n\n<p>Algorithms related to detecting and tracking people using various robot\nsensors.</p>\n\n<h2 id=""documentation"">Documentation</h2>\n\n<p><a href=""http://ros.org/wiki/people"">http://ros.org/wiki/people</a></p>\n\n<h2 id=""requirements-amp-building"">Requirements &amp; building</h2>\n\n<p>This project depends on ROS and can be built using catkin.</p>\n\n<h2 id=""branches"">Branches</h2>\n\n<p>fuerte_trunk - Most recent version for Fuerte. This version is not\nmaintained.</p>\n\n<p>groovy-devel - Most recent version for Groovy. Bug fixes only.</p>\n\n<p>hydro-devel - Most recent version for Hydro. Bug fixes and stable new\nfeatures.</p>\n\n<p>master - Really new features, may not be stable. Currently developing\nagainst Hydro.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""people"">People</h1>\n\n<p>Algorithms related to detecting and tracking people using various robot\nsensors.</p>\n\n<h2 id=""documentation"">Documentation</h2>\n\n<p><a href=""http://ros.org/wiki/people"">http://ros.org/wiki/people</a></p>\n\n<h2 id=""requirements-amp-building"">Requirements &amp; building</h2>\n\n<p>This project depends on ROS and can be built using catkin.</p>\n\n<h2 id=""branches"">Branches</h2>\n\n<p>fuerte_trunk - Most recent version for Fuerte. This version is not\nmaintained.</p>\n\n<p>groovy-devel - Most recent version for Groovy. Bug fixes only.</p>\n\n<p>groovy - Catkinized version for Groovy - Released as deb.</p>\n\n<p>hydro-devel - Most recent version for Hydro. Bug fixes only.</p>\n\n<p>indigo-devel -\n<a href=""https://travis-ci.org/wg-perception/people""><img src=""https://travis-ci.org/wg-perception/people.svg"" alt=""ci\\_indigo""></a>\nMost recent version for Indigo. Bug fixes and stable new features.</p>\n\n<p>master - Really new features, may not be stable. Currently developing\nagainst Hydro.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""people"">People</h1>\n\n<p>Algorithms related to detecting and tracking people using various robot\nsensors.</p>\n\n<h2 id=""documentation"">Documentation</h2>\n\n<p><a href=""http://ros.org/wiki/people"">http://ros.org/wiki/people</a></p>\n\n<h2 id=""requirements-amp-building"">Requirements &amp; building</h2>\n\n<p>This project depends on ROS and can be built using rosmake.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""people"">People</h1>\n\n<p>Algorithms related to detecting and tracking people using various robot\nsensors.</p>\n\n<h2 id=""documentation"">Documentation</h2>\n\n<p><a href=""http://ros.org/wiki/people"">http://ros.org/wiki/people</a></p>\n\n<h2 id=""requirements-amp-building"">Requirements &amp; building</h2>\n\n<p>This project depends on ROS and can be built using catkin.</p>\n\n<h2 id=""branches"">Branches</h2>\n\n<p>fuerte_trunk - Most recent version for Fuerte. This version is not\nmaintained.</p>\n\n<p>groovy-devel - Most recent version for Groovy. Bug fixes only.</p>\n\n<p>groovy - Catkinized version for Groovy - Released as deb.</p>\n\n<p>hydro-devel - Most recent version for Hydro. Bug fixes and stable new\nfeatures.</p>\n\n<p>master - Really new features, may not be stable. Currently developing\nagainst Hydro.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
maggie_devices_msgs,http://rosindex.github.io/r/maggie_devices_msgs/,"hydro,jade,indigo","maggie_devices_msgs,maggie_eyelids_msgs,maggie_ir_controller_msgs,maggie_motor_controller_msgs,maggie_rfid_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""maggie_devices_msgs"">maggie_devices_msgs</h1>\n\n<p>GitHub repository for the messages of the devices for the Social Robot Maggie.</p>\n\n<h2 id=""content"">CONTENT</h2>\n\n<ul>\n<li>\n<code>maggie_eyelids_msgs</code>: a ROS package with the messages and services to communicate with the servomotors to move the eyelids.</li>\n<li>\n<code>maggie_ir_controller_msgs</code>: a ROS package with the messages and services to communicate with the IR controller device.</li>\n<li>\n<code>maggie_devices_msgs</code>: a ROS metapackage.</li>\n<li>\n<code>maggie_motor_controller_msgs</code>: a ROS package with the messages and services to communicate with the motors for the neck and the arms.</li>\n<li>\n<code>maggie_rfid_msgs</code>: a ROS package with the messages and services to communicate with the RFID reader.</li>\n</ul>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The license of the packages is custom LASR-UC3M (Licencia Acad\xc3\xa9mica Social Robotics Lab - UC3M), an open, non-commercial license which enables you to download, modify and distribute the code as long as you distribute the sources.  </p>\n\n<h2 id=""acknowledgements"">ACKNOWLEDGEMENTS</h2>\n\n<p><img src=""http://ieee.uc3m.es/images/thumb/b/b6/Roboticslab_text_new.jpg/128px-Roboticslab_text_new.jpg"" alt=""RoboticsLab"">\n<img src=""http://ieee.uc3m.es/images/thumb/6/6b/Logo_uc3m_letras.png/256px-Logo_uc3m_letras.png"" alt=""UC3M""></p>\n</div>\n\n            \n          </div>'"
brics_actuator,http://rosindex.github.io/r/brics_actuator/,indigo,brics_actuator,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sr_common_drivers,http://rosindex.github.io/r/sr_common_drivers/,"hydro,indigo","sr_common_drivers,sr_communications","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""sr_common_drivers"">sr_common_drivers</h1>\n\n<p>GitHub repository for the common drivers for the robots of the Social Robots Group.</p>\n\n<h2 id=""content"">CONTENT</h2>\n\n<ul>\n<li>\n<code>sr_communications</code>: a ROS package with the communications with the drivers.</li>\n<li>\n<code>sr_common_drivers</code>: a ROS metapackage.</li>\n</ul>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The license of the packages is custom LASR-UC3M (Licencia Acad\xc3\xa9mica Social Robotics Lab - UC3M), an open, non-commercial license which enables you to download, modify and distribute the code as long as you distribute the sources.  </p>\n\n<h2 id=""acknowledgements"">ACKNOWLEDGEMENTS</h2>\n\n<p><img src=""http://ieee.uc3m.es/images/thumb/b/b6/Roboticslab_text_new.jpg/128px-Roboticslab_text_new.jpg"" alt=""RoboticsLab"">\n<img src=""http://ieee.uc3m.es/images/thumb/6/6b/Logo_uc3m_letras.png/256px-Logo_uc3m_letras.png"" alt=""UC3M""></p>\n</div>\n\n            \n          </div>'"
cv_camera,http://rosindex.github.io/r/cv_camera/,"hydro,jade,indigo",cv_camera,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-opencv-camera-driver"">ROS OpenCV camera driver</h1>\n\n<p>It is very easy to capture video device if we use cv::VideoCapture of OpenCV.</p>\n\n<h2 id=""cv_camera_node"">cv_camera_node</h2>\n\n<p>This node uses <a href=""http://wiki.ros.org/camera_info_manager"">camera_info_manager</a> for dealing with camera_info.\nIf no calibration data is set, it has dummy values except for width and height.</p>\n\n<h3 id=""publish"">Publish</h3>\n\n<ul>\n<li>~image_raw (sensor_msgs/Image)</li>\n<li>~camera_info (sensor_msgs/CameraInfo)</li>\n</ul>\n\n<h3 id=""service"">Service</h3>\n\n<ul>\n<li>~set_camera_info (sensor_msgs/SetCameraInfo)</li>\n</ul>\n\n<h3 id=""parameters"">Parameters</h3>\n\n<ul>\n<li>~rate (double: default 30.0) publish rate [Hz].</li>\n<li>~device_id (int: default 0) capture device id.</li>\n<li>~frame_id (string: default ""camera"") frame_id of message header.</li>\n<li>~image_width (int) try to set capture image width.</li>\n<li>~image_height (int) try to set capture image height.</li>\n<li>~camera_info_url (string) url of camera info yaml.</li>\n<li>~file (string: default """") if not """" then use movie file instead of device.</li>\n</ul>\n\n<p>supports CV_CAP_PROP_*, by below params.</p>\n\n<ul>\n<li>~cv_cap_prop_pos_msec (double)</li>\n<li>~cv_cap_prop_pos_avi_ratio (double)</li>\n<li>~cv_cap_prop_frame_width (double)</li>\n<li>~cv_cap_prop_frame_height (double)</li>\n<li>~cv_cap_prop_fps (double)</li>\n<li>~cv_cap_prop_fourcc (double)</li>\n<li>~cv_cap_prop_frame_count (double)</li>\n<li>~cv_cap_prop_format (double)</li>\n<li>~cv_cap_prop_mode (double)</li>\n<li>~cv_cap_prop_brightness (double)</li>\n<li>~cv_cap_prop_contrast (double)</li>\n<li>~cv_cap_prop_saturation (double)</li>\n<li>~cv_cap_prop_hue (double)</li>\n<li>~cv_cap_prop_gain (double)</li>\n<li>~cv_cap_prop_exposure (double)</li>\n<li>~cv_cap_prop_convert_rgb (double)</li>\n<li>~cv_cap_prop_rectification (double)</li>\n<li>~cv_cap_prop_iso_speed (double)</li>\n</ul>\n\n<p>And supports any props. Thanks to Hernan Badino!</p>\n\n<ul>\n<li>~property_$(i)<em>code (int) : set this code property using ~property</em>$(i)_value, $(i) must start from 0.</li>\n<li>~property_$(i)<em>value (double) : the value to be set to ~property</em>$(i)_code</li>\n</ul>\n\n<p>If you want to set the property which code is 404 as 1,</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun cv_camera cv_camera_node _property_0_code:=404 _property_0_code:=1\n</code></pre></div>\n<p>If you want to set more, use ~property_1_code and ~property_1_code.</p>\n\n<h2 id=""nodelet"">Nodelet</h2>\n\n<p>This node works as nodelet (cv_camera/CvCameraNodelet).</p>\n</div>\n\n            \n          </div>'"
maggie_skills_msgs,http://rosindex.github.io/r/maggie_skills_msgs/,"hydro,jade,indigo","basic_states_skill_msgs,batteries_skill_msgs,maggie_skills_msgs,touch_skill_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""maggie_skills_msgs"">maggie_skills_msgs</h1>\n\n<p>GitHub repository for the messages of the skills for the Social Robot Maggie.</p>\n\n<h2 id=""content"">CONTENT</h2>\n\n<ul>\n<li>\n<code>basic_states_skill_msgs</code>: a ROS package with the messages and services to communicate with the labjack device.</li>\n<li>\n<code>batteries_skill_msgs</code>: a ROS package with the messages and services to communicate with the labjack device.</li>\n<li>\n<code>maggie_skills_msgs</code>: a ROS metapackage.</li>\n<li>\n<code>touch_skill_msgs</code>: a ROS package with the messages and services to communicate with the labjack device.</li>\n</ul>\n\n<h2 id=""license"">LICENSE</h2>\n\n<p>The license of the packages is custom LASR-UC3M (Licencia Acad\xc3\xa9mica Social Robotics Lab - UC3M), an open, non-commercial license which enables you to download, modify and distribute the code as long as you distribute the sources.  </p>\n\n<h2 id=""acknowledgements"">ACKNOWLEDGEMENTS</h2>\n\n<p><img src=""http://ieee.uc3m.es/images/thumb/b/b6/Roboticslab_text_new.jpg/128px-Roboticslab_text_new.jpg"" alt=""RoboticsLab"">\n<img src=""http://ieee.uc3m.es/images/thumb/6/6b/Logo_uc3m_letras.png/256px-Logo_uc3m_letras.png"" alt=""UC3M""></p>\n</div>\n\n            \n          </div>'"
reemc_robot,http://rosindex.github.io/r/reemc_robot/,hydro,"reemc_bringup,reemc_controller_configuration,reemc_description,reemc_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""reemc_robot"">reemc_robot</h1>\n\n<p>REEM-C-specific components that are used in bringing up a robot.</p>\n</div>\n\n            \n          </div>'"
face_recognition,http://rosindex.github.io/r/face_recognition/,indigo,face_recognition,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h3 id=""copyright-2012-2014-pouyan-ziafati-university-of-luxembourg"">Copyright 2012-2014 Pouyan Ziafati, University of Luxembourg</h3>\n\n<blockquote>\n<ul>\n<li>All image processing and face recognition functionalities are provided by utilizing the Shervin Emami\'s c++ source code for face recognition (<a href=""http://www.shervinemami.info/faceRecognition.html"">http://www.shervinemami.info/faceRecognition.html</a>).\n\n<ul>\n<li>License: Attribution-NonCommercial 3.0 Unported (<a href=""http://creativecommons.org/licenses/by-nc/3.0/"">http://creativecommons.org/licenses/by-nc/3.0/</a>) </li>\n</ul>\n</li>\n</ul>\n</blockquote>\n\n<h2 id=""welcome-to-face_recognition-package-for-ros"">Welcome to face_recognition package for ROS</h2>\n\n<p>The <strong>face_recognition</strong> ROS package provides an simple actionlib server interface for performing different face recognition functionalities in video stream.</p>\n\n<h2 id=""instalation"">Instalation</h2>\n\n<p>This instalation process is for <strong>catkin</strong> (ROS Groovy or newer version)\nAssuming that your catkin workspace is under <strong>~/catkin_ws</strong>, if not replace <strong>~/catkin_ws</strong> with appropriate location. It also assumes you\'re running Bash shell, if you\'re running Zsh, source appropriate <strong>setup.zsh</strong> file.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\ngit clone https://github.com/procrob/procrob_functional.git --branch catkin\ncd ~/catkin_ws\ncatkin_make\nsource ~/catkin_ws/devel/setup.bash\n\n</code></pre></div>\n<h3 id=""facerecognitiongoal"">FaceRecognitionGoal</h3>\n\n<p>This message includes 2 fields: </p>\n\n<ul>\n<li>\n<em>int</em> <strong>order_id</strong>\n</li>\n<li>\n<em>string</em> <strong>order_argument</strong>\n</li>\n</ul>\n\n<h3 id=""the-face-recognition-actionlib-server-accepts-4-different-goals"">The face recognition actionlib server accepts 4 different goals:</h3>\n\n<ul>\n<li>\n<p><strong>order_id</strong> = <strong>0</strong></p>\n\n<ul>\n<li>\n<strong>(Recognize Once)</strong> Goal is to acknowledge the first face recognized in the video stream. When the first face is recognized with a confidence value higher than the desirable confidence threshold, the name of the person and the confidence value are sent back to the client as result.</li>\n</ul>\n</li>\n<li>\n<p><strong>order_id</strong> = <strong>1</strong></p>\n\n<ul>\n<li>\n<strong>(Recognize Continuously)</strong> Goal is to continuously recognize faces in the video stream. Every face recognized with confidence value higher than the desirable confidence threshold and its confidence value are sent back to the client as feedback. This goal is persuaded for infinite time until it is canceled or preempted by another goal.</li>\n</ul>\n</li>\n<li>\n<p><strong>order_id</strong> = <strong>2</strong> <strong>and</strong> <strong>order_argument</strong> = <strong>person_name</strong></p>\n\n<ul>\n<li>\n<strong>(Add face images)</strong> Goal is to acquire training images for a NEW person. The video stream is processed for detecting a face which is saved and used as a training image  for the new person. This process is continued until the desired number of training images for the new person is acquired. The name of the new person is provided as ""order_argument""</li>\n</ul>\n</li>\n<li>\n<p><strong>order_id = 3</strong></p>\n\n<ul>\n<li>\n<strong>(Train)</strong> The database is (re)trained from the training images</li>\n</ul>\n</li>\n<li>\n<p><strong>order_id = 4</strong></p>\n\n<ul>\n<li>\n<strong>(Exit)</strong> The program exits.</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=""subscribed-topic"">Subscribed Topic:</h3>\n\n<ul>\n<li>\n<strong>/camera/image_raw</strong>  -  video stream (standard ROS image transport)</li>\n</ul>\n\n<h2 id=""parameters"">Parameters:</h2>\n\n<ul>\n<li>\n<p><strong>confidence_value</strong> (<em>double</em>, default = 0.88) </p>\n\n<ul>\n<li>a face recognized with confidence value higher than the <strong>confidence_value</strong> threshold is accepted as valid.</li>\n</ul>\n</li>\n<li>\n<p><strong>show_screen_flag</strong> (<em>boolean</em>, default = true)</p>\n\n<ul>\n<li>if output screen is shown</li>\n</ul>\n</li>\n<li>\n<p><strong>add_face_number</strong> (int, default = 25)</p>\n\n<ul>\n<li>a parameter for the <strong>add_face_images</strong> goal which determines the number of training images for a new person to be acquired from the video stream </li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""how-the-face-recognition-works"">How The Face Recognition Works:</h2>\n\n<p>Details in <a href=""http://www.shervinemami.info/faceRecognition.html"">http://www.shervinemami.info/faceRecognition.html</a></p>\n\n<p>The name of persons and the images of their faces to train from are stored in the <strong>train.txt</strong> file.\nThis file should be in the same directory as where you execute the program. See the example train.txt file for the desirable format of the <strong>train.txt</strong> (Note: the person numbers start from 1, spaces or special characters are not allowed in persons\' names). \nThe program trains from the <strong>train.txt</strong> file and stores the eigenfaces data in <strong>facedata.xml</strong> file.</p>\n\n<p>When the <strong>face_recognition</strong> actionlib server is executed (Fserver), the program first tries to load data from the <strong>facedata.xml</strong> file if exists, if not it will try to learn from training images stored in <strong>train.txt</strong> if any. You can always add training data directly from the video stream using the <strong>add_face_images</strong> goal (<strong>order_id</strong> = 2).\nNote: when program retrains (<strong>order_id</strong> = 3), the content of facedata.xml is disregarded and the program trains only based on the train.txt file.</p>\n\n<h2 id=""tutorial"">Tutorial:</h2>\n\n<p>For demonstration purposes an actionlib client example for the face_recognition simple actionlib server has been provided. \nThe client subscribes to <strong>face_recognition/FRClientGoal</strong> messages. Each FRClientGoal message contains an <strong>order_id</strong> and an <strong>order_argument</strong> which specify a goal to be executed by the <strong>face_recognition</strong> server. After receiving a message, the client sends the corresponding goal to the server. By registering relevant call back functions, the client receives feedback and result information from the execution of goals in the server and prints such information on the terminal. </p>\n\n<ul>\n<li>Launch terminal\n\n<ul>\n<li>run <code>roscore</code>\n</li>\n<li>In separate terminal publish a video stream on topic <strong>/camera/image_raw</strong>.\n\n<ul>\n<li>For example you can use <strong>usb_cam</strong> to publish images from your web cam as follows:</li>\n<li>Install <a href=""http://wiki.ros.org/usb_cam"">usb_cam</a> package</li>\n<li>Run <code>rosrun usb_cam usb_cam_node usb_cam_node/image_raw:=camera/image_raw _image_height:=&lt;usb_cam_height&gt; _image_width:=&lt;usb_cam_width&gt;</code>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>In separate terminals run the face recognition server and client as follows:\n\n<ul>\n<li><code>rosrun face_recognition Fserver</code></li>\n<li><code>rosrun face_recognition Fclient</code></li>\n</ul>\n</li>\n<li>In another terminal publish messages on topic <strong>/fr_order</strong> to test different face recognition functionalities as follows: (notice the info which are printed on the client terminal after each command) \n\n<ul>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 2 ""your_name""</code>\n\n<ul>\n<li>to acquire training images for your face: you should try to appear in the video stream!</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 3 ""none""</code>\n\n<ul>\n<li>to retrain and update the database, so that you can be recognized </li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 1 ""none""</code>\n\n<ul>\n<li>to recognize faces continuously. This would not stop until you preempt or cancel the goal. So lets preempt it by sending the next goal.</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 2 ""your\\_friend\'s\\_name""</code><br>\n\n<ul>\n<li>add training images for a new person</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 0 ""none""</code>\n\n<ul>\n<li>recognize once</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 1 ""none""</code>\n\n<ul>\n<li>recognize continuous</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 4 ""none""</code><br>\n\n<ul>\n<li>exit</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
open_street_map,http://rosindex.github.io/r/open_street_map/,"hydro,fuerte,electric,groovy,indigo","osm_cartography,route_network,test_osm","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p><a href=""http://www.ros.org/wiki/open_street_map"">Open_street_map</a> is a\nrepository of <a href=""http://www.ros.org"">ROS</a> packages for working with <a href=""http://openstreetmap.org"">Open\nStreet Map</a> information.</p>\n\n<p><strong>Warning</strong>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">The master branch normally contains code being tested for the next\nROS release.  It will not always work with all previous releases.\nSometimes, it may not work at all.\n</code></pre></div>\n<p>The current master works with Hydro and Indigo. To build for Fuerte or\nGroovy, check out the rosbuild branch instead of master.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tinkerforge_laser_transform,http://rosindex.github.io/r/tinkerforge_laser_transform/,indigo,"Multicar_moveit_config,multicar_hydraulic,tinkerforge_laser_transform,tinycan","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><strong>Table of Contents</strong>  <em>generated with <a href=""http://doctoc.herokuapp.com/"">DocToc</a></em></p>\n\n<ul>\n<li><a href=""https://github.com/gus484/ros#installation-des-ros-systems-version-indigo-f%C3%BCr-ubuntu-1404-lts"">Installation des ROS-Systems Version Indigo f\xc3\xbcr Ubuntu 14.04 LTS</a></li>\n<li><a href=""https://github.com/gus484/ros#einrichten-des-workspace"">Einrichten des Workspace</a></li>\n<li><a href=""https://github.com/gus484/ros#download-und-installation-des-sick-ld-mrs-treibers"">Download und Installation des SICK LD-MRS Treibers</a></li>\n<li><a href=""https://github.com/gus484/ros#download-und-installation-des-imu-plugins-f%C3%BCr-rviz"">Download und Installation des IMU Plugins f\xc3\xbcr Rviz</a></li>\n<li><a href=""https://github.com/gus484/ros#download-und-installation-der-projekt-pakete"">Download und Installation der Projekt-Pakete</a></li>\n<li><a href=""https://github.com/gus484/ros#installation-von-octomap-server"">Installation von Octomap Server</a></li>\n<li><a href=""https://github.com/gus484/ros#pfade-der-multicar-konfiguration-anpassen"">Pfade der Multicar Konfiguration anpassen</a></li>\n<li><a href=""https://github.com/gus484/ros#messung-starten"">Messung starten</a></li>\n<li><a href=""https://github.com/gus484/ros#laserscanner-verbinden"">Laserscanner verbinden</a></li>\n<li><a href=""https://github.com/gus484/ros#tinkerforge-sensoren"">Tinkerforge Sensoren</a></li>\n<li><a href=""https://github.com/gus484/ros#anschauen-was-abgeht"">Anschauen was abgeht</a></li>\n<li><a href=""https://github.com/gus484/ros#aufzeichnung-und-wiedergabe-von-messungen"">Aufzeichnung und Wiedergabe von Messungen</a></li>\n<li><a href=""https://github.com/gus484/ros#hydraulik-steuerung"">Hydraulik-Steuerung</a></li>\n<li>\n<a href=""https://github.com/gus484/ros#speichern-und-laden-von-planungszust%C3%A4nden-auslegerpositionen"">Speichern und laden von Planungszust\xc3\xa4nden (Auslegerpositionen)</a>)</li>\n</ul>\n\n<h4 id=""installation-des-ros-systems-version-indigo-f-r-ubuntu-14-04-lts"">Installation des ROS-Systems Version Indigo f\xc3\xbcr Ubuntu 14.04 LTS</h4>\n\n<p><em>Anweisungen folgen und dabei die Variante Desktop-Full Install w\xc3\xa4hlen</em></p>\n\n<p><a href=""http://wiki.ros.org/jade/Installation/Ubuntu"">http://wiki.ros.org/jade/Installation/Ubuntu</a></p>\n\n<p>Zus\xc3\xa4tzlich sind noch folgende ROS Packages notwendig:</p>\n\n<p><code>sudo apt-get install ros-jade-geographic-msgs ros-jade-geodesy ros-jade-moveit-core ros-jade-robot-localization ros-jade-nmea-navsat-driver</code></p>\n\n<h4 id=""einrichten-des-workspace"">Einrichten des Workspace</h4>\n\n<p><em>Anweisungen folgen und den Workspace einrichten</em></p>\n\n<p><a href=""http://wiki.ros.org/catkin/Tutorials/create_a_workspace"">http://wiki.ros.org/catkin/Tutorials/create_a_workspace</a></p>\n\n<p>Hinweis: Falls anaconda Python Distribution installiert ist, gibt es Konflikte mit dem <code>catkin_pkg</code>, was nicht gefunden wird. Einfachste M\xc3\xb6glichkeit: In der <code>~/.bashrc</code> einfach die Zeile <code>export PATH=""/home/pbalzer/anaconda/bin:$PATH""</code> auskommentieren und Terminal neu starten. Dann wird das System Python genutzt und <code>catkin_make</code> funktioniert.</p>\n\n<p>Die nun erstellte <code>setup.bash</code> in <code>catkin_ws/devel/</code> sollte noch in die <code>~/.bashrc</code> aufgenommen werden.\n<code>source /home/pbalzer/catkin_ws/devel/setup.bash</code></p>\n\n<h4 id=""download-und-installation-des-sick-ld-mrs-treibers"">Download und Installation des SICK LD-MRS Treibers</h4>\n\n<p><em>Anlegen eines Download-Verzeichnisses</em></p>\n\n<p><code>mkdir sick</code></p>\n\n<p><code>cd sick</code></p>\n\n<p><em>Download des Projektes</em></p>\n\n<p>(<code>sudo apt-get install bzr</code>)</p>\n\n<p><code>bzr branch http://bazaar.launchpad.net/~csiro-asl/csiro-asl-ros-pkg/electric</code></p>\n\n<p><em>Umbenennen und kopieren der Dateien in den Workspace</em></p>\n\n<p><code>mv electric csiro-asl-ros-pkg</code></p>\n\n<p><code>cp csiro-asl-ros-pkg -r ~/catkin_ws/src</code></p>\n\n<p><em>Kompilieren des Programms im Workspace</em></p>\n\n<p><code>catkin_make</code></p>\n\n<p><em>Evtl. muss die Python-Node ausf\xc3\xbchrbar gesetzt werden, damit ROS sie per rosrun findet</em></p>\n\n<p><code>chmod +x ~/catkin_ws/src/csiro-asl-ros-pkg/sick_ldmrs/nodes/sickldmrs.py</code></p>\n\n<p><em>M\xc3\xb6chte man den Namen des Topics f\xc3\xbcr die Pointcloud2 \xc3\xa4ndern, so kann dies in der Datei csiro-asl-ros-pkg/sick_ldmrs/nodes/sickldmrs.py erfolgen. Entweder passt man folgende Zeichenkette dauerhaft an:</em></p>\n\n<p><code>topics[\'cloud\'] = rospy.Publisher(\'/%s/cloud\' % node_name,\n                                      numpy_msg(PointCloud2),queue_size=1000)</code></p>\n\n<p><em>oder man \xc3\xa4ndert nur den zweiten Teil des Topic-Namen \xe2\x80\x9ecloud\xe2\x80\x9c in der Zeile:</em></p>\n\n<p><code>topics = {}.fromkeys(( \'cloud\',  \'scan0\',  \'scan1\',  \'scan2\',  \'scan3\'))</code></p>\n\n<p><em>Im zweiten Fall lautet der Topic-Name dann \xe2\x80\x9e/sickldmrs/xxx\xe2\x80\x9c</em></p>\n\n<h4 id=""download-und-installation-des-imu-plugins-f-r-rviz"">Download und Installation des IMU Plugins f\xc3\xbcr Rviz</h4>\n\n<p><code>git clone https://github.com/ccny-ros-pkg/imu_tools.git</code></p>\n\n<p><em>Verschieben in den Workspace und kompilieren</em></p>\n\n<p><code>cp imu_tools -r ~/catkin_ws/src</code></p>\n\n<p><code>cd ~/catkin_ws</code></p>\n\n<p><code>catkin_make</code></p>\n\n<h4 id=""download-und-installation-der-projekt-pakete"">Download und Installation der Projekt-Pakete</h4>\n\n<p><em>Klonen des Git-Archives und verschieben der vier Pakete <a href=""https://github.com/gus484/ros/tree/master/multicar_hydraulic"">multicar_hydraulic</a>, <a href=""https://github.com/gus484/ros/tree/master/tinkerforge_laser_transform"">tinkerforge_laser_transform</a>, <a href=""https://github.com/gus484/ros/tree/master/tinycan"">tinycan</a> und <a href=""https://github.com/gus484/ros/tree/master/Multicar_moveit_config"">Multicar_moveit_config</a> in den Workspace</em></p>\n\n<p><code>git clone https://github.com/gus484/ros.git</code></p>\n\n<p><code>cd ros</code></p>\n\n<p><code>cp  multicar_hydraulic tinkerforge_laser_transform tinycan Multicar_moveit_config ~/catkin_ws/src -R</code></p>\n\n<h4 id=""installation-von-octomap-server"">Installation von Octomap Server</h4>\n\n<p><code>sudo apt-get install ros-jade-octomap-msgs ros-jade-octomap-ros</code></p>\n\n<p>F\xc3\xbcr Jade ist Octomap Server noch nicht als Paket verf\xc3\xbcgbar. Da nehmen wir einfach das f\xc3\xbcr Indigo von Github:</p>\n\n<p><code>git clone https://github.com/OctoMap/octomap_mapping.git</code>\n<code>cp octomap_mapping/ -r ~/catkin_ws/src/</code></p>\n\n<p><em>Workspace kompilieren</em></p>\n\n<p><code>cd ~/catkin_ws</code></p>\n\n<p><code>catkin_make</code></p>\n\n<p>Hinweis: Wenn Fehler auftreten, einfach nochmal <code>catkin_make</code> ausf\xc3\xbchren. Durch die Parallelisierung kann es passieren, dass Dateien, die zum Kompilieren notwendig sind, vom anderen Core noch nicht berechnet wurden und dann stoppt es mit Fehler.</p>\n\n<p><img src=""https://what.thedailywtf.com/uploads/default/11505/6f3925bd03870f21.jpg"" alt=""Multithreading Dogs""></p>\n\n<h4 id=""pfade-der-multicar-konfiguration-anpassen"">Pfade der Multicar Konfiguration anpassen</h4>\n\n<p><em>URDF-Datei und .dae-Datein aus Git Repository holen, Arbeitsordner anlegen und Dateien verschieben:</em></p>\n\n<p><code>mkdir ~/ROS_MoveIt</code></p>\n\n<p><code>cp ROS_MoveIt/*.dae ROS_MoveIt/multicar.urdf ~/ROS_MoveIt</code></p>\n\n<p><em>Pfade in URDF-Datei anpassen</em></p>\n\n<p><code>nano ~/ROS_MoveIt/multicar.urdf</code></p>\n\n<p><em>URDF Pfad im MoveIt Paket in folgenden Dateien anpassen:</em></p>\n\n<p><code>nano ~/catkin_ws/src/Multicar_moveit_config/.setup_assistant</code></p>\n\n<p><code>nano ~/catkin_ws/src/Multicar_moveit_config/launch/planning_context.launch</code></p>\n\n<p><em>Pfade in Launchfiles anpassen:</em></p>\n\n<p><code>nano ~/catkin_ws/src/tinkerforge_laser_transform/launch</code></p>\n\n<h4 id=""messung-starten"">Messung starten</h4>\n\n<p><em>roscore starten</em></p>\n\n<p><code>roscore</code></p>\n\n<p><em>Je nach Anwendung entsprechendes launch file aus der <a href=""https://github.com/gus484/ros/tree/master/tinkerforge_laser_transform/launch"">tinkerforge_laser_transform Node</a> im Verzeichnis launch starten. Beispiel:</em></p>\n\n<p><code>cd ~/catkin_ws</code></p>\n\n<p><code>roslaunch src/tinkerforge_laser_transform/launch/Messung.launch</code></p>\n\n<h4 id=""laserscanner-verbinden"">Laserscanner verbinden</h4>\n\n<p>Der Sick Laserscanner (bzw. ibeo Lux) hat eine feste IP, mit der er kommunizieren will. Dazu ist das Notebook mit einem Netzwerk zu verbinden mit fester IP. Der Laserscanner hat</p>\n\n<p><code>192.168.0.1</code>, der Rechner sollte <code>192.168.0.55</code> oder sowas haben.</p>\n\n<h4 id=""tinkerforge-sensoren"">Tinkerforge Sensoren</h4>\n\n<p>Den <a href=""http://www.tinkerforge.com/de/doc/Software/Brickd.html"">Tinkerforge Brick Deamon</a> auch installieren.</p>\n\n<h4 id=""anschauen-was-abgeht"">Anschauen was abgeht</h4>\n\n<p><code>rosrun rqt_topic rqt_topic</code> kann man aktive Topics sehen\n<code>rosrun rqt_graph rqt_graph</code> kann man das visualisiert ansehen</p>\n\n<h4 id=""aufzeichnung-und-wiedergabe-von-messungen"">Aufzeichnung und Wiedergabe von Messungen</h4>\n\n<p><em>Siehe Anleitung im Git-Repository:</em></p>\n\n<p><a href=""https://github.com/gus484/ros/tree/master/recorded_maps"">https://github.com/gus484/ros/tree/master/recorded_maps</a></p>\n\n<h4 id=""hydraulik-steuerung"">Hydraulik-Steuerung</h4>\n\n<p>F\xc3\xbcr die Hydraulik-Steuerung werden die Pakete <em>multicar_hydraulic</em> und <em>tinycan</em> ben\xc3\xb6tigt, welche bereits im Schritt <em>Download und Installation der Projekt-Pakete</em> installiert wurden. In dem Verzeichnis <em>launch</em> der multicar_hydraulic gibt es eine Launch-Datei, welche die beiden Nodes startet.</p>\n\n<p>roscore starten</p>\n\n<p><code>roscore</code></p>\n\n<p><code>cd ~/catkin_ws</code></p>\n\n<p><code>roslaunch src/multicar_hydraulic/launch/Move.launch</code></p>\n\n<p>MoveIt + Rviz starten (neues Terminal)</p>\n\n<p><code>cd ~/catkin_ws</code></p>\n\n<p><code>roslaunch src/Multicar_moveit_config/launch/demo.launch</code></p>\n\n<p>Hinweis: Damit die Hydraulik angesteuert werden, muss in dem Paket <em>Multicar_moveit_config</em> in der Datei <em>launch/demo.launch</em> die automatische Generierung von <em>fake joint states</em> deaktiviert werden.</p>\n\n<p><code>nano ~/catkin_ws/src/Multicar_moveit_config/launch/demo.launch</code></p>\n\n<p><u>Auskommentieren mit <em>&lt;!-- --&gt;</em>:</u></p>\n\n<p><code>&lt;node name=""joint_state_publisher"" pkg=""joint_state_publisher"" type=""joint_state_publisher""&gt;</code></p>\n\n<p><code>&lt;param name=""/use_gui"" value=""false""/&gt;</code></p>\n\n<p><code>&lt;rosparam param=""/source_list""&gt;[/move_group/fake_controller_joint_states]&lt;/rosparam&gt;</code></p>\n\n<p><code>&lt;/node&gt;</code></p>\n\n<p>Nachdem Rviz gestartet ist, sollte sich der Ausleger entsprechend der Sensorwerte automatisch positionieren. Die Steuerung erfolg im Unterfenster <em>Motion Planning</em> im Reiter <em>Planning</em>.</p>\n\n<p>Mittels <em>Query --&gt; Select Goal State</em> und der Auswahl <em>random valid</em> kann ein g\xc3\xbcltiger Zustand des Auslegers generiert werden. Man kann so oft auf den Button <em>Update</em> klicken, bis eine passable Position gefunden wurde.\nEin Klick auf den Button <em>Plan</em> berechnet die Bewegung zwischen aktueller und neuer Position. Der Button <em>Execute</em> f\xc3\xbchrt die Bewegung dann aus indem er die Nachrichten an die <em>multicat_hydraulic_node</em> sendet. Der Button <em>Plan and Execute</em> vereint beide Schritte mit einem Klick.</p>\n\n<h4 id=""speichern-und-laden-von-planungszust-nden-auslegerpositionen"">Speichern und laden von Planungszust\xc3\xa4nden (Auslegerpositionen)</h4>\n\n<p>Es ist m\xc3\xb6glich im Rviz Zust\xc3\xa4nde des Auslegers in einer DB zu speichern und diese wiederherzustellen. Beispielsweise kann eine M\xc3\xa4hposition und eine Fahrposition hinterlegt werden. Daf\xc3\xbcr muss eine Warehouse DB erreichbar sein. Die <em>Multicar_moveit_config</em> Node bringt daf\xc3\xbcr alle ben\xc3\xb6tigten Komponenten mit. Es muss lediglich ein Pfad zur Datenbank angegeben werden.</p>\n\n<p>Launch-Datei zum Bearbeiten \xc3\xb6ffnen</p>\n\n<p><code>nano /home/carpc/catkin_ws/src/Multicar_moveit_config/launch/warehouse.launch</code></p>\n\n<p>Pfad anpassen (erste Zeile durch zweite ersetzen)</p>\n\n<p><code>&lt;arg name=""moveit_warehouse_database_path"" /&gt;</code></p>\n\n<p><code>&lt;arg name=""moveit_warehouse_database_path"" default=""$(find Multicar_moveit_config)/"" /&gt;</code></p>\n\n<p>Starten des Datenbankservers</p>\n\n<p><code>roslaunch Multicar_moveit_config warehouse.launch</code></p>\n\n<p>Jetzt kann ganz normal die <em>demo.launch</em> der <em>Multicar_moveit_config</em> Node gestartet werden und im Reiter <em>Context</em> der Connect Button zum Verbindungsaufbau mit der DB gedr\xc3\xbcckt werden.</p>\n\n<p><code>roslaunch Multicar_moveit_config demo.launch</code></p>\n\n<p>Im Reiter <em>Stored States</em> k\xc3\xb6nnen nun Zust\xc3\xa4nde gespeichert (Save Goal) und Zust\xc3\xa4nde geladen (Set as Goal) werden.</p>\n</div>\n\n            \n          </div>'"
aruco_mapping,http://rosindex.github.io/r/aruco_mapping/,"jade,indigo",aruco_mapping,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""aruco_positioning_system"">aruco_positioning_system</h1>\n\n<p><a href=""http://ros.org"">ROS</a> package</p>\n\n<p>Aruco mapping package, see <a href=""http://wiki.ros.org/aruco_mapping"">Wiki</a> page for more details:</p>\n\n<ul>\n<li>Authors: <a href=""http://www.smartroboticsys.eu/?page_id=895&amp;lang=en"">Jan Bacik</a>, <a href=""http://www.smartroboticsys.eu"">Smart Robotic Systems</a>\n</li>\n</ul>\n\n<p><a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=MlOy9qt_K4Y%0A"" target=""_blank""><img src=""http://img.youtube.com/vi/MlOy9qt_K4Y/0.jpg"" alt=""Aruco mapping"" width=""480"" height=""360"" border=""10""></a></p>\n</div>\n\n            \n          </div>'"
talos_description,http://rosindex.github.io/r/talos_description/,"hydro,indigo",talos_description,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""talos_description"">talos_description</h1>\n\n<p>A description of the TALOS robot.</p>\n\n<p>To view the model in RViz:\nroslaunch talos_description talos_rviz.launch </p>\n</div>\n\n            \n          </div>'"
nao_viz,http://rosindex.github.io/r/nao_viz/,hydro,naoqi_dashboard,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nao_viz"">nao_viz</h1>\n\n<p>Visualization (dashboard) for the Nao in ROS, originally written by Stefan Osswald: <a href=""http://www.ros.org/wiki/nao_viz"">http://www.ros.org/wiki/nao_viz</a></p>\n</div>\n\n            \n          </div>'"
nanomsg,http://rosindex.github.io/r/nanomsg/,indigo,nanomsg,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""overview"">Overview</h2>\n\n<p>URL: <a href=""http://nanomsg.org/"">http://nanomsg.org/</a></p>\n\n<h2 id=""catkin-package"">Catkin Package</h2>\n\n<p>This uses a cmake build whereas nanomsg makes use of autotools. Consequently I\'m just plugging in macro definitions for many\noptions that are tested by autotools, and only creating tests as I run into problems (e.g. test for accept4 support in the\ntoolchain).</p>\n\n<p>One variable that I haven\'t got an automatic test for yet is for our limited toolchain on arm board.</p>\n\n<ul>\n<li>platform: arm1176jzf-s</li>\n<li>kernel 2.6.32</li>\n<li>toolchain: gcc 4.6</li>\n</ul>\n\n<p>If you get a <code>libnanomsg.so: undefined reference to</code>__sync_fetch_and_add_4\'` error when linking this library to\nyour programs (happens on some arm cross compiles), then you\'ll need to disable gcc\'s builtin atomic plugins. </p>\n</div>\n\n            \n          </div>'"
perception_oru,http://rosindex.github.io/r/perception_oru/,"hydro,groovy,indigo","ndt_costmap,ndt_feature_reg,ndt_fuser,ndt_map,ndt_map_builder,ndt_mcl,ndt_registration,ndt_rviz_visualisation,ndt_visualisation,perception_oru,sdf_tracker","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ntpd_driver,http://rosindex.github.io/r/ntpd_driver/,"jade,kinetic,indigo",ntpd_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ntpd_driver"">ntpd_driver</h1>\n\n<p>This ROS node listen <code>sensor_msgs/TimeReference</code> and send it to ntpd via SHM (like gpsd).</p>\n\n<p>Parameter <code>~/shm_unit</code> define SHM unit (in ntp.conf) (int, default: 2).\nParameter <code>~/time_ref_topic</code> define the topic to subscribe to (string, default: <code>""~/time_ref""</code>).\nParameter <code>~/fixup_date</code> enable/disable date fixup (bool, default: false)</p>\n\n<h2 id=""system-configuration"">System configuration</h2>\n\n<h3 id=""ntpd-configuration"">ntpd configuration</h3>\n\n<p>Add this to <code>/etc/ntp.conf</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">### GPS SHM driver\nserver 127.127.28.2 minpoll 4 maxpoll 4\nfudge 127.127.28.2 time1 0.5 stratum 12 refid ROS\n</code></pre></div>\n<p>And then restart ntp service.</p>\n\n<p>Run example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ntpd_driver shm_driver _shm_unit:=2 _time_ref_topic:=/mavros/time_reference\n</code></pre></div>\n<h3 id=""chrony-configuration"">chrony configuration</h3>\n\n<p>Add this to <code>/etc/chrony/chrony.conf</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">### SHM driver\nrefclock SHM 0 delay 0.5 refid ROS\n</code></pre></div>\n<p>And then restart chrony service.</p>\n\n<p>Run example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun ntpd_driver shm_driver _shm_unit:=0 _time_ref_topic:=/mavros/time_reference\n</code></pre></div>\n<h3 id=""date-fixup-configuration-sudo"">Date fixup configuration (sudo)</h3>\n\n<p>On my Raspberry Pi 2 ntpd reject SHM data if system date is not set (e.g. JAN 1970).\nTo fix that <code>shm_driver</code> now can set system time if it unset.</p>\n\n<p>For setting date program requires root privileges, so used <code>sudo</code>.</p>\n\n<p>Add this to <code>/etc/sudoers</code> (using <code>visudo</code>):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">%sudo   ALL=NOPASSWD: /bin/date\n</code></pre></div>\n</div>\n\n            \n          </div>'"
python_trep,http://rosindex.github.io/r/python_trep/,"hydro,indigo",python_trep,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">trep is released under the GPLv3 license.\n\nSee http://nxr.northwestern.edu/trep for more information.\n\n\nBuild trep:             python setup.py build\n\nInstall trep w/headers: sudo python setup.py install install_headers\n\nBuild documentation:    python setup.py build_sphinx\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
naoqi_dashboard,http://rosindex.github.io/r/naoqi_dashboard/,"jade,indigo",naoqi_dashboard,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nao_viz"">nao_viz</h1>\n\n<p>Visualization (dashboard) for the Nao in ROS, originally written by Stefan Osswald: <a href=""http://www.ros.org/wiki/nao_viz"">http://www.ros.org/wiki/nao_viz</a></p>\n</div>\n\n            \n          </div>'"
firos,http://rosindex.github.io/r/firos/,indigo,firos,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""firos"">FIROS</h1>\n\n<p>FIROS is a tool that helps connecting robots to the cloud. For this purpose it uses the Robot Operating System (ROS, <a href=""http://www.ros.org/"">http://www.ros.org/</a>) and the FIWARE  Context Broker (<a href=""http://catalogue.fiware.org/enablers/publishsubscribe-context-broker-orion-context-broker"">http://catalogue.fiware.org/enablers/publishsubscribe-context-broker-orion-context-broker</a>) as a way to publish and listen robot\'s data.</p>\n\n<p>FIROS works as a translator between the robotics field and the cloud world, transforming ROS messages into NGSI to publish them in the cloud, and vice versa.</p>\n\n<p>This project is part of <a href=""http://www.fiware.org"">FIWARE</a>.</p>\n\n<h1 id=""installing-firos"">Installing FIROS</h1>\n\n<h2 id=""requirements"">Requirements</h2>\n\n<ul>\n<li>  Ubuntu</li>\n<li>  Python 2.7 or greater</li>\n<li>  Nodejs v0.10 or greater</li>\n<li>  ROS Hydro or greater <a href=""http://wiki.ros.org/es/ROS/Installation"">http://wiki.ros.org/es/ROS/Installation</a>\n</li>\n</ul>\n\n<h2 id=""installation"">Installation</h2>\n\n<ol>\n<li> Make sure you have set your working space (<a href=""http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment"">http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment</a>)</li>\n<li> Open a Terminal and navigate to the ROS workspace you want to use. If you just followed the ROS environment tutorial, it will be ~/catkin_ws.</li>\n</ol>\n\n<p><code>cd ~/catkin_ws/src</code></p>\n\n<ol>\n<li> Clone the FIROS git repository into your ROS workspace.</li>\n</ol>\n\n<p><code>git clone https://github.com/ikergune/firos</code></p>\n\n<ol>\n<li> Build the FIROS package with the following commands. This will create a devel and build folder under your workspace.</li>\n</ol>\n\n<p><code>cd ~/catkin_ws</code><br>\n   <code>catkin_make</code></p>\n\n<ol>\n<li> For convenience, you may wish to source your setup.sh script from your .bashrc so that your environment is ready as soon as you log in. e.g. </li>\n</ol>\n\n<p><code>echo ""source ~/catkin_ws/devel/setup.bash"" &gt;&gt; ~/.bashrc</code></p>\n\n<ol>\n<li> Execute ""source devel/setup.bash"" to allow the current command line instance to use FIROS</li>\n</ol>\n\n<p>FIROS is now installed in your robot! </p>\n\n<p><strong>Important Note:</strong> The first time FIROS is launched it will ask you for root permissions to install it\'s dependencies</p>\n\n<h1 id=""configuring-firos"">Configuring FIROS</h1>\n\n<p>FIROS has several configuration files located at <em>src/firos/config</em>.</p>\n\n<h2 id=""config-json"">config.json</h2>\n\n<p>This file contains the configuration related to FIROS launching environment. Here is a description of each parameter:</p>\n\n<ul>\n<li>  <em>environment</em>: These parameters take care of the <em>local</em>, <em>development</em> and <em>production</em> environment configurations by setting up the `<em>context broker\'s IP</em>, <em>port</em> and <em>FIROS rest apis\' port</em>. \nFIROS will use an environment\'s configuration based this value, but there can be as many environments as you want.</li>\n<li>  <em>server</em>: It contains information related to the FIROS server\n\n<ul>\n<li>\n<em>port</em>: The port in which FIROS is listening. If you want to let access outside of your local network, you might want to redirect that port on your router.</li>\n</ul>\n</li>\n<li>  <em>contextbroker</em>: Contains information related to the Context broker configuration\n\n<ul>\n<li>  <em>address</em>: Context broker\'s IP address</li>\n<li>  <em>port</em>: Context broker\'s port</li>\n<li>  <em>subscription</em>: Context broker\'s subscription information\n\n<ul>\n<li>  <em>throttling</em>: The update frequency at which the Context Broker sends updates to the robot.</li>\n<li>  <em>subscription_length</em>: The subscription expiration time</li>\n<li>  <em>subscription_refresh_delay</em>: The subscription refresh rate in days in order to avoid its expiration</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>  <em>interface</em>: Network configuration of the card in use\n\n<ul>\n<li>  <em>public</em>: Public IP. Do not forget to redirect the proper ports in your network</li>\n<li>  <em>wlan0, et0, tun0</em>, etc: Different network interface configuration.</li>\n</ul>\n</li>\n<li>  <em>log_level</em>: It represents the verbosity of the logging system for FIROS. Available options are as follows: <em>""NONE"", ""INFO"", ""DEBUG"" ,""WARNING"", ""ERROR""</em> and <em>""CRITICAL""</em>\n</li>\n</ul>\n\n<p>Here is an example of a <em>config.json</em> file for a <em>local</em> environment:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">{</span>\n  <span class=""s2"">""environment""</span><span class=""err"">:</span> <span class=""s2"">""local""</span><span class=""p"">,</span>\n\n  <span class=""s2"">""local""</span><span class=""err"">:</span> <span class=""p"">{</span>\n    <span class=""s2"">""server""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""port""</span><span class=""err"">:</span> <span class=""mi"">10100</span>\n    <span class=""p"">},</span>\n    <span class=""s2"">""contextbroker""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""address""</span>   <span class=""err"">:</span> <span class=""s2"">""192.168.43.159""</span><span class=""p"">,</span>\n        <span class=""s2"">""port""</span>      <span class=""err"">:</span> <span class=""mi"">1026</span><span class=""p"">,</span>\n        <span class=""s2"">""subscription""</span><span class=""err"">:</span> <span class=""p"">{</span>\n          <span class=""s2"">""throttling""</span><span class=""err"">:</span> <span class=""s2"">""PT0S""</span><span class=""p"">,</span>\n          <span class=""s2"">""subscription_length""</span><span class=""err"">:</span> <span class=""s2"">""P1M""</span><span class=""p"">,</span>\n          <span class=""s2"">""subscription_refresh_delay""</span><span class=""err"">:</span> <span class=""mi"">20</span>\n        <span class=""p"">}</span>\n    <span class=""p"">},</span>\n    <span class=""s2"">""log_level""</span><span class=""err"">:</span> <span class=""s2"">""INFO""</span><span class=""p"">,</span>\n    <span class=""s2"">""interface""</span><span class=""err"">:</span> <span class=""s2"">""public""</span>\n  <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<h2 id=""robotdescriptions-json"">robotdescriptions.json</h2>\n\n<p>Robots may have some public files so users can understand some characteristics or even use their devices. All the references contained in this file can be published on the Context Broker; to do so, just follow the next example:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""s2"">""turtle1""</span><span class=""err"">:</span> <span class=""p"">{</span>\n    <span class=""s2"">""descriptions""</span><span class=""err"">:</span> <span class=""p"">[</span>\n        <span class=""s2"">""http://wiki.ros.org/ROS/Tutorials/UsingRxconsoleRoslaunch""</span><span class=""p"">,</span>\n        <span class=""s2"">""http://wiki.ros.org/ROS/Tutorials/UnderstandingNodes""</span>\n    <span class=""p"">]</span>\n<span class=""p"">},</span><span class=""s2"">""youbot""</span><span class=""err"">:</span> <span class=""p"">{</span>\n    <span class=""s2"">""descriptions""</span><span class=""err"">:</span> <span class=""p"">[</span>\n        <span class=""s2"">""http://wiki.ros.org/ROS/Tutorials/UnderstandingServicesParams""</span><span class=""p"">,</span>\n        <span class=""s2"">""http://wiki.ros.org/ROS/Tutorials/UsingRqtconsoleRoslaunch""</span>\n    <span class=""p"">]</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<h2 id=""whitelist-json"">whitelist.json</h2>\n\n<p>Everytime FIROS is launched or whenever it gets a notification about a new robot being connected, it looks the available <em>topics</em> on the robot. this configuration file contains a list of allowed robots and topics to be connected to this particular instance of FIROS. It also defines whether the topic is a <em>publisher</em>, when FIROS transmits data to it, or a <em>subscriber</em> in case FIROS should be listening to any incoming information on that topic.\nNames corresponding to both <em>robots</em> and <em>topics</em> can also be <em>regular expressions</em> avoiding the \'^\' at the beginning and \'$\' at the end. Here is an example:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""s2"">""turtle\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n    <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel""</span><span class=""p"">],</span>\n    <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""pose""</span><span class=""p"">]</span>\n<span class=""p"">},</span>\n<span class=""s2"">""robot\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n    <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel.*teleop""</span><span class=""p"">,</span> <span class=""s2"">"".*move_base/goal""</span><span class=""p"">,</span> <span class=""s2"">"".*move_base/cancel""</span><span class=""p"">],</span>\n    <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">"".*move_base/result""</span><span class=""p"">]</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<h2 id=""robots-json"">robots.json</h2>\n\n<p>It is also possible to force some robot connections. This is done by adding the robot name, its topics and roles to the <em>robots.json</em> file. The role parameter must be the same as the on in the <em>whitelist.json</em> file and each topic must also contain a <em>type</em> parameter to define its role. The next file is an example of this configuration:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""s2"">""robot1""</span><span class=""err"">:</span><span class=""p"">{</span>\n    <span class=""s2"">""topics""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""cmd_vel_mux/input/teleop""</span><span class=""err"">:</span> <span class=""p"">{</span>\n            <span class=""s2"">""msg""</span><span class=""err"">:</span> <span class=""s2"">""geometry_msgs.msg.Twist""</span><span class=""p"">,</span>\n            <span class=""s2"">""type""</span><span class=""err"">:</span> <span class=""s2"">""publisher""</span>\n        <span class=""p"">},</span>\n        <span class=""s2"">""move_base/goal""</span><span class=""err"">:</span> <span class=""p"">{</span>\n            <span class=""s2"">""msg""</span><span class=""err"">:</span> <span class=""s2"">""move_base_msgs.msg.MoveBaseActionGoal""</span><span class=""p"">,</span>\n            <span class=""s2"">""type""</span><span class=""err"">:</span> <span class=""s2"">""publisher""</span>\n        <span class=""p"">},</span>\n        <span class=""s2"">""move_base/result""</span><span class=""err"">:</span> <span class=""p"">{</span>\n            <span class=""s2"">""msg""</span><span class=""err"">:</span> <span class=""s2"">""move_base_msgs.msg.MoveBaseActionResult""</span><span class=""p"">,</span>\n            <span class=""s2"">""type""</span><span class=""err"">:</span> <span class=""s2"">""subscriber""</span>\n        <span class=""p"">}</span>\n    <span class=""p"">}</span>\n<span class=""p"">},</span><span class=""s2"">""turtle1""</span><span class=""err"">:</span><span class=""p"">{</span>\n    <span class=""s2"">""topics""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""cmd_vel""</span><span class=""err"">:</span> <span class=""p"">{</span>\n            <span class=""s2"">""msg""</span><span class=""err"">:</span> <span class=""s2"">""geometry_msgs.msg.Twist""</span><span class=""p"">,</span>\n            <span class=""s2"">""type""</span><span class=""err"">:</span> <span class=""s2"">""publisher""</span>\n        <span class=""p"">},</span>\n        <span class=""s2"">""pose""</span><span class=""err"">:</span> <span class=""p"">{</span>\n            <span class=""s2"">""msg""</span><span class=""err"">:</span> <span class=""s2"">""turtlesim.msg.Pose""</span><span class=""p"">,</span>\n            <span class=""s2"">""type""</span><span class=""err"">:</span> <span class=""s2"">""subscriber""</span>\n        <span class=""p"">}</span>\n    <span class=""p"">}</span>\n <span class=""p"">}</span>\n\n</code></pre></div>\n<h1 id=""getting-topic-types"">Getting Topic Types</h1>\n\n<p>There is also a way to request the topic type, which is usefull in order to add them to the previous <em>robots.json</em> file. The following example is based on the <em>Turtlesim</em> example of ROS available here <a href=""http://wiki.ros.org/turtlesim"">http://wiki.ros.org/turtlesim</a>. Here are the steps to follow:</p>\n\n<ol>\n<li> Launch the <code>rostopic list</code> command. This will show all the registered topics.</li>\n<li> Now that you know the name of the topic, just execute the following command: <code>rostopic info TOPIC_NAME</code>. It will result on something like this:</li>\n</ol>\n\n<!-- -->\n\n<p>`\n    rostopic info /turtle1/cmd_vel\n        Type: geometry_msgs/Twist</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    Publishers: None\n\n    Subscribers:\n        * /turtlesim (http://192.168.4.42 :45825/)`\n</code></pre></div>\n<p>This means that the robot <code>turtle1</code> is listening to data published on <code>/turtle1/cmd_vel</code> so FIROS should be publishing on it. \nThe <em>type</em> of the <code>/turtle1/cmd_vel</code> is <code>geometry_msgs/Twist</code> what internally corresponds to the <code>geometry_msgs.msg.Twist</code> package</p>\n\n<p>Here is another example:\n`\n    rostopic info /turtle1/pose\n        Type: turtlesim/Pose</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    Publishers:\n        * /turtlesim (http://192.168.4.42 :45825/)\n\n    Subscribers: None`\n</code></pre></div>\n<p>In this case, <code>turtle1</code> is publishing data on <code>/turtle1/pose</code>, so FIROS can listen to it. As seen before, the <em>type</em> <code>turtlesim/Pose</code> corresponds to the internal package <code>turtlesim.msg.Pose</code></p>\n\n<p>So we can deduce the slice of <em>robots.json</em> related to <code>turtle1</code>:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""s2"">""turtle1""</span><span class=""err"">:</span><span class=""p"">{</span>\n    <span class=""s2"">""topics""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""cmd_vel""</span><span class=""err"">:</span> <span class=""p"">{</span>\n            <span class=""s2"">""msg""</span><span class=""err"">:</span> <span class=""s2"">""geometry_msgs.msg.Twist""</span><span class=""p"">,</span>\n            <span class=""s2"">""type""</span><span class=""err"">:</span> <span class=""s2"">""publisher""</span>\n        <span class=""p"">},</span>\n        <span class=""s2"">""pose""</span><span class=""err"">:</span> <span class=""p"">{</span>\n            <span class=""s2"">""msg""</span><span class=""err"">:</span> <span class=""s2"">""turtlesim.msg.Pose""</span><span class=""p"">,</span>\n            <span class=""s2"">""type""</span><span class=""err"">:</span> <span class=""s2"">""subscriber""</span>\n        <span class=""p"">}</span>\n    <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<h1 id=""firos-topics"">FIROS Topics</h1>\n\n<p>FIROS is listening to 2 topics in order to handle robot connections.</p>\n\n<h2 id=""firos-connect"">/FIROS/connect</h2>\n\n<p>Calling this topic with an empty string will make FIROS connect to new robots in case their names and topics match the ones allowed on the <em>whitelist.json</em></p>\n\n<h2 id=""firos-disconnect"">/FIROS/disconnect</h2>\n\n<p>Disconnecting robots from FIROS is possible by simply calling this topic with the robot name.\n<code>/FIROS/disconnect turtle1</code></p>\n\n<h1 id=""api"">API</h1>\n\n<p>FIROS has several REST entry points that are used for connecting with the context broker or getting data from FIROS.</p>\n\n<p>You can find FIROS api at <a href=""http://docs.firos.apiary.io/#"">http://docs.firos.apiary.io/#</a></p>\n\n<h2 id=""get-robots"">GET /robots</h2>\n\n<p>Get robots handled by FIROS with their corresponding <em>topics</em>. Each <em>topic</em> contains the <code>name</code>, <code>type</code>, <code>role</code> and <code>structure</code>:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">[</span>\n    <span class=""p"">{</span>\n        <span class=""s2"">""name""</span><span class=""p"">:</span> <span class=""s2"">""turtle1""</span><span class=""p"">,</span>\n        <span class=""s2"">""topics""</span><span class=""p"">:</span> <span class=""p"">[</span>\n            <span class=""p"">{</span>\n                <span class=""s2"">""type""</span><span class=""p"">:</span> <span class=""s2"">""turtlesim.msg.Pose""</span><span class=""p"">,</span>\n                <span class=""s2"">""name""</span><span class=""p"">:</span> <span class=""s2"">""pose""</span><span class=""p"">,</span>\n                <span class=""s2"">""structure""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                    <span class=""s2"">""y""</span><span class=""p"">:</span> <span class=""s2"">""float32""</span><span class=""p"">,</span>\n                    <span class=""s2"">""x""</span><span class=""p"">:</span> <span class=""s2"">""float32""</span><span class=""p"">,</span>\n                    <span class=""s2"">""linear_velocity""</span><span class=""p"">:</span> <span class=""s2"">""float32""</span><span class=""p"">,</span>\n                    <span class=""s2"">""angular_velocity""</span><span class=""p"">:</span> <span class=""s2"">""float32""</span><span class=""p"">,</span>\n                    <span class=""s2"">""theta""</span><span class=""p"">:</span> <span class=""s2"">""float32""</span>\n                <span class=""p"">},</span>\n                <span class=""s2"">""pubsub""</span><span class=""p"">:</span> <span class=""s2"">""subscriber""</span>\n            <span class=""p"">},</span>\n            <span class=""p"">{</span>\n                <span class=""s2"">""type""</span><span class=""p"">:</span> <span class=""s2"">""geometry_msgs.msg.Twist""</span><span class=""p"">,</span>\n                <span class=""s2"">""name""</span><span class=""p"">:</span> <span class=""s2"">""cmd_vel""</span><span class=""p"">,</span>\n                <span class=""s2"">""structure""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                    <span class=""s2"">""linear""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                        <span class=""s2"">""y""</span><span class=""p"">:</span> <span class=""s2"">""float64""</span><span class=""p"">,</span>\n                        <span class=""s2"">""x""</span><span class=""p"">:</span> <span class=""s2"">""float64""</span><span class=""p"">,</span>\n                        <span class=""s2"">""z""</span><span class=""p"">:</span> <span class=""s2"">""float64""</span>\n                    <span class=""p"">},</span>\n                    <span class=""s2"">""angular""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                        <span class=""s2"">""y""</span><span class=""p"">:</span> <span class=""s2"">""float64""</span><span class=""p"">,</span>\n                        <span class=""s2"">""x""</span><span class=""p"">:</span> <span class=""s2"">""float64""</span><span class=""p"">,</span>\n                        <span class=""s2"">""z""</span><span class=""p"">:</span> <span class=""s2"">""float64""</span>\n                    <span class=""p"">}</span>\n                <span class=""p"">},</span>\n                <span class=""s2"">""pubsub""</span><span class=""p"">:</span> <span class=""s2"">""publisher""</span>\n            <span class=""p"">}</span>\n        <span class=""p"">],</span>\n    <span class=""p"">}</span>\n<span class=""p"">]</span>\n\n</code></pre></div>\n<h2 id=""get-robot-name"">GET /robot/NAME</h2>\n\n<p>Get the data published by the robot on Context Broker. It builds a query using the <em>NAME</em>, what will return data using the following structure:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">[</span>\n    <span class=""p"">{</span>\n        <span class=""s2"">""id""</span><span class=""p"">:</span> <span class=""s2"">""turtle1""</span><span class=""p"">,</span>\n        <span class=""s2"">""type""</span><span class=""p"">:</span> <span class=""s2"">""ROBOT""</span><span class=""p"">,</span>\n        <span class=""s2"">""attributes""</span><span class=""p"">:</span> <span class=""p"">[</span>\n            <span class=""p"">{</span>\n                <span class=""s2"">""type""</span><span class=""p"">:</span> <span class=""s2"">""COMMAND""</span><span class=""p"">,</span>\n                <span class=""s2"">""name""</span><span class=""p"">:</span> <span class=""s2"">""COMMAND""</span><span class=""p"">,</span>\n                <span class=""s2"">""value""</span><span class=""p"">:</span> <span class=""p"">[</span>\n                    <span class=""s2"">""pose""</span>\n                <span class=""p"">]</span>\n            <span class=""p"">},</span>\n            <span class=""p"">{</span>\n                <span class=""s2"">""type""</span><span class=""p"">:</span> <span class=""s2"">""DescriptionData""</span><span class=""p"">,</span>\n                <span class=""s2"">""name""</span><span class=""p"">:</span> <span class=""s2"">""descriptions""</span><span class=""p"">,</span>\n                <span class=""s2"">""value""</span><span class=""p"">:</span> <span class=""s2"">""http://wiki.ros.org/ROS/Tutorials/UsingRxconsoleRoslaunch||http://wiki.ros.org/ROS/Tutorials/UnderstandingNodes""</span>\n            <span class=""p"">},</span>\n            <span class=""p"">{</span>\n                <span class=""s2"">""type""</span><span class=""p"">:</span> <span class=""s2"">""turtlesim.msg.Pose""</span><span class=""p"">,</span>\n                <span class=""s2"">""name""</span><span class=""p"">:</span> <span class=""s2"">""pose""</span><span class=""p"">,</span>\n                <span class=""s2"">""value""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                    <span class=""s2"">""FIROSstamp""</span><span class=""p"">:</span> <span class=""mf"">1424423606.27683</span><span class=""p"">,</span>\n                    <span class=""s2"">""linear_velocity""</span><span class=""p"">:</span> <span class=""mi"">0</span><span class=""p"">,</span>\n                    <span class=""s2"">""theta""</span><span class=""p"">:</span> <span class=""mi"">0</span><span class=""p"">,</span>\n                    <span class=""s2"">""y""</span><span class=""p"">:</span> <span class=""mf"">5.544444561004639</span><span class=""p"">,</span>\n                    <span class=""s2"">""x""</span><span class=""p"">:</span> <span class=""mf"">5.885244369506836</span><span class=""p"">,</span>\n                    <span class=""s2"">""angular_velocity""</span><span class=""p"">:</span> <span class=""mi"">0</span>\n                <span class=""p"">}</span>\n            <span class=""p"">},</span>\n            <span class=""p"">{</span>\n                <span class=""s2"">""type""</span><span class=""p"">:</span> <span class=""s2"">""geometry_msgs.msg.Twist""</span><span class=""p"">,</span>\n                <span class=""s2"">""name""</span><span class=""p"">:</span> <span class=""s2"">""cmd_vel""</span><span class=""p"">,</span>\n                <span class=""s2"">""value""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                    <span class=""s2"">""FIROSstamp""</span><span class=""p"">:</span> <span class=""mi"">1424423604309</span><span class=""p"">,</span>\n                    <span class=""s2"">""linear""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                        <span class=""s2"">""y""</span><span class=""p"">:</span> <span class=""mi"">0</span><span class=""p"">,</span>\n                        <span class=""s2"">""x""</span><span class=""p"">:</span> <span class=""mi"">0</span><span class=""p"">,</span>\n                        <span class=""s2"">""z""</span><span class=""p"">:</span> <span class=""mi"">0</span>\n                    <span class=""p"">},</span>\n                    <span class=""s2"">""angular""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                        <span class=""s2"">""y""</span><span class=""p"">:</span> <span class=""mi"">0</span><span class=""p"">,</span>\n                        <span class=""s2"">""x""</span><span class=""p"">:</span> <span class=""mi"">0</span><span class=""p"">,</span>\n                        <span class=""s2"">""z""</span><span class=""p"">:</span> <span class=""mi"">0</span>\n                    <span class=""p"">}</span>\n                <span class=""p"">}</span>\n            <span class=""p"">}</span>\n        <span class=""p"">]</span>\n    <span class=""p"">}</span>\n<span class=""p"">]</span>\n\n</code></pre></div>\n<h2 id=""post-firos"">POST /FIROS</h2>\n\n<p>This API handles the subscription data of the context broker. </p>\n\n<h2 id=""post-robot-connect"">POST /robot/connect</h2>\n\n<p>This API makes FIROS connecting to new robots in case their names and topics match the ones allowed on the <em>whitelist.json</em></p>\n\n<h2 id=""post-robot-diconnect-name"">POST /robot/diconnect/NAME</h2>\n\n<p>This API forces FIROS to disconnect from the robot specified by the <em>NAME</em> parameter. It will also delete any connection and entity associated to the particular robot on the Context Broker.</p>\n\n<h2 id=""post-whitelist-write"">POST /whitelist/write</h2>\n\n<p>This API overwrites or creates entries in the robot <em>whitelist</em>. This can be done by sending the following data:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">{</span>\n    <span class=""s2"">""turtle\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""pose""</span><span class=""p"">]</span>\n    <span class=""p"">},</span>\n    <span class=""s2"">""robot\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel.*teleop""</span><span class=""p"">,</span> <span class=""s2"">"".*move_base/goal""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">"".*move_base/result""</span><span class=""p"">]</span>\n    <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<p>NOTE: In case you want to keep any element, it must be sent along with the ones to be replaced.</p>\n\n<p>EXAMPLE:</p>\n\n<p>Take this <em>whitelist.json</em> as a starting point:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">{</span>\n    <span class=""s2"">""turtle\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""pose""</span><span class=""p"">]</span>\n    <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<p>Now, the following command is sent:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""nx"">POST</span> <span class=""o"">/</span><span class=""nx"">whitelist</span><span class=""o"">/</span><span class=""nx"">write</span>\n<span class=""p"">{</span>\n    <span class=""s2"">""turtle\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel2""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[]</span>\n    <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<p>The resulting <em>whitelist</em> will be as follows:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">{</span>\n    <span class=""s2"">""turtle\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel2""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[]</span>\n    <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<h2 id=""post-whitelist-remove"">POST /whitelist/remove</h2>\n\n<p>This API removes elements from the <em>whitelist</em>. The format is as follows:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">{</span>\n    <span class=""s2"">""turtle\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""pose""</span><span class=""p"">]</span>\n    <span class=""p"">},</span>\n    <span class=""s2"">""robot\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel.*teleop""</span><span class=""p"">,</span> <span class=""s2"">"".*move_base/goal""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[]</span>\n    <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<p>EXAMPLE:</p>\n\n<p>Take this <em>whitelist.json</em> as a starting point:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">{</span>\n    <span class=""s2"">""turtle\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""pose""</span><span class=""p"">]</span>\n    <span class=""p"">},</span>\n    <span class=""s2"">""robot\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel.*teleop""</span><span class=""p"">,</span> <span class=""s2"">"".*move_base/goal""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">"".*move_base/result""</span><span class=""p"">]</span>\n    <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<p>Now, the following json is sent:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""nx"">POST</span> <span class=""o"">/</span><span class=""nx"">whitelist</span><span class=""o"">/</span><span class=""nx"">remove</span>\n<span class=""p"">{</span>\n    <span class=""s2"">""turtle\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""pose""</span><span class=""p"">]</span>\n    <span class=""p"">},</span>\n    <span class=""s2"">""robot\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel.*teleop""</span><span class=""p"">,</span> <span class=""s2"">"".*move_base/goal""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[]</span>\n    <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<p>The resulting <em>whitelist</em> will look as follows:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">{</span>\n    <span class=""s2"">""turtle\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">""cmd_vel""</span><span class=""p"">],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[]</span>\n    <span class=""p"">},</span>\n    <span class=""s2"">""robot\\\\w+""</span><span class=""err"">:</span> <span class=""p"">{</span>\n        <span class=""s2"">""publisher""</span><span class=""err"">:</span> <span class=""p"">[],</span>\n        <span class=""s2"">""subscriber""</span><span class=""err"">:</span> <span class=""p"">[</span><span class=""s2"">"".*move_base/result""</span><span class=""p"">]</span>\n    <span class=""p"">}</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<h2 id=""post-whitelist-restore"">POST /whitelist/restore</h2>\n\n<p>This API restores the <em>whitelist</em> file to its initial state.</p>\n\n<h1 id=""ent-to-end-tests"">Ent-to-end tests</h1>\n\n<p>In order to test if firos is publishing into ContextBroker you can run the following command:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">~$ </span>rostopic pub -1 s1 std_msgs/String <span class=""s2"">""data: \'test\'""</span>  __ns:<span class=""o"">=</span>end_end_test\n\n</code></pre></div>\n<p>And then:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">~$ </span><span class=""o"">(</span>curl contextbroker_ip:1026/v1/queryContext -s -S --header <span class=""s1"">\'Content-Type: application/json\'</span> --header <span class=""s1"">\'Accept: application/json\'</span> -d @- | python -mjson.tool<span class=""o"">)</span> <span class=""sh"">&lt;&lt;EOF\n{\n        ""entities"": [\n                {\n                        ""type"": ""ROBOT"",\n                        ""isPattern"": ""true"",\n                        ""id"": ""end_end_test""\n                }\n        ],\n        ""attributes"": [\n                ""s1""\n        ]\n}\nEOF\n\n</span></code></pre></div>\n<p>If everything went right you\'ll get something like this:</p>\n<div class=""highlight""><pre><code class=""language-javascript"" data-lang=""javascript""><span class=""p"">{</span>\n        <span class=""s2"">""contextResponses""</span><span class=""err"">:</span> <span class=""p"">[</span>\n                <span class=""p"">{</span>\n                        <span class=""s2"">""contextElement""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                                <span class=""s2"">""attributes""</span><span class=""p"">:</span> <span class=""p"">[</span>\n                                        <span class=""p"">{</span>\n                                                <span class=""s2"">""name""</span><span class=""p"">:</span> <span class=""s2"">""s1""</span><span class=""p"">,</span>\n                                                <span class=""s2"">""type""</span><span class=""p"">:</span> <span class=""s2"">""std_msgs.msg.String""</span><span class=""p"">,</span>\n                                                <span class=""s2"">""value""</span><span class=""p"">:</span> <span class=""s2"">""{%27firosstamp%27: 1443020619.58971, %27data%27: %27test%27}""</span>\n                                        <span class=""p"">}</span>\n                                <span class=""p"">],</span>\n                                <span class=""s2"">""id""</span><span class=""p"">:</span> <span class=""s2"">""end_end_test""</span><span class=""p"">,</span>\n                                <span class=""s2"">""isPattern""</span><span class=""p"">:</span> <span class=""s2"">""false""</span><span class=""p"">,</span>\n                                <span class=""s2"">""type""</span><span class=""p"">:</span> <span class=""s2"">""ROBOT""</span>\n                        <span class=""p"">},</span>\n                        <span class=""s2"">""statusCode""</span><span class=""p"">:</span> <span class=""p"">{</span>\n                                <span class=""s2"">""code""</span><span class=""p"">:</span> <span class=""s2"">""200""</span><span class=""p"">,</span>\n                                <span class=""s2"">""reasonPhrase""</span><span class=""p"">:</span> <span class=""s2"">""OK""</span>\n                        <span class=""p"">}</span>\n                <span class=""p"">}</span>\n        <span class=""p"">]</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<p>Notifications from ContextBroker to firos can be tested by running the following command in one terminal...</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rostopic <span class=""nb"">echo</span> /end_end_test/p1\n\n</code></pre></div>\n<p>... and the following command in another terminal:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">~$ </span><span class=""o"">(</span>curl contextbroker_ip:1026/v1/updateContext -s -S --header <span class=""s1"">\'Content-Type: application/json\'</span> --header <span class=""s1"">\'Accept: application/json\'</span> -d @- | python -mjson.tool<span class=""o"">)</span> <span class=""sh"">&lt;&lt;EOF\n{\n          ""contextElements"": [\n                  {\n                          ""type"": ""ROBOT"",\n                          ""isPattern"": ""false"",\n                          ""id"": ""end_end_test"",\n                          ""attributes"": [\n                          {\n                                  ""name"": ""p1"",\n                                  ""type"": ""std_msgs.msg.String"",\n                                  ""value"": ""{%27data%27: %27`echo $RANDOM`%27}""\n                          },\n                          {\n                                  ""name"": ""COMMAND"",\n                                  ""type"": ""COMMAND"",\n                                  ""value"": [""p1""]\n                          }\n                          ]\n                  }\n          ],\n          ""updateAction"": ""APPEND""\n}\nEOF\n\n</span></code></pre></div>\n<p>If everything went ok, in the first terminal you\'ll see something like this:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">data: random_number\n---\n\n</code></pre></div>\n<h1 id=""license"">License</h1>\n\n<p>Firos is licensed under <a href=""https://opensource.org/licenses/MIT"">MIT License</a>.</p>\n</div>\n\n            \n          </div>'"
dynamic_bandwidth_manager,http://rosindex.github.io/r/dynamic_bandwidth_manager/,hydro,dynamic_bandwidth_manager,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""dynamic_bandwidth_manager"">dynamic_bandwidth_manager</h1>\n\n<p>dynamic_bandwidth_manager is a ros-based dynamic bandwidth management system for controlling the rate that a node publishes a topic, managing different channels where commands, sensory data and video frames are exchanged</p>\n</div>\n\n            \n          </div>'"
pr2_self_test,http://rosindex.github.io/r/pr2_self_test/,"hydro,groovy,indigo","joint_qualification_controllers,pr2_bringup_tests,pr2_counterbalance_check,pr2_motor_diagnostic_tool,pr2_self_test,pr2_self_test_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
micros_rtt,http://rosindex.github.io/r/micros_rtt/,indigo,micros_rtt,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""micros_rtt"">micros_rtt</h1>\n\n<p>A ros real-time toolkit based on orocos rtt.</p>\n</div>\n\n            \n          </div>'"
uwsim_osgbullet,http://rosindex.github.io/r/uwsim_osgbullet/,"hydro,jade,groovy,indigo",uwsim_osgbullet,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosR_demos,http://rosindex.github.io/r/rosR_demos/,indigo,rosR_demos,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosr_demos"">rosR_demos</h1>\n\n<p>This is a set of sublementary examples for <a href=""https://gitlab.com/OvGU-ESS/rosR.git"">rosR</a> language extension.</p>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Authors</td>\n<td>Andr\xc3\xa9 Dietrich &amp; Sebastian Zug</td>\n</tr>\n<tr>\n<td>Source</td>\n<td>\n<code>git clone</code> <a href=""https://gitlab.com/OvGU-ESS/rosR_demos.git"">https://gitlab.com/OvGU-ESS/rosR_demos.git</a>\n</td>\n</tr>\n<tr>\n<td>Email</td>\n<td>\n<a href=""mailto:dietrich@ivs.cs.uni-magdeburg.de"">dietrich@ivs.cs.uni-magdeburg.de</a> &amp; <a href=""mailto:zug@ivs.cs.uni-magdeburg.de"">zug@ivs.cs.uni-magdeburg.de</a>\n</td>\n</tr>\n<tr>\n<td>Publication</td>\n<td><a href=""http://journal.r-project.org/archive/2013-2/dietrich-zug-kaiser.pdf"">The R in Robotics</a></td>\n</tr>\n<tr>\n<td>Talk By</td>\n<td>Jan Wijffels <a href=""http://www.r-bloggers.com/using-r-in-robotics-applications-with-ros"">http://www.r-bloggers.com/using-r-in-robotics-applications-with-ros</a>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n            \n          </div>'"
uwsim_osgworks,http://rosindex.github.io/r/uwsim_osgworks/,"hydro,jade,groovy,indigo",uwsim_osgworks,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
aras_visual_servo,http://rosindex.github.io/r/aras_visual_servo/,indigo,"aras_visual_servo_camera,aras_visual_servo_controller,aras_visual_servo_gazebo","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""introduction"">INTRODUCTION</h2>\n\n<p>The aim of visual servoing is tracking an object by the feedback information of the vision sensor. There are different techniques for controlling the system, in this work, Image based visual servoing has been chosen. \nThe goal of propsed system is tracking the featureless object by the kernel and moment measurement.\nThe configuration of the system is eye-in-hand. </p>\n\n<h2 id=""overview"">OVERVIEW</h2>\n\n<p>The main packages are:</p>\n\n<p>aras_visual_servo_camera\naras_visual_servo_controller\naras_visual_servo_gazebo</p>\n\n<hr>\n\n<p>How to run th code:</p>\n\n<p>roslaunch aras_visual_servo_gazebo aras_visual_servo_gazebo.launch</p>\n\n<p>roslaunch aras_visual_servo_gazebo aras_visual_servo_controller.launch</p>\n\n<p>rosrun aras_visual_servo_camera aras_visual_servo_camera_node</p>\n\n<p>rosrun aras_visual_servo_controller aras_visual_servo_controller_node </p>\n\n<h2 id=""authors"">AUTHORS</h2>\n\n<p>Babak Sistani Zadeh Aghdam <br>\nJavad Ramezanzadeh <br>\nParisa Masnadi <br>\nEbrahim Abedloo <br>\nHamid D Taghirad (supervisor) <br></p>\n</div>\n\n            \n          </div>'"
pr2_common_actions,http://rosindex.github.io/r/pr2_common_actions/,"hydro,indigo","joint_trajectory_action_tools,joint_trajectory_generator,pr2_arm_move_ik,pr2_common_action_msgs,pr2_common_actions,pr2_tilt_laser_interface,pr2_tuck_arms_action","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
turtlebot_simulator,http://rosindex.github.io/r/turtlebot_simulator/,"hydro,fuerte,groovy,diamondback,indigo","turtlebot_gazebo,turtlebot_simulator,turtlebot_stage,turtlebot_stdr,create_gazebo_plugins,turtlebot_gazebo_plugins","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot_simulator"">turtlebot_simulator</h1>\n\n<p>Launchers for Gazebo simulation of the TurtleBot</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
visualization_osg,http://rosindex.github.io/r/visualization_osg/,"hydro,jade,indigo","osg_interactive_markers,osg_markers,osg_utils,visualization_osg","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""visualization_osg"">visualization_osg</h1>\n\n<p>Packages for ROS/OpenSceneGraph applications, including OSG interactive markers</p>\n\n<p><img src=""http://www.ros.org/wiki/osg_interactive_markers?action=AttachFile&amp;do=get&amp;target=osg_interactive_markers.png"" alt=""alt tag""></p>\n</div>\n\n            \n          </div>'"
lama_polygon_matcher,http://rosindex.github.io/r/lama_polygon_matcher/,indigo,"csm_ros,place_matcher_csm,place_matcher_fourier,place_matcher_hist,place_matcher_mcc,place_matcher_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
schunk_grippers,http://rosindex.github.io/r/schunk_grippers/,"jade,indigo","schunk_ezn64,schunk_grippers,schunk_pg70","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""schunk_grippers"">schunk_grippers</h1>\n\n<p>PG70 and EZN64 Xacro models and drivers for serial communication (RS232, USB). See <a href=""http://wiki.ros.org/schunk_grippers"">Wiki page</a> for more details</p>\n\n<h2 id=""pg70-package"">PG70 package</h2>\n\n<ul>\n<li>uses <a href=""http://wiki.ros.org/serial"">ROS serial library</a> package to interface pg70 controller over serial port</li>\n<li>provides <strong>ROS services</strong> for basic gripper control (get_position, set_position, reference, get_error, acknowledge_error, stop) </li>\n<li>allows user to set goal position with velocity and acceleration</li>\n<li>includes <strong>Xacro model</strong> for easier integration with various robots</li>\n<li>automatically reads and broadcasts actual gripper position to <strong>tf</strong>\n</li>\n</ul>\n\n<h2 id=""ezn64-package"">EZN64 package</h2>\n\n<ul>\n<li>uses <a href=""http://www.libusb.org/wiki/libusb-1.0"">libusb1-0</a> library to interface ezn64 controller over USB port</li>\n<li>provides <strong>ROS services</strong> for basic gripper control (get_position, set_position, reference, get_error, acknowledge_error, stop)</li>\n<li>allows user to set only goal position, velocity and acceleration setpoints are not supported within current version</li>\n<li>includes <strong>Xacro model</strong> for easier integration with various robots</li>\n<li>automatically reads and broadcasts actual gripper position to <strong>tf</strong>\n</li>\n</ul>\n\n<h2 id=""demonstration-rviz"">Demonstration RVIZ</h2>\n\n<p>Schunk grippers + Motoman SDA10F in simulation</p>\n\n<p><a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=NLtPqIC4rdg%0A"" target=""_blank""><img src=""http://img.youtube.com/vi/NLtPqIC4rdg/0.jpg"" alt=""Schunk grippers + Motoman SDA10F"" width=""480"" height=""360"" border=""10""></a></p>\n\n<h2 id=""demonstration-with-real-robot"">Demonstration with real robot</h2>\n\n<p><a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=8eH11rpk4X0%0A"" target=""_blank""><img src=""http://img.youtube.com/vi/8eH11rpk4X0/0.jpg"" alt=""Schunk grippers + Motoman SDA10F"" width=""480"" height=""360"" border=""10""></a></p>\n</div>\n\n            \n          </div>'"
rosshell,http://rosindex.github.io/r/rosshell/,indigo,rosshell,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosshell"">rosshell</h1>\n\n<p>Two simple nodes that can be used as mediators for shell commands.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Author: Andr\xc3\xa9 Dietrich &amp; Sebastian Zug\nLicense: BSD\nSource: https://gitlab.com/andre-dietrich/rosshell\n</code></pre></div>\n<h2 id=""1-overview"">1. Overview</h2>\n\n<p>This package provides the two nodes, that enable to run and interact with different non-ros-programs. rosshell can be used to start a program or any kind\nof shell-command. If some kind of interaction with the programs is required,\nuse rosshellX to receive and send messages from stdin, stdout, and stderr.</p>\n\n<h2 id=""2-usage"">2. Usage</h2>\n\n<p>The required commands are always defined as a string:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosshell rosshell.py <span class=""s2"">""command""</span>\n\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosshell rosshellX.py <span class=""s2"">""command""</span>\n\n</code></pre></div>\n<p>have a look at the examples or at the included launch-files.</p>\n\n<h2 id=""3-examples"">3. Examples</h2>\n\n<h3 id=""3-1-rosshell"">3.1 rosshell</h3>\n\n<p>This command is just used to generate some random noise ...</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosshell rosshell.py <span class=""s2"">""aplay -c 2 -f S16_LE -r 44100 /dev/urandom""</span>\n\n</code></pre></div>\n<p>Pipe the results of /dev/random into a text file ...</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosshell rosshell.py <span class=""s2"">""cat /dev/random &gt; test.txt""</span>\n\n</code></pre></div>\n<p>or the some information about the current directory ...</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosshell rosshell.py <span class=""s2"">""ls -Shal &gt; test.txt""</span>\n\n</code></pre></div>\n<h3 id=""3-2-rosshellx"">3.2 rosshellX</h3>\n\n<p>This node is used if you require some interaction with stdin, stdout, and\nstderr.</p>\n\n<p>rosshellX is by default subscribed to /rosshellX/stdin and publishes at topic\n/rosshellX/stdout and /rosshellX/stderr, all of type std_msgs/String.</p>\n\n<h3 id=""3-2-1-some-basic-calculations"">3.2.1 Some basic calculations</h3>\n\n<p>bc is just a simple commandline-calculator</p>\n\n<ol>\n<li><p>open three shells</p></li>\n<li><p>start bc with the following command:</p></li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">   <span class=""nv"">$ </span>rosrun rosshell rosshellX.py <span class=""s2"">""bc""</span>\n\n</code></pre></div>\n<ol>\n<li>print the the results of bc stdout by running:</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">   <span class=""nv"">$ </span>rostopic <span class=""nb"">echo</span> /rosshellX/stdout\n\n</code></pre></div>\n<ol>\n<li>and now, send some inputs like:</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">   <span class=""nv"">$ </span>rostopic pub /rosshellX/stdin std_msgs/String <span class=""s2"">""99*99</span><span class=""se"">\\n</span><span class=""s2"">""</span>\n   <span class=""nv"">$ </span>rostopic pub /rosshellX/stdin std_msgs/String <span class=""s2"">""sqrt(2.0)</span><span class=""se"">\\n</span><span class=""s2"">""</span>\n   <span class=""nv"">$ </span>rostopic pub /rosshellX/stdin std_msgs/String <span class=""s2"">""33^3</span><span class=""se"">\\n</span><span class=""s2"">""</span>\n   <span class=""nv"">$ </span>rostopic pub /rosshellX/stdin std_msgs/String <span class=""s2"">""quit</span><span class=""se"">\\n</span><span class=""s2"">""</span>\n\n</code></pre></div>\n<ol>\n<li>to interact a bit with stderr, simply subscribe for:</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">   <span class=""nv"">$ </span>rostopic <span class=""nb"">echo</span> /rosshellX/stderr\n\n</code></pre></div>\n<p>and publish some nonsense like</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">   <span class=""nv"">$ </span>rostopic pub /rosshellX/stdin std_msgs/String <span class=""s2"">""wtf</span><span class=""se"">\\n</span><span class=""s2"">""</span>\n\n</code></pre></div>\n<h3 id=""3-2-1-additional-functionality"">3.2.1 Additional functionality</h3>\n\n<p>To get some filesystem-information try:</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosshell rosshellX.py <span class=""s2"">""ls -Shal""</span>\n\n</code></pre></div>\n<p>or</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""gp"">$ </span>rosrun rosshell rosshellX.py _command:<span class=""o"">=</span><span class=""s2"">""ls -Shal""</span>\n\n</code></pre></div>\n<p>both are the same but you also have the possibility to change the command and\ntopics, also within the launch-file, have a look at rosshellX.launch ...</p>\n<div class=""highlight""><pre><code class=""language-xml"" data-lang=""xml""><span class=""nt"">&lt;node</span> <span class=""na"">pkg=</span><span class=""s"">""rosshell""</span> <span class=""na"">type=</span><span class=""s"">""rosshellX.py""</span> <span class=""na"">name=</span><span class=""s"">""rosshellBC""</span><span class=""nt"">&gt;</span>\n  <span class=""nt"">&lt;param</span> <span class=""na"">name=</span><span class=""s"">""command""</span> <span class=""na"">type=</span><span class=""s"">""String""</span> <span class=""na"">value=</span><span class=""s"">""bc""</span> <span class=""nt"">/&gt;</span>\n  <span class=""nt"">&lt;param</span> <span class=""na"">name=</span><span class=""s"">""stdout""</span>  <span class=""na"">type=</span><span class=""s"">""String""</span> <span class=""na"">value=</span><span class=""s"">""bc/stdout""</span> <span class=""nt"">/&gt;</span>\n  <span class=""nt"">&lt;param</span> <span class=""na"">name=</span><span class=""s"">""stdout""</span>  <span class=""na"">type=</span><span class=""s"">""String""</span> <span class=""na"">value=</span><span class=""s"">""bc/stderr""</span> <span class=""nt"">/&gt;</span>\n  <span class=""nt"">&lt;param</span> <span class=""na"">name=</span><span class=""s"">""stdin""</span>   <span class=""na"">type=</span><span class=""s"">""String""</span> <span class=""na"">value=</span><span class=""s"">""bc/stdin""</span> <span class=""nt"">/&gt;</span>\n<span class=""nt"">&lt;/node&gt;</span>\n\n</code></pre></div>\n<h2 id=""4-nodes"">4. Nodes</h2>\n\n<h3 id=""4-1-rosshell"">4.1 rosshell</h3>\n\n<p>Allows to run commands with no interaction possibilities.</p>\n\n<h3 id=""4-2-rosshellx"">4.2 rosshellX</h3>\n\n<p>Allows to run commands and enables an interaction over stdin and stdout.</p>\n\n<h4 id=""4-2-1-subscribed-topics"">4.2.1 Subscribed Topics</h4>\n\n<p>/rosshellX/stdin (std_msgs/String)</p>\n\n<p>The standard topic for stdin.</p>\n\n<h4 id=""4-2-2-published-topics"">4.2.2 Published Topics</h4>\n\n<p>/rosshellX/stdout (std_msgs/String)</p>\n\n<p>The current line of the stdout.</p>\n\n<p>/rosshellX/stderr (std_msgs/String)</p>\n\n<p>The current line of the stderr.</p>\n\n<h4 id=""4-2-3-parameters"">4.2.3 Parameters</h4>\n\n<p>command (string, default: """")</p>\n\n<p>Commands that will be executed.</p>\n\n<p>stdout (string, default: /rosshellX/stdout)</p>\n\n<p>Change the topic for stdout.</p>\n\n<p>stdin (string, default: /rosshellX/stdin)</p>\n\n<p>Change the topic for stdin.</p>\n\n<p>stderr (string, default: /rosshellX/stderr)</p>\n\n<p>Change the topic for stderr.</p>\n</div>\n\n            \n          </div>'"
wifi_ddwrt,http://rosindex.github.io/r/wifi_ddwrt/,"hydro,indigo",wifi_ddwrt,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""wifi_ddwrt"">wifi_ddwrt</h1>\n\n<p>The main documentation for the wifi_ddwrt package is the <a href=""http://wiki.ros.org/wifi_ddwrt"">wifi_ddwrt</a> page on the ROS wiki.</p>\n\n<p>For Hydro and newer versions of ROS, use the hydro-devel branch:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone -b hydro-devel https://github.com/ros-drivers/wifi_ddwrt.git\n</code></pre></div>\n<p>For Groovy and older version of ROS, use the master branch:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone -b master https://github.com/ros-drivers/wifi_ddwrt.git\n</code></pre></div>\n</div>\n\n            \n          </div>'"
lama_test,http://rosindex.github.io/r/lama_test/,indigo,lama_test,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dynamicvoronoi,http://rosindex.github.io/r/dynamicvoronoi/,indigo,dynamicvoronoi,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""dynamic_voronoi"">dynamic_voronoi</h1>\n</div>\n\n            \n          </div>'"
wireless,http://rosindex.github.io/r/wireless/,"hydro,indigo","wireless_msgs,wireless_watcher","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
homer_android_speech,http://rosindex.github.io/r/homer_android_speech/,indigo,android_speech_pkg,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
oculus_rviz_plugins,http://rosindex.github.io/r/oculus_rviz_plugins/,"hydro,groovy,indigo",oculus_rviz_plugins,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""oculus_rviz_plugins"">oculus_rviz_plugins</h1>\n\n<p>Contains the Oculus Display for RViz. To build it, you will need the <a href=""http://developer.oculusvr.com"">Oculus SDK for Linux 0.2.3</a>.</p>\n\n<p>This plugin is based on <a href=""https://bitbucket.org/rajetic/ogreoculus"">OgreOculus</a> (C++)\nand <a href=""https://github.com/bjornblissing/osgoculusviewer"">OsgOculusViewer</a> (GLSL shaders).</p>\n\n<h1 id=""usage-instructions"">Usage Instructions</h1>\n\n<p>In RViz, add the ""OculusDisplay"". This will create an additional window with a stereo rendering\nof the contents of the main RViz rendering area. Check ""Render to Oculus"" to \nrender in full screen mode on your Oculus headset. It must be set up as secondary screen\nfor this to work.</p>\n\n<p>By default, the Oculus view will be rendered from the same position as the main RViz camera while following\nyour head\'s orientation. Alternatively, you can attach the camera to a tf frame.</p>\n\n<p>This is how the Display should look like in windowed mode:</p>\n\n<p><img src=""https://raw.githubusercontent.com//ros-visualization/oculus_rviz_plugins/groovy-devel//doc/screenshot.png"" alt=""ScreenShot""></p>\n</div>\n\n            \n          </div>'"
reinforcement_learning,http://rosindex.github.io/r/reinforcement_learning/,indigo,"rl_agent,rl_common,rl_env,rl_experiment,rl_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n                          rl-texplore-ros-pkg\n               Reinforcement Learning Framework and Repository\n\n                             Todd Hester\n                             4 May 2011\n\n\n                           July 2015 Update\n          The indigo-devel branch of this repository contains a catkinized\n          version of the original codebase. If you are using ROS Groovy or\n          newer, you should check out this version.\n\nThe stacks directory contains a ROS stack for reinforcement learning (RL). The\ncode in this repository provides agents, environments, and multiple ways for\nthem to communicate (through ROS messages, or by including the agent and \nenvironment libraries). There are 5 packages in the repository:\n\n  rl_common:     Some files that are common to both agents and environments.\n  rl_msgs:       Definitions of ROS messages for agents and envs to communicate.\n  rl_agent:      A library of some RL agents including Q-Learning and TEXPLORE.\n  rl_env:        A library of some RL environments such as Taxi and Fuel World.\n  rl_experiment: Code to run some RL experiments without ROS message passing.\n\nDocumentation for these packages is here:\n\n  http://www.ros.org/wiki/reinforcement_learning\n\nAnd there is a more thorough tutorial here:\n\n  http://www.ros.org/wiki/reinforcement_learning/Tutorials/Reinforcement%20Learning%20Tutorial\n\nWorking with the ROS build system is difficult at first.  Expect a\nsteep learning curve.  Working through some of the ROS tutorials is\ndefinitely worthwhile when starting out.  Documentation:\n\n  http://www.ros.org/wiki/ROS.\n\nThe interfaces themselves are quite good.  So are the visualization\nand debugging tools.  And, there is an impressive amount of useful\nrobotics software already available in the ROS package system.\n\n\n\nDirections:\n\n\n (1) Check out a copy of the RL code base with ROS interfaces\n\n     Our packages have their own Github project.  Check\n     out the trunk of rl-texplore-ros-pkg:\n\n     $ git clone https://github.com/toddhester/rl-texplore-ros-pkg.git\n\n     This creates a copy of the source tree without commit access.\n\n     To commit changes yourself, create a github account and e-mail\n     the project owners requesting commit access.  \n\n\n (2) Install ROS as in http://www.ros.org/wiki/ROS/Installation\n\n     This is time-consuming, but not especially difficult.  Be careful\n     to follow the directions exactly.  It works fine on Ubuntu and\n     can be made to work for Mac OSX with some effort.  Windows will\n     probably not work, but there are future plans to support it.\n\n     Add the ROS environment setup to the end of your .bashrc:\n\n     $ echo ""source ~/ros/setup.sh"" &gt;&gt; ~/.bashrc\n\n     Append our packages as well as the ROS ones (this example does it\n     from the shell, or you can use any editor):\n\n     $ cat &lt;&lt;\'EOF\' &gt;&gt; ~/.bashrc\n     export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:~/svn/rl-texplore-ros-pkg\n     EOF\n\n\n (3) Log out and log back in.\n\n\n (4) Try to run some ROS commands:\n\n     $ rospack find rl_agent\n     $ roscd rl_agent\n     $ rosmake rl_agent\n\n     This should compile cleanly.\n\n\n (5) Try to run an RL experiment. First compile the code:\n\n     $ rosmake rl_agent\n     $ rosmake rl_env\n\n     Now we want to run the code to run our experiment. We need to start \n     both an agent and an environment, and they will interact by passing \n     rl_msg messages back and forth. Open three tabs in your terminal. Run\n     each of these commands in a different tab:\n\n     $ roscore\n     $ rosrun rl_agent agent --agent qlearner\n     $ rosrun rl_env env --env taxi\n\n     The second line starts an Q-Learner agent. There are other options to \n     start different agents. The third line starts a taxi environment. There \n     are other options here as well to start different environments. Options \n     for both of these can be seen with the -h option. In the agent window, \n     you\'ll see it print out the sum of rewards at the end of each episode.\n\n\n (6) ROS has some nice tools for plotting and recording data. To look at the\n     messages being passed during the experiment, type:\n\n     $ rostopic list\n\n     This prints a list of the current messages to the screen. Let\'s view a \n     particular message:\n\n     $ rostopic echo /rl_env/rl_state_reward\n\n     Here we can see the contents of the state reward message being sent by\n     the environment, which contains the current state vector, the reward,\n     and a boolean of whether this is a terminal state or not.\n\n     Another thing we can do using ros is make live plots. To make a live plot\n     of reward per episode, type:\n\n     $ rxplot /rl_agent/rl_experiment_info/episode_reward\n\n     One more thing that can be done is to record all the messages being passed\n     in order to view, replay, or plot them later. To record all the messages\n     sent by the agent, type:\n\n     $ rosbag record /rl_agent/rl_action /rl_agent/rl_experiment_info\n\n     Now we can play them back in place of an agent, and just have the saved \n     messages control the agent in the environment. Kill the agent, and let\'s\n     play back the recorded actions:\n\n     $ rosbag play &lt;bagfile&gt;\n\n\n (7) Finally, we can also run experiments without passing ROS messages using\n     the rl_experiment package. It includes both the agent and env libraries\n     directly, instead of doing message passing. First, compile this package:\n\n     $ rosmake rl_experiment\n\n     To run an experiment, we pass an agent and an environment on the \n     command line, and we can also pass other options. Once it starts running,\n     it will print out the sum of rewards per episode for episodic tasks, or \n     the per step rewards for non-episodic tasks. Let\'s try running R-Max with\n     M = 1 on deterministic Fuel World:\n\n     $ rosrun rl_experiment experiment --agent rmax --m 1 --env fuelworld --deterministic\n\n\n\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
app_manager,http://rosindex.github.io/r/app_manager/,"hydro,indigo",app_manager,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
oculus_sdk,http://rosindex.github.io/r/oculus_sdk/,"hydro,groovy,indigo",oculus_sdk,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""oculussdk"">OculusSDK</h1>\n\n<p>Oculus SDK with modifications for Linux development and Java development.  The\n\'master\' branch will attempt to track the publicly released SDK version, while\nadditional branches will be used for my custom modifications.  </p>\n\n<p>All code not explicitly marked with another license is made available under the\nterms of the Oculus SDK license, included in this kit as LICENSE.TXT and \navailable online at <a href=""https://developer.oculusvr.com/license"">https://developer.oculusvr.com/license</a> and is Copyright 2013\nOculus VR, Inc.</p>\n\n<p>Currently the \'linux\' branch contains modifications to the SDK that allow the \nSensorBox sample to function with my local Ubuntu 13.04 distribution.  It is \ncurrently a work in progress and no guarantee is made that you will be able to \ncompile or run the application without significant effort installing dependencies\nand or fiddling with Makefiles.  Good luck!</p>\n\n<p>June 2013\nBrad Davis</p>\n</div>\n\n            \n          </div>'"
willow_maps,http://rosindex.github.io/r/willow_maps/,"hydro,indigo",willow_maps,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
capabilities,http://rosindex.github.io/r/capabilities/,"hydro,groovy,kinetic,indigo",capabilities,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""capabilities"">Capabilities</h1>\n\n<p>Implements the concept of capabilities as part of the <a href=""http://www.robotconcert.org/index.php/Appable_Robot"">appable\nrobot</a>. The\ndevelopment of the appable robot is part of the <a href=""http://www.robotconcert.org"">Robotics-in-Concert\n(ROCON)</a> project.</p>\n\n<p>Continuous Integration:</p>\n\n<p><a href=""https://travis-ci.org/osrf/capabilities""><img src=""https://travis-ci.org/osrf/capabilities.svg?branch=master"" alt=""image""></a></p>\n\n<p><a href=""https://coveralls.io/r/osrf/capabilities?branch=master""><img src=""https://coveralls.io/repos/osrf/capabilities/badge.png?branch=master"" alt=""image""></a></p>\n\n<p>Please see the documentation located here:</p>\n\n<p><a href=""http://wiki.ros.org/capabilities"">http://wiki.ros.org/capabilities</a></p>\n\n<p><a href=""http://wiki.ros.org/capabilities/Tutorials"">http://wiki.ros.org/capabilities/Tutorials</a></p>\n\n<p><a href=""http://docs.ros.org/hydro/api/capabilities/html/"">http://docs.ros.org/hydro/api/capabilities/html/</a></p>\n\n<p><a href=""http://www.robotconcert.org/index.php/Appable_Robot"">http://www.robotconcert.org/index.php/Appable_Robot</a></p>\n\n<p><img src=""http://www.robotconcert.org/images/c/c3/A4_nomal_png_a_small.png"" alt=""Robotics in Concert""></p>\n</div>\n\n            \n          </div>'"
heatmap,http://rosindex.github.io/r/heatmap/,"hydro,jade",heatmap,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""heatmap"">heatmap</h1>\n\n<p>ROS package for automated creation of visual WiFi heatmaps.\nIt uses RViz for visualizing the heatmap at the moment, image file export is planned for future releases.  </p>\n\n<p>For coverage path planning it uses the ""Moe the autonomous lawnmower"" planner:<br>\n<a href=""https://github.com/Auburn-Automow/au_automow_common"">https://github.com/Auburn-Automow/au_automow_common</a></p>\n\n<p>It also uses the RViz point to polygon user interface from the frontier_exploration package by Paul Bovbel:    <a href=""https://github.com/paulbovbel/frontier_exploration"">https://github.com/paulbovbel/frontier_exploration</a>  </p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>The path planner depends on the ""shapely"" python module.<br>\nLearn how to install it here:<br>\n<a href=""https://pypi.python.org/pypi/Shapely"">https://pypi.python.org/pypi/Shapely</a>  </p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
s3000_laser,http://rosindex.github.io/r/s3000_laser/,"hydro,groovy,fuerte,indigo",s3000_laser,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""s3000_laser"">s3000_laser</h1>\n\n<p>ROS driver to read the scan data from the device SICK S3000</p>\n</div>\n\n            \n          </div>'"
audio_common,http://rosindex.github.io/r/audio_common/,"hydro,fuerte,electric,groovy,jade,indigo","audio_capture,audio_common,audio_common_msgs,audio_play,sound_play","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rocon_concert,http://rosindex.github.io/r/rocon_concert/,"hydro,groovy,fuerte,indigo","concert_conductor,concert_master,concert_schedulers,concert_service_link_graph,concert_service_manager,concert_service_utilities,concert_software_farmer,concert_utilities,rocon_concert,rocon_tf_reconstructor,concert_orchestra,rocon_conductor,rocon_master_sync,rocon_orchestra,rocon_qorchestra","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;h1&gt; Robotics in Concert &lt;/h1&gt;\n\n\nhttp://www.robotconcert.org/wiki/Main_Page\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;h1&gt; Robotics in Concert &lt;/h1&gt;\n\n\nhttp://wiki.ros.org/rocon/indigo/Guide\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
pocketsphinx,http://rosindex.github.io/r/pocketsphinx/,"hydro,jade,groovy,indigo",pocketsphinx,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Pocketsphinx wrapper for ROS</p>\n\n<p>The new FSG support appears to require version 0.8 of\ngstreamer0.10-pocketsphinx and related packages.  Ubuntu 12.04 (Precise)\nuses version 0.5.1 of these pacakges which must be removed and\nreplaced.  The 0.8 versions can be found from the Raring repository\n(<a href=""http://packages.ubuntu.com/raring/gstreamer0.10-pocketsphinx"">http://packages.ubuntu.com/raring/gstreamer0.10-pocketsphinx</a>).</p>\n\n<p>After removing all 0.5.1 versions of the pocketsphinx packages,\ninstall the 0.8 versions of the following packages:</p>\n\n<ul>\n<li>gstreamer0.10-pocketsphinx</li>\n<li>pocketsphinx-utils</li>\n<li>python-pocketsphinx</li>\n<li>libpocketsphinx1</li>\n<li>pocketsphinx-hmm-en-hub4wsj</li>\n<li>pocketsphinx-lm-en-hub4</li>\n<li>pocketsphinx-lm-wsj</li>\n<li>pocketsphinx-hmm-en-tidigits</li>\n<li>pocketsphinx-hmm-tidigits</li>\n<li>libpocketsphinx-dev</li>\n<li>libsphinxbase-dev</li>\n<li>libsphinxbase1</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Pocketsphinx wrapper for ROS</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>A simple ROS wrapper for using Pocketsphinx (via gstreamer) with ROS. See docs here <a href=""http://wiki.ros.org/pocketsphinx"">http://wiki.ros.org/pocketsphinx</a></p>\n\n<p>If installing from source you will need to install the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install gstreamer0.10-pocketsphinx\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
depthcloud_encoder,http://rosindex.github.io/r/depthcloud_encoder/,"hydro,jade,groovy,indigo",depthcloud_encoder,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""depthcloud_encoder"">depthcloud_encoder <a href=""https://travis-ci.org/RobotWebTools/depthcloud_encoder""><img src=""https://api.travis-ci.org/RobotWebTools/depthcloud_encoder.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""point-cloud-encoder-for-web-based-streaming"">Point Cloud Encoder for Web-Based Streaming</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/depthcloud_encoder"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/depthcloud_encoder/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<p>This project is released as part of the <a href=""http://robotwebtools.org/"">Robot Web Tools</a> effort.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>depthcloud_encoder is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
siemens_experimental,http://rosindex.github.io/r/siemens_experimental/,"hydro,indigo","siemens_cp1616,cp1616","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""siemens_experimental"">siemens_experimental</h1>\n</div>\n\n            \n          </div>'"
slam6d_exporter,http://rosindex.github.io/r/slam6d_exporter/,"hydro,fuerte,electric,groovy,diamondback,indigo","slam6d_exporter,slam_exporter","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
epuck_driver,http://rosindex.github.io/r/epuck_driver/,"hydro,indigo",epuck_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-driver-for-e-puck-robot"">ROS Driver for E-Puck Robot</h1>\n\n<p>ROS Driver for <a href=""http://www.e-puck.org/"">e-puck robot</a>. \nIt is based on the <a href=""https://github.com/mmartinortiz/pyePuck"">pyePuck library</a>.</p>\n\n<p>This driver is maintained by the <a href=""http://verlab.dcc.ufmg.br/"">Verlab</a> Laboratory at Universidade Federal de Minas Gerais.</p>\n\n<h2 id=""requirements"">Requirements</h2>\n\n<p>Libraries</p>\n\n<ul>\n<li>Python Bluetooth or Pybluez</li>\n<li>Python Image Library (PIL)</li>\n</ul>\n\n<p>E-puck robots must run the  <a href=""www.cyberbotics.com"">webots</a> firmware (resources/firmware/webots-firmware-1.4.4.hex).</p>\n\n<h2 id=""how-to-use"">How to use</h2>\n\n<p>Run the epuck_controller.launch with the e-puck\'s  MAC address (eg. 10:00:E8:6C:D7:E8)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch epuck_driver epuck_controller.launch epuck_address:=\'MAC\'\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-driver-for-e-puck-robot"">ROS Driver for E-Puck Robot</h1>\n\n<p>This is a fork of this <a href=""https://github.com/verlab-ros-pkg/epuck_driver"">repo</a>.\nIt is extended to support all the e-puck sensors.</p>\n\n<p>This driver is maintained by <a href=""http://www.gctronic.com/"">GCtronic</a>.</p>\n\n<h2 id=""how-to-use"">How to use</h2>\n\n<p>For detailed informations about the driver refer to the <a href=""http://www.gctronic.com/doc/index.php/E-Puck#ROS"">e-puck ROS wiki</a>.</p>\n</div>\n\n            \n          </div>'"
aruco_ros,http://rosindex.github.io/r/aruco_ros/,"hydro,jade,indigo","aruco,aruco_msgs,aruco_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""aruco_ros"">aruco_ros</h1>\n\n<p>Software package and ROS wrappers of the <a href=""http://www.sciencedirect.com/science/article/pii/S0031320314000235"" title=""Automatic generation and detection of highly reliable fiducial markers under occlusion by S. Garrido-Jurado and R. Mu\xc3\xb1oz-Salinas and F.J. Madrid-Cuevas and M.J. Mar\xc3\xadn-Jim\xc3\xa9nez 2014"">Aruco</a> Augmented Reality marker detector library.</p>\n\n<h3 id=""features"">Features</h3>\n\n<p><img align=""right"" src=""https://raw.github.com/pal-robotics/aruco_ros/master/aruco_ros/etc/marker_in_hand.jpg"">\n * High-framerate tracking of AR markers\n * Generate AR markers with given size and optimized for minimal perceptive ambiguity (when there are more markers to track)\n * Enhanced precision tracking by using boards of markers\n * ROS wrappers</p>\n\n<h3 id=""applications"">Applications</h3>\n\n<ul>\n<li>Object pose estimation</li>\n<li>Visual servoing: track object and hand at the same time</li>\n</ul>\n\n<p><img align=""right"" src=""https://raw.github.com/pal-robotics/aruco_ros/master/aruco_ros/etc/reem_gazebo_floating_marker_world.png""></p>\n\n<h3 id=""ros-api"">ROS API</h3>\n\n<h4 id=""messages"">Messages</h4>\n\n<ul>\n<li>\n<p>aruco_ros/Marker.msg</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Header header\nuint32 id\ngeometry_msgs/PoseWithCovariance pose\nfloat64 confidence\n</code></pre></div>\n</li>\n<li>\n<p>aruco_ros/MarkerArray.msg</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Header header\naruco_ros/Marker[] markers\n</code></pre></div>\n</li>\n</ul>\n\n<h3 id=""test-it-with-reem"">Test it with REEM</h3>\n\n<ul>\n<li>Open a REEM in simulation with a marker floating in front of the robot. This will start the stereo cameras of the robot too. Since this is only a vision test, there is nothing else in this world apart from the robot and a marker floating in front of it. An extra light source had to be added to compensate for the default darkness.</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    roslaunch reem_gazebo reem_gazebo.launch world:=floating_marker\n\n</code></pre></div>\n<ul>\n<li>Launch the <code>image_proc</code> node to get undistorted images from the cameras of the robot.</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    ROS_NAMESPACE=/stereo/right rosrun image_proc image_proc image_raw:=image\n\n</code></pre></div>\n<ul>\n<li>Start the <code>single</code> node which will start tracking the specified marker and will publish its pose in the camera frame</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    roslaunch aruco_ros single.launch markerId:=26 markerSize:=0.08 eye:=""right""\n\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">the frame in which the pose is refered to can be chosen with the \'ref_frame\' argument. The next example forces the marker pose to\nbe published with respect to the robot base_link frame:\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    roslaunch aruco_ros single.launch markerId:=26 markerSize:=0.08 eye:=""right"" ref_frame:=/base_link\n\n</code></pre></div>\n<ul>\n<li>Visualize the result</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    rosrun image_view image_view image:=/aruco_single/result\n\n</code></pre></div>\n<p><img align=""right"" src=""https://raw.github.com/pal-robotics/aruco_ros/master/aruco_ros/etc/reem_gazebo_floating_marker.png""></p>\n</div>\n\n            \n          </div>'"
labust_common_msgs,http://rosindex.github.io/r/labust_common_msgs/,hydro,"auv_msgs,misc_msgs,navcon_msgs,underwater_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""labust-common-msgs"">labust-common-msgs</h1>\n\n<p>The common ROS messages between the ros-pkg repositories.</p>\n</div>\n\n            \n          </div>'"
labust_ros_pkg,http://rosindex.github.io/r/labust_ros_pkg/,hydro,"ident_so,labust_allocation,labust_control,labust_diagnostics,labust_execution,labust_framework,labust_mission,labust_navigation,labust_primitives,labust_sim,snippets","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""labust-ros-pkg"">labust-ros-pkg</h1>\n\n<p>The UNIZG-FER Laboratory for Underwater System and Technologies ROS libraries and application repository.</p>\n</div>\n\n            \n          </div>'"
rocon_qt_gui,http://rosindex.github.io/r/rocon_qt_gui/,"hydro,groovy,indigo","concert_admin_app,concert_conductor_graph,concert_qt_image_stream,concert_qt_make_a_map,concert_qt_map_annotation,concert_qt_service_info,concert_qt_teleop,rocon_gateway_graph,rocon_qt_app_manager,rocon_qt_gui,rocon_qt_library,rocon_qt_listener,rocon_qt_master_info,rocon_qt_teleop,rocon_remocon,rocon_conductor_graph,rocon_rqt_plugins","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon_rqt_plugins"">rocon_rqt_plugins</h1>\n\n<p>Rqt graphical tools for rocon.</p>\n\n<h1 id=""rocon-qt-app-manager-gui"">Rocon Qt App Manager GUI</h1>\n\n<p>First, download the \n<code>rocon_qt_qui\n</code>, and change the branch to \n<code>implementation_app_manager_app\n</code>.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; cd &lt;rocon workspace&gt;/src\n&gt; git clone https://github.com/robotics-in-concert/rocon_qt_gui.git\n&gt; cd rocon_qt_gui\n&gt; git checkout implementation_app_manager_app\n&gt; yujin_make\n&gt; setup &lt;rocon workspace&gt;/devel/setup.bash\n\n</code></pre></div>\n<p>you can check the branch using \n<code>git status\n</code>, and see the following message.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; cd &lt;rocon workspace&gt;/src/rocon_qt_gui\n&gt; git status\n# On branch implementation_app_manager_app\n\n</code></pre></div>\n<p>Now you launch the chatter concert. </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; roslaunch rocon_app_manager standalone.launch --screen\n\n</code></pre></div>\n<p>And then start the app manager gui.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; rocon_qt_app_manager\n\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon_rqt_plugins"">rocon_rqt_plugins</h1>\n\n<p>Rqt graphical tools for rocon.</p>\n</div>\n\n            \n          </div>'"
pmb2_robot,http://rosindex.github.io/r/pmb2_robot/,"hydro,indigo","pmb2_bringup,pmb2_controller_configuration,pmb2_description,pmb2_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pmb2_robot"">pmb2_robot</h1>\n</div>\n\n            \n          </div>'"
pmb2_simulation,http://rosindex.github.io/r/pmb2_simulation/,"hydro,indigo","pmb2_controller_configuration_gazebo,pmb2_gazebo,pmb2_hardware_gazebo,pmb2_simulation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pmb2_simulation"">pmb2_simulation</h1>\n</div>\n\n            \n          </div>'"
3d_interaction,http://rosindex.github.io/r/3d_interaction/,"hydro,groovy,indigo","projected_interface_tools,projector_calibration,projector_interface,world_intersect,blob3d,external_camera_localizer,projected_lightswitch_interface,rcommander_interface","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
slam_gmapping,http://rosindex.github.io/r/slam_gmapping/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","gmapping,slam_gmapping","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
object_recognition_ros,http://rosindex.github.io/r/object_recognition_ros/,"hydro,fuerte,groovy,kinetic,jade,indigo",object_recognition_ros,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
staubli,http://rosindex.github.io/r/staubli/,"hydro,indigo","staubli,staubli_resources,staubli_rx160_moveit_config,staubli_rx160_moveit_plugins,staubli_rx160_support","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""staubli"">Staubli</h1>\n\n<p><a href=""http://wiki.ros.org/Industrial"">ROS-Industrial</a> Staubli meta-package. See the <a href=""http://wiki.ros.org/staubli"">ROS wiki</a> page for more\ninformation.</p>\n</div>\n\n            \n          </div>'"
lwr_robot,http://rosindex.github.io/r/lwr_robot/,"hydro,electric,groovy,fuerte","lwr_bringup,lwr_defs,lwr_impedance_controller,lwr_simulation","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
phantomx_description,http://rosindex.github.io/r/phantomx_description/,"hydro,indigo",phantomx_description,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""phantomx_description"">phantomx_description</h2>\n\n<p>ROS package providing mesh files and URDF of the Phantom X Hexapod robot for use with the real robot or Gazebo.\nURDF contains joint transmissions for controllers and Gazebo referenced plugins for camera and the IMU provided by hector_gazebo.</p>\n\n<p><img src=""https://raw.githubusercontent.com//HumaRobotics/phantomx_description/master///phantomx.png?raw=true"" alt=""Phantom X model in Gazebo"" title=""Phantom X model in Gazebo""></p>\n\n<h2 id=""install"">Install</h2>\n\n<p>Just clone in your catkin workspace. You may need to install the hector_gazebo ROS package.</p>\n\n<h2 id=""license"">License</h2>\n\n<p>This software is provided by G\xc3\xa9n\xc3\xa9ration Robots <a href=""http://www.generationrobots.com"">http://www.generationrobots.com</a> and HumaRobotics <a href=""http://www.humarobotics.com"">http://www.humarobotics.com</a> under the Simplified BSD license</p>\n</div>\n\n            \n          </div>'"
phantomx_control,http://rosindex.github.io/r/phantomx_control/,"hydro,indigo",phantomx_control,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""phantomx_control"">phantomx_control</h2>\n\n<p>ROS package providing ROS controller description and launch files for the Phantom X hexapod robot</p>\n\n<p><img src=""https://raw.githubusercontent.com//HumaRobotics/phantomx_control/master///phantomx.png?raw=true"" alt=""Phantom X model in Gazebo"" title=""Phantom X model in Gazebo""></p>\n\n<h2 id=""install"">Install</h2>\n\n<p>Just clone in your catkin workspace. Launch with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch phantomx_control phantomx_control.launch\n</code></pre></div>\n<p>For gazebo simulation this file is launched automatically by the launchers from phantomx_gazebo.</p>\n\n<h2 id=""license"">License</h2>\n\n<p>This software is provided by G\xc3\xa9n\xc3\xa9ration Robots <a href=""http://www.generationrobots.com"">http://www.generationrobots.com</a> and HumaRobotics <a href=""http://www.humarobotics.com"">http://www.humarobotics.com</a> under the Simplified BSD license</p>\n</div>\n\n            \n          </div>'"
turtlebot_concert,http://rosindex.github.io/r/turtlebot_concert/,indigo,turtlebot_concert,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot_concert"">turtlebot_concert</h1>\n\n<p>solutions for multi TurtleBot usecases.</p>\n</div>\n\n            \n          </div>'"
phantomx_gazebo,http://rosindex.github.io/r/phantomx_gazebo/,"hydro,indigo",phantomx_gazebo,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""phantomx_gazebo"">phantomx_gazebo</h2>\n\n<p>ROS package providing Gazebo simulation of the Phantom X Hexapod robot.\nAlso provides a Python interface to the joints and some walk capabilities.</p>\n\n<p>These have been tested in simulation and need some work to be used on the real robot, do not use as-is.</p>\n\n<p><img src=""https://raw.githubusercontent.com//HumaRobotics/phantomx_gazebo/master///phantomx.png?raw=true"" alt=""Phantom X model in Gazebo"" title=""Phantom X model in Gazebo""></p>\n\n<h2 id=""install"">Install</h2>\n\n<p>Clone in your catkin workspace and catkin_make it.\nMake sure you also have the following packages in your workspace\n* phantomx_description: <a href=""https://github.com/HumaRobotics/phantomx_description"">https://github.com/HumaRobotics/phantomx_description</a>\n* phantomx_control: <a href=""https://github.com/HumaRobotics/phantomx_control"">https://github.com/HumaRobotics/phantomx_control</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>You can launch the simulation with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch phantomx_gazebo phantomx_gazebo.launch\n</code></pre></div>\n<p>PRESS PLAY IN GAZEBO ONLY WHEN EVERYTHING IS LOADED (wait for controllers)</p>\n\n<p>You can run a walk demo with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun phantomx_gazebo walker_demo.py\n</code></pre></div>\n<h2 id=""ros-api"">ROS API</h2>\n\n<p>All topics are provided in the /phantomx namespace.</p>\n\n<p>Sensors:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/phantomx/joint_states\n</code></pre></div>\n<p>Actuators (radians for position control, arbitrary normalized speed for cmd_vel):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/phantomx/cmd_vel\n/phantomx/j_c1_lf_position_controller/command\n/phantomx/j_c1_lm_position_controller/command\n/phantomx/j_c1_lr_position_controller/command\n/phantomx/j_c1_rf_position_controller/command\n/phantomx/j_c1_rm_position_controller/command\n/phantomx/j_c1_rr_position_controller/command\n/phantomx/j_thigh_lf_position_controller/command\n/phantomx/j_thigh_lm_position_controller/command\n/phantomx/j_thigh_lr_position_controller/command\n/phantomx/j_thigh_rf_position_controller/command\n/phantomx/j_thigh_rm_position_controller/command\n/phantomx/j_thigh_rr_position_controller/command\n/phantomx/j_tibia_lf_position_controller/command\n/phantomx/j_tibia_lm_position_controller/command\n/phantomx/j_tibia_lr_position_controller/command\n/phantomx/j_tibia_rf_position_controller/command\n/phantomx/j_tibia_rm_position_controller/command\n/phantomx/j_tibia_rr_position_controller/command\n</code></pre></div>\n<h2 id=""python-api"">Python API</h2>\n\n<p>Basic usage:</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">import</span> <span class=""nn"">rospy</span>\n<span class=""kn"">from</span> <span class=""nn"">phantomx_gazebo.phantomx</span> <span class=""kn"">import</span> <span class=""n"">PhantomX</span>\n\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">init_node</span><span class=""p"">(</span><span class=""s"">""walker_demo""</span><span class=""p"">)</span>\n\n<span class=""n"">phantomx</span><span class=""o"">=</span><span class=""n"">PhantomX</span><span class=""p"">()</span>\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""p"">)</span>\n\n<span class=""n"">phantomx</span><span class=""o"">.</span><span class=""n"">set_walk_velocity</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""p"">,</span><span class=""mi"">0</span><span class=""p"">,</span><span class=""mi"">0</span><span class=""p"">)</span> <span class=""c""># Set full speed ahead for 5 secs</span>\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">sleep</span><span class=""p"">(</span><span class=""mi"">5</span><span class=""p"">)</span>\n<span class=""n"">phantomx</span><span class=""o"">.</span><span class=""n"">set_walk_velocity</span><span class=""p"">(</span><span class=""mi"">0</span><span class=""p"">,</span><span class=""mi"">0</span><span class=""p"">,</span><span class=""mi"">0</span><span class=""p"">)</span> <span class=""c""># Stop</span>\n\n</code></pre></div>\n<h2 id=""dependencies"">Dependencies</h2>\n\n<p>The following ROS packages have to be installed:\n* gazebo_ros_control</p>\n\n<h2 id=""license"">License</h2>\n\n<p>This software is provided by G\xc3\xa9n\xc3\xa9ration Robots <a href=""http://www.generationrobots.com"">http://www.generationrobots.com</a> and HumaRobotics <a href=""http://www.humarobotics.com"">http://www.humarobotics.com</a> under the Simplified BSD license</p>\n</div>\n\n            \n          </div>'"
rocon_devices,http://rosindex.github.io/r/rocon_devices/,"hydro,indigo","rocon_iot_bridge,rocon_python_hue,rocon_devices,rocon_hue,rocon_ninjablock_bridge,rocon_rtsp_camera_relay,rocon_smartthings_bridge","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon_devices"">rocon_devices</h1>\n\n<p>A collection of device drivers involved in rocon</p>\n\n<ul>\n<li><a href=""http://wiki.ros.org/rocon_hue"">rocon_hue</a></li>\n<li><a href=""http://wiki.ros.org/rocon_rtsp_camera_relay"">rocon_rtsp_camera_relay</a></li>\n<li><a href="""">rocon_smartthings_bridge</a></li>\n<li><a href="""">rocon_ninjablock_bridge</a></li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon_devices"">rocon_devices</h1>\n\n<p>A collection of device drivers involved in rocon</p>\n\n<h2 id=""roshue"">roshue</h2>\n\n<p>For controlling PHILIPS hue by ros topic.</p>\n\n<p>First, connect the bridge in your local network. The user have to get the hue bridge ip from <a href=""https://www.meethue.com/api/nupnp"">meethue</a> and set the hue ip in roslauch file.\nAfter above process, run the hue bridge by following command</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; roslaunch rocon_hue hue_bridge_server.launch --screen\n\n</code></pre></div>\n<p>If hue bridge connection is alright, you can see the this message.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">[INFO] [WallTime: 1397022783.781245] bridge connect\n\n</code></pre></div>\n<p>Also, you can check the topic list</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/list_hue\n/set_hue\n\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-/hue_list"" data-lang=""/hue_list"">``` topic publish the valid hue bulb list. If you change the hue bulb color, you can use the one of \n```/set_hue\n``` topics with hsv color space. We also refer to easy method in order to change color. If you want easliy to change color, you only set the light_id and predefined color. \nExample)\n\n</code></pre></div>\n<blockquote>\n<p>rostopic pub /set_hue rocon_device_msgs/Hue ""light_id: 0\n  type: \'\'\n  name: \'\'\n  modelid: \'\'\n  swvesion: \'\'\n  state: {\'on\': false, hue: 0, sat: 0, bri: 0, reachable: false, color: \'RED\'}""</p>\n</blockquote>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">\nThe predefiend color list is described at [HueState](https://github.com/robotics-in-concert/rocon_msgs/blob/indigo/rocon_device_msgs/msg/HueState.msg)\n</code></pre></div>\n</div>\n\n            \n          </div>'"
dlut_vision,http://rosindex.github.io/r/dlut_vision/,indigo,"dlut_vision,dlut_libvo,dlut_viso2,dlut_viso2_ros,test_point","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
head_action,http://rosindex.github.io/r/head_action/,"hydro,indigo",head_action,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""head_action"">head_action</h1>\n\n<p>Robot agnostic head action interface</p>\n</div>\n\n            \n          </div>'"
video_stream_opencv,http://rosindex.github.io/r/video_stream_opencv/,"hydro,jade,indigo",video_stream_opencv,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>A package to view video streams based on the <a href=""http://docs.opencv.org/modules/highgui/doc/reading_and_writing_images_and_video.html#videocapture"">OpenCV VideoCapture module</a>, easy way to publish on a ROS Image topic (including camera info) usb cams, ethernet cameras, video streams or video files. It also supports flipping of images.</p>\n\n<p><img src=""https://raw.githubusercontent.com/pal-robotics/video_stream_opencv/master/screenshot_usage.png"" alt=""Screenshot of the plugin working with a webcam, video stream and video file""></p>\n\n<p>Example usages in launch folder (only the argument <code>video_stream_provider</code> is mandatory):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;launch&gt;\n   &lt;!-- launch video stream --&gt;\n   &lt;include file=""$(find video_stream_opencv)/launch/camera.launch"" &gt;\n        &lt;!-- node name and ros graph name --&gt;\n        &lt;arg name=""camera_name"" value=""webcam"" /&gt;\n        &lt;!-- means video device 0, /dev/video0 --&gt;\n        &lt;arg name=""video_stream_provider"" value=""0"" /&gt;\n        &lt;!-- throttling the querying of frames to --&gt;\n        &lt;arg name=""fps"" value=""30"" /&gt;\n        &lt;!-- setting frame_id --&gt;\n        &lt;arg name=""frame_id"" value=""webcam"" /&gt;\n        &lt;!-- camera info loading, take care as it needs the ""file:///"" at the start , e.g.:\n        ""file:///$(find your_camera_package)/config/your_camera.yaml"" --&gt;\n        &lt;arg name=""camera_info_url"" value="""" /&gt;\n        &lt;!-- flip the image horizontally (mirror it) --&gt;\n        &lt;arg name=""flip_horizontal"" value=""false"" /&gt;\n        &lt;!-- flip the image vertically --&gt;\n        &lt;arg name=""flip_vertical"" value=""false"" /&gt;\n        &lt;!-- visualize on an image_view window the stream generated --&gt;\n        &lt;arg name=""visualize"" value=""true"" /&gt;\n   &lt;/include&gt;\n&lt;/launch&gt;\n</code></pre></div>\n<p>Based on the ROS <a href=""http://wiki.ros.org/image_transport/Tutorials/PublishingImages"">tutorial to convert opencv images to ROS messages</a>.</p>\n\n<p>===</p>\n\n<p>You can use any input that OpenCV on your system accepts, e.g.:</p>\n\n<ul>\n<li><p>Video devices that appear in linux as /dev/videoX, e.g.: USB webcams appearing as /dev/video0</p></li>\n<li><p>Video streamings, e.g.: rtsp://wowzaec2demo.streamlock.net/vod/mp4:BigBuckBunny_115k.mov</p></li>\n<li><p>Video files, anything you can play, e.g.: myvideo.avi</p></li>\n<li><p>Etc.</p></li>\n</ul>\n\n<p>===</p>\n\n<p>In the scripts folder you\'ll find <code>test_video_resource.py</code> which you can use to test if your system\ninstallation can use this node to open your video stream (not using any ROS). Just do any of those:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">./test_video_resource.py 0\n./test_video_resource.py rtsp://wowzaec2demo.streamlock.net/vod/mp4:BigBuckBunny_115k.mov\n./test_video_resource.py /home/youruser/myvideo.mkv\n</code></pre></div>\n<p>And you\'ll see an output like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Trying to open resource: /dev/video0\nCorrectly opened resource, starting to show feed.\n</code></pre></div>\n<p>With an OpenCV image show window showing the stream (which should close when pressing ESC, or Control+C the shell).</p>\n</div>\n\n            \n          </div>'"
talos_audio,http://rosindex.github.io/r/talos_audio/,"hydro,indigo",talos_audio,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">## Author: Devon Ash\n## Maintainer: noobaca2@gmail.com\n\nLanguage tools found here:\nhttp://www.speech.cs.cmu.edu/tools/lmtool.html\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""author-devon-ash"">Author: Devon Ash</h2>\n\n<h2 id=""maintainer-noobaca2-gmail-com"">Maintainer: <a href=""mailto:noobaca2@gmail.com"">noobaca2@gmail.com</a>\n</h2>\n\n<p>Language tools found here:\n<a href=""http://www.speech.cs.cmu.edu/tools/lmtool.html"">http://www.speech.cs.cmu.edu/tools/lmtool.html</a></p>\n\n<p>This package contains the speech commands that the Talos robot accepts as a ROS service.</p>\n\n<p>You must also install pocketsphinx and gstreamer0.10-conf.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install pocketsphinx &amp;&amp; gstreamer0.10-conf\n</code></pre></div>\n<p>To launch the listener:\n    roslaunch talos_audio listener.launch</p>\n\n<p>To launch the recognizer: \n    roslaunch talos_audio recognizer.launch</p>\n\n<p>To see what commands are accepted by the robot, open the file speech_commands.corpus:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roscd talos_audio\ncd speech_dictionaries/simple_speech\ncat speech_commands.corpus\n</code></pre></div>\n<p>To generate new commands, follow the tutorial at <a href=""http://www.speech.cs.cmu.edu/tools/lmtool.html"">http://www.speech.cs.cmu.edu/tools/lmtool.html</a> and replace the existing files inside the talos_audio ROS package.</p>\n\n<p>Usage:</p>\n\n<p>The listener should be brought up first and then the recognizer after. The listener \nlistens to commands and then the recognizer program produces something when a command is detected.</p>\n\n<p>the /say service, if called, will tell the robot what to say. For example, calling /say like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /say \'hi\'\n</code></pre></div>\n<p>will output \'hi\' from the speakers.</p>\n\n<p>Calling the service /listen_for_all will tell the robot to be conscious for all of the dictionary words until it hears one of those words, upon which \nit will put whatever word it heard on the recognizer/output topic. </p>\n\n<p>Example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call listen_for_all devon ok\n</code></pre></div>\n<p>The recognizer/start function is called which waits until either \'devon\' or \'ok\' is heard. when it is heard, the word is then outputted to recognizer/output and recognizer/stop is called.</p>\n\n<p>This should handle all of the voice recognition needed for Talos.</p>\n</div>\n\n            \n          </div>'"
rtt_geometry,http://rosindex.github.io/r/rtt_geometry/,"hydro,fuerte,electric,groovy,jade,indigo","eigen_typekit,kdl_typekit,rtt_geometry,kdl_lua,rtt_kdl_conversions,rtt_tf","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
play_motion,http://rosindex.github.io/r/play_motion/,"hydro,fuerte,indigo","play_motion,play_motion_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""play_motion"">play_motion</h1>\n\n<p>This repository consists of <code>play_motion</code>, a tool to play and handle\npre-recorded motions, and its associated messages in <code>play_motion_msgs</code></p>\n\n<p>Have a look at the main \n<a href=""https://github.com/pal-robotics/play_motion/blob/hydro-devel/play_motion/README.md"">README</a> file\nto see how it works.</p>\n\n<p><a href=""http://jenkins.ros.org/job/devel-hydro-play_motion/""><img src=""http://jenkins.ros.org/job/devel-hydro-play_motion/badge/icon"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cwru-ros-pkg,http://rosindex.github.io/r/cwru-ros-pkg/,"hydro,electric,fuerte","abb_common,abby_control,abby_description,abby_gazebo,cwru_376_launchers,cwru_urdf,rviz_plugin_selected_points_topic,example_des_state_generator,example_interactive_marker,example_irb120_im_interface,example_joint_space_planner,lidar_alarm,example_path_maker,example_pcl,example_robot_commander,example_robot_interface,example_ros_class,example_ros_service,example_steering_algorithm,example_tf_listener,irb120_ik,minimal_nodes,cwru_base,cwru_configs,cwru_maps,cwru_msgs,cwru_nav,cwru_srv,cwru_teleop,motor_controller,playsound_recovery,rosbag_to_matlab,yale_openhand_models,cwru_jaus,cwru_kalibrater,cwru_obstacle_planner,cwru_vision,cwru_voice,cwru_wsn_steering,wagon_handle_steering,cwru_description,cwru_goal_planner,cwru_sim_gazebo,cwru_sim_stage,xv_11_laser_driver,cwru_utilities","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">So, to run this on the HARLIE:\n\nroscd harlie\nsudo chown -R harlie:harlie /dev/*1394*\n\nIn 3 terminals:\nroslaunch cwru_bringup.launch\nroslaunch cwru_nav/start_outdoor_nav.launch\nroslaunch cwru_goal_planner/start_goal_planner_outdoors_in_meters.launch\n\nEdit harlie_goal_planner/goals/navigation.yaml to set the goals.\n\nrosbag record -a -o &lt;prefix&gt; to save a bag file for full logging.\n\nrosbag record -o &lt;prefix&gt; /odom /cmd_vel /front_camera/image_raw /front_camera/camera_info\n\nFor full RVIZ use \'rosrun rviz rviz -d `rospack find cwru_nav`/full_info_outdoors.vcg\'\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cwru-ros-pkg-hydro"">cwru-ros-pkg-hydro</h1>\n\n<p>Welcome to cwru-ros-pkg-hydro.  This is the latest release for Case Western Reserve University\'s Mobile / Dexterous Robotics Lab\'s ROS package to run on all of the lab\'s mobile robots.  </p>\n\n<h4 id=""people"">People</h4>\n\n<p>Originally developed by <a href=""https://github.com/ericperko"">Eric Perko</a> and <a href=""https://github.com/chadrockey"">Chad Rockey</a> with contributions by <a href=""https://github.com/erebuswolf"">Jesse Fish</a> and <a href=""https://github.com/evenator"">Ed Venator</a>.  Currently maintained by <a href=""https://github.com/wsnewman"">Dr. Wyatt Newman</a> and <a href=""https://github.com/lucbettaieb"">Luc Bettaieb</a>.</p>\n\n<h4 id=""eecs-376-476-mobile-robotics"">EECS 376/476: Mobile Robotics</h4>\n\n<p>Your forked repositories should sync with updates from this repository from now on.</p>\n\n<h4 id=""current-ros-dependencies"">Current ROS Dependencies</h4>\n\n<p>Our package will be continuously updated as more functionality is added.  Please make sure your development system (and whatever robot you\'re trying to run our package on) has all of the dependencies listed below.  You should be able to install the dependencies by running <code>sudo apt-get install (name of dependency)</code>\n* ros-hydro-joy (for cwru_teleop)\n* ros-hydro-sound-play</p>\n\n<h5 id=""also-depends-on-catkin_simple"">Also Depends on catkin_simple</h5>\n\n<ul>\n<li>inside utils/376_utils, do <code>sudo dpkg -i catkin...</code>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
knowrob,http://rosindex.github.io/r/knowrob/,"hydro,groovy,fuerte,indigo","comp_orgprinciples,comp_spatial,comp_temporal,json_prolog,knowrob,knowrob_actions,knowrob_common,knowrob_map_data,knowrob_map_tools,knowrob_mongo,knowrob_objects,knowrob_srdl,knowrob_vis,rosprolog,tf_prolog","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""knowrob"">knowrob</h1>\n\n<p>KnowRob core packages and general issue tracker for the KnowRob knowledge base</p>\n\n<p>Please visit <a href=""http://www.knowrob.org"">http://www.knowrob.org</a> for more information and documentation.</p>\n</div>\n\n            \n          </div>'"
wu_ros_tools,http://rosindex.github.io/r/wu_ros_tools/,"hydro,jade,groovy,indigo","catkinize_this,easy_markers,joy_listener,kalman_filter,manifest_cleaner,rosbaglive,roswiki_node,wu_ros_tools","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
modbus,http://rosindex.github.io/r/modbus/,indigo,"modbus,modbus_cognex_insight,modbus_plc_siemens","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""modbus"">modbus</h1>\n\n<p>The modbus stack provides a wrapper from the modbus communication to standardized ROS messages. The modbus package is based on pymodbus and is also written in Python.</p>\n\n<p>After a catkin_make the Python modbus classes are also available from the outside and can be easily integrated in other packages.</p>\n\n<p>This stack was used in a quality inspection project with the Baxter robot interfacing with a Siemens PLC and a Cognex In-Sight camera. </p>\n\n<ul>\n<li>The package modbus is the basic python wrapper for a modbus server and client for ROS</li>\n<li>The package modbus_cognex_insight inherits the modbus client base class and which uses specific registers. The client can send job_ids to the camera and retrieve the results of the jobs as well as barcodes and strings.</li>\n<li>The package modbus_plc_siemens inherits the modbus client base class and changes the register size.</li>\n</ul>\n</div>\n\n            \n          </div>'"
genjava,http://rosindex.github.io/r/genjava/,indigo,genjava,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""genjava"">genjava</h1>\n\n<p>RosJava message definition and serialization artifact generators.</p>\n\n<p>For future reference, executing the generator from the command line requires a command of the following kind:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">java -classpath .:./message_generation-0.1.16.jar org.ros.internal.message.GenerateInterfaces\n\n</code></pre></div>\n<p>This doesn\'t work exactly though because it doesn\'t pull in the full classpath. Make sure that is set to include everything you need. You\'ll also need arguments of the kind we\'re currently using in the hydro groovy plugin:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">        def generatedSourcesDir = ""${p.buildDir}/generated-src""\n        def generateSourcesTask = p.tasks.create(""generateSources"", JavaExec)\n        generateSourcesTask.description = ""Generate sources for "" + pkg.name\n        generateSourcesTask.outputs.dir(p.file(generatedSourcesDir))\n        /* generateSourcesTask.args = new ArrayList&lt;String&gt;([generatedSourcesDir, pkg.name]) */\n        generateSourcesTask.args = new ArrayList&lt;String&gt;([generatedSourcesDir, \'--package-path=\' + pkg.directory, pkg.name])\n        generateSourcesTask.classpath = p.configurations.runtime\n        generateSourcesTask.main = \'org.ros.internal.message.GenerateInterfaces\'\n        p.tasks.compileJava.source generateSourcesTask.outputs.files\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
concert_services,http://rosindex.github.io/r/concert_services/,"hydro,indigo","concert_service_admin,concert_service_gazebo,concert_service_image_stream,concert_service_indoor_2d_map_prep,concert_service_teleop,concert_service_turtlesim,concert_service_waypoint_navigation,concert_services","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
report_card,http://rosindex.github.io/r/report_card/,indigo,report_card,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""report-card-generator-for-knowrob-openease-system"">Report Card Generator for KnowRob OpenEase system</h1>\n\n<p>This package extends functionality of KnowRob system with robot\'s <em>log analysis</em>, <em>data extraction</em> and <em>report card generation</em>. The details of the project are available <a href=""http://So-Cool.github.io/ReportCardGenerator/"">here</a> and the <em>wiki</em> <a href=""http://wiki.ros.org/report_card"">here</a>.</p>\n\n<h2 id=""prerequisites"">Prerequisites</h2>\n\n<p>This package was developed and tested under Linux Ubuntu 14.04 <em>trusty</em> and given below installation instructions correspond to this operating system.</p>\n\n<p>This package require the following dependencies:</p>\n\n<ul>\n<li>R\n\n<ul>\n<li><code>r-base</code></li>\n<li><code>r-base-dev</code></li>\n</ul>\n</li>\n<li>SWI Prolog (compiled with Java interface)\n\n<ul>\n<li><code>swi-prolog</code></li>\n<li><code>swi-prolog-java</code></li>\n</ul>\n</li>\n<li>LaTeX\n\n<ul>\n<li><code>texlive-full</code></li>\n</ul>\n</li>\n</ul>\n\n<p>moreover, <code>SWI-Prolog</code>\'s <a href=""http://www.swi-prolog.org/pack/list?p=real""><code>real</code></a> package is required.</p>\n\n<h2 id=""package-installation"">Package installation</h2>\n\n<p>First merge <code>report_card</code> package into your <code>catkin</code> workspace (given that your current directory is head of workspace)</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""nb"">cd </span>src\nwstool merge <span class=""s2"">""https://raw.githubusercontent.com/So-Cool/report_card/master/rosinstall""</span>\nwstool update\n\n</code></pre></div>\n<p>Now you can either install the dependencies either by hand or automatically.</p>\n\n<h3 id=""manual-recommended"">Manual (recommended)</h3>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">sudo apt-get install software-properties-common\n\nsudo apt-add-repository ppa:swi-prolog/stable\nsudo apt-get update\nsudo apt-get install swi-prolog\nsudo apt-get install swi-prolog-java\n\nsudo add-apt-repository <span class=""s2"">""deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\xe2\x80\x9c\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nsudo apt-get update\nsudo apt-get install r-base\nsudo apt-get install r-base-dev\n\nsudo apt-get install texlive-full\n\n</span></code></pre></div>\n<p>The next step is to install <code>real</code> pack. Start SWI-Prolog with</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">swipl\n\n</code></pre></div>\n<p>and do</p>\n<div class=""highlight""><pre><code class=""language-prolog"" data-lang=""prolog""><span class=""ss"">pack_install</span><span class=""p"">(</span><span class=""ss"">real</span><span class=""p"">).</span>\n\n</code></pre></div>\n<p>and follow the instructions given on the screen.</p>\n\n<h3 id=""automatic"">Automatic</h3>\n\n<p>To automatically install the above dependencies do</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rosdep install --ignore-src --from-paths ./report_card\n\n</code></pre></div>\n<p>This will install all system level dependencies. The <code>real</code> package is installed then based on instruction given in <code>CMake</code>.<br>\nTo make sure you have the latest releases of all dependencies you should first do</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">sudo apt-get install software-properties-common\nsudo add-apt-repository <span class=""s2"">""deb http://cran.rstudio.com/bin/linux/ubuntu trusty/\xe2\x80\x9c\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nsudo apt-add-repository ppa:swi-prolog/stable\nsudo apt-get update\n\n</span></code></pre></div>\n<hr>\n\n<p>Finally, move back to your workspace and compile the package</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""nb"">cd</span> ..\ncatkin_make -DCATKIN_WHITELIST_PACKAGES<span class=""o"">=</span><span class=""s2"">""report_card""</span>\n\n</code></pre></div>\n<p>This installation instruction assumes that you already have a working catkin workspace and you just wish to add <code>report_card</code> package to it. If you want to do a full installation of catkin together with the package please refer to instructions given <a href=""http://So-Cool.github.io/ReportCardGenerator/2015/05/29/development/"">here</a>.</p>\n\n<h2 id=""basic-usage"">Basic usage</h2>\n\n<p>To run the package do</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rosrun rosprolog rosprolog report_card\n\n</code></pre></div>\n<p>and within Prolog</p>\n<div class=""highlight""><pre><code class=""language-prolog"" data-lang=""prolog""><span class=""err"">%%</span> <span class=""nv"">Load</span> <span class=""ss"">an</span> <span class=""ss"">experiment</span> <span class=""ss"">log</span>\n<span class=""ss"">load_experiment</span><span class=""p"">(</span><span class=""ss"">\'path/to/log/file.owl\'</span><span class=""p"">).</span>\n<span class=""err"">%%</span> <span class=""nv"">Generate</span> <span class=""ss"">basic</span> <span class=""ss"">report</span> <span class=""ss"">card</span>\n<span class=""ss"">generate_report_card</span><span class=""p"">.</span>\n\n</code></pre></div>\n<p>More details are available in the project documentation.</p>\n\n<h2 id=""todo"">TODO</h2>\n\n<ul>\n<li>[ ] Create wiki page for the project <code>http://wiki.ros.org/report_card</code>.</li>\n<li>[ ] Generate documentation for the project.</li>\n<li>[ ] Write user guide for the project.</li>\n</ul>\n</div>\n\n            \n          </div>'"
kobuki_led_controller,http://rosindex.github.io/r/kobuki_led_controller/,indigo,kobuki_led_controller,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kobuki_led_controller"">kobuki_led_controller</h1>\n\n<ul>\n<li><a href=""http://wiki.ros.org/kobuki_led_blinker"">Kobuki Led Blinker</a></li>\n</ul>\n\n<h2 id=""usage"">Usage</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">import kobuki_led_controller\n\nrospy.init_node(\'Hello\')\n\nblinker = kobuki_led_controller.LedBlinker()\nrospy.loginfo(""Blinker : blinker start"")\nblinker.start() # Starts Led blinker thread.\n\nrospy.loginfo(""Blinker : blinks red"")\nblinker.set_on_error() # Blinks Red LED\nrospy.sleep(3.0)\n\nrospy.loginfo(""Blinker : blinks Green"")\nblinker.set_on_ok()    # blinks Green LED\nrospy.sleep(3.0)\n\nrospy.loginfo(""Blinker : stop blinking"")\nblinker.set_on_off()   # stop blinking\n\nrospy.loginfo(""Blinker : blinker stops"")\nblinker.stop()         # stops led blinkder thread.\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
xdot,http://rosindex.github.io/r/xdot/,"hydro,groovy,fuerte,indigo",xdot,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""xdot"">xdot</h1>\n\n<p>XDot.py, by Jose Fonseca, is an interactive viewer for graphs written in\nGraphviz\'s dot language.</p>\n\n<p>This package adds front-end capabilities to XDot including WX Widget support\nand experimental Qt support and a mechanism for receiving callbacks when nodes\nare clicked.  This extension is provided as BSD.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""xdot"">xdot</h1>\n\n<p>XDot.py, by <a href=""http://jrfonseca.blogspot.com/"">Jose Fonseca</a>, is an interactive viewer for graphs written in\nGraphviz\'s dot language.</p>\n\n<p>This package adds front-end capabilities to XDot including WX Widget support\nand experimental Qt support and a mechanism for receiving callbacks when nodes\nare clicked.  This extension is provided as BSD.</p>\n</div>\n\n            \n          </div>'"
aau_multi_robot,http://rosindex.github.io/r/aau_multi_robot/,"hydro,indigo","adhoc_communication,explorer,map_merger","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""aau_ros"">aau_ros</h1>\n\n<p>This includes the autonomous multi-robot system developed at the <a href=""http://nes.aau.at"">Institute of Networked and Embedded Systems</a> at <a href=""http://www.aau.at"">Alpen-Adria-Universit\xc3\xa4t Klagenfurt</a>.</p>\n\n<p>The system operates completely \n</p>\n<ul>\n    <li>\n<strong>autonomously</strong>, i.e., robots explore without intervention of humans a given area and return to the original starting position having completed the exploration</li>\n    <li>\n<strong>independent</strong>, i.e., robots do not rely on preexisting infrastructure but set up their own ad-hoc network</li>\n    <li>\n<strong>coordinated</strong>, i.e., before assigning new frontiers to explore, robots coordinate each other to prevent redundant exploration of areas</li>\n    <li>\n<strong>self-organized</strong>, i.e., no central entity control the system\n</li>\n</ul>\n\n<p>Try it out yourself using <a href=""http://www.ros.org/"">ROS</a>. We\'ve test the system on Pioneer 3-DX and turtlebots in various environments.</p>\n</div>\n\n            \n          </div>'"
log4cpp,http://rosindex.github.io/r/log4cpp/,"hydro,jade,indigo",log4cpp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">All \'README\' information is now in the HTML documentation,\nsee doc/html or the project website (http://log4cpp.sf.net/).\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
orientus_driver,http://rosindex.github.io/r/orientus_driver/,"hydro,indigo","orientus_driver,orientus_sdk_c","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""orientus_driver"">orientus_driver  <a href=""https://travis-ci.org/RIVeR-Lab/orientus_driver""><img src=""https://api.travis-ci.org/RIVeR-Lab/orientus_driver.png"" alt=""Build Status""></a>\n</h1>\n\n<p>Driver for the orientus imu</p>\n</div>\n\n            \n          </div>'"
epos_hardware,http://rosindex.github.io/r/epos_hardware/,indigo,"epos_hardware,epos_library","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""epos_hardware"">epos_hardware</h1>\n</div>\n\n            \n          </div>'"
dlut_laser,http://rosindex.github.io/r/dlut_laser/,indigo,"dlut_hash_icp,dlut_laser,pointcloud2pcd","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_ethercat_drivers,http://rosindex.github.io/r/pr2_ethercat_drivers/,"hydro,electric,groovy,indigo","ethercat_hardware,fingertip_pressure,pr2_ethercat_drivers,eml","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
agile_grasp,http://rosindex.github.io/r/agile_grasp/,"hydro,indigo",agile_grasp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""agile_grasp"">agile_grasp</h1>\n\n<ul>\n<li>\n<strong>Author:</strong> Andreas ten Pas (<a href=""mailto:atp@ccs.neu.edu"">atp@ccs.neu.edu</a>)</li>\n<li>\n<strong>Version:</strong> 1.0.0</li>\n<li>\n<strong>ROS Wiki page:</strong> <a href=""http://wiki.ros.org/agile_grasp"">http://wiki.ros.org/agile_grasp</a>\n</li>\n<li>\n<strong>Author\'s website:</strong> <a href=""http://www.ccs.neu.edu/home/atp/"">http://www.ccs.neu.edu/home/atp/</a>\n</li>\n</ul>\n\n<h2 id=""1-instructions"">1) Instructions</h2>\n\n<p>Please look at <a href=""http://wiki.ros.org/agile_grasp"">http://wiki.ros.org/agile_grasp</a> for detailed instructions.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosjava_bootstrap,http://rosindex.github.io/r/rosjava_bootstrap/,"hydro,indigo",rosjava_bootstrap,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dlut_smartrob,http://rosindex.github.io/r/dlut_smartrob/,"groovy,indigo","dlut_motor_hokuyo,dlut_move_base,dlut_pc_odom,dlut_smartrob,dlut_place_recognition","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""dlut_smartrob"">dlut_smartrob</h1>\n\n<p>ROS Nodes developed on SmartROB at DaLian University Of Technology.</p>\n</div>\n\n            \n          </div>'"
abb,http://rosindex.github.io/r/abb/,"hydro,groovy,indigo","abb,abb_driver,abb_irb2400_moveit_config,abb_irb2400_moveit_plugins,abb_irb2400_support,abb_irb5400_support,abb_irb6600_support,abb_irb6640_moveit_config,abb_common,abb_moveit_plugins,irb_2400_moveit_config,irb_6640_moveit_config,irb_2400_arm_navigation,irb_5400_arm_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""abb"">ABB</h1>\n\n<p><a href=""http://www.ros.org/wiki/Industrial"">ROS-Industrial</a> ABB meta-package.  See the <a href=""http://ros.org/wiki/abb"">ROS wiki</a> page for more information.  </p>\n\n<h2 id=""contents"">Contents</h2>\n\n<p>This repo holds source code for all versions &gt; groovy. For those versions &lt;= groovy see: <a href=""https://code.google.com/p/swri-ros-pkg/source/browse"">SVN repo</a></p>\n</div>\n\n            \n          </div>'"
handle_detector,http://rosindex.github.io/r/handle_detector/,"hydro,indigo",handle_detector,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""handle-detector"">Handle Detector</h1>\n\n<p><strong>Author:</strong> Andreas ten Pas (<a href=""mailto:atp@ccs.neu.edu"">atp@ccs.neu.edu</a>)</p>\n\n<p><strong>Version:</strong> 1.0.0</p>\n\n<p><strong>Wiki:</strong> <a href=""http://wiki.ros.org/handle_detector"">http://wiki.ros.org/handle_detector</a></p>\n\n<p><strong>Author\'s Website:</strong> <a href=""http://www.ccs.neu.edu/home/atp/"">http://www.ccs.neu.edu/home/atp/</a></p>\n\n<h2 id=""requirements"">REQUIREMENTS</h2>\n\n<ol>\n<li>ROS Hydro (<a href=""http://wiki.ros.org/hydro"">http://wiki.ros.org/hydro</a>)</li>\n<li>Lapack (install in Ubuntu using: sudo apt-get install liblapack-dev)</li>\n<li>Openni_launch (<a href=""http://wiki.ros.org/openni_launch"">http://wiki.ros.org/openni_launch</a>; install in Ubuntu using: sudo apt-get install ros-hydro-openni-launch)</li>\n</ol>\n\n<h2 id=""instructions"">INSTRUCTIONS</h2>\n\n<p>Please look at <a href=""http://wiki.ros.org/handle_detector"">http://wiki.ros.org/handle_detector</a> for detailed instructions.</p>\n\n<h2 id=""links"">LINKS</h2>\n\n<p>Instructions: <a href=""http://wiki.ros.org/handle_detector"">http://wiki.ros.org/handle_detector</a>\nSource: <a href=""https://github.com/atenpas/handle_detector"">https://github.com/atenpas/handle_detector</a></p>\n</div>\n\n            \n          </div>'"
schunk_svh_driver,http://rosindex.github.io/r/schunk_svh_driver/,"hydro,indigo",schunk_svh_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is the driver package for the SCHUNK SVH Five-Finger-Hand.\nIt was developed on behalf of SCHUNK Mobile Greifsysteme GmbH, Lauffen/Neckar, Germany\nat the FZI Research Center for Information Technology in Karlsruhe, Germany.\n\nThe package contains the following core components:\n- The low level hardware driver\n- The ROS abstraction layer\n- 3D model and kinematics description for visualization and grasp planning\nThese main components are distributed under a LGPL license.\n\nFurthermore this package contains a build system and two libraries that are not\npart of the SVH Driver but which are needed to build it:\n- icmaker  (BSD License)\n- icl_core (LGPL License)\n- icl_comm (LGPL License)\nThese components were independently developed at the\nFZI Research Center for Information Technology in Karlsruhe, Germany.\n\nAlso included is the TinyXML Library which was developed by\nLee Thomason (http://www.grinninglizard.com)\nand which ships unter the zlib/libpng license.\n\n\nSee license folder for the license texts.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
h4r_x52_joyext,http://rosindex.github.io/r/h4r_x52_joyext/,indigo,h4r_x52_joyext,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""h4r_x52_joyext"">h4r_x52_joyext</h1>\n\n<p>ROS package to access the MFD  of the Saitek X52 Pro Joystick.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""install-system-dependencies"">Install system dependencies</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install libx52pro0 libx52pro-dev\n</code></pre></div>\n<p>Also make sure you have git installed:\n    sudo apt-get install git-core</p>\n\n<h3 id=""download-source"">Download source</h3>\n\n<p>Make sure you have a working catkin workspace, as described at:\n<a href=""http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace"">http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace</a></p>\n\n<p>Change directory to the source folder of your catkin workspace.\nIf, for instance, your workspace is <code>~/catkin_ws</code>, make sure there is\na <code>src/</code> folder within it, then execute:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\n</code></pre></div>\n<p>Download the package source from the github repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/Hacks4ROS/h4r_x52_joyext\n</code></pre></div>\n<p>Compile your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws\ncatkin_make\n</code></pre></div>\n<p>Copy the udev file inside h4r_x52_joyext/udev to /etc/udev/rules.d</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo cp $(rospack find h4r_x52_joyext)/udev/99-x52pro.rules /etc/udev/rules.d\nsudo service udev restart\n</code></pre></div>\n<p>If your joystick is already plugged into your computer, \nremove it and plug it in again, otherwise you are not allowed to access \nthe device, because the new rights are only applied to devices connected after\nthe rule change.</p>\n\n<h2 id=""documentation"">Documentation</h2>\n\n<p>For doxygen documentation, please see:\n<a href=""http://hacks4ros.github.io/h4r_x52_joyext/doc/doxygen/index.html"">http://hacks4ros.github.io/h4r_x52_joyext/doc/doxygen/index.html</a></p>\n\n<p>This package is also documented at:\n<a href=""http://wiki.ros.org/h4r_x52_joyext"">http://wiki.ros.org/h4r_x52_joyext</a></p>\n</div>\n\n            \n          </div>'"
pointcloud_to_laserscan,http://rosindex.github.io/r/pointcloud_to_laserscan/,"jade,indigo",pointcloud_to_laserscan,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
segbot_apps,http://rosindex.github.io/r/segbot_apps/,"hydro,groovy","segbot_apps,segbot_gui,segbot_logical_translator,segbot_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""the-segbot_apps-ros-meta-package"">The segbot_apps ROS meta-package</h1>\n\n<p>High-level applications that run on Segway RMP 50 based robots at Learning\nAgents Research Group (LARG), AI Laboratory, Department of Computer Science,\nThe University of Texas at Austin. </p>\n\n<p>All the code in this package has been released using a modified BSD license, \nwhich can be found with this package <a href=""LICENSE"">here</a>.</p>\n\n<p>All academic uses of this work should cite the following representative paper:\n""Piyush Khandelwal, Fangkai Yang, Matteo Leonetti, Vladimir Lifschitz, and\nPeter Stone. Planning in Action Language BC while Learning Action Costs for\nMobile Robots. International Conference on Automated Planning and Scheduling\n(ICAPS). 2014.""</p>\n</div>\n\n            \n          </div>'"
rosjava_build_tools,http://rosindex.github.io/r/rosjava_build_tools/,"hydro,groovy,indigo","rosjava_build_tools,rosjava_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosjava-tools"">RosJava Tools</h1>\n\n<p>Build tools for rosjava and android repositories. Currently includes some cmake macros and python creation\nscripts.</p>\n\n<h2 id=""rosjava-build-demo"">RosJava Build Demo</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; mkdir -p ~/rosjava/src\n&gt; cd ~/rosjava/src\n&gt; catkin_init_workspace .\n&gt; wstool init .\n&gt; wstool set rosjava_build_tools --git https://github.com/rosjava/rosjava_build_tools -v hydro-devel\n&gt; wstool set rosjava_core --git https://github.com/rosjava/rosjava_core -v hydro-devel\n&gt; wstool update\n&gt; cd ~/rosjava\n&gt; catkin_make\n\n</code></pre></div>\n<p>The only changes made to the <code>rosjava_core</code> repo was to add a <code>package.xml</code> with a depends on <code>rosjava_build_tools</code> and a\nchanges to the <code>CMakeLists.txt</code> as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">...\nfind_package(catkin REQUIRED rosjava_build_tools)\n\ncatkin_rosjava_setup()\n\n</code></pre></div>\n<p>This cmake makro sets up dummy targets in the cmake configuration which call out to gradle in the actual make step. \nIt also parses the <code>package.xml</code> to add target dependencies from each <code>build_depends</code> tag (subsequently letting you\nsequence builds across repositories).</p>\n\n<p>It also adds a global and package <code>gradle-clean</code> target.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; catkin_make\n# Clean a single gradle package\n&gt; cd ~/rosjava/build/rosjava_core\n&gt; make gradle-clean-rosjava_core\n# Clean all gradle packages\n&gt; cd ~/rosjava/build\n&gt; make gradle-clean\n\n</code></pre></div>\n<h2 id=""android-build-demo"">Android Build Demo</h2>\n\n<p>Refer to <a href=""http://ros.org/wiki/rosjava_build_tools"">http://ros.org/wiki/rosjava_build_tools</a>.</p>\n\n<h2 id=""moving"">Moving</h2>\n\n<p>This documentation will eventually merge with the rosjava_core and android_core documentation.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosjava-tools"">RosJava Tools</h1>\n\n<p>Build tools for rosjava and android repositories. Currently only includes tools for the rosjava repositories which are\nquite trivial, just a cmake macro. The android repository support has been done, but waiting to see how the android\ngradle plugin goes before dropping them back in here.</p>\n\n<h2 id=""rosjava-demo"">RosJava Demo</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; mkdir -p ~/rosjava/src\n&gt; cd ~/rosjava/src\n&gt; catkin_init_workspace .\n&gt; wstool init .\n&gt; wstool set rosjava_tools --git https://github.com/ros-java/rosjava_tools -v hydro-devel\n&gt; wstool set rosjava_core --git https://github.com/stonier/rosjava_core -v catkin_tools\n&gt; wstool update\n&gt; cd ~/rosjava\n&gt; catkin_make\n\n</code></pre></div>\n<p>The only changes made to the <code>rosjava_core</code> repo was to add a <code>package.xml</code> with a depends on <code>rosjava_tools</code> and a\nchanges to the <code>CMakeLists.txt</code> as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">...\nfind_package(catkin REQUIRED rosjava_tools)\n\ncatkin_rosjava_setup(install)\n\n</code></pre></div>\n<p>This cmake makro sets up dummy targets in the cmake configuration which call out to gradle in the actual make step. \nIt also parses the <code>package.xml</code> to add target dependencies from each <code>build_depends</code> tag (subsequently letting you\nsequence builds across repositories).</p>\n\n<p>It also adds a global and package <code>gradle-clean</code> target.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; catkin_make\n# Clean a single gradle package\n&gt; cd ~/rosjava/build/rosjava_core\n&gt; make gradle-clean-rosjava_core\n# Clean all gradle packages\n&gt; cd ~/rosjava/build\n&gt; make gradle-clean\n\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""needs-an-indigo-update"">NEEDS AN INDIGO UPDATE!!!</h1>\n\n<p>Coming soon....ish.</p>\n\n<h1 id=""rosjava-tools"">RosJava Tools</h1>\n\n<p>Build tools for rosjava and android repositories. Currently includes some cmake macros and python creation\nscripts.</p>\n\n<h2 id=""rosjava-build-demo"">RosJava Build Demo</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; mkdir -p ~/rosjava/src\n&gt; cd ~/rosjava/src\n&gt; catkin_init_workspace .\n&gt; wstool init .\n&gt; wstool set rosjava_build_tools --git https://github.com/rosjava/rosjava_build_tools -v hydro-devel\n&gt; wstool set rosjava_core --git https://github.com/rosjava/rosjava_core -v hydro-devel\n&gt; wstool update\n&gt; cd ~/rosjava\n&gt; catkin_make\n\n</code></pre></div>\n<p>The only changes made to the <code>rosjava_core</code> repo was to add a <code>package.xml</code> with a depends on <code>rosjava_build_tools</code> and a\nchanges to the <code>CMakeLists.txt</code> as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">...\nfind_package(catkin REQUIRED rosjava_build_tools)\n\ncatkin_rosjava_setup()\n\n</code></pre></div>\n<p>This cmake makro sets up dummy targets in the cmake configuration which call out to gradle in the actual make step. \nIt also parses the <code>package.xml</code> to add target dependencies from each <code>build_depends</code> tag (subsequently letting you\nsequence builds across repositories).</p>\n\n<p>It also adds a global and package <code>gradle-clean</code> target.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; catkin_make\n# Clean a single gradle package\n&gt; cd ~/rosjava/build/rosjava_core\n&gt; make gradle-clean-rosjava_core\n# Clean all gradle packages\n&gt; cd ~/rosjava/build\n&gt; make gradle-clean\n\n</code></pre></div>\n<h2 id=""android-build-demo"">Android Build Demo</h2>\n\n<p>Refer to <a href=""http://ros.org/wiki/rosjava_build_tools"">http://ros.org/wiki/rosjava_build_tools</a>.</p>\n\n<h2 id=""moving"">Moving</h2>\n\n<p>This documentation will eventually merge with the rosjava_core and android_core documentation.</p>\n</div>\n\n            \n          </div>'"
pcl_conversions,http://rosindex.github.io/r/pcl_conversions/,"hydro,fuerte,groovy,kinetic,jade,indigo",pcl_conversions,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pcl_conversions"">pcl_conversions</h1>\n\n<p>This package provides conversions from PCL data types and ROS message\ntypes.</p>\n\n<h2 id=""code-amp-tickets"">Code &amp; tickets</h2>\n\n<p>+-----------------+------------------------------------------------------------+\n| pcl_conversions | <a href=""http://ros.org/wiki/pcl_conversions"">http://ros.org/wiki/pcl_conversions</a> |\n+-----------------+------------------------------------------------------------+\n| Issues | <a href=""http://github.com/ros-perception/pcl_conversions/issues"">http://github.com/ros-perception/pcl_conversions/issues</a> |\n+-----------------+------------------------------------------------------------+\n.. | Documentation |\n<a href=""http://ros-perception.github.com/pcl_conversions/doc"">http://ros-perception.github.com/pcl_conversions/doc</a> | ..\n+-----------------+------------------------------------------------------------+</p>\n</div>\n\n            \n          </div>'"
executive_smach_visualization,http://rosindex.github.io/r/executive_smach_visualization/,"hydro,fuerte,electric,groovy,indigo","executive_smach_visualization,smach_viewer","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
h4r_thermapp_camera,http://rosindex.github.io/r/h4r_thermapp_camera/,indigo,h4r_thermapp_camera,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""h4r_thermapp_camera"">h4r_thermapp_camera</h1>\n\n<p>The thermapp_camera package provides a library and a node for the Opgal\xc2\xae ThermApp\xc2\xae Android Thermal Camera</p>\n\n<p>Copy the file udev/99-opgal.rules to /etc/udev/rules.d to allow users access to the camera. </p>\n\n<p>For it to work, udev has to be restarted by</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">service udev restart\n</code></pre></div>\n<p>and the camera must be removed from USB and attached again, if it was already plugged.</p>\n</div>\n\n            \n          </div>'"
terarangerduo-ros,http://rosindex.github.io/r/terarangerduo-ros/,"hydro,indigo",terarangerduo,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""teraranger-duo-ros-module"">TeraRanger Duo ROS Module</h1>\n\n<p>This is the ROS module for the TeraRanger Duo ranging sensor (<a href=""http://www.teraranger.com"">www.teraranger.com</a>).</p>\n\n<h1 id=""using-module"">Using module</h1>\n\n<p>To use the ROS node you just need to:\n* Create a ROS Workspace\n* Copy the node terarangerduo package into the workspace src directory\n* Compile using: catkin_make \n* Run using: rosrun terarangerduo terarangerduo_node _portname:=/dev/ttyUSB0</p>\n\n<p>NB: remember to execute the daemon roscore before running the rosrun command</p>\n</div>\n\n            \n          </div>'"
flatbuffers,http://rosindex.github.io/r/flatbuffers/,indigo,flatbuffers,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>FlatBuffers Version 1.1.0</p>\n\n<h1 id=""welcome-to-flatbuffers"">Welcome to FlatBuffers!</h1>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<ul>\n<li>Travis: <a href=""https://travis-ci.org/google/flatbuffers""><img src=""https://travis-ci.org/google/flatbuffers.svg?branch=master"" alt=""Build Status""></a>\n</li>\n</ul>\n\n<hr>\n\n<p>FlatBuffers is a serialization library for games and other memory constrained\napps. Go to our <a href=""http://google.github.io/flatbuffers"">landing page</a> to browse our documentation.</p>\n\n<p>FlatBuffers allows you to directly access serialized data without\nunpacking/parsing it first, while still having great forwards/backwards\ncompatibility. FlatBuffers can be built for many different systems (Android,\nWindows, OS X, Linux), see <code>docs/html/index.html</code></p>\n\n<p>Discuss FlatBuffers with other developers and users on the\n<a href=""http://group.google.com/group/flatbuffers"">FlatBuffers Google Group</a>. File issues on the <a href=""http://github.com/google/flatbuffers/issues"">FlatBuffers Issues Tracker</a>\nor post your questions to <a href=""http://www.stackoverflow.com"">stackoverflow.com</a> with a mention of\n<strong>flatbuffers</strong>.</p>\n\n<p>For applications on Google Play that integrate this tool, usage is tracked.\nThis tracking is done automatically using the embedded version string\n(flatbuffer_version_string), and helps us continue to optimize it. Aside from\nconsuming a few extra bytes in your application binary, it shouldn\'t affect\nyour application at all.  We use this information to let us know if FlatBuffers\nis useful and if we should continue to invest in it. Since this is open\nsource, you are free to remove the version string but we would appreciate if\nyou would leave it in.</p>\n</div>\n\n            \n          </div>'"
applanix_driver,http://rosindex.github.io/r/applanix_driver/,hydro,"applanix_bridge,applanix_driver,applanix_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""></div>\n\n            \n          </div>'"
rosjava_messages,http://rosindex.github.io/r/rosjava_messages/,"hydro,indigo",rosjava_messages,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""rosjava-messages"">RosJava Messages</h2>\n\n<h3 id=""message-artifact-generation"">Message Artifact Generation</h3>\n\n<p><em>Your regular rosjava message project does not need this complexity!</em></p>\n\n<p>The gradle magic in settings.gradle is responsible for kickstarting the following\nvery useful things for a big release of message packages:</p>\n\n<ul>\n<li>Generating an artifact for every listed (in the package.xml) ros message package.</li>\n<li>Discovering &amp; applying the underlying package version and dependency information to the artifact.</li>\n</ul>\n\n<p>It manages the correspondence by dynamically spawning subprojects from a template build.gradle.\nThis saves a very large amount of tedious and repetitive gradle management.</p>\n\n<p>The package version and dependency information is extracted by the catkin gradle plugin that\ncan be found in <a href=""https://github.com/rosjava/rosjava_bootstrap"">rosjava_bootstrap</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""rosjava-messages"">RosJava Messages</h2>\n\n<p>This package is a generator of rosjava message artifacts for core ros messages.</p>\n\n<h3 id=""adding-packages"">Adding Packages</h3>\n\n<p>If you would like to add a package to this list, then please modify\nCMakeLists.txt and package.xml appropriately, then send us a pull request!</p>\n\n<h3 id=""more-information"">More Information</h3>\n\n<p><a href=""http://wiki.ros.org/rosjava/Tutorials/indigo/RosJava"">http://wiki.ros.org/rosjava/Tutorials/indigo/RosJava</a> Message Artifacts</p>\n</div>\n\n            \n          </div>'"
joystick_drivers,http://rosindex.github.io/r/joystick_drivers/,"hydro,fuerte,groovy,kinetic,jade,indigo","joy,joystick_drivers,ps3joy,spacenav_node,wiimote,spacenav","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
twist_mux_msgs,http://rosindex.github.io/r/twist_mux_msgs/,"hydro,jade,indigo",twist_mux_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""twist_mux_msgs"">twist_mux_msgs</h1>\n\n<p>Twist multiplexer <a href=""https://github.com/ros-teleop/twist_mux"">twist_mux</a> messages.</p>\n\n<p>See <a href=""http://wiki.ros.org/twist_mux_msgs"">documentation</a>.</p>\n\n<p><a href=""https://travis-ci.org/ros-teleop/twist_mux_msgs""><img src=""https://travis-ci.org/ros-teleop/twist_mux_msgs.png?branch=jade-devel"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""twist_mux_msgs"">twist_mux_msgs</h1>\n\n<p>Twist multiplexer <a href=""https://github.com/ros-teleop/twist_mux"">twist_mux</a> messages</p>\n</div>\n\n            \n          </div>'"
laser_geometry,http://rosindex.github.io/r/laser_geometry/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo",laser_geometry,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
vicon_bridge,http://rosindex.github.io/r/vicon_bridge/,"hydro,jade,indigo",vicon_bridge,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a driver providing data from VICON motion capture systems. It is based on the vicon_mocap package from the starmac stacks. \nAdditionally, it can handle multiple subjects / segments and allows to calibrate an origin of the vehicle(s) as this is somehow tedious with the VICON Tracker.\n\nLicense: BSD\nAuthor: Markus Achtelik &lt;markus.achtelik@mavt.ethz.ch&gt; \n\nQUICK START\nroslaunch vicon_bridge vicon.launch\nYou may need to set the ""datastream_hostport"" parameter to your vicon computer\'s ip/hostname\n\nOPERATION\nThe vicon_bridge node initiates a connection with the Vicon data source (e.g. Nexus or Tracker)\nvia the DataStream API. The parameter ~datastream_hostport should be set to the IP address and port (joined with a colon)\nof the DataStream server machine, e.g. 192.168.0.254:801 (801 is the default port). The parameter ~stream_mode is used for the call to the DataStream SetStreamMode method;\nvalid values are ""ServerPush"", ""ClientPull"". \n\nAll available subjects and segments are recognized automatically and published as tf transform and geometry_msgs::TransformStamped\n\nORIGIN CALIBRATION\nwhen an object is created in vicon tracker, it places the origin more or less arbitrary in the object. \nSetting the desired origin in Tracker is somewhat tedious, therefore we added an origin calibration method. \nPlace the vehicle at the vicon origin that you set during vicon calibration, and measure/estimate the height \n(z offset) of your desired origin from the floor. Then run \n&gt;&gt; rosrun vicon_bridge calibrate &lt;subject name&gt; &lt;segment name&gt; &lt;z offset&gt;\nPoses are now grabbed, averaged and the vehicle is placed in the vicon\'s origin. The calibration parameters are stored on the parameter server as\n~/&lt;subject_name&gt;/segment_name/zero_pose (see below). On startup, the node checks if calibration parameters are available. \nDo this the first time while running rviz and observe what happens (and if everything went correct ;-) )  \n\n\nPublished topics: \n- vicon/&lt;subject_name&gt;/&lt;segment_name&gt;\n  publishes all available subjects/segments\n\n- vicon/markers\n  publishes all labeled and unlabeled markers. Labeled markers are not affected by origin calibration\n\nServices:\n- grab_vicon_pose\n  allows to grab n poses for a given subject/segment and averages them\n\n- calibrate_segment\n  calls the origin calibration of a segment\n\nProvided tf transforms\n- vicon/&lt;subject_name&gt;/&lt;segment_name&gt;\n\nParameters\n- stream_mode\n  mode to connect to the DataStream server. Values: ""ClientPull"", ""ServerPush"". Default: ""ClientPull""\n- datastream_hostport\n  host:port of the DataStream server\n- tf_ref_frame_id\n  tf reference frame id. Default: ""world""\n\n- ~/&lt;subject_name&gt;/segment_name/zero_pose/orientation/w\n- ~/&lt;subject_name&gt;/segment_name/zero_pose/orientation/x\n- ~/&lt;subject_name&gt;/segment_name/zero_pose/orientation/y\n- ~/&lt;subject_name&gt;/segment_name/zero_pose/orientation/z\n  quaternion of the pose at origin of the corresponding vehicle\n\n- ~/&lt;subject_name&gt;/segment_name/zero_pose/position/x\n- ~/&lt;subject_name&gt;/segment_name/zero_pose/position/y\n- ~/&lt;subject_name&gt;/segment_name/zero_pose/position/z\n  position of the pose at origin of the corresponding vehicle\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
kurt_driver,http://rosindex.github.io/r/kurt_driver/,"hydro,fuerte,electric,groovy,diamondback,indigo","imu_recalibration,kurt_base,kurt_bringup,kurt_description,kurt_driver,kurt_gazebo,rotunit_snapshotter,kurt_gazebo_plugins,kurt_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kurt_driver"">kurt_driver</h1>\n\n<p>This stack contains ROS hardware drivers, Gazebo plugins and other basic functionalities for the KURT robot platform. Specifically, it provides:</p>\n\n<ul>\n<li>\n<code>kurt_description</code>: URDF descriptions for the different robot variants</li>\n<li>\n<code>kurt_base</code>: drivers for the Kurt base and the onboard IMU</li>\n<li>\n<code>imu_recalibration</code>: drivers for the Kurt base and the onboard IMU</li>\n<li>\n<code>kurt_bringup</code>: configs and launch files for starting the KURT robots</li>\n<li>\n<code>kurt_gazebo</code>: configs and launch files for simulating the Kurt robots in Gazebo</li>\n</ul>\n\n<p>For more information, visit the <a href=""http://www.ros.org/wiki/kurt_driver"">kurt_driver ROS wiki page</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
graft,http://rosindex.github.io/r/graft/,"hydro,jade,indigo",graft,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""graft"">graft</h1>\n\n<p>Graft is not yet finished.  It\'s intended to be a full replacement to robot_pose_ekf, including native absolute references, and arbitrary topic configuration.</p>\n\n<p>If you try to use Graft now, please note that not all parameters are configured and you will not always see a change in behavior by modifying the parameters.</p>\n\n<p>This branch is used for Hydro and Indigo. Indigo status:</p>\n\n<ul>\n<li>Devel Job Status: <a href=""http://jenkins.ros.org/job/devel-indigo-graft/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-graft"" alt=""Devel Job Status""></a>\n</li>\n<li>AMD64 Debian Job Status: <a href=""http://jenkins.ros.org/job/ros-indigo-graft_binarydeb_trusty_amd64/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=ros-indigo-graft_binarydeb_trusty_amd64"" alt=""Build Status""></a>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
ps4eye,http://rosindex.github.io/r/ps4eye/,hydro,ps4eye,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""playstation4-stereo-camera-package-for-ros"">PlayStation4 stereo camera package for ROS</h1>\n\n<p><a href=""https://www.youtube.com/watch?v=yUa3Rya6fhk""><img src=""http://img.youtube.com/vi/yUa3Rya6fhk/hqdefault.jpg"" alt=""Screenshot""></a></p>\n\n<h2 id=""warning"">WARNING</h2>\n\n<ul>\n<li>This package is experimental and not completed.</li>\n<li>You need to hack (cut and solder) the PS4 camera\'s cable. It may damage your device. Do it at your own risk.</li>\n<li>The PS4 camera is USB 3.0 only and is not compatible with USB 2.0 systems.</li>\n</ul>\n\n<h2 id=""requirements"">Requirements</h2>\n\n<ul>\n<li><p>You need a ps4eye camera <a href=""http://www.jp.playstation.com/ps4/peripheral/cuhzey1j.html"">PlayStation Camera CUH-ZEY1J</a></p></li>\n<li><p>You need to hack the cable. See <a href=""http://ps4eye.tumblr.com/post/79572946666/more-photos-of-cable-wiring-to-clarify-how-the"">PS4eye</a>.</p></li>\n<li><p>You may need newer linux kernel. Kernel version 3.17.3 is OK. 3.16.0 is NG.</p></li>\n</ul>\n\n<p>If you are using ubuntu, please check <a href=""http://kernel.ubuntu.com/%7Ekernel-ppa/mainline/v3.17.3-vivid/"">this page</a> to update kernel\n* You\'ll need Pyusb 1.0 or the script executed in the udev rules will silently fail.\n    sudo pip install --pre pyusb</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<ol>\n<li>Run create_udev_rules. Enter sudo password to place /etc/udev/rules.d/91-ps4eye.rules. You need this step only once.</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun ps4eye create_udev_rules\n\n</code></pre></div>\n<ol>\n<li><p>Plug your ps4eye to USB 3.0 port.</p></li>\n<li><p>Check if you can obtain the  image from ps4 camera by webcam software (cheese, camorama, etc).</p></li>\n<li><p>Run stereo.launch. DEVICE option is used specify video device. You can bring up stereo viewer if viewer option is true.</p></li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch ps4eye stereo.launch DEVICE:=/dev/video0 viewer:=true\n\n</code></pre></div>\n<ol>\n<li>If you want to run the viewer individually, use this command.</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun image_view stereo_view stereo:=/stereo image:=image_rect_color\n\n</code></pre></div>\n<ol>\n<li>Now you can see disparity image from the stereo camera. Done!</li>\n</ol>\n\n<h2 id=""about-ps4eye-folder-39-s-contents"">About ps4eye folder\'s contents</h2>\n\n<p>ps4eye folder contains files:\n* script/firmware.bin\n* script/ps4eye_init.py</p>\n\n<p>Both files are originally from ps4eye project: <a href="""">https://github.com/ps4eye</a>. Source code and binary are downloadable from there. This package include the two files only for convinience.</p>\n\n<p>ps4eye_init.py is from hyaguchijsk\'s branch: <a href="""">https://github.com/hyaguchijsk/ps4eye/tree/use_full_path_to_load_firmware</a> to make it easy to call from ROS system.</p>\n\n<h2 id=""thanks"">Thanks</h2>\n\n<p>Thanks for the incredible ps4 camera hackers.</p>\n\n<ul>\n<li><a href=""http://ps4eye.tumblr.com/"">PS4eye PlayStation 4 camera hacking</a></li>\n<li><a href=""https://github.com/ps4eye/ps4eye"">ps4eye github repo</a></li>\n<li><a href=""http://goo.gl/2AcdMQ"">PS4Eye \xe3\x82\x92\xe3\x83\x8f\xe3\x82\xa4\xe3\x83\x95\xe3\x83\xac\xe3\x83\xbc\xe3\x83\xa0\xe3\x83\xac\xe3\x83\xbc\xe3\x83\x88\xe3\x82\xb9\xe3\x83\x86\xe3\x83\xac\xe3\x82\xaa\xe3\x82\xab\xe3\x83\xa1\xe3\x83\xa9\xe3\x81\xa8\xe3\x81\x97\xe3\x81\xa6\xe4\xbd\xbf\xe3\x81\x86</a></li>\n</ul>\n</div>\n\n            \n          </div>'"
ecto_openni,http://rosindex.github.io/r/ecto_openni/,"hydro,groovy,kinetic,jade,indigo",ecto_openni,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">An ecto standalone openni capture suite. Outputs PODs.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
youbot_description,http://rosindex.github.io/r/youbot_description/,"hydro,indigo",youbot_description,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""youbot_description"">youbot_description</h1>\n\n<p>Robot description in form of URDF files and meshes</p>\n</div>\n\n            \n          </div>'"
pr2_navigation_apps,http://rosindex.github.io/r/pr2_navigation_apps/,hydro,"pr2_2dnav,pr2_2dnav_local,pr2_2dnav_slam,pr2_navigation_apps","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
libvlfeat,http://rosindex.github.io/r/libvlfeat/,indigo,libvlfeat,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""libvlfeat"">libvlfeat</h1>\n\n<p>Catkinized ROS version of the library VLFeat</p>\n\n<p>To compile this package you have to clone it by:</p>\n\n<p>git clone --recursive <a href=""https://github.com/srv/libvlfeat.git"">https://github.com/srv/libvlfeat.git</a></p>\n</div>\n\n            \n          </div>'"
rocon_tutorials,http://rosindex.github.io/r/rocon_tutorials/,"hydro,groovy,indigo","chatter_concert,concert_tutorial,gazebo_concert,turtle_concert,rocon_app_manager_tutorials,rocon_gateway_tutorials,rocon_tutorials,multinav_concert,turtle_stroll,rocon","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon_tutorials"">rocon_tutorials</h1>\n\n<p>Tutorials around the rocon framework.</p>\n</div>\n\n            \n          </div>'"
laser_filtering,http://rosindex.github.io/r/laser_filtering/,"hydro,jade,groovy,indigo","laser_filtering,map_laser","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""laser_filtering"">laser_filtering</h1>\n\n<p>ROS Libraries for filtering specific kinds of laser scans</p>\n</div>\n\n            \n          </div>'"
rocon,http://rosindex.github.io/r/rocon/,"hydro,groovy,indigo",rocon,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon"">rocon</h1>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon"">Rocon</h1>\n\n<p>This is a meta-repo for rosinstallers, packaging and organisation-wide issues, discussions and documents.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h4 id=""ros-installation-indigo"">ROS installation (indigo)</h4>\n\n<p><a href=""http://wiki.ros.org/indigo/Installation/Ubuntu"">http://wiki.ros.org/indigo/Installation/Ubuntu</a></p>\n\n<h4 id=""useful-packages"">Useful packages</h4>\n\n<ul>\n<li>yujin_tools\n\n<ul>\n<li><a href=""https://github.com/yujinrobot/yujin_tools"">https://github.com/yujinrobot/yujin_tools</a></li>\n</ul>\n</li>\n<li>roslint\n\n<ul>\n<li><a href=""http://wiki.ros.org/roslint"">http://wiki.ros.org/roslint</a></li>\n<li>\n<code>&gt; sudo apt-get install ros-&lt;version&gt;-roslint\n</code>\n</li>\n</ul>\n</li>\n</ul>\n\n<h4 id=""rocon-installation"">Rocon Installation</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  &gt; yujin_init_workspace rocon_ws https://raw.githubusercontent.com/robotics-in-concert/rocon/indigo/rocon.rosinstall\n  &gt; cd rocon_ws\n  &gt; yujin_init_build .\n  &gt; . .bashrc\n  &gt; yujin_make --install-rosdeps\n  &gt; yujin_make\n  &gt; . .bashrc\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
rospilot_deps,http://rosindex.github.io/r/rospilot_deps/,indigo,rospilot_deps,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
android_remocons,http://rosindex.github.io/r/android_remocons/,"hydro,indigo",android_remocons,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon-android"">Rocon Android</h1>\n\n<p>Remoticons for pairing and concert modes as well as some simple apps for testing.</p>\n\n<h1 id=""java-package-names"">Java Package Names</h1>\n\n<p>Endeavour to put all your package names under com.github.rocon.android.xxx. It\'s not a strict fit, but robotics-in-concert fails anyway because of the dashes. </p>\n\n<p>For apps, add a further namespace (i.e. com.github.com.rocon.android.apps.xxx).</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h3 id=""documentation"">Documentation</h3>\n\n<p>See <a href=""https://github.com/rosjava/rosjava_core"">rosjava_core</a> readme.</p>\n\n<h3 id=""master-branch"">Master Branch</h3>\n\n<p>The master branch is currently dependant on stable hydro branches of the other rosjava and android\ncore repositories (too much movement there to depend on master). Also dependant on the master branch of\nandroid_apps.</p>\n\n<h3 id=""rosinstaller"">Rosinstaller</h3>\n\n<ul>\n<li>Master: <a href=""https://raw.github.com/rosjava/rosjava/master/android_apps.rosinstall"">https://raw.github.com/rosjava/rosjava/master/android_apps.rosinstall</a>\n</li>\n</ul>\n\n<h1 id=""hydro-https-raw-github-com-rosjava-rosjava-hydro-android_apps-rosinstall"">* Hydro: <a href=""https://raw.github.com/rosjava/rosjava/hydro/android_apps.rosinstall"">https://raw.github.com/rosjava/rosjava/hydro/android_apps.rosinstall</a>\n</h1>\n\n<h1 id=""android-remocons"">Android Remocons</h1>\n\n<p>Remocons for pairing and concert modes as well as some simple apps for testing.</p>\n\n<h1 id=""installation"">Installation</h1>\n\n<p>This is primarily to get the rosjava build tools. If you are using precise, you don\'t need this step (it will get it from debs).</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; yujin_init_workspace -j5 ~/rosjava rosjava\n&gt; cd ~/rosjava\n&gt; yujin_init_build .\n&gt; yujin_make --install-rosdeps\n&gt; yujin_make\n\n</code></pre></div>\n<p>This will use the maven repos for the core rosjava and android repos.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; yujin_init_workspace -j5 ~/rocon_rosjava rocon-rosjava\n&gt; cd ~/rocon_rosjava\n&gt; yujin_init_build --underlays=~/rosjava/devel .\n&gt; yujin_make --install-rosdeps\n&gt; yujin_make\n\n</code></pre></div>\n<p>Android core (only necessary on indigo):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; yujin_init_workspace -j5 ~/android_core android-core\n&gt; cd ~/android_core\n&gt; yujin_init_build --underlays=~/rosjava/devel .\n&gt; yujin_make\n\n</code></pre></div>\n<p>The android interactions::</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; yujin_init_workspace -j5 ~/android_interactions\n&gt; cd ~/android_interactions\n&gt; yujin_init_build --underlays=""~/android_core/devel;~/rocon_rosjava/devel;~/rosjava/devel"" .\n&gt; cd ~/android_interactions/src\n# to compile the rocon android apps as well\n&gt; wstool set rocon_android_apps --git https://github.com/robotics-in-concert/rocon_android_apps.git --version=headless_launcher_update\n&gt; wstool update -j5\n&gt; yujin_make\n&gt; . .bashrc\n\n</code></pre></div>\n<p>Launch the android studio, compile the \n<code>rocon_nfc_writer\n</code> and \n<code>headless_launcher\n</code></p>\n\n<h1 id=""other-readme-39-s"">Other README\'s</h1>\n\n<ul>\n<li>rocon_nfc_writer/README.md</li>\n<li>headless_launcher/README.md</li>\n</ul>\n</div>\n\n            \n          </div>'"
world_canvas_libs,http://rosindex.github.io/r/world_canvas_libs/,indigo,"world_canvas_client_cpp,world_canvas_client_examples,world_canvas_client_py,world_canvas_utils","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""world-canvas-libraries"">World canvas libraries</h1>\n\n<p>Client libraries to access semantic maps within the world canvas framework.</p>\n</div>\n\n            \n          </div>'"
rtt_soem,http://rosindex.github.io/r/rtt_soem/,indigo,"soem_beckhoff_drivers,soem_ebox,soem_master","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
simple_grasping,http://rosindex.github.io/r/simple_grasping/,indigo,simple_grasping,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""simple_grasping"">simple_grasping</h1>\n\n<p>ROS components for grasping</p>\n</div>\n\n            \n          </div>'"
nmea_comms,http://rosindex.github.io/r/nmea_comms/,"hydro,fuerte,groovy,jade,indigo","nmea_comms,nmea_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nmea_comms"">nmea_comms</h1>\n\n<p>Generalized ROS interface to NMEA-speaking devices. </p>\n\n<p>Provides a serial node and socket server node, which relay CRLF-terminated strings on /rx and /tx\nROS topics using the nmea_msgs/Sentence message type.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nmea_navsat_driver,http://rosindex.github.io/r/nmea_navsat_driver/,"hydro,jade,indigo",nmea_navsat_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>nmea_navsat_driver ===============</p>\n\n<p>ROS driver to parse NMEA strings and publish standard ROS NavSat message\ntypes. Does not require the GPSD daemon to be running.</p>\n\n<h1 id=""api"">API</h1>\n\n<p>This package has no released Code API.</p>\n\n<p>The ROS API documentation and other information can be found at\n<a href=""http://ros.org/wiki/nmea_navsat_driver"">http://ros.org/wiki/nmea_navsat_driver</a></p>\n</div>\n\n            \n          </div>'"
nmea_msgs,http://rosindex.github.io/r/nmea_msgs/,"hydro,jade,indigo",nmea_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nmea_msgs"">nmea_msgs</h1>\n\n<p>This package contains message definitions for working with NMEA data.</p>\n\n<p>Please see the ROS Wiki: <a href=""http://wiki.ros.org/nmea_msgs"">http://wiki.ros.org/nmea_msgs</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nmea_msgs"">nmea_msgs</h1>\n\n<p>This package contains message definitions for working with NMEA data.</p>\n</div>\n\n            \n          </div>'"
um6,http://rosindex.github.io/r/um6/,"hydro,jade,indigo",um6,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""um6"">um6</h1>\n\n<p><a href=""https://travis-ci.org/clearpathrobotics/um6""><img src=""https://travis-ci.org/clearpathrobotics/um6.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n\n<p>ROS driver for UM6 inertial measurement device. Supports standard data and mag topics, as well as providing temperature and rpy outputs.</p>\n\n<p>This C++ driver replaces the old rospy-based imu_um6.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""um6"">um6</h1>\n\n<p><a href=""https://travis-ci.org/ros-drivers/um6""><img src=""https://travis-ci.org/ros-drivers/um6.png?branch=hydro-devel"" alt=""Build Status""></a></p>\n\n<p>ROS driver for UM6 inertial measurement device. Supports standard data and mag topics, as well as providing temperature and rpy outputs. See the ROS wiki for details: <a href=""http://wiki.ros.org/um6"">http://wiki.ros.org/um6</a></p>\n</div>\n\n            \n          </div>'"
android_apps,http://rosindex.github.io/r/android_apps/,"hydro,groovy,indigo","android_apps,android_app_chooser,android_make_a_map,android_map_manager,android_map_nav,android_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">To configure (only need to do this the first time):\n\n./tools/configure.py\n\nTo build:\n\n./gradlew debug\n\nYou should find .apk files in the bin subdirectory of each project.\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cmake_nodejs_hook,http://rosindex.github.io/r/cmake_nodejs_hook/,indigo,cmake_nodejs_hook,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cmake_nodejs_hook"">cmake_nodejs_hook</h1>\n\n<p>Provides cmake hook to manipulate node modules</p>\n\n<ul>\n<li>catkin_npm_update_target()</li>\n<li>catkin_npm_update_once()</li>\n</ul>\n\n<p>It invokes npm update update in source directory. \nNote that it is untested with install space</p>\n\n<ul>\n<li>Example</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">...\nfind_package(catkin REQUIRED cmake_nodejs_hook)\n\n# Calling npm update every complilation\ncatkin_npm_update_target()\n\n# Calling only once \ncatkin_npm_update_once()\n\ncatkin_package()\n...\n``\n</code></pre></div>\n</div>\n\n            \n          </div>'"
android_core,http://rosindex.github.io/r/android_core/,"hydro,groovy,indigo",android_core,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>rosjava is the first pure Java implementation of ROS.</p>\n\n<p>From <a href=""http://www.ros.org/wiki/"">ROS.org</a>: ROS is an open-source, meta-operating system for your robot. It provides the services you would expect from an operating system, including hardware abstraction, low-level device control, implementation of commonly-used functionality, message-passing between processes, and package management.</p>\n\n<p>Developed at Google in cooperation with Willow Garage, rosjava enables integration of Android and ROS compatible robots. This project is under active development and currently alpha quality software. Please report bugs and feature requests on the <a href=""https://github.com/rosjava/rosjava/issues?state=open"">issues list</a>.</p>\n\n<p>To get started, visit the <a href=""http://rosjava.github.com/rosjava_core/"">rosjava_core</a> and <a href=""http://rosjava.github.com/android_core/"">android_core</a> documentation.</p>\n\n<p>Still have questions? Check out the ros-users <a href=""https://code.ros.org/mailman/listinfo/ros-users"">discussion list</a>, post questions to <a href=""http://answers.ros.org/questions/"">ROS Answers</a> with the tag ""rosjava,"" or join #ROS on irc.oftc.net.</p>\n\n<p>rosjava was announced publicly during the <a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=FxXBUp-4800"">Cloud Robotics tech talk at Google I/O 2011</a>.</p>\n\n<p>Looking for a robot platform to experiment with ROS, Android, and cloud robotics? The <a href=""http://www.willowgarage.com/"">Willow Garage</a> <a href=""http://www.willowgarage.com/turtlebot"">TurtleBot</a> is a great mobile perception platform for <a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=MOEjL8JDvd0"">getting started with robotics development</a>.</p>\n\n<p>Visit the rosjava_core wiki for instructions.</p>\n\n<p><a href=""http://ros.org/wiki/android_core"">http://ros.org/wiki/android_core</a></p>\n</div>\n\n            \n          </div>'"
turtlebot_android,http://rosindex.github.io/r/turtlebot_android/,"hydro,groovy,indigo","turtlebot_android,turtlebot_android_core_components,turtlebot_android_follower,turtlebot_android_panorama","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot_android"">turtlebot_android</h1>\n\n<p>Android app development for the turtlebot.</p>\n</div>\n\n            \n          </div>'"
ar_track_alvar_msgs,http://rosindex.github.io/r/ar_track_alvar_msgs/,"jade,kinetic,indigo",ar_track_alvar_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">ar_track_alvar_msgs\nPackage maintained by Scott Niekum\nsniekum@willowgarage.com\nsniekum@cs.umass.edu\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
cram_3rdparty,http://rosindex.github.io/r/cram_3rdparty/,"hydro,jade,groovy,indigo","alexandria,babel,cffi,cl_store,cl_utilities,cram_3rdparty,fiveam,gsd,gsll,lisp_unit,split_sequence,synchronization_tools,trivial_features,trivial_garbage,trivial_gray_streams,yason","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cram_3rdparty"">cram_3rdparty</h1>\n\n<p>Various common lisp 3rd party libraries used by the CRAM framework.</p>\n</div>\n\n            \n          </div>'"
hokuyo3d,http://rosindex.github.io/r/hokuyo3d/,indigo,hokuyo3d,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-driver-for-hokuyo-3d-sensor"">ROS driver for HOKUYO 3D sensor</h1>\n\n<p>A driver node for HOKUYO\'s new 3D sensor, which will be released in 2015.</p>\n\n<p><img src=""http://openspur.org/%7Eatsushi.w/files/ros_hokuyo3d_cap.png"" alt=""Screen capture of the data""></p>\n</div>\n\n            \n          </div>'"
ethercat_grant,http://rosindex.github.io/r/ethercat_grant/,indigo,ethercat_grant,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ethercat_grant"">ethercat_grant</h1>\n\n<p>This is a repo for the pr2-grant utility. It makes it possible to run the <em>ros_ethercat_loop</em> without requiring root privileges.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>If you installed this package from <em>apt-get</em> then you\'re good to go. (This is definitely the recommended way)</p>\n\n<p>If you compiled this package from source, then you\'ll need to copy the resulting <code>ethercat_grant</code> executable to <code>/usr/local/bin</code> and add the sticky bit to it: <code>sudo chmod +s /usr/local/bin/ethercat_grant</code>.</p>\n\n<h2 id=""use"">Use</h2>\n\n<p>Using ethercat_grant makes it possible to not use <em>sudo</em> anymore for running the ethercat main loop. Just use <code>launch-prefix=""ethercat_grant""</code> in your launch files for the <em>ros_ethercat_loop</em>.</p>\n\n<h2 id=""when-releasing-this-package-developers-only"">When releasing this package (developers only)</h2>\n\n<p>If we change the <code>scripts/postinst</code> post installation script, it has to be manually copied, commited and pushed to the branch with name <code>debian/ROS_DISTRO/ethercat_grant</code> inside the debian directory (where ROS_DISTRO is one of hydro, indigo...)</p>\n\n<p>e.g. <a href=""https://github.com/shadow-robot/ethercat_grant-release/tree/debian/indigo/ethercat_grant/debian"">https://github.com/shadow-robot/ethercat_grant-release/tree/debian/indigo/ethercat_grant/debian</a></p>\n\n<p>See <a href=""http://answers.ros.org/question/191779/add-postinstall-rule-for-deb-package-creation/"">http://answers.ros.org/question/191779/add-postinstall-rule-for-deb-package-creation/</a></p>\n</div>\n\n            \n          </div>'"
orogen,http://rosindex.github.io/r/orogen/,"hydro,indigo",orogen,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang=""""># oroGen: easy component building for Orocos/RTT\n\n* http://www.rock-robotics.org/stable/documentation/orogen\n\n## What is oroGen ?\n\noroGen is a specification language and code generator for the Orocos Realtime\nToolkit (RTT). The Orocos/Real Time Toolkit is a C++ library allowing to build\ncomponent-based systems (http://www.orocos.org/rtt). The orogen tool allows to\ncreate new components easily.\n\nIn oroGen, one write a specification that describes the components you want to\ndevelop. Then, orogen generates the corresponding C++ code and CMake build\nsystem so that you -- the component developer -- has only to care about\nimplementing the actual functionality.\n\nThe remaining of this readme is about oroGen installation. See the user\'s guide\nfor more in-depth usage information:\n\n* [oroGen documentation](http://www.rock-robotics.org/stable/documentation/orogen)\n\n## Installation\n\noroGen is part of the Robot Construction Kit. Check out\n[rock-robotics.org](http://rock-robotics.org) for installation instructions.\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">= Orogen: easy component building for Orocos/RTT\n\n* http://doudou.github.com/orogen\n* http://github.com/doudou/orogen\n* git://github.com/doudou/orogen.git\n\n== What is oroGen ?\n\noroGen is a specification language and code generator for the Orocos Realtime\nToolkit (RTT). The Orocos/Real Time Toolkit is a C++ library allowing to build\ncomponent-based systems (http://www.orocos.org/rtt). The orogen tool allows to\ncreate new components easily.\n\nIn oroGen, one write a specification that describes the components you want to\ndevelop. Then, orogen generates the corresponding C++ code and CMake build\nsystem so that you -- the component developer -- has only to care about\nimplementing the actual functionality.\n\nThe remaining of this readme is about oroGen installation. See the user\'s guide\nfor more in-depth usage information:\n\n  http://doudou.github.com/orogen\n\n== Installation\n\noroGen is part of the RubyInMotion software suite. Check out\nsites.google.com/sites/rubyinmotion for installation instructions.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
husky_desktop,http://rosindex.github.io/r/husky_desktop/,indigo,"husky_desktop,husky_viz","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""husky_desktop"">husky_desktop</h1>\n\n<p>Desktop ROS packages for the Clearpath Husky, which may pull in graphical dependencies.</p>\n\n<ul>\n<li>husky_viz : Visualization (rviz) configuration and bringup</li>\n</ul>\n\n<p>For Husky instructions and tutorials, please see <a href=""http://wiki.ros.org/Robots/Husky"">http://wiki.ros.org/Robots/Husky</a></p>\n</div>\n\n            \n          </div>'"
pr2_ft_moveit_config,http://rosindex.github.io/r/pr2_ft_moveit_config/,"hydro,groovy",pr2_ft_moveit_config,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pr2_ft_moveit_config"">pr2_ft_moveit_config</h1>\n\n<p>Configuration and launch files for using the PR2 robot with force-torque sensors with the MoveIt Motion Planning Framework</p>\n\n<h2 id=""installation-and-running"">Installation and Running</h2>\n\n<p>To run this in your PR2, you also need the standard PR2 moveit packages installed (look at the moveit wiki for more details):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-&lt;ros_distro&gt;-moveit-pr2\n</code></pre></div>\n<p>To launch the move group node execute the following command in the terminal:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch pr2_ft_moveit_config move_group.launch\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pr2_ft_moveit_config"">pr2_ft_moveit_config</h1>\n\n<p>Configuration and launch files for using the PR2 robot with force-torque sensors with the MoveIt Motion Planning Framework</p>\n\n<h2 id=""installation-and-running"">Installation and Running</h2>\n\n<p>To run this in your PR2, you also need the standard PR2 moveit packages installed (look at the moveit wiki for more details):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-&lt;ros_distro&gt;-moveit-pr2\n</code></pre></div>\n<p>To launch the move group node execute the following command in the terminal:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch pr2_ft_moveit_config move_group.launch\n</code></pre></div>\n<p>You can change the URDF used in <strong>demo.launch</strong> by copying your robot\'s URDF to the <strong>urdf/</strong> folder and changing the <strong>planning_context.launch</strong> launch file.</p>\n</div>\n\n            \n          </div>'"
bwi_planning,http://rosindex.github.io/r/bwi_planning/,hydro,"bwi_planning,bwi_planning_icaps14","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""bwi_planning"">bwi_planning</h1>\n\n<p>Repo containing ROS packages for planning research.</p>\n\n<p>These packages are now <em>deprecated</em>, no longer actively used by the UTexas Building Wide Intelligence project.</p>\n\n<p>More recently versions are here:</p>\n\n<ul>\n<li><a href=""https://github.com/utexas-bwi/bwi_common/tree/master/bwi_kr_execution"">https://github.com/utexas-bwi/bwi_common/tree/master/bwi_kr_execution</a></li>\n</ul>\n</div>\n\n            \n          </div>'"
concert_software_farm,http://rosindex.github.io/r/concert_software_farm/,indigo,"concert_software_common,concert_software_farm","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""concert_software_farm"">concert_software_farm</h1>\n\n<p>Software managed by concert</p>\n</div>\n\n            \n          </div>'"
turtlebot_msgs,http://rosindex.github.io/r/turtlebot_msgs/,"hydro,kinetic,indigo",turtlebot_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot_msgs"">turtlebot_msgs</h1>\n\n<p>Turtlebot messages, services and actions</p>\n</div>\n\n            \n          </div>'"
turtlebot_2dnav,http://rosindex.github.io/r/turtlebot_2dnav/,hydro,turtlebot_2dnav,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eband_local_planner,http://rosindex.github.io/r/eband_local_planner/,"hydro,groovy,indigo",eband_local_planner,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""eband_local_planner"">eband_local_planner</h1>\n\n<p>The <a href=""http://wiki.ros.org/eband_local_planner"">eband_local_planner</a> is\na <a href=""http://wiki.ros.org"">ROS</a> package, implementing a plugin to the\n<a href=""http://wiki.ros.org/base_local_planner"">base_local_planner</a> for the\n<a href=""http://wiki.ros.org/move_base"">move_base</a> 2D navigation system.</p>\n\n<p>It implements the Elastic Band method on the SE2 manifold.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""segbot_apps"">segbot_apps</h1>\n\n<p>Autonomy applications for Segway RMP 50 based robots at the University of Texas at Austin</p>\n</div>\n\n            \n          </div>'"
segbot_simulator,http://rosindex.github.io/r/segbot_simulator/,"hydro,groovy","segbot_gazebo,segbot_simulation_apps,segbot_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""the-segbot-ros-meta-package"">The segbot ROS meta-package</h1>\n\n<p>Simulation Components for Segway RMP 50 based robots at Learning Agents \nResearch Group (LARG), AI Laboratory, Department of Computer Science, \nThe University of Texas at Austin. </p>\n\n<p>All the code in this package has been released using a modified BSD license, \nwhich can be found with this package <a href=""LICENSE"">here</a>.</p>\n\n<p>All academic uses of this work should cite the following representative paper:\n""Piyush Khandelwal, Fangkai Yang, Matteo Leonetti, Vladimir Lifschitz, and\nPeter Stone. Planning in Action Language BC while Learning Action Costs for\nMobile Robots. International Conference on Automated Planning and Scheduling\n(ICAPS). 2014.""</p>\n</div>\n\n            \n          </div>'"
agvs,http://rosindex.github.io/r/agvs/,hydro,"agvs,agvs_complete,agvs_control,agvs_description,agvs_gazebo,agvs_pad,agvs_robot_control,planner_msgs,purepursuit_planner","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""agvs"">agvs</h1>\n\n<p>ROS package for the robot AGVS, intended for indoor transportation tasks</p>\n\n<p>List of packages</p>\n\n<h3 id=""agvs_complete"">agvs_complete</h3>\n\n<p>It contains multiple launch files to perform different tasks, from creating a map with gmapping to launching amcl.</p>\n\n<h3 id=""agvs_description"">agvs_description</h3>\n\n<p>Robot description. Urdf and mesh files.</p>\n\n<h3 id=""agvs_pad"">agvs_pad</h3>\n\n<p>Component to move the robot by using a ps3 pad.</p>\n\n<h3 id=""planner_msgs"">planner_msgs</h3>\n\n<p>Messages and actions for planning the autonomous movement of the robot.</p>\n\n<h3 id=""agvs_control"">agvs_control</h3>\n\n<p>Config files used for Gazebo motor controllers.</p>\n\n<h3 id=""agvs_gazebo"">agvs_gazebo</h3>\n\n<p>Launch files and worlds to run Gazebo.</p>\n\n<h3 id=""agvs_robot_control"">agvs_robot_control</h3>\n\n<p>Robot controller that interacts with Gazebo motor controllers.</p>\n\n<h3 id=""purepursuit_planner"">purepursuit_planner</h3>\n\n<p>Planner to follow a list of waypoints implementing the PurePursuit algorithm.</p>\n</div>\n\n            \n          </div>'"
humanoid_navigation,http://rosindex.github.io/r/humanoid_navigation/,"hydro,groovy,fuerte,indigo","footstep_planner,gridmap_2d,humanoid_localization,humanoid_navigation,humanoid_planner_2d","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""humanoid_navigation"">humanoid_navigation</h1>\n\n<p>ROS stack with footstep planning and localization for humanoid robots: <a href=""http://wiki.ros.org/humanoid_navigation"">http://wiki.ros.org/humanoid_navigation</a></p>\n</div>\n\n            \n          </div>'"
zbar_ros,http://rosindex.github.io/r/zbar_ros/,"hydro,indigo",zbar_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""readme"">README</h1>\n\n<p>Basic ROS wrapper for the zbar (<a href=""http://zbar.sourceforge.net/"">http://zbar.sourceforge.net/</a>) barcode reader library. Reads image stream from <code>image</code> topic, and outputs detected barcodes to <code>barcode</code> topic. Works with 1D and 2D barcodes.</p>\n</div>\n\n            \n          </div>'"
genlisp,http://rosindex.github.io/r/genlisp/,"hydro,fuerte,groovy,kinetic,jade,indigo",genlisp,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
crom_common,http://rosindex.github.io/r/crom_common/,hydro,"crom_common,crom_description","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Common packages for the CROM robot. It includes robot_description</p>\n</div>\n\n            \n          </div>'"
husky_description,http://rosindex.github.io/r/husky_description/,"hydro,indigo",husky_description,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""husky_description"">husky_description</h1>\n\n<p>Viewer launchfile is in husky_viz package:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch husky_viz view_model.launch\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""husky_description"">husky_description</h1>\n\n<p>Husky URDF description.</p>\n\n<p>Viewer launchfile is in husky_viz package: <code>roslaunch husky_viz view_model.launch</code></p>\n</div>\n\n            \n          </div>'"
husky_bringup,http://rosindex.github.io/r/husky_bringup/,"hydro,indigo",husky_bringup,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""husky_bringup"">husky_bringup</h1>\n\n<p>Bringup launchfiles and scripts for Husky. Please see the ROS wiki for information on setting up your computer to work with Husky:</p>\n\n<p><a href=""http://wiki.ros.org/Robots/Husky"">http://wiki.ros.org/Robots/Husky</a></p>\n</div>\n\n            \n          </div>'"
crom_sim,http://rosindex.github.io/r/crom_sim/,hydro,"crom_control,crom_gazebo,crom_moveit_config,crom_sim,crom_sim_bringup","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Simulation packages for the CROM robot. It includes:</p>\n\n<ul>\n<li><p>crom_gazebo: it includes launch files and configuration to run the Gazebo simulation</p></li>\n<li><p>crom_control: it includes the controllers configuration for Gazebo control plugins</p></li>\n<li><p>crom_moveit: it includes the configuration to run Moveit with the robot</p></li>\n<li><p>crom_sim_bringup: it includes launch files to launch Gazebo and MoveIt RVIZ plugin</p></li>\n</ul>\n</div>\n\n            \n          </div>'"
turtlebot_interactions,http://rosindex.github.io/r/turtlebot_interactions/,indigo,"turtlebot_dashboard,turtlebot_interactions,turtlebot_interactive_markers,turtlebot_rviz_launchers","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot-interactions"">Turtlebot Interactions</h1>\n\n<p>This is the evolution of the <a href=""https://github.com/turtlebot/turtlebot_viz"">turtlebot_viz</a> stack supporting user side interactions with the turtlebot. It was first released in indigo.</p>\n</div>\n\n            \n          </div>'"
phidgets_drivers,http://rosindex.github.io/r/phidgets_drivers/,"hydro,groovy,fuerte,indigo","phidgets_api,phidgets_drivers,phidgets_imu,phidgets_ir,phidgets_c_api","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""phidgets-drivers-for-ros-groovy-hydro"">Phidgets drivers for ROS Groovy/Hydro</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Drivers for the Phidgets devices. This Catkin metapackage includes:</p>\n\n<ul>\n<li><p><code>phidgets_api</code>: a package which downloads and builds the Phidgets C API from\nphidgets.com (as an external project). It also implements a C++ wrapper\nfor the C API, providing a base Phidget class and various inherited classes\nfor different phidget devices.</p></li>\n<li><p>Two packages exposing the functionality of specific phidgets devices using\nthe ROS API: <code>phidgets_imu</code> and <code>phidgets_ir</code>.</p></li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p>Make sure you have a working catkin workspace, as described at:\n<a href=""http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace"">http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace</a></p>\n\n<p>Also make sure you have git installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Change directory to the source folder of your catkin workspace.\nIf, for instance, your workspace is <code>~/catkin_ws</code>, make sure there is\na <code>src/</code> folder within it, then execute:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\n</code></pre></div>\n<p>Download the metapackage from the github repository (<ros_distro> may be <code>groovy</code> or <code>hydro</code>):</ros_distro></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone -b &lt;ros_distro&gt; https://github.com/ccny-ros-pkg/phidgets_drivers.git\n</code></pre></div>\n<p>Install dependencies using rosdep:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install phidgets_drivers\n</code></pre></div>\n<p>Alternatively, if rosdep does not work, install the following packages:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install libusb-1.0-0 libusb-1.0-0-dev\n</code></pre></div>\n<p>Compile your catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws\ncatkin_make\n</code></pre></div>\n<h3 id=""udev-rules-setup"">Udev rules setup:</h3>\n\n<p>Make sure your catkin workspace has been successfully compiled.\nTo set up the udev rules for the Phidgets USB devices, run the following commands:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws\nsh src/phidgets_drivers/phidgets_api/share/setup-udev.sh\n</code></pre></div>\n<p>You will be prompted to type in your password.</p>\n\n<h2 id=""for-documentation-regarding-nodes-topics-etc"">For documentation regarding nodes, topics, etc:</h2>\n\n<p><a href=""http://ros.org/wiki/phidgets_drivers"">http://ros.org/wiki/phidgets_drivers</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""phidgets-drivers-for-ros"">Phidgets drivers for ROS</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Drivers for the Phidgets devices. The stack includes:</p>\n\n<ul>\n<li><p><code>phidgets_c_api</code>: a meta-package which downloads the Phidgets C API \nfrom phidgets.com and installs it locally within the package\'s directory.</p></li>\n<li><p><code>phidgets_api</code>: a C++ wrapper of the C API which provides a base Phidget\nclass and various inherited classes for the different phidget devices.</p></li>\n<li><p>various packages exposing the functionality of specific phidgets using\nthe ROS API.</p></li>\n</ul>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p>Create a directory where you want the package downloaded (ex. <code>~/ros</code>), \nand add it to <code>$ROS_PACKAGE_PATH</code>.</p>\n\n<p>Make sure you have git installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Download the stack from our repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/ccny-ros-pkg/phidgets_drivers.git\n</code></pre></div>\n<p>Install any dependencies using rosdep.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install phidgets_drivers\n</code></pre></div>\n<p>Compile the stack:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosmake phidgets_drivers\n</code></pre></div>\n<h3 id=""rules-set-up"">Rules set up:</h3>\n\n<p>To set up your udev rules for the phidgets USB devices, run this script:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">phidgets_c_api/setup-udev.sh\n</code></pre></div>\n<p>You will be prompted for a sudo password.</p>\n\n<h2 id=""more-info"">More info</h2>\n\n<p><a href=""http://ros.org/wiki/phidgets_drivers"">http://ros.org/wiki/phidgets_drivers</a></p>\n</div>\n\n            \n          </div>'"
acado,http://rosindex.github.io/r/acado/,"hydro,indigo",acado,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""acado-toolkit"">ACADO Toolkit <a href=""https://travis-ci.org/acado/acado""><img src=""https://travis-ci.org/acado/acado.png?branch=stable,%20master"" alt=""Build Status""></a> <a href=""https://ci.appveyor.com/project/mvukov/acado""><img src=""https://ci.appveyor.com/api/projects/status/fai4cc4kavjv4nq8"" alt=""Build status""></a>\n</h1>\n\n<blockquote>\n<p>Toolkit for Automatic Control and Dynamic Optimization</p>\n</blockquote>\n\n<p>ACADO Toolkit is a software environment and algorithm collection for automatic control and dynamic optimization. It provides a general framework for using a great variety of algorithms for direct optimal control, including model predictive control, state and parameter estimation and robust optimization. ACADO Toolkit is implemented as self-contained C++ code and comes along with user-friendly MATLAB interface. The object-oriented design allows for convenient coupling of existing optimization packages and for extending it with user-written optimization routines.</p>\n\n<p>More information about the toolkit can be found at the <a href=""http://www.acadotoolkit.org"">homepage</a>.</p>\n</div>\n\n            \n          </div>'"
navigation_msgs,http://rosindex.github.io/r/navigation_msgs/,"jade,kinetic","map_msgs,move_base_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""navigation-messages"">Navigation Messages</h1>\n\n<p>This repository contains messages used by the\n<a href=""https://github.com/ros-planning/navigation"">navigation stack</a>.\nIt is intended for use in ROS Jade and above. Prior to Jade some of these\nmessages existed in the navigation repository.</p>\n</div>\n\n            \n          </div>'"
executive_smach,http://rosindex.github.io/r/executive_smach/,"hydro,fuerte,electric,groovy,kinetic,diamondback,jade,indigo","executive_smach,smach,smach_msgs,smach_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smach"">SMACH</h1>\n\n<p>SMACH is a task-level python execution framework for rapidly composing complex\nrobot behaviors.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""smach"">SMACH</h1>\n\n<p>SMACH is a task-level python execution framework for rapidly composing complex\nrobot behaviors.</p>\n\n<h2 id=""hybrid-buildsystem"">Hybrid Buildsystem</h2>\n\n<p>Note that this is a <em>hybrid</em> rosbuild-catkin repository. This means can clone\nthis repository into either a rosbuild-based environment or a catkin-based\nenvironment. If you run ""make"" inside of one of the pacakges, it will attempt\nto use rosbuild. If you place any of these packages into a catkin source\ndirectory, it will work like a normal catkin package.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
universal_teleop,http://rosindex.github.io/r/universal_teleop/,hydro,universal_teleop,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>= Description =</p>\n\n<p>The purpose of this node is to allow a transparent layer for tele-operating robots, re-configurable and which does not depend on a particular robot. Both terrestrial and aerial robots are supported.\nThis node reads input from keyboard (using the corresponding node) and joystick. Button and axis can be associated to ""actions"" and axis controls. The output is a geometry_msgs/Twist message, which is standard\nfor controlling robots. The node will only emit velocity commands when the ""override"" is enabled (a special event) by the corresponding button/key. This allows the universal_teleop to co-exist with other\nnodes which control a robot autonomously. Whenever the ""override"" event is fired, this event can be received from any other node, disabling autonomous control and letting universal_teleop to control the robot.\nFurthermore, the requirement for this ""override"" to manually control the robot functions as a dead man\'s switch. If the joystick falls to the floor, the override will be released and the robot will be stopped.</p>\n\n<p>= Topics =</p>\n\n<p>== Subscribed ==</p>\n\n<p>/joy (joy/Joy): input from joystick, reading buttons and axis</p>\n\n<p>/keyboard/keyup, /keyboard/keydown (keyboard/Key): input from keyboard, key-up and key-down events respectively</p>\n\n<p>== Advertised ==</p>\n\n<p>/robot/cmd_vel (geometry_msgs/Twist): output velocity commands to robot</p>\n\n<p>~events (universal_teleop/Event): output events</p>\n\n<p>~controls (universal_teleop/Control): output controls</p>\n\n<p>/robot/takeoff, /robot/land, /robot/reset: special commands used on aerial-robots for controlling takeoff and landings</p>\n</div>\n\n            \n          </div>'"
turtlebot_viz,http://rosindex.github.io/r/turtlebot_viz/,"hydro,fuerte,electric,groovy,indigo","turtlebot_dashboard,turtlebot_interactive_markers,turtlebot_rviz_launchers,turtlebot_viz,turtlebot_diagnostics","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot_viz"">turtlebot_viz</h1>\n\n<p>Visualisation and interactive tools for the TurtleBot</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
segway_rmp,http://rosindex.github.io/r/segway_rmp/,"hydro,electric,indigo","segway_rmp,joy2twist_segway_rmp,libftd2xx,libsegwayrmp,segway_rmpX,segway_rmp_demos,serial_segway_rmp","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><a href=""https://travis-ci.org/segwayrmp/segway-rmp-ros-pkg""><img src=""https://travis-ci.org/segwayrmp/segway-rmp-ros-pkg.png?branch=master"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
read_omni_dataset,http://rosindex.github.io/r/read_omni_dataset/,hydro,read_omni_dataset,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>==================================</p>\n\n<h1 id=""read_omni_dataset"">read_omni_dataset</h1>\n\n<p>This is a ROS package to systematically read sensor msgs from the omni-dataset (soccer robots dataset). </p>\n\n<p>==================================</p>\n\n<h1 id=""dataset-download"">Dataset download</h1>\n\n<p>Please download the soccer robot dataset in the rosbags format here (Please see instructions below on how to use the rosbags):</p>\n\n<p><a href=""http://datasets.isr.ist.utl.pt/lrmdataset/4_Robots_DataSet/rosbags/"">http://datasets.isr.ist.utl.pt/lrmdataset/4_Robots_DataSet/rosbags/</a></p>\n\n<p>In case you want the raw data, i.e., simply the image files from the robot\'s camera, odometry log etc, in simple text format, please click on the following link. A short readme is also provided over there.</p>\n\n<p><a href=""http://datasets.isr.ist.utl.pt/lrmdataset/4_Robots_DataSet/rawdata/"">http://datasets.isr.ist.utl.pt/lrmdataset/4_Robots_DataSet/rawdata/</a></p>\n\n<p>LICENSE: Please note that the dataset is also (as well as this ros package) released under the GNU GPLv3 License. </p>\n\n<p>==================================</p>\n\n<h1 id=""citation"">Citation</h1>\n\n<p>If you plan to use the dataset, please cite it as follows:</p>\n\n<p>@PHDTHESIS {aahmad13phd,\n    author  = ""Aamir Ahmad"",\n    title   = ""An Integrated Bayesian Approach to Multi-Robot Cooperative Perception"",\n    school  = ""Instituto Superior T\\\'ecnico, Universidade T\\\'ecnica de Lisboa"",\n    year    = ""2013"",\n    address = ""Instituto Superior T\\\'ecnico, Av. Rovisco Pais 1, 1049-001 Lisboa, Portugal"",\n    month   = ""apr"",\n    note    = ""\\""Instituto Superior T\\\'ecnico\\"" was formerly within  \\""Universidade T\\\'ecnica de Lisboa\\"" and is now within \\""Universidade de Lisboa\\""""\n}</p>\n\n<p>==================================</p>\n\n<h1 id=""brief-description"">Brief Description</h1>\n\n<p>This package is designed as a read module that asynchronously reads messages from the socrob omni dataset. The purpose of this package is to provide a quick and ready-to-start platform for developing and implementing perception related algorithms utilizing the the omni dataset. In the wiki of this package ( <a href=""https://github.com/aamirahmad/read_omni_dataset/wiki"">https://github.com/aamirahmad/read_omni_dataset/wiki</a> ), we first describe what this dataset has, then provide instructions on how to download, extract and run the bag files. Subsequently, you can find information on how to use this package to access the contents of the omni-dataset in the rosbags format. Of course, you are welcome to develop and extend this package as per your requirement. Comments and suggestions on improving this read-module package are also appreciated. On the other hand, you can write your own ros package or non-ros softwares to read the omni-dataset in either the rosbags format or the the raw format (as mentioned in the download section above).</p>\n\n<p>Please see the wiki page of this package for more info on how to use the dataset and the package.</p>\n</div>\n\n            \n          </div>'"
myahrs_driver,http://rosindex.github.io/r/myahrs_driver/,indigo,myahrs_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""myahrs_driver"">myahrs_driver</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>This is a driver package for the WITHROBOT\'s myAHRS+ from <a href=""http://www.lilliputdirect.com/odroid-myahrs%7Clilliputdirect"">http://www.lilliputdirect.com/odroid-myahrs|lilliputdirect</a> and <a href=""http://www.hardkernel.com/main/products/prdt_info.php?g_code=G141464363369"">http://www.hardkernel.com/main/products/prdt_info.php?g_code=G141464363369</a> . The myAHRS+ is a low cost high performance AHRS(Attitude Heading Reference System) with USB/UART/I2C interface. The myAHRS+ board contains a 3-axis 16-bit gyroscope, a 3-axis 16-bit accelerometer and a 3-axis 13-bit magnetometer. The driver should also work with USB port.</p>\n\n<h3 id=""axes-convention"">Axes Convention</h3>\n\n<p>The myAHRS+ board used NED type. The myahrs_driver contained in this package converts to the frame conventions of ROS (use the east north up (ENU) convention and right hand rule) before publishing the msgs. The driver use the coordinate frame below. Please see <a href=""http://www.ros.org/reps/rep-0103.html#axis-orientation"">http://www.ros.org/reps/rep-0103.html#axis-orientation</a> for more information.</p>\n\n<ul>\n<li>x forward</li>\n<li>y left</li>\n<li><p>z up</p></li>\n<li><p>NED type IMU: x-north, y-east, z-down, relative to magnetic north.</p></li>\n<li><p>ENU type IMU: x-east, y-north, z-up, relative to magnetic north.</p></li>\n</ul>\n\n<h3 id=""original-source"">Original Source</h3>\n\n<p>The original source (not support ROS) is maintained github below and tutorials are on the corresponding wiki page. A 3D visualization test like 3D-box is included in this original source. This package used the myAHRS+ SDK below.</p>\n\n<p><a href=""https://github.com/withrobot/myAHRS_plus"">https://github.com/withrobot/myAHRS_plus</a></p>\n\n<h2 id=""video"">Video</h2>\n\n<p>This is a visualization demonstration using RViz.</p>\n\n<p><a href=""http://www.youtube.com/watch?v=j5v5fKppcQo""><img src=""http://img.youtube.com/vi/j5v5fKppcQo/0.jpg"" alt=""test""></a></p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>Install the package:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">sudo apt-get install ros-indigo-myahrs-driver\n\n</code></pre></div>\n<p>Install the package from the github:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh""><span class=""nb"">cd</span> ~/catkin_ws/src\ngit clone https://github.com/robotpilot/myahrs_driver.git\n<span class=""nb"">cd</span> ~/catkin_ws <span class=""o"">&amp;&amp;</span> catkin_make\n\n</code></pre></div>\n<h1 id=""run"">Run</h1>\n\n<p>Run the driver like so:</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">rosrun myahrs_driver myahrs_driver _port:<span class=""o"">=</span>/dev/ttyACM0\n\n</code></pre></div>\n<p>or</p>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">roslaunch myahrs_driver myahrs_driver.launch\n\n</code></pre></div>\n<h2 id=""nodes"">Nodes</h2>\n\n<p>Official ROS documentation can be found on the ROS wiki at:</p>\n\n<p><a href=""http://wiki.ros.org/myahrs_driver"">http://wiki.ros.org/myahrs_driver</a></p>\n\n<h2 id=""communication-protocol-manual-and-forum"">Communication Protocol Manual and Forum</h2>\n\n<p>The myAHRS+ protocol can be found here(<a href=""https://github.com/withrobot/myAHRS_plus/tree/master/tutorial"">https://github.com/withrobot/myAHRS_plus/tree/master/tutorial</a>). The Forum for myAHRS+ user can be found here(<a href=""http://forum.odroid.com/viewforum.php?f=109"">http://forum.odroid.com/viewforum.php?f=109</a>).</p>\n\n<h2 id=""references"">References</h2>\n\n<h3 id=""references-for-myahrs-board"">References for myAHRS+ board</h3>\n\n<ul>\n<li><a href=""http://www.withrobot.com/myahrs_plus_en/"">http://www.withrobot.com/myahrs_plus_en/</a></li>\n<li><a href=""http://www.withrobot.com/?wpdmact=process&amp;did=MTE4LmhvdGxpbms="">http://www.withrobot.com/?wpdmact=process&amp;did=MTE4LmhvdGxpbms=</a></li>\n<li><p><a href=""https://github.com/robotpilot/myAHRS_plus"">https://github.com/robotpilot/myAHRS_plus</a></p></li>\n<li><p><a href=""http://www.hardkernel.com/main/products/prdt_info.php?g_code=G141464363369"">http://www.hardkernel.com/main/products/prdt_info.php?g_code=G141464363369</a></p></li>\n<li><p><a href=""http://www.lilliputdirect.com/odroid-myahrs"">http://www.lilliputdirect.com/odroid-myahrs</a></p></li>\n</ul>\n\n<h3 id=""references-for-convention-of-axes-and-unit"">References for convention of axes and unit</h3>\n\n<ul>\n<li><a href=""http://www.ros.org/reps/rep-0003.html"">http://www.ros.org/reps/rep-0003.html</a></li>\n<li><a href=""http://www.ros.org/reps/rep-0103.html"">http://www.ros.org/reps/rep-0103.html</a></li>\n<li><a href=""https://github.com/paulbovbel/rep/blob/master/rep-0145.rst"">https://github.com/paulbovbel/rep/blob/master/rep-0145.rst</a></li>\n</ul>\n\n<h3 id=""references-for-similar-imu-packages"">References for similar IMU packages</h3>\n\n<ul>\n<li><a href=""http://wiki.ros.org/um6"">http://wiki.ros.org/um6</a></li>\n<li><a href=""http://wiki.ros.org/razor_imu_9dof"">http://wiki.ros.org/razor_imu_9dof</a></li>\n<li><p><a href=""https://github.com/KristofRobot/razor_imu_9dof"">https://github.com/KristofRobot/razor_imu_9dof</a></p></li>\n<li><p><a href=""http://docs.ros.org/api/sensor_msgs/html/msg/Imu.html"">http://docs.ros.org/api/sensor_msgs/html/msg/Imu.html</a></p></li>\n</ul>\n</div>\n\n            \n          </div>'"
maxwell,http://rosindex.github.io/r/maxwell/,"hydro,groovy,indigo","maxwell,maxwell_calibration,maxwell_defs,maxwell_moveit_config,maxwell_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""maxwell"">Maxwell</h2>\n\n<p>Maxwell is a custom mobile manipulator based on an Arbotix RoboController. </p>\n\n<p>Documentation can be found at <a href=""http://ros.org/wiki/maxwell"">http://ros.org/wiki/maxwell</a></p>\n\n<p>This code was originally hosted on <a href=""http://code.google.com/p/vanadium-ros-pkg/"">http://code.google.com/p/vanadium-ros-pkg/</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""maxwell"">Maxwell</h2>\n\n<p>Maxwell is a custom mobile manipulator based on the Etherbotix\n(earlier versions were based on the ArbotiX RoboController).</p>\n\n<p>Documentation can be found at <a href=""http://ros.org/wiki/maxwell"">http://ros.org/wiki/maxwell</a></p>\n</div>\n\n            \n          </div>'"
husky_base,http://rosindex.github.io/r/husky_base/,"hydro,indigo",husky_base,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cmvision,http://rosindex.github.io/r/cmvision/,hydro,cmvision,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cmvision"">cmvision</h1>\n\n<p>cmvision port for ROS Hydro</p>\n</div>\n\n            \n          </div>'"
gscam,http://rosindex.github.io/r/gscam/,"hydro,groovy,indigo",gscam,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gscam"">GSCam</h1>\n\n<p>This is a ROS package originally developed by the <a href=""http://robotics.cs.brown.edu/"">Brown Robotics\nLab</a> for broadcasting any\n<a href=""http://gstreamer.freedesktop.org/"">GStreamer</a>-based video stream via the\nstandard <a href=""http://ros.org/wiki/camera_drivers"">ROS Camera API</a>. This fork has\nseveral fixes incorporated into it to make it broadcast correct\n<code>sensor_msgs/Image</code> messages with proper frames and timestamps. It also allows\nfor more ROS-like configuration and more control over the GStreamer interface.</p>\n\n<p>Note that this pacakge can be built both in a rosbuild and catkin workspaces.</p>\n\n<h2 id=""ros-api-stable"">ROS API (stable)</h2>\n\n<h3 id=""gscam"">gscam</h3>\n\n<p>This can be run as both a node and a nodelet.</p>\n\n<h4 id=""nodes"">Nodes</h4>\n\n<ul>\n<li><code>gscam</code></li>\n</ul>\n\n<h4 id=""topics"">Topics</h4>\n\n<ul>\n<li><code>camera/image_raw</code></li>\n<li><code>camera/camera_info</code></li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<ul>\n<li><code>camera/set_camera_info</code></li>\n</ul>\n\n<h4 id=""parameters"">Parameters</h4>\n\n<ul>\n<li>\n<code>~camera_name</code>: The name of the camera (corrsponding to the camera info)</li>\n<li>\n<code>~camera_info_url</code>: A url (<code>file://path/to/file</code>, <code>package://pkg_name/path/to/file</code>) to the <a href=""http://www.ros.org/wiki/camera_calibration_parsers#File_formats"">camera calibration file</a>.</li>\n<li>\n<code>~gscam_config</code>: The GStreamer <a href=""http://wiki.oz9aec.net/index.php?title=Gstreamer_cheat_sheet&amp;oldid=1829"">configuration string</a>.</li>\n<li>\n<code>~frame_id</code>: The <a href=""http://www.ros.org/wiki/tf"">TF</a> frame ID.</li>\n<li>\n<code>~reopen_on_eof</code>: Re-open the stream if it ends (EOF).</li>\n<li>\n<code>~sync_sink</code>: Synchronize the app sink (sometimes setting this to <code>false</code> can resolve problems with sub-par framerates).</li>\n</ul>\n\n<h2 id=""c-api-unstable"">C++ API (unstable)</h2>\n\n<p>The gscam c++ library can be used, but it is not guaranteed to be stable. </p>\n\n<h2 id=""examples"">Examples</h2>\n\n<p>See example launchfiles and configs in the examples directory. Currently there\nare examples for:\n * <a href=""examples/v4l.launch"">Video4Linux2</a>: Standard\n   <a href=""http://en.wikipedia.org/wiki/Video4Linux"">video4linux</a>-based cameras like\n   USB webcams\n * <a href=""examples/gscam_nodelet.launch"">Nodelet</a>: Run a V4L-based camera in a nodelet\n * <a href=""examples/videofile.launch"">Video File</a>: Any videofile readable by GStreamer\n * <a href=""examples/decklink.launch"">DeckLink</a>:\n   <a href=""http://www.blackmagicdesign.com/products/decklink/models"">BlackMagic</a>\n   DeckLink SDI capture cards (note: this requires the <code>gst-plugins-bad</code> plugins)</p>\n</div>\n\n            \n          </div>'"
rosjava,http://rosindex.github.io/r/rosjava/,"hydro,indigo",rosjava,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosjava"">RosJava</h1>\n\n<p>Metapackage for the official rosjava repositories.</p>\n</div>\n\n            \n          </div>'"
roboteq,http://rosindex.github.io/r/roboteq/,"hydro,jade,indigo","roboteq_diagnostics,roboteq_driver,roboteq_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""roboteq"">roboteq</h1>\n\n<p>ROS driver for serial Roboteq motor controllers. This driver is suitable for use with Roboteq\'s\nAdvanced Digital Motor Controllers, as described in <a href=""http://www.roboteq.com/index.php/docman/motor-controllers-documents-and-files/documentation/user-manual/7-nextgen-controllers-user-manual/file"">this document</a>. Devices include:</p>\n\n<p>Brushed DC: HDC24xx, VDC24xx, MDC22xx, LDC22xx, LDC14xx, SDC1130, SDC21xx<br>\nBrushless DC: HBL16xx, VBL16xx, HBL23xx, VBL23xx, LBL13xx, MBL16xx, SBL13xx<br>\nSepex: VSX18xx</p>\n\n<p>The node works by downloading a MicroBasic script to the driver, which then publishes ASCII sentences at 10Hz and 50Hz with the data corresponding to the Status and per-channel Feedback messages published by the driver.</p>\n</div>\n\n            \n          </div>'"
turtlebot_create_desktop,http://rosindex.github.io/r/turtlebot_create_desktop/,"hydro,groovy,indigo","create_dashboard,create_gazebo_plugins,turtlebot_create_desktop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot_create_desktop"">turtlebot_create_desktop</h1>\n\n<p>Visualisation tools for the iRobot Create</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot_create_desktop"">turtlebot_create_desktop</h1>\n\n<p>Visualisation and simulation tools for the iRobot Create</p>\n</div>\n\n            \n          </div>'"
rviz_fps_plugin,http://rosindex.github.io/r/rviz_fps_plugin/,"hydro,indigo",rviz_fps_plugin,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rviz_fps_plugin"">rviz_fps_plugin</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>The rviz_fps_plugin package contains an additional ViewController and a Tool Plugin to navigate RViz like an FPS-Shooter using the keyboard.</p>\n\n<h2 id=""keyboard-control"">Keyboard Control</h2>\n\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Functionality</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Q</td>\n<td>Activate the Tool</td>\n</tr>\n<tr>\n<td>W A S D</td>\n<td>Moving</td>\n</tr>\n<tr>\n<td>Up Down</td>\n<td>Changing Height</td>\n</tr>\n<tr>\n<td>Left Right</td>\n<td>Yaw Left Right</td>\n</tr>\n<tr>\n<td>Shift</td>\n<td>Boosting Movements</td>\n</tr>\n<tr>\n<td>F</td>\n<td>Toogle Move/Fly Mode</td>\n</tr>\n<tr>\n<td>R</td>\n<td>Reset the View Controller</td>\n</tr>\n</tbody>\n</table>\n\n<h2 id=""third-party-copyright-disclaimer"">Third-Party Copyright Disclaimer</h2>\n\n<p>Icon <a href=""http://thenounproject.com/term/walking/26898/"">""Walking""</a> by Dima Lagunov.</p>\n\n<p>All Icons from <a href=""http://thenounproject.com"">The Noun Project</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rviz_fps_plugin"">rviz_fps_plugin</h1>\n\n<p>The rviz_fps_plugin package contains an additional ViewController and a Tool Plugin to navigate RViz like an FPS-Shooter.</p>\n\n<p>To enable the tool press \'q\' and enable the \'FPSMotion\' ViewController. Use the \'wasd\' keys for walking.\nBy pressing \'f\' one can switch between walk or fly mode. By pressing \'r\' you can reset the view controller.</p>\n</div>\n\n            \n          </div>'"
darwin_gazebo,http://rosindex.github.io/r/darwin_gazebo/,"hydro,indigo",darwin_gazebo,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""darwin_gazebo"">darwin_gazebo</h2>\n\n<p>ROS package providing Gazebo simulation of the Darwin OP robot.\nAlso provides a Python interface to the joints and some walk capabilities.</p>\n\n<p>These have been tested in simulation and need some work to be used on the real robot, do not use as-is.</p>\n\n<p><img src=""https://raw.githubusercontent.com//HumaRobotics/darwin_gazebo/master///darwin.png?raw=true"" alt=""Darwin model in Gazebo"" title=""Darwin model in Gazebo""></p>\n\n<h2 id=""tutorial"">Tutorial</h2>\n\n<p>A tutorial describing how to use this package can be found at:</p>\n\n<p><a href=""http://www.generationrobots.com/en/content/83-carry-out-simulations-and-make-your-darwin-op-walk-with-gazebo-and-ros"">http://www.generationrobots.com/en/content/83-carry-out-simulations-and-make-your-darwin-op-walk-with-gazebo-and-ros</a></p>\n\n<h2 id=""install"">Install</h2>\n\n<p>Clone in your catkin workspace and catkin_make it.\nMake sure you also have the following packages in your workspace\n* darwin_description: <a href=""https://github.com/HumaRobotics/darwin_description"">https://github.com/HumaRobotics/darwin_description</a>\n* darwin_control: <a href=""https://github.com/HumaRobotics/darwin_control"">https://github.com/HumaRobotics/darwin_control</a></p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>You can launch the simulation with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch darwin_gazebo darwin_gazebo.launch\n</code></pre></div>\n<p>PRESS PLAY IN GAZEBO ONLY WHEN EVERYTHING IS LOADED (wait for controllers)</p>\n\n<p>You can run a walk demo with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun darwin_gazebo walker_demo.py\n</code></pre></div>\n<h2 id=""ros-api"">ROS API</h2>\n\n<p>All topics are provided in the /darwin namespace.</p>\n\n<p>Sensors:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/darwin/camera/image_raw\n/darwin/imu\n/darwin/joint_states\n</code></pre></div>\n<p>Actuators (radians for position control, arbitrary normalized speed for cmd_vel):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/darwin/cmd_vel\n/darwin/j_ankle1_l_position_controller/command\n/darwin/j_ankle1_r_position_controller/command\n/darwin/j_ankle2_l_position_controller/command\n/darwin/j_ankle2_r_position_controller/command\n/darwin/j_gripper_l_position_controller/command\n/darwin/j_gripper_r_position_controller/command\n/darwin/j_high_arm_l_position_controller/command\n/darwin/j_high_arm_r_position_controller/command\n/darwin/j_low_arm_l_position_controller/command\n/darwin/j_low_arm_r_position_controller/command\n/darwin/j_pan_position_controller/command\n/darwin/j_pelvis_l_position_controller/command\n/darwin/j_pelvis_r_position_controller/command\n/darwin/j_shoulder_l_position_controller/command\n/darwin/j_shoulder_r_position_controller/command\n/darwin/j_thigh1_l_position_controller/command\n/darwin/j_thigh1_r_position_controller/command\n/darwin/j_thigh2_l_position_controller/command\n/darwin/j_thigh2_r_position_controller/command\n/darwin/j_tibia_l_position_controller/command\n/darwin/j_tibia_r_position_controller/command\n/darwin/j_tilt_position_controller/command\n/darwin/j_wrist_l_position_controller/command\n/darwin/j_wrist_r_position_controller/command\n</code></pre></div>\n<h2 id=""python-api"">Python API</h2>\n\n<p>Basic usage:</p>\n<div class=""highlight""><pre><code class=""language-python"" data-lang=""python""><span class=""kn"">import</span> <span class=""nn"">rospy</span>\n<span class=""kn"">from</span> <span class=""nn"">darwin_gazebo.darwin</span> <span class=""kn"">import</span> <span class=""n"">Darwin</span>\n\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">init_node</span><span class=""p"">(</span><span class=""s"">""walker_demo""</span><span class=""p"">)</span>\n\n<span class=""n"">darwin</span><span class=""o"">=</span><span class=""n"">Darwin</span><span class=""p"">()</span>\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">sleep</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""p"">)</span>\n\n<span class=""n"">darwin</span><span class=""o"">.</span><span class=""n"">set_walk_velocity</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""p"">,</span><span class=""mi"">0</span><span class=""p"">,</span><span class=""mi"">0</span><span class=""p"">)</span> <span class=""c""># Set full speed ahead for 5 secs</span>\n<span class=""n"">rospy</span><span class=""o"">.</span><span class=""n"">sleep</span><span class=""p"">(</span><span class=""mi"">5</span><span class=""p"">)</span>\n<span class=""n"">darwin</span><span class=""o"">.</span><span class=""n"">set_walk_velocity</span><span class=""p"">(</span><span class=""mi"">0</span><span class=""p"">,</span><span class=""mi"">0</span><span class=""p"">,</span><span class=""mi"">0</span><span class=""p"">)</span> <span class=""c""># Stop</span>\n\n</code></pre></div>\n<h2 id=""dependencies"">Dependencies</h2>\n\n<p>The following ROS packages have to be installed:\n* gazebo_ros_control\n* hector_gazebo</p>\n\n<h2 id=""license"">License</h2>\n\n<p>This software is provided by G\xc3\xa9n\xc3\xa9ration Robots <a href=""http://www.generationrobots.com"">http://www.generationrobots.com</a> and HumaRobotics <a href=""http://www.humarobotics.com"">http://www.humarobotics.com</a> under the Simplified BSD license</p>\n</div>\n\n            \n          </div>'"
rocon_rosjava_core,http://rosindex.github.io/r/rocon_rosjava_core/,"hydro,indigo",rocon_rosjava_core,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>These are the rocon rosjava libraries. They provide important interfaces for working\nwith various rocon components.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>== Installation From Hydro Sources on Trusty ==</p>\n\n<p>This is only temporary until rosjava upgrades to indigo...but hydro sources work fine.</p>\n\n<p>We will create a series of underlays:</p>\n\n<ul>\n<li>indigo</li>\n<li>rosjava</li>\n<li>rocon_rosjava</li>\n<li>android</li>\n<li>rocon_android</li>\n</ul>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; mkdir -p ~/android\n&gt; cd ~/android\n&gt; yujin_init_workspace -j5 rosjava rosjava-release\n&gt; cd rosjava\n&gt; yujin_init_build .\n&gt; yujin_make --install-rosdeps\n&gt; yujin_make\n\n\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; cd ~/android\n&gt; yujin_init_workspace -j5 rocon_rosjava rocon-rosjava\n&gt; cd rocon_rosjava\n&gt; yujin_init_build -u ~/android/rosjava/devel .\n&gt; yujin_make\n\n\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; cd ~/android\n&gt; yujin_init_workspace -j5 android android\n&gt; cd android\n&gt; yujin_init_build -u ""~/android/rocon_rosjava/devel;~/android/rosjava/devel"" .\n&gt; yujin_make\n\n\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; cd ~/android\n&gt; yujin_init_workspace -j5 interactions android\n&gt; cd interactions\n&gt; yujin_init_build -u ""~/android/android/devel;~/android/rocon_rosjava/devel;~/android/rosjava/devel"" .\n&gt; yujin_make\n\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
rosjava_core,http://rosindex.github.io/r/rosjava_core/,"hydro,groovy,indigo",rosjava_core,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosjava_test_msgs,http://rosindex.github.io/r/rosjava_test_msgs/,indigo,rosjava_test_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosjava_test_msgs"">rosjava_test_msgs</h1>\n\n<p>Test messages for rosjava_core.</p>\n</div>\n\n            \n          </div>'"
rosjava_extras,http://rosindex.github.io/r/rosjava_extras/,"hydro,indigo",rosjava_extras,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosjava_extras"">rosjava_extras</h1>\n\n<p>Extra non-core rosjava libraries and applications.</p>\n</div>\n\n            \n          </div>'"
zeroconf_jmdns_suite,http://rosindex.github.io/r/zeroconf_jmdns_suite/,"hydro,electric,fuerte,indigo","zeroconf_jmdns_suite,zeroconf_avahi,zeroconf_avahi_demos,zeroconf_comms,zeroconf_jmdns,zeroconf_jmdns_demos","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""zeroconf-jmdns"">Zeroconf JmDNS</h1>\n\n<p>This repository packages android friendly sources from the <a href=""http://jmdns.sourceforge.net/"">jmdns</a> project\nand provides some tutorial demos.</p>\n\n<h2 id=""the-jmdns-library"">The JmDNS Library</h2>\n\n<h3 id=""about"">About</h3>\n\n<p>JmDNS works a little differently from avahi, although it does the same job. You can separate its\nfunctionality into two parts:</p>\n\n<p>1) Zeroconf services (publishing, discovery and resolution) on a fixed, specified interface.\n2) Network topology aware zeroconf services (in the author\'s language - multi-homed).</p>\n\n<p>What the latter means, is that it will be automatically detect what network interfaces you have\nand also be aware of those interfaces going up and down whilst providing a dynamic awareness of\nthe zeroconf services that appear and disappear with those interfaces.</p>\n\n<p>The network topology part of jmdns is still fairly experimental. </p>\n\n<h3 id=""the-experimental-part"">The Experimental Part</h3>\n\n<p>The network topology aware part of zeroconf is quite important. On android in particular it saves\nyou having to worry about detecting the ip of your interface, which is rather handy. This part is\nquite reliable after having helped with some patches upstream.</p>\n\n<p>It does have problems however handling multiple network interfaces and can also be confusing with the\nway it handles ipv6. I have some patches here in this code set which get it working, but either aren\'t\nupstream yet, or probably not the proper solution yet. </p>\n\n<p>Hence we have a snapshot of the sources here.</p>\n\n<h3 id=""publishing"">Publishing</h3>\n\n<p>Publishing is relatively straightforward. For ros environments, we typically only ever want or need to\npublish the ros master, in which case you\'d publish it under something like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">_ros-master._tcp 11311\n\n</code></pre></div>\n<h3 id=""discovery"">Discovery</h3>\n\n<p>There are two methods in the jmdns library for discovery. The first is via <em>polling</em>, which will always be\nthe far more reliable method (especially if your interface is up and down alot and likely to get\njmdns confused). The second is via event based <em>listeners</em> which give you callbacks to instantly\nreact on a zeroconf service coming up or down.</p>\n\n<h2 id=""the-ros-wrapper"">The Ros Wrapper</h2>\n\n<p>I\'ve got a couple of classes set up to more easily handle the jmdns library for our purposes (jmdns\ncan be quite messy to program with). It\'s not a full node, but it wouldn\'t be a stretch to\nconvert this into a full node\'s functionality using zeroconf_msgs as the basis for handles that work\nin a similar way to the ros zeroconf_avahi package.</p>\n\n<h2 id=""tutorials"">Tutorials</h2>\n\n<p>Instructions can be found in the readme in the jmdns_tutorials package.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">= Zero-Configuration =\n\nThis repository is populated by RoS packages for handling zero-configuration across \nplatforms. The implementations are convenient wrappers around platform-dependant \nimplementations whose purpose are both to expose a fairly standard sort of api as\nwell as a ros api (topics and services) where practical.\n\n=== Platform Implementations ===\n\n* Avahi : c++ and python implementations for linux.\n* Jmdns : a java (generic) and a customised implementation for android.\n* Bonjour : implementations for windows and apple.\n\nNote that the android code can be found in the separate zeroconf_android stack.\n\n=== Status ===\n\n* zeroconf_avahi : done\n* jmdns : running, but rough around the edges.\n* zeroconf_avahi_python : ...\n* zeroconf_avahi_embedded : ...\n\n=== Roadmap ===\n\nThis is only a rough plan at the moment. In particular the network discovery tools needs\nsome though on how to design and implement such a feature.\n\n* Avahi implementations\n* Jmdns and android implementations\n* Bonjour implementations\n* Discovery tools for network connectivity\n* Utilities\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
husky_viz,http://rosindex.github.io/r/husky_viz/,"hydro,indigo",husky_viz,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
darwin_control,http://rosindex.github.io/r/darwin_control/,"hydro,indigo",darwin_control,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""darwin_control"">darwin_control</h2>\n\n<p>ROS package providing ROS controller description and launch files for the Darwin OP robot</p>\n\n<p><img src=""https://raw.githubusercontent.com//HumaRobotics/darwin_control/master///darwin.png?raw=true"" alt=""Darwin OP model in Gazebo"" title=""Darwin OP model in Gazebo""></p>\n\n<h2 id=""tutorial"">Tutorial</h2>\n\n<p>A tutorial describing how to use this package can be found at:</p>\n\n<p><a href=""http://www.generationrobots.com/en/content/83-carry-out-simulations-and-make-your-darwin-op-walk-with-gazebo-and-ros"">http://www.generationrobots.com/en/content/83-carry-out-simulations-and-make-your-darwin-op-walk-with-gazebo-and-ros</a></p>\n\n<h2 id=""install"">Install</h2>\n\n<p>Just clone in your catkin workspace. Launch with:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch darwin_control darwin_control.launch\n</code></pre></div>\n<p>For gazebo simulation this file is launched automatically by the launchers from darwin_gazebo.</p>\n\n<h2 id=""license"">License</h2>\n\n<p>This software is provided by G\xc3\xa9n\xc3\xa9ration Robots <a href=""http://www.generationrobots.com"">http://www.generationrobots.com</a> and HumaRobotics <a href=""http://www.humarobotics.com"">http://www.humarobotics.com</a> under the Simplified BSD license</p>\n</div>\n\n            \n          </div>'"
darwin_description,http://rosindex.github.io/r/darwin_description/,"hydro,indigo",darwin_description,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""darwin_description"">darwin_description</h2>\n\n<p>ROS package providing mesh files and URDF of the Darwin OP robot for use with the real robot or Gazebo.\nURDF contains joint transmissions for controllers and Gazebo referenced plugins for camera and the IMU provided by hector_gazebo.</p>\n\n<p><img src=""https://raw.githubusercontent.com//HumaRobotics/darwin_description/master///darwin.png?raw=true"" alt=""Darwin model in Gazebo"" title=""Darwin model in Gazebo""></p>\n\n<h2 id=""tutorial"">Tutorial</h2>\n\n<p>A tutorial describing how to use this package can be found at:</p>\n\n<p><a href=""http://www.generationrobots.com/en/content/83-carry-out-simulations-and-make-your-darwin-op-walk-with-gazebo-and-ros"">http://www.generationrobots.com/en/content/83-carry-out-simulations-and-make-your-darwin-op-walk-with-gazebo-and-ros</a></p>\n\n<h2 id=""install"">Install</h2>\n\n<p>Just clone in your catkin workspace. You may need to install the hector_gazebo ROS package.</p>\n\n<h2 id=""license"">License</h2>\n\n<p>This software is provided by G\xc3\xa9n\xc3\xa9ration Robots <a href=""http://www.generationrobots.com"">http://www.generationrobots.com</a> and HumaRobotics <a href=""http://www.humarobotics.com"">http://www.humarobotics.com</a> under the Simplified BSD license</p>\n</div>\n\n            \n          </div>'"
lama_featurenav,http://rosindex.github.io/r/lama_featurenav/,indigo,"anj_featurenav,featurenav_base","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
android_extras,http://rosindex.github.io/r/android_extras/,"hydro,indigo",android_extras,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
joint_state_publisher_js,http://rosindex.github.io/r/joint_state_publisher_js/,hydro,joint_state_publisher_js,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jointstatepublisherjs"">jointstatepublisherjs <a href=""https://travis-ci.org/RobotWebTools/starter-template""><img src=""https://api.travis-ci.org/RobotWebTools/starter-template.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""jointstatepublisher-in-javascript"">JointStatePublisher in JavaScript</h4>\n\n<p>For additional documentation, see <a href=""http://wiki.ros.org/joint_state_publisher_js"">the ROS wiki</a>.</p>\n\n<p><a href=""http://robotwebtools.org/jsdoc/jointstatepublisherjs/current/"">JSDoc</a> can be found on the Robot Web Tools website.</p>\n\n<p>This project is released as part of the <a href=""http://robotwebtools.org/"">Robot Web Tools</a> effort.</p>\n\n<h3 id=""usage"">Usage</h3>\n\n<p>Pre-built files can be found in either <a href=""build/jointstatepublisher.js"">jointstatepublisher.js</a> or <a href=""build/jointstatepublisher.min.js"">jointstatepublisher.min.js</a>.</p>\n\n<p>Alternatively, you can use the current release via the CDN: (<a href=""http://cdn.example.com/jointstatepublisherjs/current/jointstatepublisher.js"">full</a>) | (<a href=""http://cdn.example.com/jointstatepublisherjs/current/jointstatepublisher.min.js"">min</a>)</p>\n\n<h3 id=""dependencies"">Dependencies</h3>\n\n<p>jointstatepublisherjs depends on:</p>\n\n<p><a href=""https://github.com/RobotWebTools/ros3djs"">ros3djs</a>.</p>\n\n<h3 id=""build"">Build</h3>\n\n<p>Checkout <a href=""utils/README.md"">utils/README.md</a> for details on building.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>jointstatepublisherjs is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS"">AUTHORS.md</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
ros_arduino_bridge,http://rosindex.github.io/r/ros_arduino_bridge/,"hydro,fuerte,electric,groovy,indigo","ros_arduino_bridge,ros_arduino_firmware,ros_arduino_msgs,ros_arduino_python","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""overview"">Overview</h2>\n\n<p>This branch (hydro-devel) is intended for ROS Hydro and above, and uses the Catkin buildsystem. It may also be compatible with ROS Groovy.</p>\n\n<p>This ROS stack includes an Arduino library (called ROSArduinoBridge) and a collection of ROS packages for controlling an Arduino-based robot using standard ROS messages and services.  The stack does <strong>not</strong> depend on ROS Serial.</p>\n\n<p>Features of the stack include:</p>\n\n<ul>\n<li><p>Direct support for Ping sonar and Sharp infrared (GP2D12) sensors</p></li>\n<li><p>Can also read data from generic analog and digital sensors</p></li>\n<li><p>Can control digital outputs (e.g. turn a switch or LED on and off)</p></li>\n<li><p>Support for PWM servos</p></li>\n<li><p>Configurable base controller if using the required hardware</p></li>\n</ul>\n\n<p>The stack includes a base controller for a differential drive\nrobot that accepts ROS Twist messages and publishes odometry data back to\nthe PC. The base controller requires the use of a motor controller and encoders for reading odometry data.  The current version of the stack provides support for the following base controller hardware:</p>\n\n<ul>\n<li><p>Pololu VNH5019 dual motor controller shield (<a href=""http://www.pololu.com/catalog/product/2502"">http://www.pololu.com/catalog/product/2502</a>) or Pololu MC33926 dual motor shield (<a href=""http://www.pololu.com/catalog/product/2503"">http://www.pololu.com/catalog/product/2503</a>).</p></li>\n<li><p>Robogaia Mega Encoder shield\n(<a href=""http://www.robogaia.com/two-axis-encoder-counter-mega-shield-version-2.html"">http://www.robogaia.com/two-axis-encoder-counter-mega-shield-version-2.html</a>) or on-board wheel encoder counters.</p></li>\n</ul>\n\n<p><strong>NOTE:</strong> The Robogaia Mega Encoder shield can only be used with an Arduino Mega. The on-board wheel encoder counters are currently only supported by Arduino Uno.</p>\n\n<ul>\n<li>The library can be easily extended to include support for other motor controllers and encoder hardware or libraries.</li>\n</ul>\n\n<h2 id=""official-ros-documentation"">Official ROS Documentation</h2>\n\n<p>A standard ROS-style version of this documentation can be found on the ROS wiki at:</p>\n\n<p><a href=""http://www.ros.org/wiki/ros_arduino_bridge"">http://www.ros.org/wiki/ros_arduino_bridge</a></p>\n\n<h2 id=""system-requirements"">System Requirements</h2>\n\n<p><strong>Python Serial:</strong> To install the python-serial package under Ubuntu, use the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install python-serial\n</code></pre></div>\n<p>On non-Ubuntu systems, use either:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo pip install --upgrade pyserial\n</code></pre></div>\n<p>or</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo easy_install -U pyserial\n</code></pre></div>\n<p>The stack should work with any Arduino-compatible controller for reading sensors and controlling PWM servos.  However, to use the base controller, you will need a supported motor controller and encoder hardware as described above. If you do not have this hardware, you can still try the package for reading sensors and controlling servos.  See the NOTES section at the end of this document for instructions on how to do this.</p>\n\n<p>To use the base controller you must also install the appropriate libraries for your motor controller and encoders.  For the Pololu VNH5019 Dual Motor Shield, the library can be found at:</p>\n\n<p><a href=""https://github.com/pololu/Dual-VNH5019-Motor-Shield"">https://github.com/pololu/Dual-VNH5019-Motor-Shield</a></p>\n\n<p>For the Pololu MC33926 Dual Motor Shield, the library can be found at:</p>\n\n<p><a href=""https://github.com/pololu/dual-mc33926-motor-shield"">https://github.com/pololu/dual-mc33926-motor-shield</a></p>\n\n<p>The Robogaia Mega Encoder library can be found at:</p>\n\n<p><a href=""http://www.robogaia.com/uploads/6/8/0/9/6809982/__megaencodercounter-1.3.tar.gz"">http://www.robogaia.com/uploads/6/8/0/9/6809982/__megaencodercounter-1.3.tar.gz</a></p>\n\n<p>These libraries should be installed in your standard Arduino\nsketchbook/libraries directory.</p>\n\n<p>Finally, it is assumed you are using version 1.0 or greater of the\nArduino IDE.</p>\n\n<h2 id=""preparing-your-serial-port-under-linux"">Preparing your Serial Port under Linux</h2>\n\n<p>Your Arduino will likely connect to your Linux computer as port /dev/ttyACM# or /dev/ttyUSB# where # is a number like 0, 1, 2, etc., depending on how many other devices are connected.  The easiest way to make the determination is to unplug all other USB devices, plug in your Arduino, then run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls /dev/ttyACM*\n</code></pre></div>\n<p>or </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls /dev/ttyUSB*\n</code></pre></div>\n<p>Hopefully, one of these two commands will return the result you\'re looking for (e.g. /dev/ttyACM0) and the other will return the error ""No such file or directory"".</p>\n\n<p>Next you need to make sure you have read/write access to the port.  Assuming your Arduino is connected on /dev/ttyACM0, run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls -l /dev/ttyACM0\n</code></pre></div>\n<p>and you should see an output similar to the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">crw-rw---- 1 root dialout 166, 0 2013-02-24 08:31 /dev/ttyACM0\n</code></pre></div>\n<p>Note that only root and the ""dialout"" group have read/write access.  Therefore, you need to be a member of the dialout group.  You only have to do this once and it should then work for all USB devices you plug in later on.</p>\n\n<p>To add yourself to the dialout group, run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo usermod -a -G dialout your_user_name\n</code></pre></div>\n<p>where your_user_name is your Linux login name.  You will likely have to log out of your X-window session then log in again, or simply reboot your machine if you want to be sure.</p>\n\n<p>When you log back in again, try the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ groups\n</code></pre></div>\n<p>and you should see a list of groups you belong to including dialout. </p>\n\n<h2 id=""installation-of-the-ros_arduino_bridge-stack"">Installation of the ros_arduino_bridge Stack</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_workspace/src\n$ git clone https://github.com/hbrobotics/ros_arduino_bridge.git\n$ cd ~/catkin_workspace\n$ catkin_make\n</code></pre></div>\n<p>The provided Arduino library is called ROSArduinoBridge and is\nlocated in the ros_arduino_firmware package.  This sketch is\nspecific to the hardware requirements above but it can also be used\nwith other Arduino-type boards (e.g. Uno) by turning off the base\ncontroller as described in the NOTES section at the end of this\ndocument.</p>\n\n<p>To install the ROSArduinoBridge library, follow these steps:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd SKETCHBOOK_PATH\n</code></pre></div>\n<p>where SKETCHBOOK_PATH is the path to your Arduino sketchbook directory.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cp -rp `rospack find ros_arduino_firmware`/src/libraries/ROSArduinoBridge ROSArduinoBridge\n</code></pre></div>\n<p>This last command copies the ROSArduinoBridge sketch files into your sketchbook folder.  The next section describes how to configure, compile and upload this sketch.</p>\n\n<h2 id=""loading-the-rosarduinobridge-sketch"">Loading the ROSArduinoBridge Sketch</h2>\n\n<ul>\n<li><p>If you are using the base controller, make sure you have already installed the appropriate motor controller and encoder libraries into your Arduino sketchbook/librariesfolder.</p></li>\n<li>\n<p>Launch the Arduino 1.0 IDE and load the ROSArduinoBridge sketch.\nYou should be able to find it by going to:</p>\n\n<p>File-&gt;Sketchbook-&gt;ROSArduinoBridge</p>\n</li>\n</ul>\n\n<p>NOTE: If you don\'t have the required base controller hardware but\nstill want to try the code, see the notes at the end of the file.</p>\n\n<p>Choose one of the supported motor controllers by uncommenting its #define statement and commenting out any others.  By default, the Pololu VNH5019 driver is chosen.</p>\n\n<p>Choose a supported encoder library by by uncommenting its #define statement and commenting out any others.  At the moment, only the Robogaia Mega Encoder shield is supported and it is chosen by default.</p>\n\n<p>If you want to control PWM servos attached to your controller, change\nthe two lines that look like this:</p>\n\n<pre>\n//#define USE_SERVOS\n#undef USE_SERVOS\n</pre>\n\n<p>to this:</p>\n\n<pre>\n#define USE_SERVOS\n//#undef USE_SERVOS\n</pre>\n\n<p>You must then edit the include file servos.h and change the N_SERVOS\nparameter as well as the pin numbers for the servos you have attached.</p>\n\n<ul>\n<li>Compile and upload the sketch to your Arduino.</li>\n</ul>\n\n<h2 id=""firmware-commands"">Firmware Commands</h2>\n\n<p>The ROSArduinoLibrary accepts single-letter commands over the serial port for polling sensors, controlling servos, driving the robot, and reading encoders.  These commands can be sent to the Arduino over any serial interface, including the Serial Monitor in the Arduino IDE.</p>\n\n<p><strong>NOTE:</strong> Before trying these commands, set the Serial Monitor baudrate to 57600 and the line terminator to ""Carriage return"" or ""Both NL &amp; CR"" using the two pulldown menus on the lower right of the Serial Monitor window.</p>\n\n<p>The list of commands can be found in the file commands.h.  The current list includes:</p>\n\n<pre>\n#define ANALOG_READ    \'a\'\n#define GET_BAUDRATE   \'b\'\n#define PIN_MODE       \'c\'\n#define DIGITAL_READ   \'d\'\n#define READ_ENCODERS  \'e\'\n#define MOTOR_SPEEDS   \'m\'\n#define PING           \'p\'\n#define RESET_ENCODERS \'r\'\n#define SERVO_WRITE    \'s\'\n#define SERVO_READ     \'t\'\n#define UPDATE_PID     \'u\'\n#define DIGITAL_WRITE  \'w\'\n#define ANALOG_WRITE   \'x\'\n</pre>\n\n<p>For example, to get the analog reading on pin 3, use the command:</p>\n\n<p>a 3</p>\n\n<p>To change the mode of digital pin 3 to OUTPUT, send the command:</p>\n\n<p>c 3 1</p>\n\n<p>To get the current encoder counts:</p>\n\n<p>e</p>\n\n<p>To move the robot forward at 20 encoder ticks per second:</p>\n\n<p>m 20 20</p>\n\n<h2 id=""testing-your-wiring-connections"">Testing your Wiring Connections</h2>\n\n<p>On a differential drive robot, the motors are connected to the motor controller terminals with opposite polarities to each other.  Similarly, the A/B leads from the encoders are connected in the reverse sense to each other.  However, you still need to make sure that (a) the wheels move forward when given a positive motor speed and (b) that the encoder counts increase when the wheels move forward.</p>\n\n<p>After <strong>placing your robot on blocks</strong>, you can use the Serial Monitor in the Arduino IDE to test both requirements.  Use the \'m\' command to activate the motors, the \'e\' command to get the encoder counts, and the \'r\' command to reset the encoders to 0.  Remember that at the firmware level, motor speeds are given in encoder ticks per second so that for an encoder resolution of, say 4000 counts per wheel revolution, a command such as \'m 20 20\' should move the wheels fairly slowly.  (The wheels will only move for 2 seconds which is the default setting for the AUTO_STOP_INTERVAL.)  Also remember that the first argument is the left motor speed and the second argument is the right motor speed.  Similarly, when using the \'e\' command, the first number returned is the left encoder count and the second number is the right encoder count.</p>\n\n<p>Finally, you can use the \'r\' and \'e\' commands to verify the expected encoder counts by rotating the wheels by hand roughly one full turn and checking the reported counts.</p>\n\n<h2 id=""configuring-the-ros_arduino_python-node"">Configuring the ros_arduino_python Node</h2>\n\n<p>Now that your Arduino is running the required sketch, you can\nconfigure the ROS side of things on your PC.  You define your robot\'s\ndimensions, PID parameters, and sensor configuration by editing the\nYAML file in the directory ros_arduino_python/config.  So first move\ninto that directory:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roscd ros_arduino_python/config\n</code></pre></div>\n<p>Now copy the provided config file to one you can modify:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cp arduino_params.yaml my_arduino_params.yaml\n</code></pre></div>\n<p>Bring up your copy of the params file (my_arduino_params.yaml) in\nyour favorite text editor.  It should start off looking like this:</p>\n\n<pre>\nport: /dev/ttyUSB0\nbaud: 57600\ntimeout: 0.1\n\nrate: 50\nsensorstate_rate: 10\n\nuse_base_controller: False\nbase_controller_rate: 10\n\n# === Robot drivetrain parameters\n#wheel_diameter: 0.146\n#wheel_track: 0.2969\n#encoder_resolution: 8384 # from Pololu for 131:1 motors\n#gear_reduction: 1.0\n#motors_reversed: True\n\n# === PID parameters\n#Kp: 20\n#Kd: 12\n#Ki: 0\n#Ko: 50\n#accel_limit: 1.0\n\n# === Sensor definitions.  Examples only - edit for your robot.\n#     Sensor type can be one of the follow (case sensitive!):\n#     * Ping\n#     * GP2D12\n#     * Analog\n#     * Digital\n#     * PololuMotorCurrent\n#     * PhidgetsVoltage\n#     * PhidgetsCurrent (20 Amp, DC)\n\nsensors: {\n  #motor_current_left:   {pin: 0, type: PololuMotorCurrent, rate: 5},\n  #motor_current_right:  {pin: 1, type: PololuMotorCurrent, rate: 5},\n  #ir_front_center:      {pin: 2, type: GP2D12, rate: 10},\n  #sonar_front_center:   {pin: 5, type: Ping, rate: 10},\n  arduino_led:          {pin: 13, type: Digital, rate: 5, direction: output}\n}\n</pre>\n\n<p><strong>NOTE</strong>: Do not use tabs in your .yaml file or the parser will barf it back out when it tries to load it.   Always use spaces instead.  <strong>ALSO</strong>: When defining your sensor parameters, the last sensor in the list does <strong>not</strong> get a comma (,) at the end of the line but all the rest <strong>must</strong> have a comma.</p>\n\n<p>Let\'s now look at each section of this file.</p>\n\n<p><em>Port Settings</em></p>\n\n<p>The port will likely be either /dev/ttyACM0 or /dev/ttyUSB0. Set accordingly.</p>\n\n<p>The MegaRobogaiaPololu Arudino sketch connects at 57600 baud by default.</p>\n\n<p><em>Polling Rates</em></p>\n\n<p>The main <em>rate</em> parameter (50 Hz by default) determines how fast the\noutside ROS loop runs.  The default should suffice in most cases.  In\nany event, it should be at least as fast as your fastest sensor rate\n(defined below).</p>\n\n<p>The <em>sensorstate_rate</em> determines how often to publish an aggregated\nlist of all sensor readings.  Each sensor also publishes on its own\ntopic and rate.</p>\n\n<p>The <em>use_base_controller</em> parameter is set to False by default.  Set it to True to use base control (assuming you have the required hardware.)  You will also have to set the PID paramters that follow.</p>\n\n<p>The <em>base_controller_rate</em> determines how often to publish odometry readings.</p>\n\n<p><em>Defining Sensors</em></p>\n\n<p>The <em>sensors</em> parameter defines a dictionary of sensor names and\nsensor parameters. (You can name each sensor whatever you like but\nremember that the name for a sensor will also become the topic name\nfor that sensor.)</p>\n\n<p>The four most important parameters are <em>pin</em>, <em>type</em>, <em>rate</em> and <em>direction</em>.\nThe <em>rate</em> defines how many times per second you want to poll that\nsensor.  For example, a voltage sensor might only be polled once a\nsecond (or even once every 2 seconds: rate=0.5), whereas a sonar\nsensor might be polled at 20 times per second.  The <em>type</em> must be one\nof those listed (case sensitive!).  The default <em>direction</em> is input so\nto define an output pin, set the direction explicitly to output.  In\nthe example above, the Arduino LED (pin 13) will be turned on and off\nat a rate of 2 times per second.</p>\n\n<p><em>Setting Drivetrain and PID Parameters</em></p>\n\n<p>To use the base controller, you will have to uncomment and set the\nrobot drivetrain and PID parameters.  The sample drivetrain parameters\nare for 6"" drive wheels that are 11.5"" apart.  Note that ROS uses\nmeters for distance so convert accordingly.  The sample encoder\nresolution (ticks per revolution) is from the specs for the Pololu\n131:1 motor.  Set the appropriate number for your motor/encoder\ncombination.  Set the motors_reversed to True if you find your wheels\nare turning backward, otherwise set to False.</p>\n\n<p>The PID parameters are trickier to set.  You can start with the sample\nvalues but be sure to place your robot on blocks before sending it\nyour first Twist command.</p>\n\n<h2 id=""launching-the-ros_arduino_python-node"">Launching the ros_arduino_python Node</h2>\n\n<p>Take a look at the launch file arduino.launch in the\nros_arduino_python/launch directory.  As you can see, it points to a\nconfig file called my_arduino_params.yaml.  If you named your config\nfile something different, change the name in the launch file.</p>\n\n<p>With your Arduino connected and running the MegaRobogaiaPololu sketch,\nlaunch the ros_arduino_python node with your parameters:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch ros_arduino_python arduino.launch\n</code></pre></div>\n<p>You should see something like the following output:</p>\n\n<pre>\nprocess[arduino-1]: started with pid [6098]\nConnecting to Arduino on port /dev/ttyUSB0 ...\nConnected at 57600\nArduino is ready.\n[INFO] [WallTime: 1355498525.954491] Connected to Arduino on port /dev/ttyUSB0 at 57600 baud\n[INFO] [WallTime: 1355498525.966825] motor_current_right {\'rate\': 5, \'type\': \'PololuMotorCurrent\', \'pin\': 1}\n[INFO]\netc\n</pre>\n\n<p>If you have any Ping sonar sensors on your robot and you defined them\nin your config file, they should start flashing to indicate you have\nmade the connection.</p>\n\n<h2 id=""viewing-sensor-data"">Viewing Sensor Data</h2>\n\n<p>To see the aggregated sensor data, echo the sensor state topic:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /arduino/sensor_state\n</code></pre></div>\n<p>To see the data on any particular sensor, echo its topic name:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /arduino/sensor/sensor_name\n</code></pre></div>\n<p>For example, if you have a sensor called ir_front_center, you can see\nits data using:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /arduino/sensor/ir_front_center\n</code></pre></div>\n<p>You can also graph the range data using rxplot:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rxplot -p 60 /arduino/sensor/ir_front_center/range\n</code></pre></div>\n<h2 id=""sending-twist-commands-and-viewing-odometry-data"">Sending Twist Commands and Viewing Odometry Data</h2>\n\n<p>Place your robot on blocks, then try publishing a Twist command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic pub -1 /cmd_vel geometry_msgs/Twist \'{ angular: {z: 0.5} }\'\n</code></pre></div>\n<p>The wheels should turn in a direction consistent with a\ncounter-clockwise rotation (right wheel forward, left wheel backward).\nIf they turn in the opposite direction, set the motors_reversed\nparameter in your config file to the opposite of its current setting,\nthen kill and restart the arduino.launch file.</p>\n\n<p>Stop the robot with the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic pub -1 /cmd_vel geometry_msgs/Twist \'{}\'\n</code></pre></div>\n<p>To view odometry data:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /odom\n</code></pre></div>\n<p>or</p>\n\n<p>$ rxplot -p 60 /odom/pose/pose/position/x:y, /odom/twist/twist/linear/x, /odom/twist/twist/angular/z</p>\n\n<h2 id=""ros-services"">ROS Services</h2>\n\n<p>The ros_arduino_python package also defines a few ROS services as follows:</p>\n\n<p><strong>digital_set_direction</strong> - set the direction of a digital pin</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/digital_set_direction pin direction\n</code></pre></div>\n<p>where pin is the pin number and direction is 0 for input and 1 for output.</p>\n\n<p><strong>digital_write</strong> - send a LOW (0) or HIGH (1) signal to a digital pin</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/digital_write pin value\n</code></pre></div>\n<p>where pin is the pin number and value is 0 for LOW and 1 for HIGH.</p>\n\n<p><strong>servo_write</strong> - set the position of a servo</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/servo_write id pos\n</code></pre></div>\n<p>where id is the index of the servo as defined in the Arduino sketch (servos.h) and pos is the position in radians (0 - 3.14).</p>\n\n<p><strong>servo_read</strong> - read the position of a servo</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/servo_read id\n</code></pre></div>\n<p>where id is the index of the servo as defined in the Arduino sketch (servos.h)</p>\n\n<h2 id=""using-the-on-board-wheel-encoder-counters-arduino-uno-only"">Using the on-board wheel encoder counters (Arduino Uno only)</h2>\n\n<p>The firmware supports on-board wheel encoder counters for Arduino Uno.\nThis allows connecting wheel encoders directly to the Arduino board, without the need for any additional wheel encoder counter equipment (such as a RoboGaia encoder shield).</p>\n\n<p>For speed, the code is directly addressing specific Atmega328p ports and interrupts, making this implementation Atmega328p (Arduino Uno) dependent. (It should be easy to adapt for other boards/AVR chips though.)</p>\n\n<p>To use the on-board wheel encoder counters, connect your wheel encoders to Arduino Uno as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Left wheel encoder A output -- Arduino UNO pin 2\nLeft wheel encoder B output -- Arduino UNO pin 3\n\nRight wheel encoder A output -- Arduino UNO pin A4\nRight wheel encoder B output -- Arduino UNO pin A5\n</code></pre></div>\n<p>Make the following changes in the ROSArduinoBridge sketch to disable the RoboGaia encoder shield, and enable the on-board one:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/* The RoboGaia encoder shield */\n//#define ROBOGAIA\n/* Encoders directly attached to Arduino board */\n#define ARDUINO_ENC_COUNTER\n</code></pre></div>\n<p>Compile the changes and upload to your controller.</p>\n\n<h2 id=""notes"">NOTES</h2>\n\n<p>If you do not have the hardware required to run the base controller,\nfollow the instructions below so that you can still use your\nArduino-compatible controller to read sensors and control PWM servos.</p>\n\n<p>First, you need to edit the ROSArduinoBridge sketch. At the top of\nthe file, change the two lines that look like this:</p>\n\n<pre>\n#define USE_BASE\n//#undef USE_BASE\n</pre>\n\n<p>to this:</p>\n\n<pre>\n//#define USE_BASE\n#undef USE_BASE\n</pre>\n\n<p><strong>NOTE:</strong> You also need to comment out the line that looks like this in the file encoder_driver.ino:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include ""MegaEncoderCounter.h""\n</code></pre></div>\n<p>so it looks like this:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">//#include ""MegaEncoderCounter.h""\n</code></pre></div>\n<p>Compile the changes and upload to your controller.</p>\n\n<p>Next, edit your my_arduino_params.yaml file and make sure the\nuse_base_controller parameter is set to False.  That\'s all there is to it.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""overview"">Overview</h2>\n\n<p>This branch (groovy-devel) is intended for ROS Groovy, and uses the rosmake buildsystem. For a catkin version, please see the hydro-devel branch.</p>\n\n<p>This ROS stack includes an Arduino library (called ROSArduinoBridge) and a collection of ROS packages for controlling an Arduino-based robot using standard ROS messages and services.  The stack does <strong>not</strong> depend on ROS Serial.</p>\n\n<p>Features of the stack include:</p>\n\n<ul>\n<li><p>Direct support for Ping sonar and Sharp infrared (GP2D12) sensors</p></li>\n<li><p>Can also read data from generic analog and digital sensors</p></li>\n<li><p>Can control digital outputs (e.g. turn a switch or LED on and off)</p></li>\n<li><p>Support for PWM servos</p></li>\n<li><p>Configurable base controller if using the required hardware</p></li>\n</ul>\n\n<p>The stack includes a base controller for a differential drive\nrobot that accepts ROS Twist messages and publishes odometry data back to\nthe PC. The base controller requires the use of a motor controller and encoders for reading odometry data.  The current version of the stack provides support for the following base controller hardware:</p>\n\n<ul>\n<li><p>Pololu VNH5019 dual motor controller shield (<a href=""http://www.pololu.com/catalog/product/2502"">http://www.pololu.com/catalog/product/2502</a>) or Pololu MC33926 dual motor shield (<a href=""http://www.pololu.com/catalog/product/2503"">http://www.pololu.com/catalog/product/2503</a>).</p></li>\n<li><p>Robogaia Mega Encoder shield\n(<a href=""http://www.robogaia.com/two-axis-encoder-counter-mega-shield-version-2.html"">http://www.robogaia.com/two-axis-encoder-counter-mega-shield-version-2.html</a>).</p></li>\n</ul>\n\n<p><strong>NOTE:</strong> The Robogaia Mega Encoder shield can only be used with an Arduino Mega.</p>\n\n<ul>\n<li>The library can be easily extended to include support for other motor controllers and encoder hardware or libraries.</li>\n</ul>\n\n<h2 id=""official-ros-documentation"">Official ROS Documentation</h2>\n\n<p>A standard ROS-style version of this documentation can be found on the ROS wiki at:</p>\n\n<p><a href=""http://www.ros.org/wiki/ros_arduino_bridge"">http://www.ros.org/wiki/ros_arduino_bridge</a></p>\n\n<h2 id=""system-requirements"">System Requirements</h2>\n\n<p><strong>Python Serial:</strong> To install the python-serial package under Ubuntu, use the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install python-serial\n</code></pre></div>\n<p>On non-Ubuntu systems, use either:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo pip install --upgrade pyserial\n</code></pre></div>\n<p>or</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo easy_install -U pyserial\n</code></pre></div>\n<p>The stack should work with any Arduino-compatible controller for reading sensors and controlling PWM servos.  However, to use the base controller, you will need a supported motor controller and encoder hardware as described above. If you do not have this hardware, you can still try the package for reading sensors and controlling servos.  See the NOTES section at the end of this document for instructions on how to do this.</p>\n\n<p>To use the base controller you must also install the appropriate libraries for your motor controller and encoders.  For the Pololu VNH5019 Dual Motor Shield, the library can be found at:</p>\n\n<p><a href=""https://github.com/pololu/Dual-VNH5019-Motor-Shield"">https://github.com/pololu/Dual-VNH5019-Motor-Shield</a></p>\n\n<p>For the Pololu MC33926 Dual Motor Shield, the library can be found at:</p>\n\n<p><a href=""https://github.com/pololu/dual-mc33926-motor-shield"">https://github.com/pololu/dual-mc33926-motor-shield</a></p>\n\n<p>The Robogaia Mega Encoder library can be found at:</p>\n\n<p><a href=""http://www.robogaia.com/uploads/6/8/0/9/6809982/__megaencodercounter-1.3.tar.gz"">http://www.robogaia.com/uploads/6/8/0/9/6809982/__megaencodercounter-1.3.tar.gz</a></p>\n\n<p>These libraries should be installed in your standard Arduino\nsketchbook/libraries directory.</p>\n\n<p>Finally, it is assumed you are using version 1.0 or greater of the\nArduino IDE.</p>\n\n<h2 id=""preparing-your-serial-port-under-linux"">Preparing your Serial Port under Linux</h2>\n\n<p>Your Arduino will likely connect to your Linux computer as port /dev/ttyACM# or /dev/ttyUSB# where # is a number like 0, 1, 2, etc., depending on how many other devices are connected.  The easiest way to make the determination is to unplug all other USB devices, plug in your Arduino, then run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls /dev/ttyACM*\n</code></pre></div>\n<p>or </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls /dev/ttyUSB*\n</code></pre></div>\n<p>Hopefully, one of these two commands will return the result you\'re looking for (e.g. /dev/ttyACM0) and the other will return the error ""No such file or directory"".</p>\n\n<p>Next you need to make sure you have read/write access to the port.  Assuming your Arduino is connected on /dev/ttyACM0, run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls -l /dev/ttyACM0\n</code></pre></div>\n<p>and you should see an output similar to the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">crw-rw---- 1 root dialout 166, 0 2013-02-24 08:31 /dev/ttyACM0\n</code></pre></div>\n<p>Note that only root and the ""dialout"" group have read/write access.  Therefore, you need to be a member of the dialout group.  You only have to do this once and it should then work for all USB devices you plug in later on.</p>\n\n<p>To add yourself to the dialout group, run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo usermod -a -G dialout your_user_name\n</code></pre></div>\n<p>where your_user_name is your Linux login name.  You will likely have to log out of your X-window session then log in again, or simply reboot your machine if you want to be sure.</p>\n\n<p>When you log back in again, try the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ groups\n</code></pre></div>\n<p>and you should see a list of groups you belong to including dialout. </p>\n\n<h2 id=""installation-of-the-ros_arduino_bridge-stack"">Installation of the ros_arduino_bridge Stack</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/ros_workspace\n$ git clone https://github.com/hbrobotics/ros_arduino_bridge.git\n$ cd ros_arduino_bridge\n$ rosmake\n</code></pre></div>\n<p>The provided Arduino library is called ROSArduinoBridge and is\nlocated in the ros_arduino_firmware package.  This sketch is\nspecific to the hardware requirements above but it can also be used\nwith other Arduino-type boards (e.g. Uno) by turning off the base\ncontroller as described in the NOTES section at the end of this\ndocument.</p>\n\n<p>To install the ROSArduinoBridge library, follow these steps:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd SKETCHBOOK_PATH\n</code></pre></div>\n<p>where SKETCHBOOK_PATH is the path to your Arduino sketchbook directory.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cp -rp `rospack find ros_arduino_firmware`/src/libraries/ROSArduinoBridge ROSArduinoBridge\n</code></pre></div>\n<p>This last command copies the ROSArduinoBridge sketch files into your sketchbook folder.  The next section describes how to configure, compile and upload this sketch.</p>\n\n<h2 id=""loading-the-rosarduinobridge-sketch"">Loading the ROSArduinoBridge Sketch</h2>\n\n<ul>\n<li><p>If you are using the base controller, make sure you have already installed the appropriate motor controller and encoder libraries into your Arduino sketchbook/librariesfolder.</p></li>\n<li>\n<p>Launch the Arduino 1.0 IDE and load the ROSArduinoBridge sketch.\nYou should be able to find it by going to:</p>\n\n<p>File-&gt;Sketchbook-&gt;ROSArduinoBridge</p>\n</li>\n</ul>\n\n<p>NOTE: If you don\'t have the required base controller hardware but\nstill want to try the code, see the notes at the end of the file.</p>\n\n<p>Choose one of the supported motor controllers by uncommenting its #define statement and commenting out any others.  By default, the Pololu VNH5019 driver is chosen.</p>\n\n<p>Choose a supported encoder library by by uncommenting its #define statement and commenting out any others.  At the moment, only the Robogaia Mega Encoder shield is supported and it is chosen by default.</p>\n\n<p>If you want to control PWM servos attached to your controller, change\nthe two lines that look like this:</p>\n\n<pre>\n//#define USE_SERVOS\n#undef USE_SERVOS\n</pre>\n\n<p>to this:</p>\n\n<pre>\n#define USE_SERVOS\n//#undef USE_SERVOS\n</pre>\n\n<p>You must then edit the include file servos.h and change the N_SERVOS\nparameter as well as the pin numbers for the servos you have attached.</p>\n\n<ul>\n<li>Compile and upload the sketch to your Arduino.</li>\n</ul>\n\n<h2 id=""firmware-commands"">Firmware Commands</h2>\n\n<p>The ROSArduinoLibrary accepts single-letter commands over the serial port for polling sensors, controlling servos, driving the robot, and reading encoders.  These commands can be sent to the Arduino over any serial interface, including the Serial Monitor in the Arduino IDE.</p>\n\n<p><strong>NOTE:</strong> Before trying these commands, set the Serial Monitor baudrate to 57600 and the line terminator to ""Carriage return"" or ""Both NL &amp; CR"" using the two pulldown menus on the lower right of the Serial Monitor window.</p>\n\n<p>The list of commands can be found in the file commands.h.  The current list includes:</p>\n\n<pre>\n#define ANALOG_READ    \'a\'\n#define GET_BAUDRATE   \'b\'\n#define PIN_MODE       \'c\'\n#define DIGITAL_READ   \'d\'\n#define READ_ENCODERS  \'e\'\n#define MOTOR_SPEEDS   \'m\'\n#define PING           \'p\'\n#define RESET_ENCODERS \'r\'\n#define SERVO_WRITE    \'s\'\n#define SERVO_READ     \'t\'\n#define UPDATE_PID     \'u\'\n#define DIGITAL_WRITE  \'w\'\n#define ANALOG_WRITE   \'x\'\n</pre>\n\n<p>For example, to get the analog reading on pin 3, use the command:</p>\n\n<p>a 3</p>\n\n<p>To change the mode of digital pin 3 to OUTPUT, send the command:</p>\n\n<p>c 3 1</p>\n\n<p>To get the current encoder counts:</p>\n\n<p>e</p>\n\n<p>To move the robot forward at 20 encoder ticks per second:</p>\n\n<p>m 20 20</p>\n\n<h2 id=""testing-your-wiring-connections"">Testing your Wiring Connections</h2>\n\n<p>On a differential drive robot, the motors are connected to the motor controller terminals with opposite polarities to each other.  Similarly, the A/B leads from the encoders are connected in the reverse sense to each other.  However, you still need to make sure that (a) the wheels move forward when given a positive motor speed and (b) that the encoder counts increase when the wheels move forward.</p>\n\n<p>After <strong>placing your robot on blocks</strong>, you can use the Serial Monitor in the Arduino IDE to test both requirements.  Use the \'m\' command to activate the motors, the \'e\' command to get the encoder counts, and the \'r\' command to reset the encoders to 0.  Remember that at the firmware level, motor speeds are given in encoder ticks per second so that for an encoder resolution of, say 4000 counts per wheel revolution, a command such as \'m 20 20\' should move the wheels fairly slowly.  (The wheels will only move for 2 seconds which is the default setting for the AUTO_STOP_INTERVAL.)  Also remember that the first argument is the left motor speed and the second argument is the right motor speed.  Similarly, when using the \'e\' command, the first number returned is the left encoder count and the second number is the right encoder count.</p>\n\n<p>Finally, you can use the \'r\' and \'e\' commands to verify the expected encoder counts by rotating the wheels by hand roughly one full turn and checking the reported counts.</p>\n\n<h2 id=""configuring-the-ros_arduino_python-node"">Configuring the ros_arduino_python Node</h2>\n\n<p>Now that your Arduino is running the required sketch, you can\nconfigure the ROS side of things on your PC.  You define your robot\'s\ndimensions, PID parameters, and sensor configuration by editing the\nYAML file in the directory ros_arduino_python/config.  So first move\ninto that directory:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roscd ros_arduino_python/config\n</code></pre></div>\n<p>Now copy the provided config file to one you can modify:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cp arduino_params.yaml my_arduino_params.yaml\n</code></pre></div>\n<p>Bring up your copy of the params file (my_arduino_params.yaml) in\nyour favorite text editor.  It should start off looking like this:</p>\n\n<pre>\nport: /dev/ttyUSB0\nbaud: 57600\ntimeout: 0.1\n\nrate: 50\nsensorstate_rate: 10\n\nuse_base_controller: False\nbase_controller_rate: 10\n\n# === Robot drivetrain parameters\n#wheel_diameter: 0.146\n#wheel_track: 0.2969\n#encoder_resolution: 8384 # from Pololu for 131:1 motors\n#gear_reduction: 1.0\n#motors_reversed: True\n\n# === PID parameters\n#Kp: 20\n#Kd: 12\n#Ki: 0\n#Ko: 50\n#accel_limit: 1.0\n\n# === Sensor definitions.  Examples only - edit for your robot.\n#     Sensor type can be one of the follow (case sensitive!):\n#     * Ping\n#     * GP2D12\n#     * Analog\n#     * Digital\n#     * PololuMotorCurrent\n#     * PhidgetsVoltage\n#     * PhidgetsCurrent (20 Amp, DC)\n\nsensors: {\n  #motor_current_left:   {pin: 0, type: PololuMotorCurrent, rate: 5},\n  #motor_current_right:  {pin: 1, type: PololuMotorCurrent, rate: 5},\n  #ir_front_center:      {pin: 2, type: GP2D12, rate: 10},\n  #sonar_front_center:   {pin: 5, type: Ping, rate: 10},\n  arduino_led:          {pin: 13, type: Digital, rate: 5, direction: output}\n}\n</pre>\n\n<p><strong>NOTE</strong>: Do not use tabs in your .yaml file or the parser will barf it back out when it tries to load it.   Always use spaces instead.  <strong>ALSO</strong>: When defining your sensor parameters, the last sensor in the list does <strong>not</strong> get a comma (,) at the end of the line but all the rest <strong>must</strong> have a comma.</p>\n\n<p>Let\'s now look at each section of this file.</p>\n\n<p><em>Port Settings</em></p>\n\n<p>The port will likely be either /dev/ttyACM0 or /dev/ttyUSB0. Set accordingly.</p>\n\n<p>The MegaRobogaiaPololu Arudino sketch connects at 57600 baud by default.</p>\n\n<p><em>Polling Rates</em></p>\n\n<p>The main <em>rate</em> parameter (50 Hz by default) determines how fast the\noutside ROS loop runs.  The default should suffice in most cases.  In\nany event, it should be at least as fast as your fastest sensor rate\n(defined below).</p>\n\n<p>The <em>sensorstate_rate</em> determines how often to publish an aggregated\nlist of all sensor readings.  Each sensor also publishes on its own\ntopic and rate.</p>\n\n<p>The <em>use_base_controller</em> parameter is set to False by default.  Set it to True to use base control (assuming you have the required hardware.)  You will also have to set the PID paramters that follow.</p>\n\n<p>The <em>base_controller_rate</em> determines how often to publish odometry readings.</p>\n\n<p><em>Defining Sensors</em></p>\n\n<p>The <em>sensors</em> parameter defines a dictionary of sensor names and\nsensor parameters. (You can name each sensor whatever you like but\nremember that the name for a sensor will also become the topic name\nfor that sensor.)</p>\n\n<p>The four most important parameters are <em>pin</em>, <em>type</em>, <em>rate</em> and <em>direction</em>.\nThe <em>rate</em> defines how many times per second you want to poll that\nsensor.  For example, a voltage sensor might only be polled once a\nsecond (or even once every 2 seconds: rate=0.5), whereas a sonar\nsensor might be polled at 20 times per second.  The <em>type</em> must be one\nof those listed (case sensitive!).  The default <em>direction</em> is input so\nto define an output pin, set the direction explicitly to output.  In\nthe example above, the Arduino LED (pin 13) will be turned on and off\nat a rate of 2 times per second.</p>\n\n<p><em>Setting Drivetrain and PID Parameters</em></p>\n\n<p>To use the base controller, you will have to uncomment and set the\nrobot drivetrain and PID parameters.  The sample drivetrain parameters\nare for 6"" drive wheels that are 11.5"" apart.  Note that ROS uses\nmeters for distance so convert accordingly.  The sample encoder\nresolution (ticks per revolution) is from the specs for the Pololu\n131:1 motor.  Set the appropriate number for your motor/encoder\ncombination.  Set the motors_reversed to True if you find your wheels\nare turning backward, otherwise set to False.</p>\n\n<p>The PID parameters are trickier to set.  You can start with the sample\nvalues but be sure to place your robot on blocks before sending it\nyour first Twist command.</p>\n\n<h2 id=""launching-the-ros_arduino_python-node"">Launching the ros_arduino_python Node</h2>\n\n<p>Take a look at the launch file arduino.launch in the\nros_arduino_python/launch directory.  As you can see, it points to a\nconfig file called my_arduino_params.yaml.  If you named your config\nfile something different, change the name in the launch file.</p>\n\n<p>With your Arduino connected and running the MegaRobogaiaPololu sketch,\nlaunch the ros_arduino_python node with your parameters:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch ros_arduino_python arduino.launch\n</code></pre></div>\n<p>You should see something like the following output:</p>\n\n<pre>\nprocess[arduino-1]: started with pid [6098]\nConnecting to Arduino on port /dev/ttyUSB0 ...\nConnected at 57600\nArduino is ready.\n[INFO] [WallTime: 1355498525.954491] Connected to Arduino on port /dev/ttyUSB0 at 57600 baud\n[INFO] [WallTime: 1355498525.966825] motor_current_right {\'rate\': 5, \'type\': \'PololuMotorCurrent\', \'pin\': 1}\n[INFO]\netc\n</pre>\n\n<p>If you have any Ping sonar sensors on your robot and you defined them\nin your config file, they should start flashing to indicate you have\nmade the connection.</p>\n\n<h2 id=""viewing-sensor-data"">Viewing Sensor Data</h2>\n\n<p>To see the aggregated sensor data, echo the sensor state topic:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /arduino/sensor_state\n</code></pre></div>\n<p>To see the data on any particular sensor, echo its topic name:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /arduino/sensor/sensor_name\n</code></pre></div>\n<p>For example, if you have a sensor called ir_front_center, you can see\nits data using:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /arduino/sensor/ir_front_center\n</code></pre></div>\n<p>You can also graph the range data using rxplot:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rxplot -p 60 /arduino/sensor/ir_front_center/range\n</code></pre></div>\n<h2 id=""sending-twist-commands-and-viewing-odometry-data"">Sending Twist Commands and Viewing Odometry Data</h2>\n\n<p>Place your robot on blocks, then try publishing a Twist command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic pub -1 /cmd_vel geometry_msgs/Twist \'{ angular: {z: 0.5} }\'\n</code></pre></div>\n<p>The wheels should turn in a direction consistent with a\ncounter-clockwise rotation (right wheel forward, left wheel backward).\nIf they turn in the opposite direction, set the motors_reversed\nparameter in your config file to the opposite of its current setting,\nthen kill and restart the arduino.launch file.</p>\n\n<p>Stop the robot with the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic pub -1 /cmd_vel geometry_msgs/Twist \'{}\'\n</code></pre></div>\n<p>To view odometry data:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /odom\n</code></pre></div>\n<p>or</p>\n\n<p>$ rxplot -p 60 /odom/pose/pose/position/x:y, /odom/twist/twist/linear/x, /odom/twist/twist/angular/z</p>\n\n<h2 id=""ros-services"">ROS Services</h2>\n\n<p>The ros_arduino_python package also defines a few ROS services as follows:</p>\n\n<p><strong>digital_set_direction</strong> - set the direction of a digital pin</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/digital_set_direction pin direction\n</code></pre></div>\n<p>where pin is the pin number and direction is 0 for input and 1 for output.</p>\n\n<p><strong>digital_write</strong> - send a LOW (0) or HIGH (1) signal to a digital pin</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/digital_write pin value\n</code></pre></div>\n<p>where pin is the pin number and value is 0 for LOW and 1 for HIGH.</p>\n\n<p><strong>servo_write</strong> - set the position of a servo</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/servo_write id pos\n</code></pre></div>\n<p>where id is the index of the servo as defined in the Arduino sketch (servos.h) and pos is the position in degrees (0 - 180).</p>\n\n<p><strong>servo_read</strong> - read the position of a servo</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/servo_read id\n</code></pre></div>\n<p>where id is the index of the servo as defined in the Arduino sketch (servos.h)</p>\n\n<h2 id=""notes"">NOTES</h2>\n\n<p>If you do not have the hardware required to run the base controller,\nfollow the instructions below so that you can still use your\nArduino-compatible controller to read sensors and control PWM servos.</p>\n\n<p>First, you need to edit the ROSArduinoBridge sketch. At the top of\nthe file, change the two lines that look like this:</p>\n\n<pre>\n#define USE_BASE\n//#undef USE_BASE\n</pre>\n\n<p>to this:</p>\n\n<pre>\n//#define USE_BASE\n#undef USE_BASE\n</pre>\n\n<p><strong>NOTE:</strong> You also need to comment out the line that looks like this in the file encoder_driver.ino:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include ""MegaEncoderCounter.h""\n</code></pre></div>\n<p>so it looks like this:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">//#include ""MegaEncoderCounter.h""\n</code></pre></div>\n<p>Compile the changes and upload to your controller.</p>\n\n<p>Next, edit your my_arduino_params.yaml file and make sure the\nuse_base_controller parameter is set to False.  That\'s all there is to it.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><strong>UNSTABLE BRANCH</strong></p>\n\n<p>This branch is under active development and is not likely to work.  Please use the official hydro-devel or indigo-devel branch for ROS Hydro or ROS Indigo, respectively.</p>\n\n<h1 id=""table-of-contents"">Table of Contents</h1>\n\n<ul>\n<li><a href=""#overview"">Overview</a></li>\n<li><a href=""#official-ros-documentation"">Official ROS Documentation</a></li>\n<li><a href=""#system-requirements"">System Requirements</a></li>\n<li><a href=""#preparing-your-serial-port-under-linux"">Preparing your Serial Port under Linux</a></li>\n<li><a href=""#installation-of-the-ros_arduino_bridge-stack"">Installation of the ros_arduino_bridge Stack</a></li>\n<li><a href=""#loading-the-rosarduinobridge-sketch"">Loading the ROSArduinoBridge Sketch</a></li>\n<li><a href=""#firmware-commands"">Firmware Commands</a></li>\n<li><a href=""#testing-your-wiring-connections"">Testing your Wiring Connections</a></li>\n<li><a href=""#configuring-the-ros_arduino_python-node"">Configuring the ros_arduino_python Node</a></li>\n<li><a href=""#launching-the-ros_arduino_python-node"">Launching the ros_arduino_python Node</a></li>\n<li><a href=""#viewing-sensor-data"">Viewing Sensor Data</a></li>\n<li><a href=""#sending-twist-commands-and-viewing-odometry-data"">Sending Twist Commands and Viewing Odometry Data</a></li>\n<li><a href=""#ros-services-for-sensors-and-servos"">ROS Services for Sensors and Servos</a></li>\n<li><a href=""#ros-joint-topics-and-services"">ROS Joint Topics and Services</a></li>\n<li><a href=""#using-the-on-board-wheel-encoder-counters-arduino-uno-only"">Using the on-board wheel encoder counters (Arduino Uno only)</a></li>\n<li><a href=""#notes"">NOTES</a></li>\n</ul>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>This branch (indigo-devel) is intended for ROS Indigo and above, and uses the Catkin buildsystem. It may also be compatible with ROS Hydro.</p>\n\n<p>This ROS metapackage includes an Arduino library (called ROSArduinoBridge) and a collection of ROS packages for controlling an Arduino-based robot using standard ROS messages and services.  The stack does <strong>not</strong> depend on ROS Serial.</p>\n\n<p>Features of the stack include:</p>\n\n<ul>\n<li><p>Direct support for Ping sonar and Sharp infrared (GP2D12) sensors</p></li>\n<li><p>Can also read data from generic analog and digital sensors</p></li>\n<li><p>Can control digital outputs (e.g. turn a switch or LED on and off)</p></li>\n<li><p>Support for PWM servos</p></li>\n<li><p>Configurable base controller if using the required hardware</p></li>\n</ul>\n\n<p>The stack includes a base controller for a differential drive\nrobot that accepts ROS Twist messages and publishes odometry data back to\nthe PC. The base controller requires the use of a motor controller and encoders for reading odometry data.  The current version of the stack provides support for the following base controller hardware:</p>\n\n<ul>\n<li><p>Pololu VNH5019 dual motor controller shield (<a href=""http://www.pololu.com/catalog/product/2502"">http://www.pololu.com/catalog/product/2502</a>) or Pololu MC33926 dual motor shield (<a href=""http://www.pololu.com/catalog/product/2503"">http://www.pololu.com/catalog/product/2503</a>).</p></li>\n<li><p>Robogaia Mega Encoder shield\n(<a href=""http://www.robogaia.com/two-axis-encoder-counter-mega-shield-version-2.html"">http://www.robogaia.com/two-axis-encoder-counter-mega-shield-version-2.html</a>)</p></li>\n<li><p>Instead of the Encoder shield, wheel encoders can be <a href=""#using-the-on-board-wheel-encoder-counters-arduino-uno-only"">connected directly</a> if using an Arduino Uno</p></li>\n</ul>\n\n<p><strong>NOTE:</strong> The Robogaia Mega Encoder shield can only be used with an Arduino Mega. The on-board wheel encoder counters are currently only supported by Arduino Uno.</p>\n\n<ul>\n<li>The library can be easily extended to include support for other motor controllers and encoder hardware or libraries.</li>\n</ul>\n\n<h2 id=""official-ros-documentation"">Official ROS Documentation</h2>\n\n<p>A standard ROS-style version of this documentation can be found on the ROS wiki at:</p>\n\n<p><a href=""http://www.ros.org/wiki/ros_arduino_bridge"">http://www.ros.org/wiki/ros_arduino_bridge</a></p>\n\n<h2 id=""system-requirements"">System Requirements</h2>\n\n<p><strong>Python Serial:</strong> To install the python-serial package under Ubuntu, use the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install python-serial\n</code></pre></div>\n<p>On non-Ubuntu systems, use either:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo pip install --upgrade pyserial\n</code></pre></div>\n<p>or</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo easy_install -U pyserial\n</code></pre></div>\n<p><strong>Arduino IDE 1.6.6 or Higher:</strong>\nNote that the preprocessing of conditional #include statements is broken in earlier versions of the Arduino IDE.  To ensure that the ROS Arduino Bridge firmware compiles correctly, be sure to install version 1.6.6 or higher of the Arduino IDE.  You can download the IDE from <a href=""https://www.arduino.cc/en/Main/Software"">https://www.arduino.cc/en/Main/Software</a>.</p>\n\n<p><strong>Hardware:</strong>\nThe firmware should work with any Arduino-compatible controller for reading sensors and controlling PWM servos.  However, to use the base controller, you will need a supported motor controller and encoder hardware as described above. If you do not have this hardware, you can still try the package for reading sensors and controlling servos.  See the NOTES section at the end of this document for instructions on how to do this.</p>\n\n<p>To use the base controller you must also install the appropriate libraries for your motor controller and encoders.  For the Pololu VNH5019 Dual Motor Shield, the library can be found at:</p>\n\n<p><a href=""https://github.com/pololu/Dual-VNH5019-Motor-Shield"">https://github.com/pololu/Dual-VNH5019-Motor-Shield</a></p>\n\n<p>For the Pololu MC33926 Dual Motor Shield, the library can be found at:</p>\n\n<p><a href=""https://github.com/pololu/dual-mc33926-motor-shield"">https://github.com/pololu/dual-mc33926-motor-shield</a></p>\n\n<p>The Robogaia Mega Encoder library can be found at:</p>\n\n<p><a href=""http://www.robogaia.com/uploads/6/8/0/9/6809982/__megaencodercounter-1.3.tar.gz"">http://www.robogaia.com/uploads/6/8/0/9/6809982/__megaencodercounter-1.3.tar.gz</a></p>\n\n<p>These libraries should be installed in your standard Arduino\nsketchbook/libraries directory.</p>\n\n<p>Finally, it is assumed you are using version 1.6.6 or greater of the\nArduino IDE.</p>\n\n<h2 id=""preparing-your-serial-port-under-linux"">Preparing your Serial Port under Linux</h2>\n\n<p>Your Arduino will likely connect to your Linux computer as port /dev/ttyACM# or /dev/ttyUSB# where # is a number like 0, 1, 2, etc., depending on how many other devices are connected.  The easiest way to make the determination is to unplug all other USB devices, plug in your Arduino, then run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls /dev/ttyACM*\n</code></pre></div>\n<p>or </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls /dev/ttyUSB*\n</code></pre></div>\n<p>Hopefully, one of these two commands will return the result you\'re looking for (e.g. /dev/ttyACM0) and the other will return the error ""No such file or directory"".</p>\n\n<p>Next you need to make sure you have read/write access to the port.  Assuming your Arduino is connected on /dev/ttyACM0, run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls -l /dev/ttyACM0\n</code></pre></div>\n<p>and you should see an output similar to the following:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">crw-rw---- 1 root dialout 166, 0 2013-02-24 08:31 /dev/ttyACM0\n</code></pre></div>\n<p>Note that only root and the ""dialout"" group have read/write access.  Therefore, you need to be a member of the dialout group.  You only have to do this once and it should then work for all USB devices you plug in later on.</p>\n\n<p>To add yourself to the dialout group, run the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo usermod -a -G dialout your_user_name\n</code></pre></div>\n<p>where your_user_name is your Linux login name.  You will likely have to log out of your X-window session then log in again, or simply reboot your machine if you want to be sure.</p>\n\n<p>When you log back in again, try the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ groups\n</code></pre></div>\n<p>and you should see a list of groups you belong to including dialout. </p>\n\n<h2 id=""installation-of-the-ros_arduino_bridge-stack"">Installation of the ros_arduino_bridge Stack</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd ~/catkin_workspace/src\n$ git clone https://github.com/hbrobotics/ros_arduino_bridge.git\n$ cd ~/catkin_workspace\n$ catkin_make\n</code></pre></div>\n<p>The provided Arduino library is called ROSArduinoBridge and is\nlocated in the ros_arduino_firmware package.  This sketch is\nspecific to the hardware requirements above but it can also be used\nwith other Arduino-type boards (e.g. Uno) by turning off the base\ncontroller as described in the NOTES section at the end of this\ndocument.</p>\n\n<p>To install the ROSArduinoBridge library, follow these steps:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd SKETCHBOOK_PATH\n</code></pre></div>\n<p>where SKETCHBOOK_PATH is the path to your Arduino sketchbook directory.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ \\cp -rp  `rospack find ros_arduino_firmware`/src/libraries/ROSArduinoBridge -T ROSArduinoBridge\n</code></pre></div>\n<p>This last command copies the ROSArduinoBridge sketch files into your sketchbook folder and overwrites any existing files with the same name.  The next section describes how to configure, compile and upload this sketch.</p>\n\n<h2 id=""loading-the-rosarduinobridge-sketch"">Loading the ROSArduinoBridge Sketch</h2>\n\n<ul>\n<li><p>If you are using the base controller, make sure you have already installed the appropriate motor controller and encoder libraries into your Arduino sketchbook/librariesfolder.</p></li>\n<li>\n<p>Launch the Arduino IDE and load the ROSArduinoBridge sketch.\nYou should be able to find it by going to:</p>\n\n<p>File-&gt;Sketchbook-&gt;ROSArduinoBridge</p>\n</li>\n</ul>\n\n<p><strong>NOTE:</strong> If you have the required hardware to use the base controller, uncomment the line that looks like this:</p>\n\n<pre>\n//#define USE_BASE\n</pre>\n\n<p>so it looks like this:</p>\n\n<pre>\n#define USE_BASE\n</pre>\n\n<p>You will also need to choose one of the supported motor controllers by uncommenting its #define statement and commenting out any others.  By default, the Pololu VNH5019 driver is chosen.</p>\n\n<p>Choose a supported encoder library by by uncommenting its #define statement and commenting out any others.  At the moment, the two options are the Robogaia Mega Encoder shield (chosen by default) and the directo connection ARDUINO_ENC_COUNTER option that works for Arduino Uno compatible boards.</p>\n\n<p>By default, the sketch will provide support to control PWM servos attached to your Arduino.  If you do not need servo support, you can comment out the line that looks like this:</p>\n\n<pre>\n#define USE_SERVOS2\n</pre>\n\n<p>so that it looks like this:</p>\n\n<pre>\n//#define USE_SERVOS2\n</pre>\n\n<ul>\n<li>Compile and upload the sketch to your Arduino.</li>\n</ul>\n\n<h2 id=""firmware-commands"">Firmware Commands</h2>\n\n<p>The ROSArduinoLibrary accepts single-letter commands over the serial port for polling sensors, controlling servos, driving the robot, and reading encoders.  These commands can be sent to the Arduino over any serial interface, including the Serial Monitor in the Arduino IDE.</p>\n\n<p><strong>NOTE:</strong> Before trying these commands, set the Serial Monitor baudrate to 57600 and the line terminator to ""Carriage return"" or ""Both NL &amp; CR"" using the two pulldown menus on the lower right of the Serial Monitor window.</p>\n\n<p>The list of commands can be found in the file commands.h.  The current list includes:</p>\n\n<pre>\n#define ANALOG_READ    \'a\'\n#define GET_BAUDRATE   \'b\'\n#define PIN_MODE       \'c\'\n#define DIGITAL_READ   \'d\'\n#define READ_ENCODERS  \'e\'\n#define CONFIG_SERVO   \'j\'\n#define MOTOR_SPEEDS   \'m\'\n#define PING           \'p\'\n#define RESET_ENCODERS \'r\'\n#define SERVO_WRITE    \'s\'\n#define SERVO_READ     \'t\'\n#define UPDATE_PID     \'u\'\n#define SERVO_DELAY    \'v\'\n#define DIGITAL_WRITE  \'w\'\n#define ANALOG_WRITE   \'x\'\n#define ATTACH_SERVO   \'y\'\n#define DETACH_SERVO   \'z\'\n#define LEFT            0\n#define RIGHT           1\n</pre>\n\n<p>For example, to get the analog reading on pin 3, use the command:</p>\n\n<p>a 3</p>\n\n<p>To change the mode of digital pin 3 to OUTPUT, send the command:</p>\n\n<p>c 3 1</p>\n\n<p>To get the current encoder counts:</p>\n\n<p>e</p>\n\n<p>To move the robot forward at 20 encoder ticks per second:</p>\n\n<p>m 20 20</p>\n\n<p>To intialize a PWM servo on pin 3 with speed delay 100ms:</p>\n\n<p>j 3 100</p>\n\n<p>To move the servo on pin 3 to position 120 degrees:</p>\n\n<p>s 3 120</p>\n\n<p>To detach servo on pin 3:</p>\n\n<p>z 3</p>\n\n<h2 id=""testing-your-wiring-connections"">Testing your Wiring Connections</h2>\n\n<p>On a differential drive robot, the motors are connected to the motor controller terminals with opposite polarities to each other.  Similarly, the A/B leads from the encoders are connected in the reverse sense to each other.  However, you still need to make sure that (a) the wheels move forward when given a positive motor speed and (b) that the encoder counts increase when the wheels move forward.</p>\n\n<p>After <strong>placing your robot on blocks</strong>, you can use the Serial Monitor in the Arduino IDE to test both requirements.  Use the \'m\' command to activate the motors, the \'e\' command to get the encoder counts, and the \'r\' command to reset the encoders to 0.  Remember that at the firmware level, motor speeds are given in encoder ticks per second so that for an encoder resolution of, say 4000 counts per wheel revolution, a command such as \'m 20 20\' should move the wheels fairly slowly.  (The wheels will only move for 2 seconds which is the default setting for the AUTO_STOP_INTERVAL.)  Also remember that the first argument is the left motor speed and the second argument is the right motor speed.  Similarly, when using the \'e\' command, the first number returned is the left encoder count and the second number is the right encoder count.</p>\n\n<p>Finally, you can use the \'r\' and \'e\' commands to verify the expected encoder counts by rotating the wheels by hand roughly one full turn and checking the reported counts.</p>\n\n<h2 id=""configuring-the-ros_arduino_python-node"">Configuring the ros_arduino_python Node</h2>\n\n<p>Now that your Arduino is running the required sketch, you can\nconfigure the ROS side of things on your PC.  You define your robot\'s\ndimensions, PID parameters, and sensor configuration by editing the\nYAML file in the directory ros_arduino_python/config.  So first move\ninto that directory:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roscd ros_arduino_python/config\n</code></pre></div>\n<p>Now copy the provided config file to one you can modify:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cp arduino_params.yaml my_arduino_params.yaml\n</code></pre></div>\n<p>Bring up your copy of the params file (my_arduino_params.yaml) in\nyour favorite text editor.  It should start off looking like this:</p>\n\n<pre>\nport: /dev/ttyUSB0\nbaud: 57600\ntimeout: 0.1\n\nrate: 50\nsensorstate_rate: 10\n\nuse_base_controller: False\nbase_controller_rate: 10\n\n# === Robot drivetrain parameters\n#wheel_diameter: 0.146\n#wheel_track: 0.2969\n#encoder_resolution: 8384 # from Pololu for 131:1 motors\n#gear_reduction: 1.0\n#motors_reversed: True\n\n# === PID parameters\n#Kp: 20\n#Kd: 12\n#Ki: 0\n#Ko: 50\n#accel_limit: 1.0\n\n# === Sensor definitions.  Examples only - edit for your robot.\n#     Sensor type can be one of the follow (case sensitive!):\n#     * Ping\n#     * GP2D12\n#     * Analog\n#     * Digital\n#     * PololuMotorCurrent\n#     * PhidgetsVoltage\n#     * PhidgetsCurrent (20 Amp, DC)\n\nsensors: {\n  #motor_current_left:   {pin: 0, type: PololuMotorCurrent, rate: 5},\n  #motor_current_right:  {pin: 1, type: PololuMotorCurrent, rate: 5},\n  #ir_front_center:      {pin: 2, type: GP2D12, rate: 10},\n  #sonar_front_center:   {pin: 5, type: Ping, rate: 10},\n  onboard_led:           {pin: 13, type: Digital, rate: 5, direction: output}\n}\n\n# Joint name and configuration is an example only\njoints: {\n    head_pan_joint: {pin: 3, init_position: 0, init_speed: 90, neutral: 90, min_angle: -90, max_angle: 90, invert: False, continous: False},\n    head_tilt_joint: {pin: 5, init_position: 0, init_speed: 90, neutral: 90, min_angle: -90, max_angle: 90, invert: False, continous: False}\n}\n\n\n</pre>\n\n<p><strong>NOTE</strong>: Do not use tabs in your .yaml file or the parser will barf it back out when it tries to load it.   Always use spaces instead.  <strong>ALSO</strong>: When defining your sensor parameters, the last sensor in the list does <strong>not</strong> get a comma (,) at the end of the line but all the rest <strong>must</strong> have a comma.</p>\n\n<p>Let\'s now look at each section of this file.</p>\n\n<p><em>Port Settings</em></p>\n\n<p>The port will likely be either /dev/ttyACM0 or /dev/ttyUSB0. Set accordingly.</p>\n\n<p>The MegaRobogaiaPololu Arudino sketch connects at 57600 baud by default.</p>\n\n<p><em>Polling Rates</em></p>\n\n<p>The main <em>rate</em> parameter (50 Hz by default) determines how fast the\noutside ROS loop runs.  The default should suffice in most cases.  In\nany event, it should be at least as fast as your fastest sensor rate\n(defined below).</p>\n\n<p>The <em>sensorstate_rate</em> determines how often to publish an aggregated\nlist of all sensor readings.  Each sensor also publishes on its own\ntopic and rate.</p>\n\n<p>The <em>use_base_controller</em> parameter is set to False by default.  Set it to True to use base control (assuming you have the required hardware.)  You will also have to set the PID paramters that follow.</p>\n\n<p>The <em>base_controller_rate</em> determines how often to publish odometry readings.</p>\n\n<p><em>Defining Sensors</em></p>\n\n<p>The <em>sensors</em> parameter defines a dictionary of sensor names and\nsensor parameters. (You can name each sensor whatever you like but\nremember that the name for a sensor will also become the topic name\nfor that sensor.)</p>\n\n<p>The four most important parameters are <em>pin</em>, <em>type</em>, <em>rate</em> and <em>direction</em>.\nThe <em>rate</em> defines how many times per second you want to poll that\nsensor.  For example, a voltage sensor might only be polled once a\nsecond (or even once every 2 seconds: rate=0.5), whereas a sonar\nsensor might be polled at 20 times per second.  The <em>type</em> must be one\nof those listed (case sensitive!).  The default <em>direction</em> is input so\nto define an output pin, set the direction explicitly to output.  In\nthe example above, the Arduino LED (pin 13) will be turned on and off\nat a rate of 2 times per second.</p>\n\n<p><em>Defining Servo Configurations</em></p>\n\n<p>The <em>joints</em> parameter defines a dictionary of joint names and servo parameters.  (You can name each joint whatever you like but rememember that joint names will become part of the servo\'s ROS topic and service names.)</p>\n\n<p>The most important parameter is <em>pin</em> which of course must match the pin the servo attaches to on your Arduino.  Most PWM servos operate from 0 to 180 degrees with a ""neutral"" point of 90 degrees. ROS uses radians instead of degrees for joint positions but it is usually easier for programmers to specify the angular limits in the config file using degrees.  The ROS Arduino Bridge pacakge takes care of the conversion to radians.  An <em>init_position</em> of 0 therefore means 0 degrees relative to the neutral point of 90 degrees.  A <em>max_angle</em> of 90 degrees maps into 180 degrees at the servo. </p>\n\n<p><em>Setting Drivetrain and PID Parameters</em></p>\n\n<p>To use the base controller, you will have to uncomment and set the\nrobot drivetrain and PID parameters.  The sample drivetrain parameters\nare for 6"" drive wheels that are 11.5"" apart.  Note that ROS uses\nmeters for distance so convert accordingly.  The sample encoder\nresolution (ticks per revolution) is from the specs for the Pololu\n131:1 motor.  Set the appropriate number for your motor/encoder\ncombination.  Set the motors_reversed to True if you find your wheels\nare turning backward, otherwise set to False.</p>\n\n<p>The PID parameters are trickier to set.  You can start with the sample\nvalues but be sure to place your robot on blocks before sending it\nyour first Twist command.</p>\n\n<h2 id=""launching-the-ros_arduino_python-node"">Launching the ros_arduino_python Node</h2>\n\n<p>Take a look at the launch file arduino.launch in the\nros_arduino_python/launch directory.  As you can see, it points to a\nconfig file called my_arduino_params.yaml.  If you named your config\nfile something different, change the name in the launch file.</p>\n\n<p>With your Arduino connected and running the MegaRobogaiaPololu sketch,\nlaunch the ros_arduino_python node with your parameters:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ roslaunch ros_arduino_python arduino.launch\n</code></pre></div>\n<p>You should see something like the following output:</p>\n\n<pre>\nprocess[arduino-1]: started with pid [6098]\nConnecting to Arduino on port /dev/ttyUSB0 ...\nConnected at 57600\nArduino is ready.\n[INFO] [WallTime: 1355498525.954491] Connected to Arduino on port /dev/ttyUSB0 at 57600 baud\n[INFO] [WallTime: 1355498525.966825] motor_current_right {\'rate\': 5, \'type\': \'PololuMotorCurrent\', \'pin\': 1}\n[INFO]\netc\n</pre>\n\n<p>If you have any Ping sonar sensors on your robot and you defined them\nin your config file, they should start flashing to indicate you have\nmade the connection.</p>\n\n<h2 id=""viewing-sensor-data"">Viewing Sensor Data</h2>\n\n<p>To see the aggregated sensor data, echo the sensor state topic:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /arduino/sensor_state\n</code></pre></div>\n<p>To see the data on any particular sensor, echo its topic name:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /arduino/sensor/sensor_name\n</code></pre></div>\n<p>For example, if you have a sensor called ir_front_center, you can see\nits data using:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /arduino/sensor/ir_front_center\n</code></pre></div>\n<p>You can also graph the range data using rxplot:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rxplot -p 60 /arduino/sensor/ir_front_center/range\n</code></pre></div>\n<h2 id=""sending-twist-commands-and-viewing-odometry-data"">Sending Twist Commands and Viewing Odometry Data</h2>\n\n<p>Place your robot on blocks, then try publishing a Twist command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic pub -1 /cmd_vel geometry_msgs/Twist \'{ angular: {z: 0.5} }\'\n</code></pre></div>\n<p>The wheels should turn in a direction consistent with a\ncounter-clockwise rotation (right wheel forward, left wheel backward).\nIf they turn in the opposite direction, set the motors_reversed\nparameter in your config file to the opposite of its current setting,\nthen kill and restart the arduino.launch file.</p>\n\n<p>Stop the robot with the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic pub -1 /cmd_vel geometry_msgs/Twist \'{}\'\n</code></pre></div>\n<p>To view odometry data:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic echo /odom\n</code></pre></div>\n<p>or</p>\n\n<p>$ rxplot -p 60 /odom/pose/pose/position/x:y, /odom/twist/twist/linear/x, /odom/twist/twist/angular/z</p>\n\n<h2 id=""ros-services-for-sensors-and-servos"">ROS Services for Sensors and Servos</h2>\n\n<p>The ros_arduino_python package also defines a few ROS services for sensors and servos as follows:</p>\n\n<p><strong>digital_set_direction</strong> - set the direction of a digital pin</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/digital_set_direction pin direction\n</code></pre></div>\n<p>where pin is the pin number and direction is 0 for input and 1 for output.</p>\n\n<p><strong>digital_write</strong> - send a LOW (0) or HIGH (1) signal to a digital pin</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/digital_write pin value\n</code></pre></div>\n<p>where pin is the pin number and value is 0 for LOW and 1 for HIGH.</p>\n\n<p><strong>servo_write</strong> - set the position of a servo</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/servo_write id pos\n</code></pre></div>\n<p>where id is the index of the servo as defined in the Arduino sketch (servos.h) and pos is the position in radians (0 - 3.14).</p>\n\n<p><strong>servo_read</strong> - read the position of a servo</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /arduino/servo_read id\n</code></pre></div>\n<p>where id is the index of the servo as defined in the Arduino sketch (servos.h)</p>\n\n<h2 id=""ros-joint-topics-and-services"">ROS Joint Topics and Services</h2>\n\n<p>At the ROS level, a servo is called a joint and each joint has its own topics and services.  To change the position of a joint, publish the position\nin radians to the topic:</p>\n\n<p><strong>/&lt;joint_name&gt;/command</strong></p>\n\n<p>For example, a joint called head_pan_joint in the YAML config file can be controlled using the topic:</p>\n\n<p><strong>/head_pan_joint/command</strong></p>\n\n<p>which takes a Float64 argument specifying the desired position in radians.  For example, the command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic pub -1 /head_pan_joint/command std_msgs/Float64 -- 1.0\n</code></pre></div>\n<p>will move the servo to angle 1.0 radians from the neutral point; i.e. about 147 degrees when using the default neutral point of 90 degrees.  Using a negative value moves the servo in the other direction:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rostopic pub -1 /head_pan_joint/command std_msgs/Float64 -- -1.0\n</code></pre></div>\n<p>A number of services are also available for each joint:</p>\n\n<p><strong>/&lt;joint_name&gt;/enable</strong> - Enable or disable a joint.  Disabling also detachs the underlying servo so that it can be moved by hand.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /head_pan_joint/enable false\n</code></pre></div>\n<p><strong>/&lt;joint_name&gt;/relax</strong> - Another way to detach the underlying servo so that it can be moved by hand.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /head_pan_joint/relax\n</code></pre></div>\n<p><strong>/&lt;joint_name&gt;/set_speed</strong> - Set the movement speed of servo in radians per second.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosservice call /head_pan_joint/set_speed 1.0\n</code></pre></div>\n<h2 id=""using-the-on-board-wheel-encoder-counters-arduino-uno-only"">Using the on-board wheel encoder counters (Arduino Uno only)</h2>\n\n<p>The firmware supports on-board wheel encoder counters for Arduino Uno.\nThis allows connecting wheel encoders directly to the Arduino board, without the need for any additional wheel encoder counter equipment (such as a RoboGaia encoder shield).</p>\n\n<p>For speed, the code is directly addressing specific Atmega328p ports and interrupts, making this implementation Atmega328p (Arduino Uno) dependent. (It should be easy to adapt for other boards/AVR chips though.)</p>\n\n<p>To use the on-board wheel encoder counters, connect your wheel encoders to Arduino Uno as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Left wheel encoder A output -- Arduino UNO pin 2\nLeft wheel encoder B output -- Arduino UNO pin 3\n\nRight wheel encoder A output -- Arduino UNO pin A4\nRight wheel encoder B output -- Arduino UNO pin A5\n</code></pre></div>\n<p>Make the following changes in the ROSArduinoBridge sketch to disable the RoboGaia encoder shield, and enable the on-board one:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/* The RoboGaia encoder shield */\n//#define ROBOGAIA\n/* Encoders directly attached to Arduino board */\n#define ARDUINO_ENC_COUNTER\n</code></pre></div>\n<p>Compile the changes and upload to your controller.</p>\n\n<h2 id=""notes"">NOTES</h2>\n\n<p>If you do not have the hardware required to run the base controller,\nfollow the instructions below so that you can still use your\nArduino-compatible controller to read sensors and control PWM servos.</p>\n\n<p>First, you need to edit the ROSArduinoBridge sketch. At the top of\nthe file, comment out the line that looks like this:</p>\n\n<pre>\n#define USE_BASE\n</pre>\n\n<p>so it looks like this:</p>\n\n<pre>\n//#define USE_BASE\n</pre>\n\n<p>(You may find that it is already commented out.)</p>\n\n<p><strong>NOTE:</strong> If you are using a version of the Arduino IDE earlier than 1.6.6, then you also need to comment out the line that looks like this in the file encoder_driver.ino:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include ""MegaEncoderCounter.h""\n</code></pre></div>\n<p>so it looks like this:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">//#include ""MegaEncoderCounter.h""\n</code></pre></div>\n<p>Compile the changes and upload to your controller.</p>\n\n<p>Next, edit your my_arduino_params.yaml file and make sure the\nuse_base_controller parameter is set to False.  That\'s all there is to it.</p>\n</div>\n\n            \n          </div>'"
husky_navigation,http://rosindex.github.io/r/husky_navigation/,"hydro,indigo",husky_navigation,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""husky_navigation"">husky_navigation</h1>\n\n<p>Launch files and code for autonomous navigation on the Husky</p>\n</div>\n\n            \n          </div>'"
pr2_precise_trajectory,http://rosindex.github.io/r/pr2_precise_trajectory/,"hydro,groovy,indigo",pr2_precise_trajectory,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
decision_making,http://rosindex.github.io/r/decision_making/,hydro,"decision_making,decision_making_examples,decision_making_parser,decision_making_tools,robot_task,rqt_decision_graph","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""decision_making"">decision_making</h1>\n</div>\n\n            \n          </div>'"
pr2_shield_teleop,http://rosindex.github.io/r/pr2_shield_teleop/,"hydro,groovy,indigo",pr2_shield_teleop,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_surrogate,http://rosindex.github.io/r/pr2_surrogate/,"hydro,groovy",pr2_surrogate,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pr2-surrogate"">PR2 Surrogate</h1>\n\n<p>This package enables fully immersive control of a PR2 robot using the Oculus Rift and Razer Hydra.</p>\n\n<p>What it does:\n- Render the Kinect point cloud and robot model to the Oculus Rift\n- Use the Oculus head tracking to control the PR2 head\n- Connect the Hydra to the PR2 joystick teleop (base motion, torso lift &amp; gripper control)\n- Track the Hydra motion with the PR2 grippers</p>\n\n<p>How to run:\n- Connect your Hydra and Oculus Rift\n- On the robot: <code>robot start</code>, then <code>roslaunch pr2_surrogate robot.launch</code>\n- On the desktop: <code>roslaunch pr2_surrogate desktop.launch</code></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pr2-surrogate"">PR2 Surrogate</h1>\n\n<p>This package enables fully immersive control of a PR2 robot using the Oculus Rift and Razer Hydra.</p>\n\n<p>Visit <a href=""http://www.ros.org/wiki/pr2_surrogate"">ros.org</a> for more information.</p>\n</div>\n\n            \n          </div>'"
pr2_teleop_app,http://rosindex.github.io/r/pr2_teleop_app/,"hydro,indigo",pr2_teleop_app,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_tuck_arms_app,http://rosindex.github.io/r/pr2_tuck_arms_app/,"hydro,indigo",pr2_tuck_arms_app,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kurt3d,http://rosindex.github.io/r/kurt3d/,"hydro,indigo",kurt3d,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This package contains the required nodes and launchfiles to fire up the KURT3D robot with a 3D Laserscan capabilities.\n\nIt provides functionality to control the five servo motors via the pololu micro usb controller card \nand make us of it to take and assemble laser scans with a sick lms200 laser scan unit.\n\nservos can be controlled via\n    servo_node service calls\n    servo_control topic \n\na laserscan can be requested via the\n\n    laserscanner_node service call \n\nthe point clouds will be published on topic\n\n    /uos_3dscans\n\n- ps3joy_kurt3d\n    This node allows to control the robot via ps3 bluetooth controller. Use L1 / R1 with the right joystick to control the camera servos.\n    Use triangle button to initiate a laserscan.\n\nYou will probably want to have several other packages around for integrated usage:\n\n- uos_slam \n    This package allows you to dump the taken laserscans to the hard drive (do not forget to remap the point2_in topic to uos_3dscans) \n\n\n</code></pre></div></div>\n\n            \n          </div>'"
pr2_hack_the_future,http://rosindex.github.io/r/pr2_hack_the_future/,"hydro,indigo","hack_the_web_program_executor,pr2_hack_the_future,pr2_joint_teleop,pr2_simple_interface,program_queue,queue_web,rviz_backdrop,slider_gui","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_kinematics,http://rosindex.github.io/r/pr2_kinematics/,"hydro,groovy,indigo","pr2_arm_kinematics,pr2_kinematics,pr2_arm_kinematics_constraint_aware","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_make_a_map_app,http://rosindex.github.io/r/pr2_make_a_map_app/,"hydro,indigo",pr2_make_a_map_app,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pr2_make_a_map_app"">pr2_make_a_map_app</h1>\n\n<p>Migration from kforge. </p>\n</div>\n\n            \n          </div>'"
pr2_map_navigation_app,http://rosindex.github.io/r/pr2_map_navigation_app/,"hydro,indigo",pr2_map_navigation_app,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_pan_tilt,http://rosindex.github.io/r/pr2_pan_tilt/,hydro,pr2_pan_tilt,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_props_app,http://rosindex.github.io/r/pr2_props_app/,"hydro,indigo",pr2_props_app,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_props_stack,http://rosindex.github.io/r/pr2_props_stack/,"hydro,indigo",pr2_props,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_calibration,http://rosindex.github.io/r/pr2_calibration/,"hydro,fuerte,electric,groovy,diamondback,indigo","dense_laser_assembler,laser_joint_processor,laser_joint_projector,pr2_calibration,pr2_calibration_launch,pr2_dense_laser_snapshotter,pr2_se_calibration_launch,calibration_msgs,image_cb_detector,interval_intersection,joint_states_settler,laser_cb_detector,monocam_settler,pr2_calibration_estimation,pr2_calibration_executive,pr2_calibration_propagation,settlerlib","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_delivery,http://rosindex.github.io/r/pr2_delivery/,"hydro,groovy,indigo",pr2_delivery,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pr2_delivery"">pr2_delivery</h1>\n\n<p>This is a quick package put together to demonstrate a simple delivery task with the PR2.</p>\n\n<p>It is written as an ""action"" server.</p>\n\n<p>One run through the action does:</p>\n\n<ul>\n<li>Navigate to the get-object pose</li>\n<li>Put the right arm out and open the gripper</li>\n<li>Wait for something to be put in the gripper (wait for gripper-wiggle)</li>\n<li>Close gripper</li>\n<li>If gripper closes too far, open again and repeat waiting for object</li>\n<li>Tuck arms to a tucked-with-object pose</li>\n<li>Navigate to the give-object pose</li>\n<li>Put the right arm out to hand off the object</li>\n<li>Wait for gripper-wiggle</li>\n<li>Open gripper</li>\n<li>Tuck arms to regular tuck</li>\n<li>Navigate to ""home"" pose</li>\n</ul>\n\n<p>This sequence is defined in src/pr2_delivery/DeliverServer.py.</p>\n\n<h2 id=""programs"">Programs</h2>\n\n<ul>\n<li><p><strong>scripts/deliver</strong>: Runs the DeliverServer action server.</p></li>\n<li>\n<p><strong>test/test.py</strong>: sends an action goal asking it to make a delivery.</p>\n\n<ul>\n<li>The action goal contains the 3 poses: get-object, give-object, and home.</li>\n<li><em>This is a file you will need to copy and modify for use in a new place.</em></li>\n</ul>\n</li>\n<li><p><strong>scripts/print_right_arm_pose</strong>: repeatedly prints the pose of the right arm in the same order that is used inside DeliveryServer.py.  Use this with (or without) the run-stop pressed to record new arm poses if you need to.</p></li>\n<li><p><strong>test/watch_robot_base_pose.sh</strong>: repeatedly prints the pose of the robot base.  This can be convenient for recording new poses for get-object, give-object, and home.</p></li>\n</ul>\n\n<h2 id=""launch-files"">Launch files</h2>\n\n<ul>\n<li>\n<p><strong>launch/deliver_server.launch</strong>: runs scripts/deliver and a bunch of support nodes which it depends on.</p>\n\n<ul>\n<li>Does <em>not</em> run map_server.</li>\n</ul>\n</li>\n<li>\n<p><strong>launch/deliver_server_wg.launch</strong>: runs deliver_server.launch and map_server with a map of Willow Garage.</p>\n\n<ul>\n<li><em>This is a file you will need to copy and modify for use in a new place.</em></li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""instructions-for-use"">Instructions for use</h2>\n\n<h3 id=""initial-setup"">Initial Setup</h3>\n\n<ul>\n<li>Clone this package (pr2_delivery) into your rosbuild workspace.</li>\n<li>rosmake pr2_delivery # to build action/message files.</li>\n<li>Map the environment</li>\n<li>Copy launch/deliver_server_wg.launch to launch/deliver_server_location_name.launch and fill in the map info for the map you just made.</li>\n<li>Record poses of the robot base to use for home, get-object, and give-object using test/watch_robot_base_pose.sh and either navigation using rviz or joystick teleop.</li>\n<li>Copy test/test.py into scripts/do-one-delivery.py or similar and copy the base-pose info into it (x, y, yaw).</li>\n</ul>\n\n<h3 id=""starting-the-action-server"">Starting the Action Server</h3>\n\n<ul>\n<li>roslaunch /etc/ros/robot.launch # to bring up the robot</li>\n<li>roslaunch pr2_delivery deliver_server_location_name.launch</li>\n<li><em>Robot should not immediately do anything</em></li>\n</ul>\n\n<h3 id=""making-a-delivery"">Making a Delivery</h3>\n\n<ul>\n<li>rosrun pr2_delivery scripts/do-one-delivery.py</li>\n<li><em>Robot will tuck arms and navigate to get-object location.</em></li>\n<li><em>After delivery is done it will tuck arms and drive to home location.</em></li>\n</ul>\n\n<h2 id=""problems-that-may-happen"">Problems that may happen</h2>\n\n<h3 id=""hallucinated-obstacles"">Hallucinated obstacles</h3>\n\n<p>The main problem I\'ve had is the tilting laser hitting the\nobject-being-carried, which causes hallucinations of obstacles about\n30 cm in front of the robot.  You should always keep a GridCells\ndisplay in RViz showing the local costmap obstacles so you can see if\nthis is happening.  It\'s also useful to show a pointcloud of\n/tilt_scan_shadow_filtered with Decay Time set to 3 seconds or so.\nThat is what has the tilt laser data right after the filter.</p>\n\n<p>To fix a problem like this, either modify the tucked_with_object_pose\nin DeliverServer.py OR modify the parameters of downscan_filter in\nlaunch/pr2_delivery_nav/tilt_laser_filters.yaml to make it ignore more\nof the lower section of the tilt scan data.</p>\n\n<p>The other important thing is that the current numbers have been tuned\nfor the storage clipboard.  If you use a different object that is\nlarger, it may trigger this again and need re-tuning.</p>\n\n<h3 id=""navigating-after-arm-being-out"">Navigating after arm being out</h3>\n\n<p>I haven\'t seen this particularly, but when the arm is out to give or\nget, the nav stack will think there are obstacles close to the robot\nin front.  When the arms tuck, there is some chance that some obstacle\ncells in the costmap won\'t be cleared immediately and the robot will\ntry to navigate around them.</p>\n\n<p>This can likely be solved by arranging the pick-up and drop-off poses\nsuch that the robot generally turns around to go to the next pose,\ninstead of needing to drive straight ahead after getting or giving the\nobject.</p>\n\n<h3 id=""gripper-cycling"">Gripper Cycling</h3>\n\n<p>There have been a few times where the gripper sensor nodes don\'t\nlaunch properly.  When that happens, the robot always thinks its hand\nis being shaken.  So when it is waiting for an object to be given, it\nconstantly closes the hand and re-opens it.  If you give it something\nin that state, it is bad because when it is time to <em>give</em> the object,\nit will think someone is pulling on it immediately and thus open the\ngripper and drop the object on the floor.</p>\n\n<p>The solution (that I know of) is to re-launch the deliver action\nserver.  It hasn\'t happened twice in a row, so this is all I\'ve done\nto solve it so far.</p>\n\n<h3 id=""joystick-teleop-broken"">Joystick Teleop Broken</h3>\n\n<p>I haven\'t looked into this, but joystick teleop seems to not work when\nthis is running.  Maybe a mux issue?</p>\n</div>\n\n            \n          </div>'"
pr2_ps3_joystick_app,http://rosindex.github.io/r/pr2_ps3_joystick_app/,"hydro,indigo",pr2_ps3_joystick_app,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_realtime,http://rosindex.github.io/r/ros_realtime/,"hydro,fuerte,electric,groovy,indigo","allocators,lockfree,ros_realtime,rosatomic,rosrt","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_realtime"">ros_realtime</h1>\n\n<p>hydro-devel catkinization of ros_realtime. This was used as a dependency for pr2</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
uwsim_osgocean,http://rosindex.github.io/r/uwsim_osgocean/,"hydro,jade,groovy,indigo",uwsim_osgocean,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">osgOcean v1.0\n-------------\n\nDEPENDANCIES\n------------\n\nResources\n---------\n\nBoth the library and the example require a set of resource\nfiles (models/textures) which can be downloaded from here:\nhttp://osgocean.googlecode.com/files/osgOcean-Resources-1.0.rar\n\nOnce you downloaded them, extract the \'Island\' and \'Textures\' \nfolders into the resources directory found in the root of the\nsource code tree. The install project will copy the relevant\ndata files to the bin path like so:\n\n*install_path*/bin/resources/\n\nosgOcean uses the osgDB registry to find the resource files.\nBy default it adds the following paths to the registry:\n\nShader path:\nresources/shaders/\n\nTexture path:\nresources/textures/\n\nIf you wish to move these resources you must update the data file path \nlist within the registry yourself. This can be down from outside the \nlibrary with the following code:\n\nosgDB::FilePathList&amp; pathList = osgDB::Registry::instance()-&gt;getDataFilePathList();\npathList.push_back( new_path );\n\nLibraries\n---------\n\nosgOcean also requires a Fast Fourier Transform library. It can work \nwith either FFTW or FFTSS. \n\n**IMPORTANT LICENSE ISSUE**\nFFTW is released under a General Public License, by selecting this \noption in CMAKE the resulting build of osgOcean will also be covered under \nthe GPL license.\n\nGPL License details: http://www.gnu.org/copyleft/gpl.html\n\nFFTSS is covered under a Lesser General Public License which allows \nthe osgOcean library to remain LGPL. \n\nLGPL License details: http://www.gnu.org/licenses/lgpl.html or see LICENSE.txt\n\nFFTW and FFTSS can be downloaded from:\n\nFFTW:  http://www.fftw.org/\nFFTSS: http://www.ssisc.org/fftss/\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rqt_paramedit,http://rosindex.github.io/r/rqt_paramedit/,"hydro,indigo","qt_paramedit,rqt_paramedit","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rqt_paramedit"">rqt_paramedit</h1>\n\n<p>A graphical parameter editor for ROS.</p>\n</div>\n\n            \n          </div>'"
yaml_cpp_0_3,http://rosindex.github.io/r/yaml_cpp_0_3/,indigo,yaml_cpp_0_3,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""overview"">Overview</h2>\n\n<ul>\n<li>Version: 0.5.1</li>\n<li>Previous Version: 0.3.0</li>\n</ul>\n\n<p>0.5.1 brings with it lots of c++ interface improvements, a more convenient api (especially for loading\nfrom files or strings) and the ability to write custom type converters (e.g. yaml -&gt; MatrixXd).</p>\n\n<h2 id=""patches"">Patches</h2>\n\n<ul>\n<li>Disabled tests, it was interfering with catkin tests.</li>\n</ul>\n</div>\n\n            \n          </div>'"
world_canvas,http://rosindex.github.io/r/world_canvas/,indigo,world_canvas_server,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""world-canvas-server"">World canvas server</h1>\n\n<p>A component of the world canvas framework, a ROS stack for storing and accessing semantic information about the world, with an initial emphasis on needs and use cases for mobile robots.</p>\n\n<p>World canvas server is a storage manager for semantic maps. Initial version replicates <a href=""https://github.com/ros-planning/map_store"">map_store</a> behavior for semantic maps.</p>\n\n<h2 id=""give-it-a-fast-try"">Give it a fast try</h2>\n\n<p><strong>Installing</strong></p>\n\n<p>Use world_canvas.rosinstall to create a world_canvas workspace. Don\'t forget to install dependencies:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install --from-paths -i src\n\n</code></pre></div>\n<p><strong>Running</strong></p>\n\n<p>First of all, launch the annotations server:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch world_canvas_server world_canvas_server.launch debug:=true --screen\n\n</code></pre></div>\n<p>Then you need to populate the database with some annotations (we still don\'t have an editor :(\nUse the save_xxxx.py scripts and the test/annotations/xxx_list.yaml data files from world_canvas_server package, e.g.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; rosrun world_canvas_server save_markers.py _world:=\'What a wonderful world\' _file:=`rospack find world_canvas_server`/test/annotations/ar_list.yaml\n&gt; rosrun world_canvas_server save_walls.py _world:=\'What a wonderful world\' _file:=`rospack find world_canvas_server`/test/annotations/wall_list.yaml\n\n</code></pre></div>\n<p>These scripts will request the server to save in database both the annotations and the associated data the YAML files contain.</p>\n\n<p>And now you are ready to look for annotations. Before giving a try to our client libraries, you can use the get_any.py script from world_canvas_server package, e.g.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&gt; rosrun world_canvas_server get_any.py  _world:=\'What a wonderful world\' _ids:=[] _types:=[\'ar_track_alvar_msgs/AlvarMarker\'] _keywords:=[] _relationships=[] _topic_type:=ar_track_alvar_msgs/AlvarMarker _topic_name:=ar_markers _pub_as_list:=False\n&gt; rosrun world_canvas_server get_any.py  _world:=\'What a wonderful world\' _ids:=[] _types:=[\'yocs_msgs/Wall\'] _keywords:=[] _relationships=[] _topic_type:=yocs_msgs/WallList _topic_name:=wall_pose_list _pub_as_list:=True\n\n</code></pre></div>\n<p>The first 5 parameters provide search criteria:\n * world      Retrieved annotations associated to this world. Mandatory\n * ids        Retrieved annotation uuid is within this list\n * types      Retrieved annotation type is within this list\n * keywords   Retrieved annotation has AT LEAST one of these keywords\n * relationships   Still not implemented on server, so just ignored</p>\n\n<p>And the other 3 define how the server must publish the retrieved annotations\n * topic_name    Where server must publish annotations data\n * topic_type    The message type to publish annotations data. Mandatory if pub_as_list is true; ignored otherwise\n * pub_as_list   If true, annotations will be packed in a list before publishing, so topic_type must be an array of the requested annotations</p>\n\n<p>The get_any script calls 3 services in the annotations server:\n * get annotations to retrieve the annotations that satisfy the filter criteria\n * get annotations data to retrieve the data of those annotations\n * pub annotations data to make the server publish such data</p>\n\n<p>You can verify that all went right by echoing topics\n * topic_name                Published by the server with the loaded annotations data\n * topic_name + \'_client\'    Published by the get_Any script with the retrieved annotations data</p>\n\n<p>Or in RViz showing topic\n * topic_name + \'_markers\'   Published by the get_Any script with visualization markers</p>\n\n<p><strong>Import/export database</strong></p>\n\n<p>The save_xxxx.py scripts are a temporal workaround to play with world canvas. The canonical ways to populate the\ndatabase are a graphic tool still do be implemented and an import from YAML files service. To try the later method,\nand the reverse operation of exporting to file, you can run the import.py/export.py scripts:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun world_canvas_server import.py _file:=`rospack find world_canvas_server`/test/annotations/full_db.yaml\nrosrun world_canvas_server export.py _file:=`rospack find world_canvas_server`/test/annotations/export_db.yaml\n\n</code></pre></div>\n<p><strong>Real scenario testing</strong></p>\n\n<p>Now we can show a more practical use: Turtlebot simulated on Stage using virtual sensor and getting the 2D map from WC server. You must first update your workspace using the modified rosinstall file. It adds the experimental branch of the turtlebot_simulator repo. Then, populate the WC database, and ready to go!</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch world_canvas_server world_canvas_server.launch --screen\nroslaunch turtlebot_stage populate_world.launch --screen\nroslaunch turtlebot_stage world_canvas_demo.launch --screen\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
interactive_markers,http://rosindex.github.io/r/interactive_markers/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo",interactive_markers,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
foscam_8918_driver,http://rosindex.github.io/r/foscam_8918_driver/,"hydro,fuerte",foscam_8918_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""foscam_8918_driver"">foscam_8918_driver</h1>\n\n<p>ROS driver that uses OpenCV to get image stream from Foscam 8918 IP camera and publish with image transport.</p>\n\n<h1 id=""to-do"">To Do</h1>\n\n<ul>\n<li>Read login credentials from a file so that it\'s not necessary to commit user name and password to VCS.\n\n<ul>\n<li>Currently, there is a launch file that is added to .gitignore file based off the example launch file. The ignored launch file should be sort of safe to put login credentials, but it still feels pretty dangerous.</li>\n</ul>\n</li>\n<li>See if there are ways to support pan, tilt, zoom, ROI, speaker, microphone, image resolution, and other features of the Foscam cameras.</li>\n</ul>\n</div>\n\n            \n          </div>'"
libfreenect,http://rosindex.github.io/r/libfreenect/,"kinetic,indigo",libfreenect,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""libfreenect"">libfreenect</h1>\n\n<p>libfreenect is a userspace driver for the Microsoft Kinect.\nIt runs on Linux, OSX, and Windows and supports</p>\n\n<ul>\n<li>RGB and Depth Images</li>\n<li>Motors</li>\n<li>Accelerometer</li>\n<li>LED</li>\n<li>Audio</li>\n</ul>\n\n<h1 id=""build-instructions"">Build Instructions</h1>\n\n<p>To build libfreenect, you\'ll need</p>\n\n<ul>\n<li>\n<a href=""http://libusb.info"">libusb</a> &gt;= 1.0.18</li>\n<li>\n<a href=""http://cmake.org"">CMake</a> &gt;= 2.6</li>\n<li>\n<a href=""http://python.org"">python</a> == 2.* (only if BUILD_PYTHON=ON or BUILD_REDIST_PACKAGE=OFF)</li>\n</ul>\n\n<p>For the examples, you\'ll need</p>\n\n<ul>\n<li>OpenGL   (included with OSX)</li>\n<li>glut     (included with OSX)</li>\n<li>\n<a href=""http://sourceforge.net/projects/pthreads4w/"">pthreads-win32</a> (Windows)</li>\n</ul>\n\n<p>For audio support, you must have firmware to upload to the Kinect.\nIf you specify a non-redistributable package, firmware will be downloaded automatically:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cmake -L .. -DBUILD_REDIST_PACKAGE=OFF\n</code></pre></div>\n<p>Note that the downloaded firmware may not be legal to redistribute!</p>\n\n<h2 id=""fetch-amp-build"">\n<a name=""fetch-build""></a>Fetch &amp; Build</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/OpenKinect/libfreenect\ncd libfreenect\nmkdir build\ncd build\ncmake -L ..\nmake\n\n# if you don\'t have `make` or don\'t want color output\n# cmake --build .\n</code></pre></div>\n<p>You can specify a build with debug symbols:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cmake -L .. -DCMAKE_BUILD_TYPE=debug\n# or with optimizations\n# cmake -L .. -DCMAKE_BUILD_TYPE=RelWithDebInfo\n</code></pre></div>\n<p>You can build .deb, .rpm, and/or .tgz packages with <code>cpack</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cmake .. -L -DBUILD_CPACK_DEB=ON -DBUILD_CPACK_RPM=ON -DBUILD_CPACK_TGZ=ON\ncpack\n</code></pre></div>\n<h2 id=""osx"">OSX</h2>\n\n<p>If you don\'t have a package manager, install <a href=""http://brew.sh/"">Homebrew</a>.\nFor a manual build, see <a href=""http://openkinect.org/wiki/Getting_Started#Manual_Build_under_OSX"">the wiki</a>.</p>\n\n<h3 id=""homebrew"">Homebrew</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">brew install libfreenect\n# or get the very latest:\n# brew install --HEAD libfreenect\n</code></pre></div>\n<h3 id=""macports"">MacPorts</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo port install git-core cmake libusb libtool\n</code></pre></div>\n<p>Continue with <a href=""#fetch-build"">Fetch &amp; Build</a>.</p>\n\n<h2 id=""linux"">Linux</h2>\n\n<p>For a manual build, see <a href=""http://openkinect.org/wiki/Getting_Started#Manual_Build_on_Linux"">the wiki</a>.</p>\n\n<h3 id=""ubuntu-debian-mint"">Ubuntu/Debian/Mint</h3>\n\n<p>The version packaged in Ubuntu may be very old.\nTo install newer packaged builds, see <a href=""http://openkinect.org/wiki/Getting_Started#Ubuntu.2FDebian"">the wiki</a>.\nContinue with this section for a manual build.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core cmake pkg-config build-essential libusb-1.0-0-dev\nsudo adduser $USER video\nsudo adduser $USER plugdev # necessary?\n\n# only if you are building the examples:\nsudo apt-get install libglut3-dev libxmu-dev libxi-dev\n</code></pre></div>\n<p>Continue with <a href=""#fetch-build"">Fetch &amp; Build</a>.</p>\n\n<p>There is also a <a href=""https://github.com/OpenKinect/libfreenect/tree/debian"">debian branch</a> for packaging purposes.</p>\n\n<h3 id=""gentoo-linux"">Gentoo Linux</h3>\n\n<p>There is a live ebuild for your convenience in <a href=""https://github.com/OpenKinect/libfreenect/tree/master/platform/linux/portage/dev-libs/libfreenect"">platform/linux/portage/dev-libs/libfreenect/</a>.</p>\n\n<h3 id=""arch-linux"">Arch Linux</h3>\n\n<p>There is a <a href=""https://aur.archlinux.org/packages/libfreenect"">libfreenect</a> PKGBUILD in the AUR.\nAlternately, the <a href=""https://aur.archlinux.org/packages/libfreenect-git"">libfreenect-git</a> PKGBUILD builds the very latest.</p>\n\n<h2 id=""windows"">Windows</h2>\n\n<p>The inf files in <a href=""https://github.com/OpenKinect/libfreenect/tree/master/platform/windows"">platform/windows/</a> may be used for installing the device.\nFollow <a href=""#fetch-build"">Fetch &amp; Build</a> or use Github and CMake GUI tools.\nYou may need to supply paths to CMake so it can find dependencies.\nFor example:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cmake .. -DLIBUSB_1_INCLUDE_DIR=""C:\\path\\to\\libusb\\include"" -DLIBUSB_1_LIBRARY=""C:\\path\\to\\libusb\\libusb.lib""\n</code></pre></div>\n<h1 id=""wrappers"">Wrappers</h1>\n\n<p>Interfaces to various languages are provided in <a href=""https://github.com/OpenKinect/libfreenect/tree/master/wrappers"">wrappers/</a>.\nWrappers are not guaranteed to be API stable or up to date.</p>\n\n<ul>\n<li>C (using a synchronous API)</li>\n<li>C++</li>\n<li>C#</li>\n<li>python</li>\n<li>ruby</li>\n<li>actionscript</li>\n<li>Java (JNA)</li>\n</ul>\n\n<h2 id=""python"">Python</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd wrappers/python\n# if you have cython and want to rebuild the binding\n# cython freenect.pyx\npython2 setup.py build_ext --inplace\n</code></pre></div>\n<p>For example, start with <a href=""https://github.com/OpenKinect/libfreenect/tree/master/wrappers/python/demo_cv_async.py"">demo_cv_async.py</a>.</p>\n\n<h1 id=""code-contributions"">Code Contributions</h1>\n\n<p>In order of importance:</p>\n\n<ul>\n<li>Make sure to sign commits: <code>git commit -s</code>\n</li>\n<li>Use a <a href=""https://www.atlassian.com/git/workflows#!workflow-feature-branch"">feature branch</a> in your own fork and target master with pull requests</li>\n<li>Tab indentation, no trailing whitespace</li>\n</ul>\n\n<h1 id=""maintainers"">Maintainers</h1>\n\n<p>Ongoing Development and Maintenance by the OpenKinect Community</p>\n\n<p><a href=""http://www.openkinect.org"">http://www.openkinect.org</a></p>\n\n<ul>\n<li>Original Code and Engineering: Hector Martin (marcan)</li>\n<li>Community Lead: Josh Blake (JoshB)</li>\n<li>Integration: Kyle Machulis (qDot)</li>\n</ul>\n\n<h1 id=""license"">License</h1>\n\n<p>The libfreenect project is covered under a dual Apache v2/GPL v2\nlicense. The licensing criteria are listed below, as well as at the\ntop of each source file in the repo.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">This file is part of the OpenKinect Project. http://www.openkinect.org\n\nCopyright (c) 2010 individual OpenKinect contributors. See the CONTRIB\nfile for details.\n\nThis code is licensed to you under the terms of the Apache License,\nversion 2.0, or, at your option, the terms of the GNU General Public\nLicense, version 2.0. See the APACHE20 and GPL2 files for the text of\nthe licenses, or the following URLs:\nhttp://www.apache.org/licenses/LICENSE-2.0\nhttp://www.gnu.org/licenses/gpl-2.0.txt\n\nIf you redistribute this file in source form, modified or unmodified,\nyou may:\n\n- Leave this header intact and distribute it under the same terms,\n  accompanying it with the APACHE20 and GPL2 files, or\n- Delete the Apache 2.0 clause and accompany it with the GPL2 file, or\n- Delete the GPL v2 clause and accompany it with the APACHE20 file\n\nIn all cases you must keep the copyright notice intact and include a\ncopy of the CONTRIB file.\n\nBinary distributions must follow the binary distribution requirements\nof either License.\n\n</code></pre></div>\n<h1 id=""more-information"">More Information</h1>\n\n<p>Information about the OpenKinect project can be found at <a href=""http://www.openkinect.org"">http://www.openkinect.org</a></p>\n\n<p>For questions, support, and discussion, check out the google groups mailing list at <a href=""http://groups.google.com/group/openkinect"">http://groups.google.com/group/openkinect</a></p>\n\n<p>Or the IRC channel at #openkinect on <a href=""http://freenode.net/"">Freenode</a></p>\n\n<p>We are also on twitter at <a href=""http://twitter.com/openkinect"">http://twitter.com/openkinect</a></p>\n</div>\n\n            \n          </div>'"
soem,http://rosindex.github.io/r/soem/,indigo,soem,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">To compile for linux:\n\ngo to project directory\n\nsource ./setup.sh linux\n\nmake all\n\nPlease read the doxygen documentation in doc/html/index.html\n\n--------------------------------------------------------------\n\nTo complie for windows:\n\ngo to project directory \n\nBuild soem libary make_libsoem_lib.bat &lt;Path to MSVC VC&gt; &lt;arch&gt;\n\nEx: make_libsoem_lib.bat ""C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC"" x86\n\nBuild test folder make_test_win32.bat &lt;Path to MSVC VC&gt; &lt;arch&gt;\n\nEx: make_test_win32.bat ""C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC"" x86\n\nTest: slavinfo.exe &lt;wpcap device name&gt;. sllaveinfo.exe will print the \\Device\\NPF_{xxxxxx}\'s\nEx. slaveinfo.exe \\Device\\NPF_{735D4B45-68D6-47A6-B826-E0DA26AC761A}\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
typelib,http://rosindex.github.io/r/typelib/,"hydro,indigo",typelib,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">/*! \\mainpage Typelib: a C++ type and value introspection library (Ruby bindings documentation is &lt;a href=""ruby/index.html""&gt;here&lt;/a&gt;)\n\n&lt;b&gt;These pages document only the C++ part of the library. The Ruby bindings documentation is available &lt;a href=""ruby/index.html""&gt;here&lt;/a&gt;&lt;/b&gt;\n\nTypelib is a C++ library which allows for introspection on data types and data\nvalues. Its value model is based on the C type model. The library allows to\nload definition from various type description files (including plain C), build\ntypes programmatically, create and manipulate values from these types.\n\nThe following import/export plugins are available:\n  - import plain C plus C++-compatible namespace support\n  - import/export into Typelib\'s own XML format\n  - export IDL files (CORBA definition language)\n\nTypelib has been written by Sylvain Joyeux &lt;sylvain.joyeux@m4x.org&gt;\n\nCopyright 2004-2008 LAAS/CNRS &lt;openrobots@laas.fr&gt; and DGA &lt;arnaud.paronian@dga.gouv.fr&gt;\nCopyright 2008-2009 DFKI &lt;sylvain.joyeux@dfki.de&gt;\n\nThis software is provided under the CeCILL B License, which gives comparable\nterms of use than the BSD license. See LICENSE.txt or LICENSE.fr.txt provided\nwith the source code for the full license texts.\n\n\\section Installation\n\n\\subsection source Getting the source code\nReleases are available on SourceForge: &lt;a\nhref=""http://sourceforge.net/projects/typelib/""&gt;http://sourceforge.net/projects/typelib/&lt;/a&gt;.\nYou can access this project page from anywhere in the documentation by clicking\non the SourceForge.net logo at the bottom of documentation pages.\n\nThe development repository is managed by git and is (for now) publicly available in GitHub:\n\n&lt;pre&gt;\n  git clone git://github.com/doudou/typelib.git\n&lt;/pre&gt;\n\n(see &lt;a href=""http://github.com/doudou/""&gt;this page&lt;/a&gt; for more information)\n\n\\subsection cpp Building and installing the C++ library\nThe C++ library depends on the following:\n  - the boost library, including boost/filesystem\n  - utilmm (utilmm.sf.net)\n  - the antlr parser generator\n  - cmake and pkg-config\n  - doxygen for the documentation (optional)\n  - libxml2\n\nWhen all these dependencies are installed, run\n&lt;pre&gt;\n    mkdir build\n    cd build\n    cmake ..\n    make\n    make doc # to build the documentation, only if doxygen is available\n&lt;/pre&gt;\n\nand as root,\n&lt;pre&gt;\n    make install\n&lt;/pre&gt;\n\nAlternatively, you can add the \\c -DCMAKE_INSTALL_PREFIX=path/to/the/installation/target option to cmake\nto install the files in a custom directory\n\n\\subsection ruby Building and installing Ruby bindings\nThe installation of the Ruby bindings require the following:\n * the ruby interpreter version 1.8 and the associated\n   development files.\n   Under Debian, these are named ruby1.8 and libruby1.8-dev\n * testrb for the test suite\n * rdoc for generating the documentation (optional)\n\nAt runtime, the bindings require the following:\n * utilrb, which is best downloaded as a gem. See\n     http://www.rubygems.org for information about the RubyGems\n     system. This system can be installed by the rubygems\n     package on Debian.\n\n   When you have installed rubygems, run\n     gem install utilrb\n\n   You may have to run it as root if RubyGems is installed\n   globally (this is the case for Debian\'s rubygems package)\n\n   You can also find the sources at\n     git clone git://github.com/doudou/util-rb.git\n   read the INSTALL.txt file\n*/\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">/*! \\mainpage Typelib: a C++ type and value introspection library (Ruby bindings documentation is &lt;a href=""ruby/index.html""&gt;here&lt;/a&gt;)\n\n&lt;b&gt;These pages document only the C++ part of the library. The Ruby bindings documentation is available &lt;a href=""ruby/index.html""&gt;here&lt;/a&gt;&lt;/b&gt;\n\nTypelib is a C++ library which allows for introspection on data types and data\nvalues. Its value model is based on the C type model. The library allows to\nload definition from various type description files (including plain C), build\ntypes programmatically, create and manipulate values from these types.\n\nThe following import/export plugins are available:\n  - import plain C plus C++-compatible namespace support\n  - import/export into Typelib\'s own XML format\n  - export IDL files (CORBA definition language)\n\nA binding to the Ruby language is provided, which allows to very easily interface\na dynamic library from within Ruby code. This Ruby binding is based on the dyncall\nlibrary, whose full source code is provided in this release.\n\nTypelib has been written by Sylvain Joyeux &lt;sylvain.joyeux@m4x.org&gt;\n\nCopyright 2004-2008 LAAS/CNRS &lt;openrobots@laas.fr&gt; and DGA &lt;arnaud.paronian@dga.gouv.fr&gt;\nCopyright 2008-2009 DFKI &lt;sylvain.joyeux@dfki.de&gt;\n\nThis software is provided under the CeCILL B License, which gives comparable\nterms of use than the BSD license. See LICENSE.txt or LICENSE.fr.txt provided\nwith the source code for the full license texts.\n\n\\section Installation\n\n\\subsection source Getting the source code\nReleases are available on SourceForge: &lt;a\nhref=""http://sourceforge.net/projects/typelib/""&gt;http://sourceforge.net/projects/typelib/&lt;/a&gt;.\nYou can access this project page from anywhere in the documentation by clicking\non the SourceForge.net logo at the bottom of documentation pages.\n\nThe development repository is managed by git and is (for now) publicly available in GitHub:\n\n&lt;pre&gt;\n  git clone git://github.com/doudou/typelib.git\n&lt;/pre&gt;\n\n(see &lt;a href=""http://github.com/doudou/""&gt;this page&lt;/a&gt; for more information)\n\n\\subsection cpp Building and installing the C++ library\nThe C++ library depends on the following:\n  - the boost library, including boost/filesystem\n  - utilmm (utilmm.sf.net)\n  - the antlr parser generator\n  - cmake and pkg-config\n  - doxygen for the documentation (optional)\n  - libxml2\n\nWhen all these dependencies are installed, run\n&lt;pre&gt;\n    mkdir build\n    cd build\n    cmake ..\n    make\n    make doc # to build the documentation, only if doxygen is available\n&lt;/pre&gt;\n\nand as root,\n&lt;pre&gt;\n    make install\n&lt;/pre&gt;\n\nAlternatively, you can add the \\c -DCMAKE_INSTALL_PREFIX=path/to/the/installation/target option to cmake\nto install the files in a custom directory\n\n\\subsection ruby Building and installing Ruby bindings\nThe installation of the Ruby bindings require the following:\n * the ruby interpreter version 1.8 and the associated\n   development files.\n   Under Debian, these are named ruby1.8 and libruby1.8-dev\n * testrb for the test suite\n * rdoc for generating the documentation (optional)\n\nAt runtime, the bindings require the following:\n * utilrb, which is best downloaded as a gem. See\n     http://www.rubygems.org for information about the RubyGems\n     system. This system can be installed by the rubygems\n     package on Debian.\n\n   When you have installed rubygems, run\n     gem install utilrb\n\n   You may have to run it as root if RubyGems is installed\n   globally (this is the case for Debian\'s rubygems package)\n\n   You can also find the sources at\n     git clone git://github.com/doudou/util-rb.git\n   read the INSTALL.txt file\n*/\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
utilrb,http://rosindex.github.io/r/utilrb/,"hydro,indigo",utilrb,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">= Utilrb\n\nhomepage :: http://rock-robotics.org\nmailing list :: http://www.dfki.de/mailman/cgi-bin/listinfo/rock-dev\nbug tracker :: trac.rock-robotics.org\nrubygem page :: http://rubygems.org/gems/utilrb\ngit repository :: http://gitorious.org/orocos-toolchain/utilrb.git\nAPI documentation :: http://rubydoc.info/gems/utilrb/1.6.6/frames\n\n== DESCRIPTION\n\nUtilrb is yet another Ruby toolkit, in the spirit of facets. It includes all\nthe standard class extensions I use in other projects.\n\n== LICENSE\n\nCopyright (c) 2006-2013\n    Sylvain Joyeux &lt;sylvain.joyeux@m4x.org&gt;\n    DFKI &lt;robotics@dfki.de&gt;\n    LAAS/CNRS &lt;openrobots@laas.fr&gt;\n\nThis work is licensed under the BSD license. See License.txt for details\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">= Utilrb\nhttp://utilrb.rubyforge.org\nhttp://www.rubyforge.org/projects/utilrb\nhttp://github.com/doudou/util-rb (git repository)\n\n== License\n\nCopyright (c) 2006-2008\n    Sylvain Joyeux &lt;sylvain.joyeux@m4x.org&gt;\n    LAAS/CNRS &lt;openrobots@laas.fr&gt;\n\nThis work is licensed under the BSD license. See License.txt for details\n\n== What is Utilrb ?\n\nUtilrb is yet another Ruby toolkit, in the spirit of facets. It includes all\nthe standard class extensions I use in other projects.\n\n== Installation\n\nThe only dependency Utilrb has is flexmock if you want to run tests. It is\navailable as a gem, so you can run\n\n  gem install flexmock\n\n== Utilrb\'s C extension\nUtilrb includes a C extension in ext/. It is optional, but some of the\nfunctionalities will be disabled if it is not present. Trying to require\na file in which there is a C-only feature will yield a warning on STDOUT.\n\n* some features have a Ruby version, but a C version is provided for\n  performance:\n  - Enumerable#each_uniq\n\n* some features are C-only\n  - ValueSet class\n  - Kernel#swap!\n\nThe environment variable &lt;tt&gt;UTILRB_FASTER_MODE&lt;/tt&gt; controls the extension\nloading. Set it to +no+ to disable the extension, to +yes+ to force it \n(an error is generated if the extension is not available). If the variable\nis not set, the extension is loaded if available.\n\n== CHANGES\n:include: History.txt\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
corobot,http://rosindex.github.io/r/corobot/,"hydro,groovy","corobot,corobot_arm,corobot_camera,corobot_diagnostics,corobot_gazebo,corobot_gps,corobot_joystick,corobot_launch,corobot_msgs,corobot_pantilt,corobot_phidget_ik,corobot_ssc32,corobot_state_tf,corobot_teleop,corobot_urdf,map_to_jpeg,phidget_motor,phidget_servo,phidget_stepper","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""corobot-ros-pkg"">corobot-ros-pkg</h1>\n\n<p>ROS packages to control a CoroWare Corobot. The packages have been catkinized and work on ROS Groovy and after.</p>\n</div>\n\n            \n          </div>'"
openni2_launch,http://rosindex.github.io/r/openni2_launch/,"hydro,groovy,kinetic,jade,indigo",openni2_launch,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jackal_simulator,http://rosindex.github.io/r/jackal_simulator/,indigo,"jackal_gazebo,jackal_simulator","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
innok_heros_lights,http://rosindex.github.io/r/innok_heros_lights/,indigo,innok_heros_lights,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pcan_topics,http://rosindex.github.io/r/pcan_topics/,indigo,pcan_topics,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""></div>\n\n            \n          </div>'"
perception_blort,http://rosindex.github.io/r/perception_blort/,"hydro,electric,groovy,fuerte","blort,blort_msgs,blort_ros,perception_blort,siftgpu","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""perception_blort"">perception_blort</h1>\n\n<p>BLORT - ""The Blocks World Robotic Vision Toolbox"" implementation running on ROS.</p>\n\n<p>The library provides object recognition and pose estimation based on detection and tracking nodes. \nThe system works with a CAD model of the object provided. \nThe current implementation of the BLORT detector module uses SIFT feature descriptors to provide an approximate estimation of \nthe object\'s pose for the tracker module which will track the object using edge-based methods. </p>\n\n<p>Check it\'s official ROS wiki page: <a href=""http://wiki.ros.org/perception_blort"">http://wiki.ros.org/perception_blort</a></p>\n\n<p>You can get further info on how to use it following the tutorials: <a href=""http://wiki.ros.org/blort_ros/Tutorials"">http://wiki.ros.org/blort_ros/Tutorials</a></p>\n\n<p>Be aware that perception_blort is a work in progress and may change it\'s behaviour.</p>\n\n<h2 id=""videos"">Videos</h2>\n\n<h3 id=""summary"">Summary</h3>\n\n<p><a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=TN9WguYpXTE%0A"" target=""_blank""><img src=""http://img.youtube.com/vi/TN9WguYpXTE/0.jpg"" alt=""summary"" width=""240"" height=""180"" border=""10"" style=""float""></a></p>\n\n<h3 id=""training"">Training</h3>\n\n<p><a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=pp6RwxbUwrI%0A"" target=""_blank""><img src=""http://img.youtube.com/vi/pp6RwxbUwrI/0.jpg"" alt=""summary"" width=""240"" height=""180"" border=""10"" style=""float""></a></p>\n\n<h3 id=""detecting-amp-tracking"">Detecting &amp; tracking</h3>\n\n<p><a href=""http://www.youtube.com/watch?feature=player_embedded&amp;v=HoMSHIzhERI%0A"" target=""_blank""><img src=""http://img.youtube.com/vi/HoMSHIzhERI/0.jpg"" alt=""summary"" width=""240"" height=""180"" border=""10"" style=""float""></a></p>\n</div>\n\n            \n          </div>'"
kinect_aux,http://rosindex.github.io/r/kinect_aux/,"hydro,groovy,indigo",kinect_aux,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kinect_aux"">kinect_aux</h1>\n\n<p>This is a standalone ROS Indigo package which provides access to auxiliary features of the Microsoft kinect, allowing control of the tilt angle and LED status, as well as reading accelerometer data.</p>\n\n<p>This package may be used in conjunction with openni_camera.</p>\n\n<p>For more information: <a href=""http://www.ros.org/wiki/kinect_aux"">http://www.ros.org/wiki/kinect_aux</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kinect_aux"">kinect_aux</h1>\n\n<p><a href=""https://travis-ci.org/muhrix/kinect_aux""><img src=""https://travis-ci.org/muhrix/kinect_aux.png?branch=hydro"" alt=""Build Status""></a></p>\n\n<p>This is a standalone ROS Hydro package (using catkin) which provides access to auxiliary features of the Microsoft kinect, allowing control of the tilt angle and LED status, as well as reading accelerometer data.</p>\n\n<p>This package may be used in conjunction with openni_camera.</p>\n\n<p>For more information: <a href=""http://www.ros.org/wiki/kinect_aux"">http://www.ros.org/wiki/kinect_aux</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>This is a standalone ROS Groovy package (using catkin) which provides access to auxiliary features of the Microsoft kinect, allowing control of the tilt angle and LED status, as well as reading accelerometer data.</p>\n\n<p>This package may be used in conjunction with openni_camera.</p>\n\n<p>For more information: <a href=""http://www.ros.org/wiki/kinect_aux"">http://www.ros.org/wiki/kinect_aux</a></p>\n</div>\n\n            \n          </div>'"
ros_package_web_server,http://rosindex.github.io/r/ros_package_web_server/,indigo,ros_package_web_server,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_package_web_server"">ros_package_web_server <a href=""https://travis-ci.org/RIVeR-Lab/ros_package_web_server""><img src=""https://api.travis-ci.org/RIVeR-Lab/ros_package_web_server.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""web-server-to-host-ros-package-content"">Web server to host ROS package content</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/ros_package_web_server"">the ROS wiki</a>.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>ros_package_web_server is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n</div>\n\n            \n          </div>'"
pr2_power_drivers,http://rosindex.github.io/r/pr2_power_drivers/,"hydro,groovy,fuerte,indigo","ocean_battery_driver,power_monitor,pr2_power_board,pr2_power_drivers","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kinect_2d_scanner,http://rosindex.github.io/r/kinect_2d_scanner/,indigo,kinect_2d_scanner,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kinect_2d_scanner"">kinect_2d_scanner</h1>\n\n<p>Kinect grabber as 2D laser scans using MRPT API.</p>\n\n<p>See docs: <a href=""http://wiki.ros.org/kinect_2d_scanner"">http://wiki.ros.org/kinect_2d_scanner</a></p>\n</div>\n\n            \n          </div>'"
grizzly_simulator,http://rosindex.github.io/r/grizzly_simulator/,"hydro,indigo","grizzly_gazebo,grizzly_gazebo_plugins,grizzly_simulator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""grizzly_simulator"">grizzly_simulator</h1>\n\n<p>Gazebo simulation for Grizzly. Please see the ROS wiki for usage:</p>\n\n<p><a href=""http://wiki.ros.org/grizzly_simulator"">http://wiki.ros.org/grizzly_simulator</a></p>\n</div>\n\n            \n          </div>'"
myo_ros,http://rosindex.github.io/r/myo_ros/,indigo,myo_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""myo_ros"">myo_ros</h1>\n\n<p>This serves as the ROS-side portion of what is required to get Myo to work on a ROS network. It currently only contains a few custom message definitions to keep the data coming into ROS as raw as possible, but some basic examples should be added to demonstrate how it can be used. The Windows-side portion is myo_ros_windows</p>\n\n<h2 id=""installing-dependencies-indigo"">Installing Dependencies (Indigo)</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-rosserial-server\n</code></pre></div>\n<h2 id=""installing-dependencies-hydro"">Installing Dependencies (Hydro)</h2>\n\n<p>As of this writing, it has been untested in Hydro, but I see no reason why it wouldn\'t work.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-hydro-rosserial-server\n</code></pre></div>\n<h2 id=""dependencies"">Dependencies</h2>\n\n<p>Base ROS</p>\n\n<h2 id=""compiling"">Compiling</h2>\n\n<p>Clone the source into your workspace and make your workspace. That\'s it.</p>\n\n<h2 id=""running"">Running</h2>\n\n<p>As in the usual rosserial-based bridges, simply launch rosserial on this end:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch rosserial_server socket.launch\n</code></pre></div>\n<p>You\'ll need to run the Windows side separately, consult the documentation for that package for those instructions.</p>\n\n<h2 id=""todo"">TODO:</h2>\n\n<p>Port previous example nodes to the new format to show Myo-&gt;ROS commands (ex. Twist)</p>\n</div>\n\n            \n          </div>'"
fs100_motoman,http://rosindex.github.io/r/fs100_motoman/,hydro,fs100_motoman,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""fs100_motoman"">fs100_motoman</h1>\n</div>\n\n            \n          </div>'"
rosbag_image_compressor,http://rosindex.github.io/r/rosbag_image_compressor/,"hydro,indigo",rosbag_image_compressor,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pose_cov_ops,http://rosindex.github.io/r/pose_cov_ops/,indigo,pose_cov_ops,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pose_cov_ops"">pose_cov_ops</h1>\n\n<p>Library with C++ functions for SE(2/3) pose and 2D/3D point composition operations with uncertainty.</p>\n\n<p>Docs: <a href=""http://wiki.ros.org/pose_cov_ops"">http://wiki.ros.org/pose_cov_ops</a></p>\n</div>\n\n            \n          </div>'"
nao_interaction,http://rosindex.github.io/r/nao_interaction/,"jade,indigo","nao_audio,nao_interaction,nao_interaction_launchers,nao_interaction_msgs,nao_vision","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nao_interaction"">nao_interaction</h1>\n\n<p>ROS stack for the Nao robot implementing NAOqi functionalities, see <a href=""http://www.ros.org/wiki/nao_interaction"">http://www.ros.org/wiki/nao_interaction</a></p>\n</div>\n\n            \n          </div>'"
swiftnav,http://rosindex.github.io/r/swiftnav/,"hydro,indigo",swiftnav,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""libswiftnav"">libswiftnav</h1>\n\n<p>libswiftnav is a platform independent library of GNSS related functions.\nThis library implements GNSS related functions and algorithms for use by\nsoftware-defined GNSS receivers and other software.</p>\n\n<p>It is intended to be as portable as possible and is written in standards\ncompliant C with no dependancies other than the standard C libraries.</p>\n\n<p>Full documentation available online at <a href=""http://docs.swift-nav.com/libswiftnav"">http://docs.swift-nav.com/libswiftnav</a></p>\n\n<p>For installation, see docs/install.dox</p>\n</div>\n\n            \n          </div>'"
lsd_slam,http://rosindex.github.io/r/lsd_slam/,indigo,"lsd_slam_core,lsd_slam_viewer","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""lsd-slam-large-scale-direct-monocular-slam"">LSD-SLAM: Large-Scale Direct Monocular SLAM</h1>\n\n<p>LSD-SLAM is a novel approach to real-time monocular SLAM. It is fully direct (i.e. does not use keypoints / features) and creates large-scale, \nsemi-dense maps in real-time on a laptop. For more information see\n<a href=""http://vision.in.tum.de/lsdslam"">http://vision.in.tum.de/lsdslam</a>\nwhere you can also find the corresponding publications and Youtube videos, as well as some \nexample-input datasets, and the generated output as rosbag or .ply point cloud.</p>\n\n<h3 id=""related-papers"">Related Papers</h3>\n\n<ul>\n<li><p><strong>LSD-SLAM: Large-Scale Direct Monocular SLAM</strong>, <em>J. Engel, T. Sch\xc3\xb6ps, D. Cremers</em>, ECCV \'14</p></li>\n<li><p><strong>Semi-Dense Visual Odometry for a Monocular Camera</strong>, <em>J. Engel, J. Sturm, D. Cremers</em>, ICCV \'13</p></li>\n</ul>\n\n<h1 id=""1-quickstart-minimal-setup"">1. Quickstart / Minimal Setup</h1>\n\n<p>First, install LSD-SLAM following 2.1 or 2.2, depending on your Ubuntu / ROS version. You don\'t need openFabMap for now.</p>\n\n<p>Download the <a href=""http://vmcremers8.informatik.tu-muenchen.de/lsd/LSD_room.bag.zip"">Room Example Sequence</a> and extract it.</p>\n\n<p>Launch the lsd_slam viewer:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    rosrun lsd_slam_viewer viewer\n</code></pre></div>\n<p>Launch the lsd_slam main ros node:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    rosrun lsd_slam_core live_slam image:=/image_raw camera_info:=/camera_info\n</code></pre></div>\n<p>Play the sequence:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    rosbag play ~/LSD_room.bag\n</code></pre></div>\n<p>You should see one window showing the current keyframe with color-coded depth (from live_slam), \nand one window showing the 3D map (from viewer). If for some reason the initialization fails \n(i.e., after ~5s the depth map still looks wrong), focus the depth map and hit \'r\' to re-initialize.</p>\n\n<h1 id=""2-installation"">2. Installation</h1>\n\n<p>We tested LSD-SLAM on two different system configurations, using Ubuntu 12.04 (Precise) and ROS fuerte, or Ubuntu 14.04 (trusty) and ROS indigo. Note that building without ROS is not supported, however ROS is only used for input and output, facilitating easy portability to other platforms.</p>\n\n<h2 id=""2-1-ros-fuerte-ubuntu-12-04"">2.1 ROS fuerte + Ubuntu 12.04</h2>\n\n<p>Install system dependencies:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-fuerte-libg2o liblapack-dev libblas-dev freeglut3-dev libqglviewer-qt4-dev libsuitesparse-dev libx11-dev\n</code></pre></div>\n<p>In your ROS package path, clone the repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/tum-vision/lsd_slam.git lsd_slam\n</code></pre></div>\n<p>Compile the two package by typing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosmake lsd_slam\n</code></pre></div>\n<h2 id=""2-2-ros-indigo-ubuntu-14-04"">2.2 ROS indigo + Ubuntu 14.04</h2>\n\n<p><strong>We do not use catkin, however fortunately old-fashioned CMake-builds are still possible with ROS indigo.</strong>\nFor this you need to create a rosbuild workspace (if you don\'t have one yet), using:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install python-rosinstall\nmkdir ~/rosbuild_ws\ncd ~/rosbuild_ws\nrosws init . /opt/ros/indigo\nmkdir package_dir\nrosws set ~/rosbuild_ws/package_dir -t .\necho ""source ~/rosbuild_ws/setup.bash"" &gt;&gt; ~/.bashrc\nbash\ncd package_dir\n</code></pre></div>\n<p>Install system dependencies:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-indigo-libg2o ros-indigo-cv-bridge liblapack-dev libblas-dev freeglut3-dev libqglviewer-dev libsuitesparse-dev libx11-dev\n</code></pre></div>\n<p>In your ROS package path, clone the repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/tum-vision/lsd_slam.git lsd_slam\n</code></pre></div>\n<p>Compile the two package by typing:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosmake lsd_slam\n</code></pre></div>\n<h2 id=""2-3-openfabmap-for-large-loop-closure-detection-optional"">2.3 openFabMap for large loop-closure detection [optional]</h2>\n\n<p>If you want to use openFABMAP for large loop closure detection, uncomment the following lines in <code>lsd_slam_core/CMakeLists.txt</code> :</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#add_subdirectory(${PROJECT_SOURCE_DIR}/thirdparty/openFabMap)\n#include_directories(${PROJECT_SOURCE_DIR}/thirdparty/openFabMap/include)\n#add_definitions(""-DHAVE_FABMAP"")\n#set(FABMAP_LIB openFABMAP )\n</code></pre></div>\n<p><strong>Note for Ubuntu 14.04:</strong> The packaged OpenCV for Ubuntu 14.04 does not include the nonfree module, which is required for openFabMap (which requires SURF features).\nYou need to get a full version of OpenCV with nonfree module, which is easiest by compiling your own version. \nWe suggest to use the <a href=""https://github.com/Itseez/opencv/releases/tag/2.4.8"">2.4.8</a> version, to assure compatibility with the current indigo open-cv package.</p>\n\n<h1 id=""3-usage"">3 Usage</h1>\n\n<p>LSD-SLAM is split into two ROS packages, <code>lsd_slam_core</code> and <code>lsd_slam_viewer</code>. <code>lsd_slam_core</code> contains the full SLAM system, whereas <code>lsd_slam_viewer</code> is optionally used for 3D visualization.\nPlease also read <strong>General Notes for good results</strong> below.</p>\n\n<h2 id=""3-1-lsd_slam_core"">3.1 <code>lsd_slam_core</code>\n</h2>\n\n<p>We provide two different usage modes, one meant for live-operation (<code>live_slam</code>) using ROS input/output, and one <code>dataset_slam</code> to use on datasets in the form of image files.</p>\n\n<h3 id=""3-1-1-using-live_slam"">3.1.1 Using <code>live_slam</code>\n</h3>\n\n<p>If you want to directly use a camera.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun lsd_slam_core live_slam /image:=&lt;yourstreamtopic&gt; /camera_info:=&lt;yourcamera_infotopic&gt;\n</code></pre></div>\n<p>When using ROS camera_info, only the image dimensions and the <code>K</code> matrix from the camera info messages will be used - hence the video has to be rectified.</p>\n\n<p>Alternatively, you can specify a calibration file using </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun lsd_slam_core live_slam /image:=&lt;yourstreamtopic&gt; _calib:=&lt;calibration_file&gt;\n</code></pre></div>\n<p>In this case, the camera_info topic is ignored, and images may also be radially distorted. See the Camera Calibration section for details on the calibration file format.</p>\n\n<h3 id=""3-1-2-using-dataset_slam"">3.1.2  Using <code>dataset_slam</code>\n</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun lsd_slam_core dataset_slam _files:=&lt;files&gt; _hz:=&lt;hz&gt; _calib:=&lt;calibration_file&gt;\n</code></pre></div>\n<p>Here, <code>&lt;files&gt;</code> can either be a folder containing image files (which will be sorted alphabetically), or a text file containing one image file per line. <code>&lt;hz&gt;</code> is the framerate at which the images are processed, and <code>&lt;calibration_file&gt;</code> the camera calibration file. </p>\n\n<p>Specify <code>_hz:=0</code> to enable sequential tracking and mapping, i.e. make sure that every frame is mapped properly. Note that while this typically will give best results, it can be much slower than real-time operation.</p>\n\n<h3 id=""3-1-3-camera-calibration"">3.1.3 Camera Calibration</h3>\n\n<p>LSD-SLAM operates on a pinhole camera model, however we give the option to undistort images before they are being used. You can find some sample calib files in <code>lsd_slam_core/calib</code>.</p>\n\n<h4 id=""calibration-file-for-fov-camera-model"">Calibration File for FOV camera model:</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fx/width fy/height cx/width cy/height d\nin_width in_height\n""crop"" / ""full"" / ""none"" / ""e1 e2 e3 e4 0""\nout_width out_height\n</code></pre></div>\n<p>Here, the values in the first line are the camera intrinsics and radial distortion parameter as given by the PTAM cameracalibrator, in_width and in_height is the input image size, and out_width out_height is the desired undistorted image size. The latter can be chosen freely, however 640x480 is recommended as explained in section 3.1.6. The third line specifies how the image is distorted, either by specifying a desired camera matrix in the same format as the first four intrinsic parameters, or by specifying ""crop"", which crops the image to maximal size while including only valid image pixels.</p>\n\n<h4 id=""calibration-file-for-pre-rectified-images"">Calibration File for Pre-Rectified Images</h4>\n\n<p>This one is without radial distortion correction, as a special case of ATAN camera model but without the computational cost:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fx/width fy/height cx/width cy/height 0\nwidth height\nnone\nwidth height\n</code></pre></div>\n<h4 id=""calibration-file-for-opencv-camera-model"">Calibration File for OpenCV camera model:</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">fx fy cx cy k1 k2 p1 p2\ninputWidth inputHeight\n""crop"" / ""full"" / ""none"" / ""e1 e2 e3 e4 0""\noutputWidth outputHeight\n</code></pre></div>\n<h3 id=""3-1-4-useful-hotkeys"">3.1.4 Useful Hotkeys</h3>\n\n<ul>\n<li><p><code>r</code>: Do a full reset</p></li>\n<li><p><code>d / e</code>: Cycle through debug displays (in particular color-coded variance and color-coded inverse depth).</p></li>\n<li><p><code>o</code>: Toggle on screen info display</p></li>\n<li><p><code>m</code>: Save current state of the map (depth &amp; variance) as images to <code>lsd_slam_core/save/</code></p></li>\n<li><p><code>p</code>: Brute-Force-Try to find new constraints. May improve the map by finding more constraints, but will block mapping for a while. </p></li>\n<li><p><code>l</code>: Manually indicate that tracking is lost: will stop tracking and mapping, and start the re-localizer.</p></li>\n</ul>\n\n<h3 id=""3-1-5-parameters-dynamic-reconfigure"">3.1.5 Parameters (Dynamic Reconfigure)</h3>\n\n<p>A number of things can be changed dynamically, using (for ROS fuerte)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun dynamic_reconfigure reconfigure_gui \n</code></pre></div>\n<p>or (for ROS indigo)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun rqt_reconfigure rqt_reconfigure\n</code></pre></div>\n<p>Parameters are split into two parts, ones that enable / disable various sorts of debug output in <code>/LSD_SLAM/Debug</code>, and ones that affect the actual algorithm, in <code>/LSD_SLAM</code>.\nNote that debug output options from <code>/LSD_SLAM/Debug</code> only work if lsd_slam_core is built with debug info, e.g. with <code>set(ROS_BUILD_TYPE RelWithDebInfo)</code>. </p>\n\n<ul>\n<li>\n<code>minUseGrad</code>: [double] Minimal absolute image gradient for a pixel to be used at all. Increase if your camera has large image noise, decrease if you have low image-noise and want to also exploit small gradients.</li>\n<li>\n<code>cameraPixelNoise</code>: [double] Image intensity noise used for e.g. tracking weight calculation. Should be set larger than the actual sensor-noise, to also account for noise originating from discretization / linear interpolation.</li>\n<li>\n<code>KFUsageWeight</code>: [double] Determines how often keyframes are taken, depending on the overlap to the current keyframe. Larger -&gt; more keyframes.</li>\n<li>\n<code>KFDistWeight</code>: [double] Determines how often keyframes are taken, depending on the distance to the current Keyframe. Larger -&gt; more keyframes.</li>\n<li>\n<code>doSLAM</code>: [bool] Toggle global mapping component on/off. Only takes effect after a reset.</li>\n<li>\n<code>doKFReActivation</code>: [bool] Toggle keyframe re-activation on/off: If close to an existing keyframe, re-activate it instead of creating a new one. If false, the map will continually grow even if the camera moves in a relatively constrained area; If false, the number of keyframes will not grow arbitrarily.</li>\n<li>\n<code>doMapping</code>: [bool] Toggle entire keyframe creating / update module on/off: If false, only tracking stays active, which will prevent rapid motion or moving objects from corrupting the map.</li>\n<li>\n<code>useFabMap</code>: [bool] Use openFABMAP to find large loop-closures. Only takes effect after a reset, and requires LSD-SLAM to be compiled with FabMap.</li>\n<li>\n<code>allowNegativeIdepths</code>: [bool] Allow idepth to be (slightly) negative to avoid introducing a bias for far-away points.</li>\n<li>\n<code>useSubpixelStereo</code>: [bool] Compute subpixel-accurate stereo disparity.</li>\n<li>\n<code>useAffineLightningEstimation</code>: [bool] EXPERIMENTAL: Correct for global affine intensity changes during tracking. Might help if you have problems with auto-exposure.</li>\n<li>\n<code>multiThreading</code>: [bool] Toggle multi-threading of depth map estimation. Disable for less CPU usage, but possibly slightly less quality.</li>\n<li>\n<code>maxLoopClosureCandidates</code>: [int] Maximal number of loop-closures that are tracked initially for each new keyframe.</li>\n<li>\n<code>loopclosureStrictness</code>: [double] Threshold on reciprocal loop-closure consistency check, to be added to the map. Larger -&gt; more (possibly wrong) loop-closures.</li>\n<li>\n<code>relocalizationTH</code>: [double] How good a relocalization-attempt has to be to be accepted. Larger -&gt; more strict.</li>\n<li>\n<code>depthSmoothingFactor</code>: [double] How much to smooth the depth map. Larger -&gt; less smoothing.</li>\n</ul>\n\n<p>Useful for debug output are:</p>\n\n<ul>\n<li>\n<code>plotStereoImages</code>: [bool] Plot searched stereo lines, and color-coded stereo-results. Nice visualization of what\'s going on, however drastically decreases mapping speed.</li>\n<li>\n<code>plotTracking</code>: [bool] Plot final tracking residual. Nice visualization of what\'s going on, however drastically decreases tracking speed.</li>\n<li>\n<code>continuousPCOutput</code>: [bool] Publish current keyframe\'s point cloud after each update, to be seen in the viewer. Nice visualization, however bad for performance and bandwidth.</li>\n</ul>\n\n<h3 id=""3-1-6-general-notes-for-good-results"">3.1.6 General Notes for Good Results</h3>\n\n<ul>\n<li>Use a <strong>global shutter</strong> camera. Using a rolling shutter will lead to inferior results.</li>\n<li>Use a lens with a <strong>wide field-of-view</strong> (we use a 130\xc2\xb0 fisheye lens).</li>\n<li>Use a <strong>high framerate</strong>, at least 30fps (depending on the movements speed of course). For our experiments, we used between 30 and 60 fps. </li>\n<li>We recommend an image resolution of <strong>640x480</strong>, significantly higher or lower resolutions may require some hard-coded parameters to be adapted.</li>\n<li>LSD-SLAM is a monocular SLAM system, and as such cannot estimate the absolute scale of the map. Further it requires <strong>sufficient camera translation</strong>: Rotating the camera without translating it at the same time will not work. Generally sideways motion is best - depending on the field of view of your camera, forwards / backwards motion is equally good. Rotation around the optical axis does not cause any problems.</li>\n<li>During initialization, it is best to move the camera in a circle parallel to the image without rotating it. The scene should contain sufficient structure (intensity gradient at different depths).</li>\n<li>\n<strong>Adjust</strong> <code>minUseGrad</code> <strong>and</strong> <code>cameraPixelNoise</code> to fit the sensor-noise and intensity contrast of your camera.</li>\n<li>If tracking / mapping quality is poor, try decreasing the keyframe thresholds <code>KFUsageWeight</code> and <code>KFDistWeight</code> slightly to generate more keyframes.</li>\n<li>Note that LSD-SLAM is very much non-deterministic, i.e. results will be different each time you run it on the same dataset. This is due to parallelism, and the fact that small changes regarding when keyframes are taken will have a huge impact on everything that follows afterwards.</li>\n</ul>\n\n<h2 id=""3-2-lsd-slam-viewer"">3.2 LSD-SLAM Viewer</h2>\n\n<p>The viewer is only for visualization. It can also be used to output a generated point cloud as .ply.\nFor live operation, start it using</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun lsd_slam_viewer viewer\n</code></pre></div>\n<p>You can use rosbag to record and re-play the output generated by certain trajectories. Record &amp; playback using</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosbag record /lsd_slam/graph /lsd_slam/keyframes /lsd_slam/liveframes -o file_pc.bag\nrosbag play file_pc.bag\n</code></pre></div>\n<p>You should never have to restart the viewer node, it resets the graph automatically.</p>\n\n<p>If you just want to lead a certain pointcloud from a .bag file into the viewer, you \ncan directly do that using </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun lsd_slam_viewer viewer file_pc.bag\n</code></pre></div>\n<h3 id=""3-2-1-useful-hotkeys"">3.2.1 Useful Hotkeys</h3>\n\n<ul>\n<li><p><code>r</code>: Reset, will clear all displayed data.</p></li>\n<li><p><code>w</code>: Print the number of points / currently displayed points / keyframes / constraints to the console.</p></li>\n<li><p><code>p</code>: Write currently displayed points as point cloud to file lsd_slam_viewer/pc.ply, which can be opened e.g. in meshlab. Use in combination with sparsityFactor to reduce the number of points.</p></li>\n</ul>\n\n<h3 id=""3-2-2-parameters-dynamic-reconfigure"">3.2.2 Parameters (Dynamic Reconfigure)</h3>\n\n<ul>\n<li>\n<code>showKFCameras</code>: Toggle drawing of blue keyframe camera-frustrums. min: False, default: True, max: True</li>\n<li>\n<code>showKFPointclouds</code>: Toggle drawing of point clouds for all keyframes. min: False, default: True, max: True</li>\n<li>\n<code>showConstraints</code>: Toggle drawing of red/green pose-graph constraints. min: False, default: True, max: True</li>\n<li>\n<code>showCurrentCamera</code>: Toggle drawing of red frustrum for the current camera pose. min: False, default: True, max: True</li>\n<li>\n<code>showCurrentPointcloud</code>: Toggle drawing of the latest point cloud added to the map. min: False, default: True, max: True</li>\n<li>\n<code>pointTesselation</code>: Size of points. min: 0.0, default: 1.0, max: 5.0</li>\n<li>\n<code>lineTesselation</code>: Width of lines. min: 0.0, default: 1.0, max: 5.0</li>\n<li>\n<code>scaledDepthVarTH</code>: log10 of threshold on point\'s variance, in the respective keyframe\'s scale. min: -10.0, default: -3.0, max: 1.0</li>\n<li>\n<code>absDepthVarTH</code>: log10 of threshold on point\'s variance, in absolute scale. min: -10.0, default: -1.0, max: 1.0</li>\n<li>\n<code>minNearSupport</code>: Only plot points that have #minNearSupport similar neighbours (higher values remove outliers). min: 0, default: 7, max: 9</li>\n<li>\n<code>cutFirstNKf</code>: Do not display the first #cutFirstNKf keyframe\'s point clouds, to remove artifacts left-over from the random initialization. min: 0, default: 5, max: 100</li>\n<li>\n<code>sparsifyFactor</code>: Only plot one out of #sparsifyFactor points, selected at random. Use this to significantly speed up rendering for large maps. min: 1, default: 1, max: 100</li>\n<li>\n<code>sceneRadius</code>: Defines near- and far clipping plane. Decrease to be able to zoom in more. min: 1, default: 80, max: 200</li>\n<li>\n<code>saveAllVideo</code>: Save all rendered images... only use if you know what you are doing. min: False, default: False, max: True</li>\n<li>\n<code>keepInMemory</code>: If set to false, the point cloud is only stored in OpenGL buffers, and not kept in RAM. This greatly reduces the required RAM for large maps, however also prohibits saving / dynamically changing sparsifyFactor and variance-thresholds. min: False, default: True, max: True</li>\n</ul>\n\n<h1 id=""4-datasets"">4 Datasets</h1>\n\n<p>For convenience we provide a number of datasets, including the video, lsd-slam\'s output and the generated point cloud as .ply. See\n<a href=""http://vision.in.tum.de/lsdslam"">http://vision.in.tum.de/lsdslam</a></p>\n\n<h1 id=""5-license"">5 License</h1>\n\n<p>LSD-SLAM is licensed under the GNU General Public License Version 3 (GPLv3), see <a href=""http://www.gnu.org/licenses/gpl.html"">http://www.gnu.org/licenses/gpl.html</a>.</p>\n\n<p>For commercial purposes, we also offer a professional version under different licencing terms.</p>\n\n<h1 id=""6-troubleshoot-faq"">6 Troubleshoot / FAQ</h1>\n\n<p><strong>How can I get the live-pointcloud in ROS to use with RVIZ?</strong></p>\n\n<p>You cannot, at least not on-line and in real-time. The reason is the following:</p>\n\n<p>In the background, LSD-SLAM continuously optimizes the pose-graph, i.e., the poses of all keyframes. Each time a keyframe\'s pose changes (which happens all the time, if only by a little bit), all points from this keyframe change their 3D position with it. Hence, you would have to continuously re-publish and re-compute the whole pointcloud (at 100k points per keyframe and up to 1000 keyframes for the longer sequences, that\'s 100 million points, i.e., ~1.6GB), which would crush real-time performance.</p>\n\n<p>Instead, this is solved in LSD-SLAM by publishing keyframes and their poses separately:\n- keyframeGraphMsg contains the updated pose of each keyframe, nothing else.\n- keyframeMsg contains one frame with it\'s pose, and - if it is a keyframe - it\'s points in the form of a depth map.</p>\n\n<p>Points are then always kept in their keyframe\'s coodinate system: That way, a keyframe\'s pose can be changed without even touching the points. In fact, in the viewer, the points in the keyframe\'s coodinate frame are moved to a GLBuffer immediately and never touched again - the only thing that changes is the pushed modelViewMatrix before rendering. </p>\n\n<p>Note that ""pose"" always refers to a Sim3 pose (7DoF, including scale) - which ROS doesn\'t even have a message type for.</p>\n\n<p>If you need some other way in which the map is published (e.g. publish the whole pointcloud as ROS standard message as a service), the easiest is to implement your own Output3DWrapper.</p>\n\n<p><strong>Tracking immediately diverges / I keep getting ""TRACKING LOST for frame 34 (0.00% good Points, which is -nan% of available points, DIVERGED)!""</strong>\n- double-check your camera calibration.\n- try more translational movement and less roational movement</p>\n</div>\n\n            \n          </div>'"
kingfisher,http://rosindex.github.io/r/kingfisher/,"hydro,indigo","kingfisher_description,kingfisher_msgs,kingfisher_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kingfisher"">kingfisher</h1>\n\n<p>Lightweight Kingfisher packages common to robot and desktop.</p>\n\n<p>Please see the ROS wiki for details on use: <a href=""http://wiki.ros.org/Robots/Kingfisher"">http://wiki.ros.org/Robots/Kingfisher</a></p>\n</div>\n\n            \n          </div>'"
reem_robot,http://rosindex.github.io/r/reem_robot/,"hydro,electric,fuerte,diamondback","reem_bringup,reem_controller_configuration,reem_description,reem_robot","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""reem_robot"">reem_robot</h1>\n\n<p>REEM-specific components that are used in bringing up a robot.</p>\n</div>\n\n            \n          </div>'"
ros_openlighting,http://rosindex.github.io/r/ros_openlighting/,indigo,"lighting_msgs,lighting_tools,ola_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""openlighting"">openlighting</h1>\n\n<p>A stack which provides easy access to entertainment lighting equipment. This package provides nodes for rendering images to DMX controlled light displays with support for pixel mapping. In addition there are drivers for common DMX moving lights and a simple animation frame for composing light shows.</p>\n</div>\n\n            \n          </div>'"
yujin_maps,http://rosindex.github.io/r/yujin_maps/,"hydro,groovy,indigo",yujin_maps,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""yujin_maps"">yujin_maps</h1>\n\n<p>Temporary storage for maps.</p>\n</div>\n\n            \n          </div>'"
grizzly_desktop,http://rosindex.github.io/r/grizzly_desktop/,"hydro,indigo","grizzly_desktop,grizzly_viz","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""grizzly_desktop"">grizzly_desktop</h1>\n\n<p>Desktop packages in support of Grizzly</p>\n</div>\n\n            \n          </div>'"
ira_photonfocus_driver,http://rosindex.github.io/r/ira_photonfocus_driver/,indigo,ira_photonfocus_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ira_photonfocus_driver"">ira_photonfocus_driver</h1>\n\n<p>ROS device driver for PhotonFocus cameras based on Pleora\xe2\x80\x99s eBUS\xe2\x84\xa2 Software Development Kit (SDK)</p>\n\n<h1 id=""requirements"">Requirements</h1>\n\n<ul>\n<li>Ubuntu 14.04 (or 12.04) x86_64</li>\n<li>ROS Indigo (or Hydro)</li>\n</ul>\n\n<h1 id=""ros-package-contents"">ROS Package contents</h1>\n\n<p>This ROS package contains:\n- the ROS node which acts as driver for the camera;\n- a utility for scanning the ethernet interface for connected cameras\n- a utility for changing the IP of a specified camera (the ip changes temporarly, camera boot sets it to default)</p>\n\n<h1 id=""faq"">FAQ</h1>\n\n<ul>\n<li>Does it work on 32bit architecture?\nIn order to make it work on 32bit architectures it should be sufficient to update the two symlink libudev.so.0 and libexpat.so.0 inside the folder ebus_sdk/lib and make them point to the 32bit version of the respective libraries. This can be done with the following commands within the folder of the package:</li>\n</ul>\n\n<p>for 32bit architecture:\nsudo ln -s /lib/i386-linux-gnu/libudev.so.1 ebus_sdk/lib/libudev.so.0\nsudo ln \xe2\x80\x93s /lib/i386-linux-gnu/libexpat.so.1 ebus_sdk/lib/libexpat.so.0</p>\n\n<p>for 64bit architecture [default]:\nsudo ln -s /lib/x86_64-linux-gnu/libudev.so.1 ebus_sdk/lib/libudev.so.0\nsudo ln \xe2\x80\x93s /lib/x86_64-linux-gnu/libexpat.so.1 ebus_sdk/lib/libexpat.so.0</p>\n\n<h1 id=""more-info"">More Info</h1>\n\n<p>Supported cameras         <a href=""http://www.photonfocus.com/"">http://www.photonfocus.com/</a>\nPleora\xe2\x80\x99s eBUS\xe2\x84\xa2 (SDK)      <a href=""http://www.pleora.com/our-products/ebus-sdk"">http://www.pleora.com/our-products/ebus-sdk</a></p>\n\n<p>This ROS driver uses the Pleora\xe2\x80\x99s eBUS\xe2\x84\xa2 SDK 4.0.6 for connecting and communicating with the camera devices.</p>\n\n<p>It has been tested with Photonfocus AG MV1-D1312-40-GB-12 cameras and both ROS Indigo (Ubuntu 14.04)\nand ROS Hydro (Ubuntu 13.10).</p>\n</div>\n\n            \n          </div>'"
openni_tracker,http://rosindex.github.io/r/openni_tracker/,"hydro,groovy,fuerte",openni_tracker,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""openni-tracker"">OpenNI Tracker</h1>\n\n<p>The OpenNI tracker broadcasts the OpenNI skeleton frames using tf.\nFor more information checkout the ROS Wiki: <a href=""http://ros.org/wiki/openni_tracker"">http://ros.org/wiki/openni_tracker</a></p>\n\n<h1 id=""nite-information"">NITE Information</h1>\n\n<p>The NITE library must be manually installed for openni_tracker to function.  The two versions that are compatible with this package are 1.5.2.21 and 1.5.2.23.</p>\n\n<p>NITE v1.5.2.23 can currently be downloaded from <a href=""http://www.openni.ru/openni-sdk/openni-sdk-history-2/"">http://www.openni.ru/openni-sdk/openni-sdk-history-2/</a></p>\n</div>\n\n            \n          </div>'"
retalis,http://rosindex.github.io/r/retalis/,hydro,retalis,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">/****\n    Retalis Language for Information Processing and Management in Autonomous Robot Software\n\n    Copyright (C) 2014 __Pouyan Ziafati__ pziafati@gmail.com __ \n    University of Luxembourg, Supported by the Fonds National de la Recherche, Luxembourg   \n\n    Retalis Integrates the ELE language of the complex event processing system ETALIS ( http://code.google.com/p/etalis )   \n\n\n    Retalis is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Retalis is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.                   \n\n    You should have received a copy of the GNU General Public License\n    along with Retalis.  If not, see &lt;http://www.gnu.org/licenses/&gt;.    \n****/\n\n\n\n\n*** Installation:\n\nStep 0: it is assumed that the ""retalis"" package has been downloaded to the ""catkin_ws/src"" folder\n\nStep 1: install OpenGL Mathematics (GLM)  \n    1- sudo apt-get install libglm-dev\n\nStep 2: install SWI-PL as a shared library\n    1- Download pl source code (6.2.2. for me) from http://www.swi-prolog.org/download/stable\n    2- Extract the tarball and edit the build.templ file as follows: \n        Set PREFIX=/usr\n        Set SUDO=""sudo""\n        Disable some library that might cause problem by uncommenting \n            export DISABLE_PKGS=""ssl  xpce zlib""\n        Uncomment the following\n            EXTRACFG+="" --enable-shared""\n\n    3- Run build.templ. (as root)\n    4- Make sure libswipl.so has been created. In my system, it is found at\n        /usr/lib/swipl-6.2.2/lib/i686-linux/libswipl.so\n\n\nStep 3: install Retalis as follows\n    1- In the CMakeLists.txt file, change ""/usr/lib/swipl-6.6.6/include"" and ""/usr/lib/swipl-6.6.6/lib/x86_64-linux"" to refer to the include and lib folders of your SWI-PL installtion, respectively\n    2- catkin_make (in your catkin workspace)\n    3- roscd retalis\n    4- In the install.py file, change \'/home/robolab/catkin_ws\' and \'/usr/lib/swipl-6.6.6/lib/x86_64-linux\' to refer to the catkin workspace and the lib folder of your SWI-PL installation, respectively\n    4- Run the install.py file as root (you might first need to make the install.py file executable by: sudo chmod +x install.py)\n\n\n\n\n\n\n\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
world_canvas_msgs,http://rosindex.github.io/r/world_canvas_msgs/,indigo,world_canvas_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""world_canvas_msgs"">world_canvas_msgs</h1>\n\n<p>Messages and services for the world canvas framework</p>\n</div>\n\n            \n          </div>'"
camera_umd,http://rosindex.github.io/r/camera_umd/,"hydro,fuerte,electric,groovy,diamondback,indigo","camera_umd,jpeg_streamer,uvc_camera,uvc_stereo","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""old-ros-webcam-drivers"">Old ROS Webcam Drivers</h1>\n\n<p>This repository contains <code>uvc_camera</code>, a Video4Linux-based webcam driver for ROS. It is <strong>deprecated</strong>,\nand it has been replaced by <a href=""https://github.com/ktossell/libuvc_ros"">libuvc_camera</a> (<a href=""http://wiki.ros.org/libuvc_camera"">wiki</a>), a cross-platform driver\nfor USB Video Class cameras. Please consider using <code>libuvc_camera</code> or another camera driver if your camera\nsupports the USB Video Class specification (as most webcams and several machine vision cameras do).</p>\n\n<p>Documentation for this package can be found at <a href=""http://wiki.ros.org/uvc_camera"">its wiki page</a>.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pal_vision_segmentation,http://rosindex.github.io/r/pal_vision_segmentation/,"hydro,fuerte",pal_vision_segmentation,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>=========</p>\n\n<p>Software package providing segmentation nodes based on various techniques. Masked image or mask is provided, and can be tuned via dynamic_reconfigure. More information can be found in <a href=""http://wiki.ros.org/pal_vision_segmentation"">http://wiki.ros.org/pal_vision_segmentation</a>. </p>\n\n<h3 id=""segmentation-based-on-color-histogram"">Segmentation based on color histogram</h3>\n\n<p>Hereafter an example based on images recorded in a rosbag is presented.</p>\n\n<h4 id=""play-the-rosbag"">Play the rosbag</h4>\n\n<p>Play the rosbag provided as example in pal_vision_segmentation:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosbag play `rospack find pal_vision_segmentation`/etc/pringles.bag --loop\n\n</code></pre></div>\n<p>which publishes images of a pringles pot:</p>\n\n<p><img src=""https://raw.github.com/pal-robotics/pal_vision_segmentation/hydro-devel/etc/pringles_example.png""></p>\n\n<h4 id=""object-template"">Object template</h4>\n\n<p>In order to segment the pringles pot based on its color an image template like the following one is required:</p>\n\n<p><img src=""https://raw.github.com/pal-robotics/pal_vision_segmentation/hydro-devel/etc/pringles_template.png""></p>\n\n<h4 id=""histogram_segmentation-node"">histogram_segmentation node</h4>\n\n<p>Launch the \'histogram_segmentation\' node as follows so that the appropriate object template is used:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun pal_vision_segmentation histogram_segmentation `rospack find pal_vision_segmentation`/etc/pringles_template.png image:=/stereo/left/image _dilate_iterations:=5 _erode_iterations:=1    \n\n</code></pre></div>\n<h4 id=""visualize-the-segmentation-mask"">Visualize the segmentation mask</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun image_view image_view image:=/histogram_segmentation/mask\n\n</code></pre></div>\n<p><img src=""https://raw.github.com/pal-robotics/pal_vision_segmentation/hydro-devel/etc/pringles_mask.png""></p>\n\n<h4 id=""visualize-the-segmented-image"">Visualize the segmented image:</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun image_view image_view image:=/histogram_segmentation/image_masked\n\n</code></pre></div>\n<p><img src=""https://raw.github.com/pal-robotics/pal_vision_segmentation/hydro-devel/etc/pringles_segmented.png""></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
reemc_simulation,http://rosindex.github.io/r/reemc_simulation/,"hydro,indigo","reemc_controller_configuration_gazebo,reemc_gazebo,reemc_hardware_gazebo,reemc_simulation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""reemc_simulation"">reemc_simulation</h1>\n\n<p>Packages for running REEM-C in the Gazebo simulator.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
head_tracking,http://rosindex.github.io/r/head_tracking/,"hydro,jade,groovy,indigo","head_pose_estimation,headmath,rosmouse","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">// Authors: Gabriele Fanelli, Thibaut Weise, Juergen Gall, BIWI, ETH Zurich\n// Email: fanelli@vision.ee.ethz.ch\n\n// You may use, copy, reproduce, and distribute this Software for any\n// non-commercial purpose, subject to the restrictions of the\n// Microsoft Research Shared Source license agreement (""MSR-SSLA"").\n// Some purposes which can be non-commercial are teaching, academic\n// research, public demonstrations and personal experimentation. You\n// may also distribute this Software with books or other teaching\n// materials, or publish the Software on websites, that are intended\n// to teach the use of the Software for academic or other\n// non-commercial purposes.\n// You may not use or distribute this Software or any derivative works\n// in any form for commercial purposes. Examples of commercial\n// purposes would be running business operations, licensing, leasing,\n// or selling the Software, distributing the Software for use with\n// commercial products, using the Software in the creation or use of\n// commercial products or any other activity which purpose is to\n// procure a commercial gain to you or others.\n// If the Software includes source code or data, you may create\n// derivative works of such portions of the Software and distribute\n// the modified Software for non-commercial purposes, as provided\n// herein.\n\n// THE SOFTWARE COMES ""AS IS"", WITH NO WARRANTIES. THIS MEANS NO\n// EXPRESS, IMPLIED OR STATUTORY WARRANTY, INCLUDING WITHOUT\n// LIMITATION, WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A\n// PARTICULAR PURPOSE, ANY WARRANTY AGAINST INTERFERENCE WITH YOUR\n// ENJOYMENT OF THE SOFTWARE OR ANY WARRANTY OF TITLE OR\n// NON-INFRINGEMENT. THERE IS NO WARRANTY THAT THIS SOFTWARE WILL\n// FULFILL ANY OF YOUR PARTICULAR PURPOSES OR NEEDS. ALSO, YOU MUST\n// PASS THIS DISCLAIMER ON WHENEVER YOU DISTRIBUTE THE SOFTWARE OR\n// DERIVATIVE WORKS.\n\n// NEITHER MICROSOFT NOR ANY CONTRIBUTOR TO THE SOFTWARE WILL BE\n// LIABLE FOR ANY DAMAGES RELATED TO THE SOFTWARE OR THIS MSR-SSLA,\n// INCLUDING DIRECT, INDIRECT, SPECIAL, CONSEQUENTIAL OR INCIDENTAL\n// DAMAGES, TO THE MAXIMUM EXTENT THE LAW PERMITS, NO MATTER WHAT\n// LEGAL THEORY IT IS BASED ON. ALSO, YOU MUST PASS THIS LIMITATION OF\n// LIABILITY ON WHENEVER YOU DISTRIBUTE THE SOFTWARE OR DERIVATIVE\n// WORKS.\n\n// When using this software, please acknowledge the effort that\n// went into development by referencing the paper:\n//\n// Fanelli G., Weise T., Gall J., Van Gool L., Real Time Head Pose Estimation from Consumer Depth Cameras\n// 33rd Annual Symposium of the German Association for Pattern Recognition (DAGM\'11), 2011\n\n13.10.2011: removed bug in CRForestEStimator::estimate (thanks to Cristobal Belles)\n\n\nThe actual code for head pose estimation is contained in the CR* files present in this folder. The main.cpp file shows an example use of the code on (compressed) depth images\nas the ones provided in the data/ folder.\nA forest is provided in the trees/ folder, which was trained on depth images of people turning theirs heads in front of the Kinect, sitting at around 1 m distance from the sensor;\ntherefore, the forest will give optimal results for similar scenarios. \n\nIn order to compile, OpenCV2.3 is required, please modify the CMakeLists.txt file according to your local OpenCV installation.\n\nTo run the example code, type ./head_pose_estimation config.txt data/frame_XXXX_depth.bin\nThe config.txt file contains all parameters needed for the head pose estimation, e.g., the path to the forest, the stride, and z threshold used to segment the person from the background.\nPlease note that a depth.cal file should be present in the same folder as the depth image.\n\nIn the ""code/"" folder, an additional example is provided which runs on a stream of depth images coming from a Kinect sensor. The demo requires\n(in addition to OpenCV), the OpenNI, freeglut, and OpenGL libraries.\nFor installing OpenNI on Ubuntu 11.4, I recommend using this tutorial \nhttp://tirokartblog.wordpress.com/2011/06/22/kinect-driver-and-samples-installation-on-ubuntu-11-04/\n\nTo run the demo, type ./head_pose_estimation_demo config.txt\n\n\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rtt_typelib,http://rosindex.github.io/r/rtt_typelib/,"hydro,indigo",rtt_typelib,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
v4r_ros,http://rosindex.github.io/r/v4r_ros/,hydro,"template,v4r_artoolkitplus,v4r_ellipses,v4r_laser_filter,v4r_laser_robot_calibration,v4r_msgs,v4r_opencv_cam,v4r_ros,v4r_uvc","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""v4r_ros"">v4r_ros</h1>\n</div>\n\n            \n          </div>'"
robot_web_tools,http://rosindex.github.io/r/robot_web_tools/,"hydro,jade,groovy,indigo",robot_web_tools,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_web_tools"">robot_web_tools <a href=""https://travis-ci.org/RobotWebTools/robot_web_tools""><img src=""https://api.travis-ci.org/RobotWebTools/robot_web_tools.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""robot-web-tools-metapackage-and-top-level-launch-files"">Robot Web Tools Metapackage and Top Level Launch Files</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/robot_web_tools"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/robot_web_tools/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<p>This project is released as part of the <a href=""http://robotwebtools.org/"">Robot Web Tools</a> effort.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>robot_web_tools is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
ros_web_video,http://rosindex.github.io/r/ros_web_video/,"hydro,groovy,indigo",ros_web_video,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""deprecation-notice"">DEPRECATION NOTICE</h2>\n\n<p>ros_web_video has been replaced by <a href=""https://github.com/RobotWebTools/web_video_server"">web_video_server</a>.</p>\n\n<h1 id=""ros_web_video"">ros_web_video <a href=""https://travis-ci.org/RobotWebTools/ros_web_video""><img src=""https://api.travis-ci.org/RobotWebTools/ros_web_video.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""streaming-of-ros-image-topics-via-http"">Streaming of ROS Image Topics via HTTP</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/ros_web_video"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/ros_web_video/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<p>This project is released as part of the <a href=""http://robotwebtools.org/"">Robot Web Tools</a> effort.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>ros_web_video is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
grasping_msgs,http://rosindex.github.io/r/grasping_msgs/,"hydro,jade,indigo",grasping_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kdl_wrapper,http://rosindex.github.io/r/kdl_wrapper/,"hydro,groovy",kdl_wrapper,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kdl_wrapper"">kdl_wrapper</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>C++ wrapper for easily using KDL kinematic solvers with robots defined in ROS through URDF files. Wraps the kdl and kdl_parser packages for generating KDL kinematic chains from URDF by just taking as inputs the IDs of the root and tip of the kinematic chain of a robot manipulator.</p>\n\n<p>It also initializes the following KDL solvers:\n - Inverse velocity solver (WDLS)\n - Forward joint to jacobian solver\n - Forward joint to pose solver\n - Forward joint to acceleration solver</p>\n\n<p>Requires the kdl_acc_solver package to be installed in the catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    git clone https://github.com/kth-ros-pkg/kdl_acc_solver.git\n</code></pre></div>\n<h2 id=""example-code"">Example code</h2>\n\n<p>You can run the example code under src/pr2_kdl_wrapper_example.cpp by doing the following:</p>\n\n<ol>\n<li>\n<p>Make sure you have the pr2_common metapackage:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install ros-&lt;rosdistro&gt;-pr2-common\n</code></pre></div>\n</li>\n<li>\n<p>Upload the PR2 URDF: </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch pr2_description upload_pr2.launch kinect:=TRUE\n</code></pre></div>\n</li>\n<li><p>Compile the <code>kdl_wrapper</code> package.</p></li>\n<li>\n<p>Run the pr2_kdl_wrapper_example :</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun kdl_wrapper pr2_kdl_wrapper_example\n</code></pre></div>\n</li>\n</ol>\n</div>\n\n            \n          </div>'"
mjpeg_server,http://rosindex.github.io/r/mjpeg_server/,"hydro,groovy,indigo",mjpeg_server,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""deprecation-notice"">DEPRECATION NOTICE</h2>\n\n<p>mjpeg_server has been replaced by <a href=""https://github.com/RobotWebTools/web_video_server"">web_video_server</a>.</p>\n\n<h1 id=""mjpeg_server"">mjpeg_server <a href=""https://travis-ci.org/RobotWebTools/mjpeg_server""><img src=""https://api.travis-ci.org/RobotWebTools/mjpeg_server.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""a-ros-node-to-stream-image-topics-via-a-mjpeg-server"">A ROS Node to Stream Image Topics Via a MJPEG Server</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/mjpeg_server"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/mjpeg_server/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<p>This project is released as part of the <a href=""http://robotwebtools.org/"">Robot Web Tools</a> effort.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>mjpeg_server is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
uos_slam,http://rosindex.github.io/r/uos_slam/,"hydro,fuerte,electric,groovy,diamondback,indigo",slam_exporter,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rqt_graphprofiler,http://rosindex.github.io/r/rqt_graphprofiler/,indigo,rqt_graphprofiler,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nasa_r2_simulator,http://rosindex.github.io/r/nasa_r2_simulator/,"hydro,groovy,fuerte,indigo","gazebo_gripper,gazebo_interface,gazebo_taskboard,nasa_r2_simulator,r2_controllers_ros,r2_gazebo,r2_controllers_gazebo","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""this-is-my-readme"">This is my README</h1>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nasa_r2_simulator"">nasa_r2_simulator</h1>\n\n<p>Wrappers, tools and additional API\'s for Gazebo simulation of NASA Second Generation Robonaut (R2).</p>\n\n<h3 id=""installation"">Installation</h3>\n\n<p><a href=""https://bitbucket.org/nasa_ros_pkg/nasa_r2_simulator/wiki/Home"">Installing nasa_r2_simulator</a></p>\n\n<h3 id=""documentation-and-tutorials"">Documentation and Tutorials</h3>\n\n<p><a href=""http://gazebosim.org/wiki/Tutorials"">Gazebo tutorials on gazebosim.org</a></p>\n\n<h3 id=""develop-and-contribute"">Develop and Contribute</h3>\n\n<p>See <a href=""https://bitbucket.org/nasa_ros_pkg/nasa_r2_simulator/issues?status=new&amp;status=open"">Contribute</a> page.</p>\n</div>\n\n            \n          </div>'"
prosilica_driver,http://rosindex.github.io/r/prosilica_driver/,"hydro,groovy,indigo","prosilica_camera,prosilica_gige_sdk","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""prosilica_driver"">prosilica_driver</h1>\n\n<p>Contains the ROS driver and the SDK for AVT/Prosilica cameras.</p>\n\n<p>This code was originally developed by Willow Garage and has been edited by Allison Thackston</p>\n\n<p>This software is released under a BSD license:</p>\n\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n\n<p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the Carnegie Mellon University nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_sith,http://rosindex.github.io/r/pr2_sith/,"hydro,groovy",pr2_sith,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
driver_common,http://rosindex.github.io/r/driver_common/,"hydro,fuerte,electric,groovy,jade,indigo","driver_base,driver_common,timestamp_tools","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cpp_introspection,http://rosindex.github.io/r/cpp_introspection/,"hydro,fuerte,groovy,jade,indigo",cpp_introspection,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ar_sys,http://rosindex.github.io/r/ar_sys/,"hydro,groovy,indigo",ar_sys,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ar_sys"">ar_sys</h1>\n\n<p>3D pose estimation ROS package using ArUco marker boards</p>\n\n<h2 id=""usage"">Usage:</h2>\n\n<ul>\n<li>roslaunch ar_sys single_board.launch</li>\n<li>roslaunch ar_sys multi-boards.launch</li>\n<li>roslaunch ar_sys system_viewer.launch</li>\n</ul>\n\n<h2 id=""wiki"">Wiki:</h2>\n\n<p>See <a href=""http://wiki.ros.org/ar_sys"">http://wiki.ros.org/ar_sys</a></p>\n</div>\n\n            \n          </div>'"
neato_robot,http://rosindex.github.io/r/neato_robot/,"hydro,groovy","neato_2dnav,neato_driver,neato_node,neato_robot","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""neato-drivers"">Neato Drivers</h2>\n\n<p>This repository contains the Neato ROS drivers, catkinized, and ready for ROS Groovy and newer.</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>You can check this out into your catin workspace as follows:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd &lt;ws&gt;/src\ngit clone https://github.com/mikeferguson/neato_robot.git\ncd &lt;ws&gt;\ncatkin_make\nsource &lt;ws&gt;/devel/setup.bash\n</code></pre></div>\n<h2 id=""changes-for-groovy-version-0-2-x"">Changes for Groovy (version 0.2.x)</h2>\n\n<ul>\n<li>2dnav_neato is now named neato_2dnav in order to comply with newer naming conventions.</li>\n<li>neato_driver directory structure is slightly changed to comply with catkin_python_setup requirements.</li>\n</ul>\n</div>\n\n            \n          </div>'"
rosprofiler,http://rosindex.github.io/r/rosprofiler/,indigo,rosprofiler,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosprofiler"">rosprofiler</h1>\n\n<p><a href=""https://travis-ci.org/osrf/rosprofiler""><img src=""https://travis-ci.org/osrf/rosprofiler.svg?branch=master"" alt=""Build Status""></a>\n<a href=""http://jenkins.ros.org/job/devel-indigo-rosprofiler/""><img src=""http://jenkins.ros.org/buildStatus/icon?job=devel-indigo-rosprofiler"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
camera_aravis,http://rosindex.github.io/r/camera_aravis/,hydro,camera_aravis,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">camera_aravis\n\nThis is a [ROS](http://ros.org) package for the [Aravis GigEVision\nlibrary](http://live.gnome.org/Aravis). It is open source, under the\nLGPL (like Aravis itself).\n\n\n------------------------\nThe basic command to run camera_aravis:\n\n    $ rosrun camera_aravis camnode\n\nTo run it in a given namespace, which is the better way to do it:\n\n    $ ROS_NAMESPACE=cam1 rosrun camera_aravis camnode\n\n\n------------------------\nThis ROS node publishes messages image_raw and camera_info for a specified camera.  It supports \na variety of camera features via the ROS reconfigure_gui, including the following:\n* ExposureAuto         (string: Off, Once, Continuous)\n* GainAuto             (string: Off, Once, Continuous)\n* ExposureTimeAbs      (float)\n* Gain                 (float)\n* AcquisitionMode      (string: Continuous, SingleFrame, MultiFrame)\n* AcquisitionFrameRate (float)\n* TriggerMode          (string: Off, On)\n* TriggerSource        (string: Software, Line1, Line2)\n* softwaretriggerrate  (float)\n* frame_id             (string)\n* FocusPos             (integer)\n* mtu                  (integer)\n\nNote that the above are also the ROS parameter names of their respective feature.  You may\nset initial values for the camera by setting ROS parameters in the camera\'s namespace.\n\nIn addition to the above features, this driver now supports (almost) every feature of every camera,\nyou just have to know how the feature is specified; each GenICam-based camera contains \nan XML file onboard, and by viewing this file you can determine which ROS parameters to set \nfor camera_aravis to write to the camera.  You can use arv-tool-0.2 to see the feature list \nand the XML file (e.g. ""arv-tool-0.2 --name=Basler-21285878 features"")\n\nNote that for this special feature access, the ROS parameter type must match the feature type. \nFor example, a Basler ac640 has a boolean feature called ""GammaEnable"", an integer feature \ncalled ""BlackLevelRaw"", and a string enum feature called ""PixelFormat"" that takes values \n(Mono8, Mono12, Mono12Packed, YUV422Packed, etc).  The ROS params that you set for these \nmust be, respectively, a bool, an integer and a string.  Also note that boolean features must \nbe specified as ROS params false/true, not as integer 0/1.\n\n    $ rosparam set cam1/GammaEnable false\n    $ rosparam set cam1/BlackLevelRaw 5\n    $ rosparam set cam1/PixelFormat Mono12\n    $ ROS_NAMESPACE=cam1 rosrun camera_aravis camnode\n\n\n------------------------\ncamera_aravis supports multiple cameras, each of which may be specified on the \ncommand-line, or via parameter.  Runs one camera per node.\n\nTo specify which camera to open, via the command-line:\n\n    $ ROS_NAMESPACE=cam1 rosrun camera_aravis camnode Basler-21237813\n\n\nTo specify which camera to open, via a parameter:\n\n    $ rosparam set cam1/guid Basler-21237813\n    $ ROS_NAMESPACE=cam1 rosrun camera_aravis camnode\n\n\n------------------------\nIt supports the dynamic_reconfigure protocol, and once the node is running, you may adjust \nits parameters by running the following and then manipulating the GUI:\n\n    $ rosrun dynamic_reconfigure reconfigure_gui\n\n\n------------------------\nThere is an additional nice feature related to timestamps that unifies ROS time with camera time.\nWe want a stable timestamp on the images that the camera delivers, giving a nice smooth time \ndelta from frame to frame.  If we were to use the ROS clock on the PC, by the time we get the \nimage packets from the camera a variable amount of time has passed on the PC\'s clock due to \nvariable network and system delays.  The camera\'s onboard clock is stable but it doesn\'t match \nwith the ROS clock on the PC, and furthermore since it comes from a different piece of hardware, \nthe two clock\'s rates are slightly different.\n\nThe solution is to start with a base of ROS time, and to accumulate the dt\'s from the camera clock.\nTo accomodate the difference in clock rates, a PID controller gently pulls the result toward \nROS time.\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
uwsim_bullet,http://rosindex.github.io/r/uwsim_bullet/,"hydro,jade,groovy,indigo",uwsim_bullet,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nBullet is a 3D Collision Detection and Rigid Body Dynamics Library for games and animation.\nFree for commercial use, including Playstation 3, open source under the ZLib License.\n\nSee the Bullet_User_Manual.pdf for more info and visit the Bullet Physics Forum at\nhttp://bulletphysics.org\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
turtlebot_arm,http://rosindex.github.io/r/turtlebot_arm/,"electric,groovy,fuerte,indigo","turtlebot_arm,turtlebot_arm_block_manipulation,turtlebot_arm_bringup,turtlebot_arm_description,turtlebot_arm_ikfast_plugin,turtlebot_arm_kinect_calibration,turtlebot_arm_moveit_config,turtlebot_arm_moveit_demos,turtlebot_block_manipulation,turtlebot_kinect_arm_calibration,turtlebot_arm_interactive_markers","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot-arm"">TurtleBot Arm</h1>\n\n<p>This is the catkin-ized and moveit-ed version of turtlebot arm. It\'s currently not on a TurtleBot:</p>\n\n<h2 id=""attaching-the-arm-to-a-robot"">Attaching the Arm to a Robot</h2>\n\n<p>Open your xacro-macro-magic URDF, and add something like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">   &lt;include filename=""$(find turtlebot_arm_description)/urdf/arm.xacro"" /&gt;\n   &lt;turtlebot_arm parent=""base_link"" color=""white"" gripper_color=""green""&gt;\n      &lt;origin xyz=""0 0 1""/&gt;\n    &lt;/turtlebot_arm&gt;\n</code></pre></div>\n<p>This will attach a turtlebot arm to your robot. Replace base_link with whatever link you want to attach to,\nand change the origin as needed.</p>\n\n<h2 id=""running-moveit"">Running MoveIt</h2>\n\n<p>I need to generate a .rosinstall file for this, currently you need to checkout moveit_core, moveit_ros,\nmoveit_plugins and arbotix_ros from source. That should be fixed with the next release.</p>\n\n<p>The turtlebot_arm_moveit_config/demo.launch is a bit wonky, but the move_group action underlying it works\nfine. Demo file coming shortly.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turtlebot-arm"">TurtleBot Arm</h1>\n\n<p>Indigo version of turtlebot arm code. It should easily work on Hydro, too. Package turtlebot_arm_moveit_demos provides use examples to start playing with the arm on MoveIt!, while the recovered on indigo turtlebot_arm_block_manipulation provides a more complete and interesting demo.</p>\n\n<h2 id=""attaching-the-arm-to-a-robot"">Attaching the Arm to a Robot</h2>\n\n<p>Open your xacro-macro-magic URDF, and add something like:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">   &lt;include filename=""$(find turtlebot_arm_description)/urdf/arm.xacro"" /&gt;\n   &lt;turtlebot_arm parent=""base_link"" color=""white"" gripper_color=""green""\n             joints_vlimit=""1.571"" pan_llimit=""-2.617"" pan_ulimit=""2.617""&gt;\n      &lt;origin xyz=""0 0 1""/&gt;\n    &lt;/turtlebot_arm&gt;\n</code></pre></div>\n<p>This will attach a turtlebot arm to your robot. Replace base_link with whatever link you want to attach to, and change the origin as needed. Apart from color, we can configure joints velocity limit and lower/upper limits for the first joint (arm_shoulder_pan) to allow accessing to different operational areas, e.g. left handed vs. right handed robot</p>\n\n<h2 id=""running-moveit"">Running MoveIt</h2>\n\n<p>Ensure you have all the required dependencies by running (you probably did it before compiling):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">   cd turtlebot_arm\n   rosdep install --from-paths -i -y src\n</code></pre></div>\n<p>Before start playing, I highly recommend to calibrate your camera extrinsic parameters following <a href=""http://wiki.ros.org/turtlebot_kinect_arm_calibration/Tutorials/CalibratingKinectToTurtleBotArm"">this tutorial</a></p>\n\n<p>The turtlebot_arm_moveit_config/demo.launch is a bit wonky, but the move_group action underlying it works fine. To test your installation, run one of the demos (well, demo by now) from turtlebot_arm_moveit_demos, e.g.:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">   rosrun turtlebot_arm_moveit_demos pick_and_place.py\n</code></pre></div>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
geographic_info,http://rosindex.github.io/r/geographic_info/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","geodesy,geographic_info,geographic_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""geographic_info-repository"">geographic_info repository</h1>\n\n<p>ROS messages and interfaces for mapping and coordinate conversions, part\nof the ROS Geographic Information project.</p>\n\n<blockquote>\n<ul>\n<li>  <a href=""http://en.wikipedia.org/wiki/Geographic_information_system"">http://en.wikipedia.org/wiki/Geographic_information_system</a>\n</li>\n</ul>\n</blockquote>\n\n<p><em>This API is experimental</em>.</p>\n\n<p>We need experience with it before promising not to change it. If changes\nare needed, we plan to provide a reasonable migration path.</p>\n\n<p>ROS documentation:</p>\n\n<blockquote>\n<ul>\n<li>  <a href=""http://wiki.ros.org/geographic_info"">http://wiki.ros.org/geographic_info</a>\n</li>\n<li>  <a href=""http://wiki.ros.org/geographic_msgs"">http://wiki.ros.org/geographic_msgs</a>\n</li>\n<li>  <a href=""http://wiki.ros.org/geodesy"">http://wiki.ros.org/geodesy</a>\n</li>\n</ul>\n</blockquote>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ml_classifiers,http://rosindex.github.io/r/ml_classifiers/,"groovy,fuerte,indigo",ml_classifiers,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Documentation for ml_classifiers\nPackage maintained by Scott Niekum\nsniekum@willowgarage.com\nsniekum@cs.umass.edu\n****************************************\n\n\nOVERVIEW\n---------\n\nThis package is a general, robot-agnostic implementation several machine learning algorithms for supervised classification.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
simulator_gazebo,http://rosindex.github.io/r/simulator_gazebo/,"hydro,fuerte,electric,groovy,diamondback","gazebo,gazebo_msgs,gazebo_plugins,gazebo_tests,gazebo_tools,gazebo_worlds","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""readme"">README</h1>\n\n<p>we should be using</p>\n\n<p><a href=""https://github.com/ros-simulation/gazebo_ros_pkgs"">https://github.com/ros-simulation/gazebo_ros_pkgs</a></p>\n\n<p>in place of this one.</p>\n\n<p>We should make sure local changes are moved to github repo and remove this repo to prevent confusion.</p>\n</div>\n\n            \n          </div>'"
xv_11_laser_driver,http://rosindex.github.io/r/xv_11_laser_driver/,"hydro,indigo",xv_11_laser_driver,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nav2_platform,http://rosindex.github.io/r/nav2_platform/,"hydro,indigo","nav2_bringup,nav2_driver,nav2_navigation,nav2_platform","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nav2_platform"">nav2_platform</h1>\n\n<p>ROS driver and launch/config files for the Crosswing Nav2 Mobile Base</p>\n\n<p><a href=""http://wiki.ros.org/nav2_platform"">http://wiki.ros.org/nav2_platform</a></p>\n</div>\n\n            \n          </div>'"
libvimba,http://rosindex.github.io/r/libvimba/,indigo,libvimba,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
imu_compass,http://rosindex.github.io/r/imu_compass/,"hydro,indigo",imu_compass,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""imu_compass"">imu_compass</h1>\n\n<p>Node to combine IMU data (accelerometers and gyroscopes) with Compass data (magnetometers) for a cleaner reading of a Vehicles Heading</p>\n</div>\n\n            \n          </div>'"
reem_simulation,http://rosindex.github.io/r/reem_simulation/,"hydro,electric,fuerte,diamondback","reem_2dnav_gazebo,reem_controller_configuration_gazebo,reem_gazebo,reem_hardware_gazebo,reem_simulation,reem_ogre","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""reem_simulation"">reem_simulation</h1>\n\n<p>Packages for running REEM in the Gazebo simulator.</p>\n\n<p>Steps to launch a simulation:</p>\n\n<ol>\n<li>install <code>ros-hydro-desktop-full</code>\n</li>\n<li>download <code>reem_robot</code> and <code>reem_simulation</code>\n</li>\n<li>launch a simulation of REEM in an empty world:</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">   roslaunch reem_gazebo reem_empty_world.launch\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
topic_proxy,http://rosindex.github.io/r/topic_proxy/,"hydro,jade,groovy,indigo","blob,topic_proxy","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""topic_proxy"">topic_proxy</h1>\n\n<p>topic_proxy implements a ROS service server and client to pull single messages from one master and optionally\nto republish them locally.</p>\n\n<p>The package provides three targets:</p>\n\n<ul>\n<li>A server node that runs on the foreign master (usually the robot) and serves requests from clients.</li>\n</ul>\n\n<p>The TCP connection manager binds to a fixed port so that the client does not have to lookup the connection\n  information at the foreign master (default port is 11322).</p>\n\n<p>Note: If you want to restart the server node you have to wait for approximately 1-2 minutes until the old\n  socket listener transitions from TIME_WAIT to CLOSED state. Otherwise you will get an ""Address already in use"" error.\n  The roscpp connection manager does not set the SO_REUSEADDR socket option. This problem is known as the ""TCP TIME_WAIT\n  problem"".</p>\n\n<ul>\n<li>A client library named libtopic_proxy.so.</li>\n</ul>\n\n<p>The client library provides a high-level class interface for getting and publishing messages from a server. The most\n  important public member functions are</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">    template &lt;class M&gt; boost::shared_ptr&lt;const M&gt; getMessage(string topic, Duration timeout, bool compressed);\n    template &lt;class M&gt; void publishMessage(M message, string topic, bool compressed);\n</code></pre></div>\n<p>which wrap the request into service calls.</p>\n\n<ul>\n<li>A client node that is built on top of the topic_proxy library and republishes or subscribes topics on the client side\non behalf of the server.</li>\n</ul>\n\n<p>The client can be configured either via the parameter server (see\n  <a href=""https://github.com/tu-darmstadt-ros-pkg/topic_proxy/blob/master/topic_proxy/launch/client.launch"">client.launch</a> file for a simple example)\n  or by using service calls to request single messages or to configure the subscribers and publishers.</p>\n\n<p>If you want to connect to multiple servers (robots), you can run multiple clients in different namespaces.</p>\n\n<h2 id=""services"">Services</h2>\n\n<h3 id=""server-side"">Server side:</h3>\n\n<ul>\n<li>\n<code>/get_message</code> (<a href=""https://github.com/tu-darmstadt-ros-pkg/topic_proxy/blob/master/topic_proxy/srv/GetMessage.srv"">topic_proxy/GetMessage</a>)</li>\n</ul>\n\n<p>Retrieve a single message from the server. The server will create a new subscriber if no one exists for the\n  specified topic.</p>\n\n<p>Request parameters:</p>\n\n<ul>\n<li>\n<code>string topic</code>:      Name of topic to subscribe at the server.</li>\n<li>\n<code>bool compressed</code>:   If true, the message instance in the response is compressed using bzip2 compression.</li>\n<li>\n<p><code>duration timeout</code>:  Time to wait for a new message, if no message has been received yet. If timeout is zero,\n                      the last received message is returned without waiting.</p>\n\n<ul>\n<li>\n<code>/publish_message</code> (<a href=""https://github.com/tu-darmstadt-ros-pkg/topic_proxy/blob/master/topic_proxy/srv/PublishMessage.srv"">topic_proxy/PublishMessage</a>)</li>\n</ul>\n</li>\n</ul>\n\n<p>Publish a message at the server. The server creates a new publisher if no one exists for the specified topic.</p>\n\n<p>Request parameters:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">* `MessageInstance message`:     The message instance to publish.\n* `bool latch`:                  If true, the topic will be latched.\n</code></pre></div>\n<h3 id=""client-side"">Client side:</h3>\n\n<ul>\n<li>\n<code>request_message</code> (<a href=""https://github.com/tu-darmstadt-ros-pkg/topic_proxy/blob/master/topic_proxy/srv/RequestMessage.srv"">topic_proxy/RequestMessage</a>)</li>\n</ul>\n\n<p>Adds a new publisher at the client side (or modify the properties of an existing one). The client internally\n  uses <code>/get_message</code> calls to retrieve messages from the server and republishes them locally.</p>\n\n<p>Request parameters:</p>\n\n<ul>\n<li>\n<code>string topic</code>:      Name of the topic to subscribe at the server. The local topic is prefixed by\n                      the value of the string parameter <code>topic_prefix</code> for the client.</li>\n<li>\n<code>bool compressed</code>:   see <code>/get_message</code>\n</li>\n<li>\n<code>duration timeout</code>:  see <code>/get_message</code>\n</li>\n<li>\n<code>duration interval</code>: If &gt;0, the client starts a timer to fetch messages periodically from the server.\n                      If =0, a single message is retrieved and published. The service call will block\n                      until the message is received and published.\n                      If &lt;=0 and there is an active timer for this topic, the timer will be stopped.</li>\n<li>\n<p><code>bool latch</code>:        If true, the topic will be latched locally.</p>\n\n<ul>\n<li>\n<code>add_publisher</code> (<a href=""https://github.com/tu-darmstadt-ros-pkg/topic_proxy/blob/master/topic_proxy/srv/AddPublisher.srv"">topic_proxy/AddPublisher</a>)</li>\n</ul>\n</li>\n</ul>\n\n<p>Adds a new subscriber at the client side. The client forwards each incoming message to the server using a\n  <code>/publish_message</code> call internally.</p>\n\n<p>Request parameters:</p>\n\n<ul>\n<li>\n<code>string topic</code>:       Name of the topic to advertise at the server. The local topic is prefixed by\n                      the value of the string parameter <code>topic_prefix</code> for the client.</li>\n<li>\n<code>bool compressed</code>:    If true, all outgoing messages will be transferred compressed using bzip2 compression.</li>\n<li>\n<code>bool latch</code>:         If true, the topic will be latched at the server.</li>\n</ul>\n\n<p>Note that you do not have to specify the message type. The first message that is reveived by the local subscriber\n  will specify the message type and create the publisher at the server side. The first message sent from the client\n  may therefore be missed by subscribers on the server side, as it takes some time for the connections to be\n  established after the new publisher is created.</p>\n\n<h2 id=""example"">Example</h2>\n\n<p>At the server:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic pub /chatter std_msgs/String ""hello"" -r 1 &amp;\nrosrun topic_proxy server\n</code></pre></div>\n<p>At the client:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ROS_NAMESPACE=client rosrun topic_proxy client [&lt;host&gt; [&lt;port&gt;]]\n</code></pre></div>\n<p>You have to use namespaces or the <code>topic_prefix</code> parameter if the client and server are using the same ROS master.</p>\n\n<p>Then request a message from the server using</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /client/request_message \'{ topic: chatter }\'\n</code></pre></div>\n<p>This will create a publisher on <code>/client/chatter</code> at the client and a subscriber on <code>/chatter</code> at the server. Only\none message is retrieved (interval parameter defaults to zero). If you want to poll the server periodically, specify\nan interval:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /client/request_message \'{ topic: chatter, interval: 1000000000 }\'   # polls once a second\n</code></pre></div>\n<p>You can now listen to the server\'s chatter topic at the client:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic echo /client/chatter\n</code></pre></div>\n<p>To publish a response, call the <code>add_publiher</code> server to create a local subscriber:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /client/add_publisher \'{ topic: chatter_response }\'\n</code></pre></div>\n<p>The server-side publisher will be created once a message is received from the client:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic pub /client/chatter_response std_msgs/String ""world"" -r 1 &amp;\n</code></pre></div>\n<p>The server will republish this message as <code>chatter</code> in his local namespace.</p>\n\n<p>See <a href=""https://github.com/tu-darmstadt-ros-pkg/topic_proxy/blob/master/topic_proxy/launch/client.launch"">client.launch</a> launch file in the topic_proxy package for a launch file example that does the same setup using\nROS parameters.</p>\n\n<h1 id=""blob_tools"">blob_tools</h1>\n\n<p>blob provides a new message type blob/Blob for binary data.</p>\n\n<p>Currently, only <a href=""http://www.ros.org/wiki/roscpp"">roscpp</a> is supported.\nOther client libraries like <a href=""http://www.ros.org/wiki/rospy"">rospy</a> will serialize/deserialize blob data as uint8[],\nas defined in the <a href=""https://github.com/tu-darmstadt-ros-pkg/topic_proxy/blob/master/blob/msg/Blob.msg"">message definition</a>.</p>\n\n<h2 id=""usage-example"">Usage Example</h2>\n\n<p>MyMessage.msg:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">blob/Blob map_blob      # a serialized (and compressed) nav_msgs/OccupancyGridMap\n</code></pre></div>\n<p>Publisher:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""p"">{</span><span class=""w"">\n    </span><span class=""err"">...</span><span class=""w"">\n    </span><span class=""err"">MyMessage</span><span class=""w""> </span><span class=""err"">temp;</span><span class=""w"">\n    </span><span class=""err"">nav_msgs::OccupancyGridMap</span><span class=""w""> </span><span class=""err"">my_map;</span><span class=""w"">\n    </span><span class=""err"">...</span><span class=""w"">\n    </span><span class=""err"">temp.map_blob.serialize(my_map);</span><span class=""w"">\n    </span><span class=""err"">temp.map_blob.setCompressed(true);</span><span class=""w""> </span><span class=""err"">//</span><span class=""w""> </span><span class=""err"">enable</span><span class=""w""> </span><span class=""err"">compression</span><span class=""w"">\n    </span><span class=""err"">...</span><span class=""w"">\n    </span><span class=""err"">publisher.publish(temp);</span><span class=""w"">\n</span><span class=""p"">}</span><span class=""w"">\n</span></code></pre></div>\n<p>Subscriber:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">void callback(const MyMessageConstPtr&amp; msg)\n{\n    // WARNING: instantiation of the ""wrong"" data type may result in non-sense data and/or StreamOverrunExceptions\n    // blob/Blob is not type-safe!\n    nav_msgs::OccupancyGridMapPtr my_map = msg-&gt;map_blob.instantiate&lt;nav_msgs::OccupancyGridMap&gt;();\n\n    if (my_map) {\n        ....\n    }\n}\n</code></pre></div>\n</div>\n\n            \n          </div>'"
ipa_canopen,http://rosindex.github.io/r/ipa_canopen/,"hydro,groovy","ipa_canopen,ipa_canopen_core,ipa_canopen_ros,ipa_canopen_ros_simple","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""status"">Status</h2>\n\n<p>CANopen is a high-level communication protocol which also standardizes the behavior of hardware in a number of so-called device profiles, allowing for vendor-independent control of devices.</p>\n\n<p>The IPA CANopen library is a C++ framework for communicating with CANopen motor devices. Most users will use the ROS (Robot Operating System) wrapper (ipa_canopen_ros) provided as part of this repository. However, the library itself (ipa_canopen_core) is completely independent from ROS and therefore can also be used in other contexts.</p>\n</div>\n\n            \n          </div>'"
vrmagic_drivers,http://rosindex.github.io/r/vrmagic_drivers/,hydro,vrmagic_ros_bridge_server,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""vrmagic_drivers"">vrmagic_drivers</h1>\n</div>\n\n            \n          </div>'"
rosh_desktop_plugins,http://rosindex.github.io/r/rosh_desktop_plugins/,"hydro,jade,indigo","rosh_desktop,rosh_desktop_plugins,rosh_visualization","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hrl_kinematics,http://rosindex.github.io/r/hrl_kinematics/,"hydro,groovy",hrl_kinematics,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""hrl_kinematics"">hrl_kinematics</h1>\n\n<p>ROS kinematics library for humanoid robots based on KDL: center of mass, (static) stability, and support polygon computations.</p>\n</div>\n\n            \n          </div>'"
ros_statistics_msgs,http://rosindex.github.io/r/ros_statistics_msgs/,indigo,ros_statistics_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_topology_msgs,http://rosindex.github.io/r/ros_topology_msgs/,indigo,ros_topology_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ur_kin_py,http://rosindex.github.io/r/ur_kin_py/,hydro,ur_kin_py,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ur_kin_py"">ur_kin_py</h1>\n\n<p>Python wrappers for ur_kinematics</p>\n</div>\n\n            \n          </div>'"
segwayrmp,http://rosindex.github.io/r/segwayrmp/,hydro,"rmp_base,rmp_description,rmp_msgs,rmp_teleop,segwayrmp","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">segwayrmp version 0.0.2 08/12/2014\n\nDescription:\nsegwayrmp provides a ROS interface to Segway Robotics Mobility Platforms. \nIt consists of different packages whose purpose is described below:\n  - rmp_base: controls the base and publishes sensor data and status related information \n  - rmp_teleop: provides a joystick interface to control the base\n  - rmp_description: provides a URDF (http://wiki.ros.org/urdf) description of the platform(s) \n  - rmp_msgs: defines RMP sepecific messages\n\nRequirements:\n  - ROS Hydro Medusa (http://wiki.ros.org/hydro) musts be installed \n\nInstallation:\n  - cd to the segwayrmp directory\n  - update your shell with your ros environment configuration: source /path/to/ros/install/setup.bash (typically /opt/ros/hydro/setup.bash)\n  - catkin_make install\n\nUsage:\n  - check that everything is properly connected :-)\n  - edit the launch files according to your rmp/joystick setup\n  - source the setup file from the install/devel directory, for example source install/setup.bash\n  - start the base node: roslaunch rmp_base rmp440le.launch\n  - start the joystick: roslaunch rmp_teleop joystick.launch\n\nCopyright:\nCopyright (C) 2014 SEGWAY Inc.\n\nLicense:\nPlease read LICENSE.txt\n\nContact:\nSRI International\nhttp://www.sri.com/\nthomas.decandia@sri.com\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rosh_robot_plugins,http://rosindex.github.io/r/rosh_robot_plugins/,"hydro,jade,indigo","rosh_common,rosh_geometry,rosh_robot,rosh_robot_plugins","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
urg_node,http://rosindex.github.io/r/urg_node/,"hydro,jade,groovy,indigo",urg_node,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""urg_node"">urg_node</h1>\n\n<p>ROS wrapper for the Hokuyo urg_c library.</p>\n</div>\n\n            \n          </div>'"
epos_driver,http://rosindex.github.io/r/epos_driver/,hydro,epos_driver,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sbpl,http://rosindex.github.io/r/sbpl/,"hydro,jade,electric,indigo",sbpl,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\nCompilation:\n\na) Under windows, SBPL can be compiled using a project inside sbpl\\win32_build\\test_vs2007. \n   This supports Visual Studio 7.0. Other projects in wind32_build directory may be\n   outdated and may therefore require you to add new .cpp files to the project.\n\n\nb) Under unix/linux, you can either \n b.1) run ""cmake CMakeLists.txt"" in sbpl\\cmake_build and then ""make"" in the same directory\n      (note: don\'t try to run cmake in sbpl. CMakeLists.txt file in there is for ROS make)\n      The binaries will be in the directory sbpl\\cmake_build\\bin\n b.2) or create your own makefile.\n\n\nc) For those using SBPL as part of ROS:\n\nYou can download the whole ROS package (see https://www.ros.org/wiki/ROS/Installation) and\n    just do ""rosmake sbpl"" within sbpl directory. The binaries will appear in sbpl\\bin directory\n\nUsage:\n\nExamples for how to use SBPL is in src/test/main.cpp. \nPlease follow the examples carefully - it will save you a lot of debugging time since currently there is no documentation available for the library. The library contains a number of planning problem examples, stored as ascii files. These files (with extension .cfg) should be passed in as arguments into the main function in main.cpp. The files can be found in env_examples directory.\n\nNote: in main function in main.cpp, you can comment and uncomment the planners you want to run.\nThe xytheta lattice planners require two arguments: cfg file and mprim file. The latter specifies the\nmotion primitives according to which the robot can move in x,y,theta. Motion primitives files can be found in sbpl/matlab/mprim directory\n\n\nFinally, few visualization scripts can be found in sbpl/matlab/visualization. In particular, plot_3Dpath.m function can be used to visualize the path found by xytheta lattice planner. This functions takes in .cfg file that specified environment and sol.txt file that was generated within main.cpp by xythetalattice planners.\n\nNote: when running a test_sbpl executable compiled using rosmake option, all the normal output is disabled. If you want to run sbpl in standalone mode (as opposed as calling from ROS node), then you should compile ROS (either in cmake_build for linux or win32_build for windows). Then, when you run test_sbpl executable, it will print out standard messages and generate solution file in sol.txt as well as debug.txt with some debug info.\n\nLinks:\nFor more information and documentation on SBPL visit:\nhttp://www.ros.org/wiki/sbpl\n\nFor more information and documentation on using the x,y,theta environment under ROS visit:\nhttp://www.ros.org/wiki/sbpl_lattice_planner\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\nCompilation:\n\na) Under windows, SBPL can be compiled using a project inside sbpl\\win32_build\\test_vs2007. \n   This supports Visual Studio 7.0. Other projects in wind32_build directory may be\n   outdated and may therefore require you to add new .cpp files to the project.\n\n\nb) Under unix/linux, you can either \n b.1) run ""cmake CMakeLists.txt"" in sbpl\\cmake_build and then ""make"" in the same directory\n      (note: don\'t try to run cmake in sbpl. CMakeLists.txt file in there is for ROS make)\n      The binaries will be in the directory sbpl\\cmake_build\\bin\n b.2) or create your own makefile.\n\n\nc) For those using SBPL as part of ROS:\n\nYou can download the whole ROS package (see https://www.ros.org/wiki/ROS/Installation) and\n    just do ""rosmake sbpl"" within sbpl directory. The binaries will appear in sbpl\\bin directory\n\n\nUsage:\n\nExamples for how to use SBPL is in src/test/main.cpp. \nPlease follow the examples carefully - it will save you a lot of debugging time since currently there is no documentation available for the library. The library contains a number of planning problem examples, stored as ascii files. These files (with extension .cfg) should be passed in as arguments into the main function in main.cpp. The files can be found in env_examples directory.\n\nNote: in main function in main.cpp, you can comment and uncomment the planners you want to run.\nThe xytheta lattice planners require two arguments: cfg file and mprim file. The latter specifies the\nmotion primitives according to which the robot can move in x,y,theta. Motion primitives files can be found in sbpl/matlab/mprim directory\n\n\nFinally, few visualization scripts can be found in sbpl/matlab/visualization. In particular, plot_3Dpath.m function can be used to visualize the path found by xytheta lattice planner. This functions takes in .cfg file that specified environment and sol.txt file that was generated within main.cpp by xythetalattice planners.\n\nNote: when running a test_sbpl executable compiled using rosmake option, all the normal output is disabled. If you want to run sbpl in standalone mode (as opposed as calling from ROS node), then you should compile ROS (either in cmake_build for linux or win32_build for windows). Then, when you run test_sbpl executable, it will print out standard messages and generate solution file in sol.txt as well as debug.txt with some debug info.\n\nLinks:\nFor more information and documentation on SBPL visit:\nhttp://www.ros.org/wiki/sbpl\n\nFor more information and documentation on using the x,y,theta environment under ROS visit:\nhttp://www.ros.org/wiki/sbpl_lattice_planner\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">I. Building, Installing, and Using SBPL\n\n    SBPL is available as a standalone software library. SBPL itself has no\n    dependencies other than the C/C++ standard library.\n\n    These build and install instructions are primarily for Linux. For other\n    operating systems, CMake can generate the platform-specific build and project\n    files necessary for building SBPL.\n\n    Versions of ROS older than Fuerte may contain packages that depend on a ROS\n    package version of SBPL. The recommended method to install SBPL is to install\n    it as a standard system library. However, if you wish to use the old ROS\n    package version of SBPL, you may follow these instructions.\n\n    1. Building and Installing SBPL from source\n\n        1.1 Build SBPL\n\n            SBPL uses git as its version control system. From the directory where\n            you want the SBPL source to reside, clone the latest source from\n            https://github.com/sbpl/sbpl:\n\n            git clone https://github.com/sbpl/sbpl.git\n\n            In the source directory, build the SBPL library using standard\n            CMake build conventions:\n\n            mkdir build\n            cd build\n            cmake ..\n            make\n\n        1.2 Install SBPL\n\n            Install the built library and headers onto your local system\n            (usually into /usr/local):\n\n            sudo make install\n\n    2. Installing SBPL from pre-built binary package\n\n        A pre-built Debian package exists on Linux for ROS distributions\n        Fuerte and newer. To install the Debian, run:\n\n        sudo apt-get install ros-distro-sbpl\n\n        where distro is the name of your ROS distribution. This will install\n        the SBPL library and associated development headers alongside other\n        ROS components (in /opt/ros/distro on Ubuntu distributions). A\n        pkg-config file is also included to allow you to locate the SBPL\n        library components in your build system.\n\n    3. Build your (ROS) package with SBPL as a dependency (CMake)\n\n        In the CMakeLists.txt for your (ROS) package, the following lines are\n        needed to find the installed SBPL files:\n\n        find_package(PkgConfig REQUIRED)\n        pkg_check_modules(SBPL REQUIRED sbpl)\n        include_directories(${SBPL_INCLUDE_DIRS})\n        link_directories(${SBPL_LIBRARY_DIRS})\n\n        Then, after you\'ve declared your binaries, you need to link them\n        against SBPL with the following line:\n\n        target_link_libraries(your-binary-here ${SBPL_LIBRARIES})\n\n    4. Installing and Using SBPL as a ROS package\n\n        The ROS package version of SBPL was deprecated with the release of ROS\n        Fuerte. However, packages in ROS Electric may still require the ROS\n        package version of SBPL.\n\n        4.1 Install SBPL\n\n            4.1.1 Source install\n\n                SBPL uses git as its version control system. From the\n                directory where you want the SBPL source to reside, clone the\n                latest source from https://github.com/sbpl/sbpl:\n\n                git clone https://github.com/sbpl/sbpl.git\n\n                In the source directory, checkout the electric branch of the\n                repository to revert to the old ROS package version:\n\n                git checkout -b electric\n\n                Ensure that SBPL is on your ROS_PACKAGE_PATH and type:\n\n                rosmake sbpl\n\n            4.1.2 Binary install\n\n                SBPL is also available as a pre-built Debian in ROS Electric.\n                To instal the Debian, run:\n\n                sudo apt-get install ros-electric-arm-navigation\n\n        4.2 Build your ROS package with SBPL as a depency (rosbuild)\n\n            In the manifest.xml for your package, you need to add the\n            following line to declare the SBPL package as a dependency:\n\n            &lt;depend package=""sbpl""/&gt;\n\nII. Usage\n\n    Examples for how to use SBPL are in src/test/main.cpp.  Please follow the\n    examples carefully. The library contains a number of planning problem\n    examples, stored as ascii files.  These files (with extension .cfg) should\n    be passed in as arguments into the main function in main.cpp. The files\n    can be found in env_examples directory.\n\n    Command-line usage for the test_sbpl program can be viewed by passing \'-h\'\n    as argument to the executable.\n\n    Motion primitives files can be found in sbpl/matlab/mprim directory.\n\n    Finally, few visualization scripts can be found in\n    sbpl/matlab/visualization. In particular, plot_3Dpath.m function can be\n    used to visualize the path found by xytheta lattice planner. This\n    functions takes in .cfg file that specified environment and sol.txt file\n    that was generated within main.cpp by xythetalattice planners.\n\n    Note: If you compile the library with the ROS symbol defined, all text\n    output will be redirected to ROS logging constructions. Without the ROS\n    symbol defined, SBPL will print messages to stdout and test_sbpl will\n    generate a solution file, sol.txt, as well as a debugging information\n    file, debug.txt\n\nIII. Links\n\n    These instructions and more tutorials can be found at www.sbpl.net\n\n    For more information and documentation on SBPL visit:\n\n    http://www.ros.org/wiki/sbpl\n\n    For more information and documentation on using the x,y,theta environment\n    available in ROS visit:\n\n    http://www.ros.org/wiki/sbpl_lattice_planner\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
wheeled_robin_apps,http://rosindex.github.io/r/wheeled_robin_apps/,hydro,"dt_local_planner,elevator,wheeled_robin_apps,wheeled_robin_core_apps,wheeled_robin_formation_drive,wheeled_robin_guided_tour,wheeled_robin_navigation,wheeled_robin_teleop","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
navigation_experimental,http://rosindex.github.io/r/navigation_experimental/,"hydro,electric,groovy,fuerte","assisted_teleop,eband_local_planner,goal_passer,navigation_experimental,pose_base_controller,pose_follower,sbpl_lattice_planner,sbpl_recovery,twist_recovery,isolated_point_filter","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nasa_r2_common,http://rosindex.github.io/r/nasa_r2_common/,hydro,"nasa_r2_common,r2_control,r2_description,r2_fullbody_moveit_config,r2_moveit_config,r2_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nasa_r2_common"">nasa_r2_common</h1>\n\n<p>ROS software for NASA Second Generation Robonaut (R2).</p>\n\n<h3 id=""installation"">Installation</h3>\n\n<p><a href=""https://bitbucket.org/nasa_ros_pkg/nasa_r2_common/wiki/Home"">Installing nasa_r2_common</a></p>\n\n<h3 id=""documentation-and-tutorials"">Documentation and Tutorials</h3>\n\n<p><a href=""https://bitbucket.org/nasa_ros_pkg/nasa_r2_common/wiki/Home"">nasa_r2_common</a></p>\n\n<h3 id=""develop-and-contribute"">Develop and Contribute</h3>\n\n<p>See <a href=""https://bitbucket.org/nasa_ros_pkg/nasa_r2_common/issues?status=new&amp;status=open"">Contribute</a> page.</p>\n</div>\n\n            \n          </div>'"
biotac_driver,http://rosindex.github.io/r/biotac_driver/,"hydro,groovy","biotac_driver,biotac_log_parser,biotac_logger,biotac_sensors,cheetah_lib,rosjson_time","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""biotac_driver"">biotac_driver</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Biotac low level driver and ROS nodes from UPenn\'s <code>biotac_stack</code> contained in the <strong>Penn-haptics-bolt</strong> repository (<a href=""https://github.com/IanTheEngineer/Penn-haptics-bolt.git"">https://github.com/IanTheEngineer/Penn-haptics-bolt.git</a>).</p>\n\n<p>The following instructions are from the README.md file in the <strong>Penn-haptics-bolt</strong> respository. For more details also look at the UPenn Haptics group\'s wiki page: <a href=""http://bolt-haptics.seas.upenn.edu/index.php/Main/HomePage"">http://bolt-haptics.seas.upenn.edu/index.php/Main/HomePage</a> </p>\n\n<h2 id=""installing"">Installing </h2>\n\n<h3 id=""cheetah-usb-rules"">Cheetah USB rules</h3>\n\n<p>In order to be able to read the Biotac data via the Cheetah SPI-USB board you first have to copy the udev rules</p>\n\n<ol>\n<li><p>Download the Cheetah SPI board drivers tp-usb-drivers-v2.10.zip from <a href=""http://www.totalphase.com/products/cheetah_spi/"">http://www.totalphase.com/products/cheetah_spi/</a></p></li>\n<li><p>Unzip the folder\nunzip tp-usb-drivers-v2.10.zip</p></li>\n<li><p>Copy the udev rules\nsudo cp tp-usb-drivers-v2.10/linux/99-totalphase.rules /etc/udev/rules.d/</p></li>\n</ol>\n\n<h3 id=""ros-package-installation"">ROS package installation</h3>\n\n<p>After copying the Cheetah udev rules you can download and compile the ROS package. Also make sure you have a working catkin workspace (look at the ROS tutorials).</p>\n\n<p>Download the package to the catkin workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src/\ngit clone -b &lt;ros_distro&gt; https://github.com/kth-ros-pkg/biotac_driver.git\n</code></pre></div>\n<p>Where <code>&lt;ros-distro&gt;</code> can be the <strong>groovy</strong> or <strong>hydro</strong> branch.</p>\n\n<p>Otherwise you can use ROS\'s <strong>wstool</strong>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src/\nwstool init\nwstool set biotac_driver --git https://github.com/kth-ros-pkg/biotac_driver.git -v &lt;ros_distro&gt;\nwstool update biotac_driver\n</code></pre></div>\n<p>Then compile the workspace:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws &amp;&amp; catkin_make\n</code></pre></div>\n<h2 id=""electrical-connections"">Electrical connections</h2>\n\n<p>(Try for this order, but it doesn\'t really matter)\n1. Plug the biotac sensors into the Multi-BioTac board</p>\n\n<ol>\n<li><p>Plug the +5V nano-USB cable into the MBTB and your computer\'s USB</p></li>\n<li><p>Plug the Cheetah\'s 10 pin ribbon cable into the MBTB</p></li>\n<li><p>Plug the Cheetah\'s USB into your computer\'s USB port</p></li>\n</ol>\n\n<h2 id=""running-the-ros-nodes"">Running the ROS nodes </h2>\n\n<ol>\n<li><p>To start reading the sensors\nrosrun biotac_sensors biotac_pub</p></li>\n<li><p>Check to make sure your sensors are working:\nrostopic echo biotac_pub</p></li>\n<li><p>Then to log some data in JSON form:\nrosrun biotac_logger biotac_json_logger.py <em>filename:=trial</em>001.json</p></li>\n</ol>\n\n<h2 id=""matlab-gui"">Matlab GUI </h2>\n\n<p>Please see the Penn Bolt Wiki for instructions on how to use the GUI</p>\n\n<p><a href=""http://bolt-haptics.seas.upenn.edu/index.php/Software/MatlabGUI"">http://bolt-haptics.seas.upenn.edu/index.php/Software/MatlabGUI</a></p>\n</div>\n\n            \n          </div>'"
korg_nanokontrol,http://rosindex.github.io/r/korg_nanokontrol/,"hydro,groovy,kinetic,jade,indigo",korg_nanokontrol,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""korg-nanokontrol"">Korg nanoKontrol</h2>\n\n<p>A Korg nanoKontrol driver for ROS, that exposes the buttons and sliders on the Korg nanoKontrol as a joystick.</p>\n\n<p>See <a href=""http://ros.org/wiki/korg_nanokontrol"">the wiki</a> for more information.</p>\n</div>\n\n            \n          </div>'"
prosilica_gige_sdk,http://rosindex.github.io/r/prosilica_gige_sdk/,"hydro,indigo",prosilica_gige_sdk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rwi_ros,http://rosindex.github.io/r/rwi_ros/,"hydro,groovy","b21_description,b21_teleop,ptu46,ptu_control,rflex,rwi_ros","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
google_glass_driver,http://rosindex.github.io/r/google_glass_driver/,hydro,google_glass_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Instructions for using google_glass_driver\n\nThis package contains a ROS node, google_glass_driver.py, which establishes a Bluetooth server and waits for a connection from a Google Glass device running the Robot Manager app.\n\nIn order to use this node, the Bluetooth library for python must be downloaded.\n\nThe library is pybluez and downloads and documentation can be found here: https://code.google.com/p/pybluez/\n\nTo install, use sudo apt-get install python-bluetooth or sudo apt-get install python-bluez\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
tedusar_manipulation,http://rosindex.github.io/r/tedusar_manipulation/,hydro,"tedusar_box_detection,tedusar_box_detection_msgs,tedusar_cartesian_arm_teleop,tedusar_cartesian_controller,tedusar_manipulation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
rosserial_leonardo_cmake,http://rosindex.github.io/r/rosserial_leonardo_cmake/,hydro,rosserial_leonardo_cmake,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosserial_leonardo_cmake"">rosserial_leonardo_cmake</h1>\n\n<p>Helps you build Atmega32U4 firmwares in a catkin package</p>\n</div>\n\n            \n          </div>'"
marble_plugin,http://rosindex.github.io/r/marble_plugin/,"hydro,groovy,fuerte",rqt_marble_plugin,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
shared_serial,http://rosindex.github.io/r/shared_serial/,"hydro,indigo",shared_serial,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
simple_robot_control,http://rosindex.github.io/r/simple_robot_control/,"hydro,groovy",simple_robot_control,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""simple_robot_control"">simple_robot_control</h1>\n\n<p>moving the simple_robot_control package from sourceforge to github. </p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""simple_robot_control"">simple_robot_control</h1>\n\n<p>Python and C++ libraries for easily controlling the PR2. </p>\n\n<p>Example code can be found in:</p>\n\n<ul>\n<li>src/test_app.cpp  (<code>rosrun simple_robot_control simple_robot_control_test</code>)</li>\n<li>simple_robot_control_example.ipynb (<code>ipython notebook</code>)</li>\n</ul>\n\n<p>Both assume that you\'re running:</p>\n\n<ul>\n<li>(PR2): roslaunch /etc/ros/robot.launch</li>\n<li>(anywhere): roslaunch simple_robot_control simple_robot_control.launch</li>\n</ul>\n\n<p>Notes:</p>\n\n<ul>\n<li>The hydro branch fixed inconsistent naming in some of the cpp functions - now ""To"" is always capitalized. </li>\n<li>The hydro branch does not actually implement specifying which planner to use for some of the arm_control functions that expect it.</li>\n</ul>\n</div>\n\n            \n          </div>'"
threemxl,http://rosindex.github.io/r/threemxl/,"hydro,indigo",threemxl,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
utilmm,http://rosindex.github.io/r/utilmm/,hydro,utilmm,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">/*! \\mainpage Util--: A C++ toolkit library\n\nUtil-- is a C++ toolkit library written by Sylvain Joyeux &lt;sylvain.joyeux@m4x.org&gt; and Frederic Py &lt;fpy@laas.fr&gt;\n\nCopyright 2003-2008 LAAS/CNRS &lt;openrobots@laas.fr&gt;\n\nThis software is provided under the CeCILL B License. This license provides is\nOSI-approved and provides terms of use comparable to the BSD license. See\nLICENSE.txt and LICENSE.fr.txt, provided with the sources, for the complete terms.\n\n\\section Installation\n\n\\subsection Getting the source code\nReleases are available on SourceForge: &lt;a\nhref=""http://sourceforge.net/projects/utilmm/""&gt;http://sourceforge.net/projects/utilmm/&lt;/a&gt;.\nYou can access this project page from anywhere in the documentation by clicking\non the SourceForge.net logo at the bottom of documentation pages.\n\nThe development repository is managed by git and is (for now) publicly available in GitHub:\n\n&lt;pre&gt;\n  git clone git://github.com/doudou/utilmm.git\n&lt;/pre&gt;\n\n(see &lt;a href=""http://github.com/doudou/""&gt;this page&lt;/a&gt; for more information)\n\n\\subsection Dependencies\n  - cmake and pkg-config\n  - Boost libraries: boost, boost/thread, boost/regex, boost/filesystem plus the boost/graph headers\n  - Boost/test to build the test suite\n  - Doxygen for the documentation\n\n\\subsection Installation instructions\n\nGo into the directory where the sources are installed and do\n\n&lt;pre&gt;\n   mkdir build\n   cd build\n   cmake ..\n   make\n   make doc\n&lt;/pre&gt;\n\nThen, as root,\n&lt;pre&gt;\n   make install\n&lt;/pre&gt;\n\nAlternatively, you can add the \\c -DCMAKE_INSTALL_PREFIX=path/to/the/installation/target option to cmake\nto install the files in a custom directory\n\n*/\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
zeroconf_msgs,http://rosindex.github.io/r/zeroconf_msgs/,"hydro,fuerte,groovy,kinetic,indigo",zeroconf_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""zeroconf_msgs"">zeroconf_msgs</h1>\n\n<p>Communciations for the ros zeroconf stacks.</p>\n</div>\n\n            \n          </div>'"
urdfdom,http://rosindex.github.io/r/urdfdom/,"hydro,electric,groovy,indigo","urdfdom,urdfdom_py,collada_parser,collada_urdf,colladadom,convex_decomposition,ivcon,kdl_parser,resource_retriever,robot_state_publisher,simmechanics_to_urdf,urdf,urdf_interface,urdf_parser","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">The URDF (U-Robot Description Format) library\n  provides core data structures and a simple XML parsers\n  for populating the class data structures from an URDF file.\n\nFor now, the details of the URDF specifications reside on\n  http://ros.org/wiki/urdf\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kdl_acc_solver,http://rosindex.github.io/r/kdl_acc_solver/,"hydro,groovy",kdl_acc_solver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""kdl_acc_solver"">kdl_acc_solver</h1>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>Recursive KDL solver from joint space to acceleration.</p>\n</div>\n\n            \n          </div>'"
urdfdom_headers,http://rosindex.github.io/r/urdfdom_headers/,"hydro,groovy,indigo",urdfdom_headers,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">The URDF (U-Robot Description Format) headers\n  provides core data structure headers for URDF.\n\nFor now, the details of the URDF specifications reside on\n  http://ros.org/wiki/urdf\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
gps_umd,http://rosindex.github.io/r/gps_umd/,"hydro,fuerte,electric,groovy,diamondback,indigo","gps_common,gps_umd,gpsd_client","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
object_recognition_clusters,http://rosindex.github.io/r/object_recognition_clusters/,hydro,object_recognition_clusters,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""object_recognition_clusters"">object_recognition_clusters</h1>\n\n<p>Package to contain nodes and modules for publishing and processing clusters within the Object Recognition Kitchen.</p>\n\n<p><img align=""right"" src=""https://raw.github.com/bmagyar/object_recognition_clusters/master/resource/reem_table_clusters_n_gazebo.png""></p>\n\n<h3 id=""modules"">Modules</h3>\n\n<h2 id=""ecto"">Ecto</h2>\n\n<ul>\n<li>io_clusters.PointCloudMsgAssembler that generates pointclouds based on a set of clusters</li>\n<li>ObjectClustersPublisher ecto plasm which connects to the tabletop pipeline with the PointCloudAssembler and publishes the</li>\n</ul>\n\n<h2 id=""python"">Python</h2>\n\n<ul>\n<li>object_recognition_clusters.ClusterBoundingBoxFinder which computes the pose of an object given it\'s point cluster using PCA</li>\n</ul>\n\n<h3 id=""nodes"">Nodes</h3>\n\n<ul>\n<li>clusters_to_pose that runs the clustering the python module, used mainly for testing and demonstration.</li>\n</ul>\n</div>\n\n            \n          </div>'"
mapstitch,http://rosindex.github.io/r/mapstitch/,"electric,groovy,fuerte,indigo",mapstitch,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">MapStitch - merge multiple 2D maps\n=================================\n\n This is a ROS component and a command line tool to align a map to a previously\nsaved 2D map. The previously saved map is assumed to have been created by the\nmap_saver ROS component. The implementation is based on opencvs\nestimateRigidTransform function, ORB feature extraction and matching the\ndistance of pairwise feature candidates.\n\nROS component\n=============\n\n The ROS component can be run with ""rosrun mapstitch ros_mapstitch"" and supports\nthree parameters:\n * max_distance, the treshold distance for filtering pairwise distances. Too\n   high does not filter any features and too low filter too much. This is the\n   pixel distance between matches in both maps, so should be set depending on\n   the resolution of your maps.\n * debug, set to true will save the current_stitch.pgm and current_map.pgm, i.e.\n   the stitchted maps and the current map as seen on /map.\n\n The component will listen on the /world topic for the OccupancyGrid-Map to\nalign the /map topic one to. At the moment no scaling is implemented, so the\nmaps need to have the same resolution. The transformation from /map to /world\nwill be published on the frame_ids given in the /map and /world topics.\n\n The node now listen to three topics:\n  /map    - publish the /map-&gt;/world (frame_ids) transform on update\n  /world  - receive the world map on this latched topic\n  /align  - receive the map used for alignment\n\n We have three topics to be able to publish two ""complete"" maps on /align and \n/world and calculate a ""static"" transform and then publish this transform \nwhenever something on /map keeps published (this is needed so the transform \ndoes not timeout).\n\nCommand Line Tool\n=================\n\n The command line tool can be run with bin/mapstitch and can be used to align\ntwo previosuly saved .pgm maps on each other. It is mainly meant for testing and\ndebugging. The Usage is\n\nbin/mapstitch  [-o &lt;string&gt;] [-v] [-d &lt;max-distance&gt;] [--] [--version]\n                  [-h] &lt;file1 and file2&gt; ...\n\n\nWhere:\n\n   -o &lt;string&gt;,  --outfile &lt;string&gt;\n     output filename\n\n   -v,  --verbose\n     verbose output\n\n   -d &lt;max-distance&gt;,  --maximum-distance &lt;max-distance&gt;\n     maximum distance on matched points pairs for inclusion\n\n   --,  --ignore_rest\n     Ignores the rest of the labeled arguments following this flag.\n\n   --version\n     Displays version information and exits.\n\n   -h,  --help\n     Displays usage information and exits.\n\n   &lt;file1 and file2&gt;  (accepted multiple times)\n     input file names (first one is pivot element)\n\n\n   Aligns multiple scan maps and combines into a single image. All images\n   given on the command line will be aligned to the first supplied image\n   and their respective rotation/translation and transformation matrix will\n   be returned.\n\n\n\nTODO\n----\n * check that world file and /map have the same resolution\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
cob_calibration,http://rosindex.github.io/r/cob_calibration/,"hydro,groovy,fuerte,indigo","cob_calibration,cob_calibration_config,cob_calibration_executive,cob_calibration_msgs,cob_calibration_urdf_update,cob_camera_calibration,cob_image_capture,cob_laser_calibration,cob_robot_calibration,cob_robot_calibration_est,cob_torso_calibration,urdf_parser_py,cob_calibration_srvs,contrast","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a repository for Care-O-bot calibration packages.\n\nDocumentation and tutorials can be found at http://ros.org/wiki/cob_calibration.\n\n</code></pre></div></div>\n\n            \n          </div>'"
sparse_bundle_adjustment,http://rosindex.github.io/r/sparse_bundle_adjustment/,"hydro,indigo",sparse_bundle_adjustment,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Sparse Bundle Adjustment Library\n================================\n\nOriginally developed at Willow Garage as part of the vslam stack.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
depthimage_to_laserscan,http://rosindex.github.io/r/depthimage_to_laserscan/,"hydro,fuerte,groovy,kinetic,jade,indigo",depthimage_to_laserscan,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""depthimage_to_laserscan"">depthimage_to_laserscan</h1>\n\n<p>Converts a depth image to a laser scan for use with navigation and localization.</p>\n\n<p>ROS Wiki Page:\n<a href=""http://www.ros.org/wiki/depthimage_to_laserscan"">http://www.ros.org/wiki/depthimage_to_laserscan</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""depthimage_to_laserscan"">depthimage_to_laserscan</h1>\n\n<p>Converts a depth image to a laser scan for use with navigation and localization.</p>\n</div>\n\n            \n          </div>'"
interactive_marker_proxy,http://rosindex.github.io/r/interactive_marker_proxy/,"hydro,jade,groovy,indigo",interactive_marker_proxy,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""interactive_marker_proxy"">interactive_marker_proxy <a href=""https://travis-ci.org/RobotWebTools/interactive_marker_proxy""><img src=""https://api.travis-ci.org/RobotWebTools/interactive_marker_proxy.png"" alt=""Build Status""></a>\n</h1>\n\n<h4 id=""a-proxy-server-for-interactive-markers"">A Proxy Server for Interactive Markers</h4>\n\n<p>For full documentation, see <a href=""http://ros.org/wiki/interactive_marker_proxy"">the ROS wiki</a>.</p>\n\n<p><a href=""http://docs.ros.org/indigo/api/interactive_marker_proxy/html/"">Doxygen</a> files can be found on the ROS wiki.</p>\n\n<p>This project is released as part of the <a href=""http://robotwebtools.org/"">Robot Web Tools</a> effort.</p>\n\n<h3 id=""license"">License</h3>\n\n<p>interactive_marker_proxy is released with a BSD license. For full terms and conditions, see the <a href=""LICENSE"">LICENSE</a> file.</p>\n\n<h3 id=""authors"">Authors</h3>\n\n<p>See the <a href=""AUTHORS.md"">AUTHORS</a> file for a full list of contributors.</p>\n</div>\n\n            \n          </div>'"
pepperl_fuchs,http://rosindex.github.io/r/pepperl_fuchs/,"hydro,groovy,indigo","dummy_slam_broadcaster,pepperl_fuchs_r2000","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pepperl-fuchs-r2000-driver"">Pepperl+Fuchs R2000 Driver</h1>\n\n<p>This is the documentation of a driver for the Pepperl+Fuchs OMD10M-R2000-B23 laser range finder.</p>\n\n<p>The driver is based upon the widespread boost asio library (<a href=""http://www.boost.org"">http://www.boost.org</a>)</p>\n\n<p>The driver comes as a library, which contains the actual driver, and has additionally a ROS-Node interface to the Robot Operating System (<a href=""http://www.ros.org"">http://www.ros.org</a>), which can be used optionally.</p>\n\n<h2 id=""sensor-information"">Sensor information</h2>\n\n<p><img src=""https://raw.githubusercontent.com/dillenberger/pepperl_fuchs/master/pepperl_fuchs_r2000/doxygen/r2000.jpg"" alt=""""></p>\n\n<p><em>""The new 2-dimensional laser range sensor operates using tried-and-tested Pulse Ranging Technology and boasts a range of unique features. For example, the device features a laser emitter with a visible red light. Users can see where the scanning level is and can align the device accordingly. Thanks to its classification in laser class 1, the device can be used in all workspaces, without posing a health hazard to people. The device has a measuring angle of 360\xc2\xb0 and boasts a measuring frequency of up to 250,000 individual measurements per second. Combined with a scanning frequency of up to 50 Hz, the device is extremely well suited to highspeed applications. Another feature is the display integrated in the lens aperture.""</em> (from the official datasheet with permission from Pepperl+Fuchs)</p>\n\n<p>Official Website: <a href=""http://www.pepperl-fuchs.com/global/en/classid_53.htm?view=productdetails&amp;prodid=43828#overview"">http://www.pepperl-fuchs.com/global/en/classid_53.htm?view=productdetails&amp;prodid=43828#overview</a></p>\n\n<p>Datasheet (en): <a href=""http://files.pepperl-fuchs.com/selector_files/navi/productInfo/edb/232934_eng.pdf"">http://files.pepperl-fuchs.com/selector_files/navi/productInfo/edb/232934_eng.pdf</a></p>\n\n<h2 id=""usage-with-ros"">Usage with ROS</h2>\n\n<p>The ROS package <code>pepperl_fuchs_r2000</code> consists of the driver library and a node named <code>r2000_node</code>, which is linked to the library. This is the actual driver node. The <code>dummy_slam_broadcaster</code> is only needed if you want to display the sensors data using the QuickStart method mentioned below.</p>\n\n<h3 id=""published-topics"">Published Topics</h3>\n\n<ul>\n<li>\n<code>scan</code> (sensor_msgs/Laserscan) A standard ROS Laserscan message containing the measured data. The message rate per second depends on the <code>scan_frequency</code> parameter.</li>\n</ul>\n\n<h3 id=""parameters"">Parameters</h3>\n\n<ul>\n<li>\n<code>frame_id</code> The frame-ID in the Header of the published <code>sensor_msgs/Laserscan2</code> messages</li>\n<li>\n<code>scanner_ip</code> IP or hostname of the laserscanner</li>\n<li>\n<code>scan_frequency</code> The scan frequency (rotation speed of scanner head) in Hz in the range [10;50]</li>\n<li>\n<code>samples_per_scan</code> The number of distances measured per scan/rotation in the range [72;25200]. Only certain values are allowed (see Manual). Examples are 72, 360, 720, 1440, 1800, 3600, 7200, 10080, 25200.</li>\n</ul>\n\n<h3 id=""quick-start"">Quick Start</h3>\n\n<p>Copy the driver in your ROS workspace and compile it.\nSet the IP-Address of the scanner in <code>pepperl_fuchs_r2000/launch/gui_example.launch</code> and run the following command:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch pepperl_fuchs_r2000 gui_example.launch\n</code></pre></div>\n<p>This starts <code>RViz</code> (<a href=""http://wiki.ros.org/rviz"">http://wiki.ros.org/rviz</a>) and the driver and you should see the measuring output of the scanner.</p>\n\n<h2 id=""basic-usage-without-ros"">Basic usage without ROS</h2>\n\n<p>There exists a file <code>CMakeLists.txt.NO_ROS_LIB_ONLY</code> in the <code>pepperl_fuchs_r2000</code> directory.\nReplace <code>CMakeLists.txt</code> with it to compile the driver without ROS:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ cd pepperl_fuchs_r2000\n$ mv CMakeLists.txt.NO_ROS_LIB_ONLY CMakeLists.txt\n$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n</code></pre></div>\n<p>This builds a SHARED library which can be used in your program. \nTo build a static library remove the <code>SHARED</code> in the <code>add_library</code> command in the <code>CMakeLists.txt</code>.</p>\n\n<h3 id=""the-basic-usage-of-the-driver-library-code-c-11-style-is-as-follows"">The basic usage of the driver library code (C++11 style) is as follows:</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">#include &lt;pepperl_fuchs_r2000/r2000_driver.h&gt;\n\nint main(int argc, char **argv)\n{\n  bool success;\n\n  pepperl_fuchs::R2000Driver driver;\n  success = driver.connect(""192.168.0.100""); // Replace IP\n  success = driver.setScanFrequency(35);     // Set scanner frequency in the range [10;50]\n  success = driver.setSamplesPerScan(3600);  // Set samples per scan in the range [72,25200] (valid values are listed in manual)\n\n  auto params = driver.getParameters();      // Get all parameter values as std::map&lt;string, string&gt;\n  for( auto key_value : params )\n  { Do something with the parameter values }\n\n  success = driver.startCapturingUDP();      // Notice: startCapturingTCP() also exists\n\n  while(true)\n  {\n      pepperl_fuchs::ScanData  scandata = driver.getFullScan(); // Do something with:\n      scandata.headers;                                         // headers,\n      scandata.distance_data;                                   // distances and\n      scandata.amplitude_data;                                  // amplitudes\n  }\n\n  driver.stopCapturing();\n  driver.disconnect();\n}\n</code></pre></div>\n<h2 id=""more-documentation"">More documentation</h2>\n\n<p>The driver is commented in doxygen style. \nYou can create a latex and html documentation in the <code>pepperl_fuchs_r2000/doxygen</code> directory \nby entering the following command in the <code>pepperl_fuchs_r2000</code> directory:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ doxygen doxygen.conf\n</code></pre></div>\n</div>\n\n            \n          </div>'"
rqt_capabilities,http://rosindex.github.io/r/rqt_capabilities/,"hydro,groovy,indigo",rqt_capabilities,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rqt_capabilities"">rqt_capabilities</h1>\n\n<p>rqt plugin for managing capabilities</p>\n</div>\n\n            \n          </div>'"
lizi_robot,http://rosindex.github.io/r/lizi_robot/,hydro,"lizi,lizi_arduino,lizi_base_station,lizi_robot,lizi_urdf","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>For robot operation details see the LiziManual_V1.3.pdf</p>\n\n<p>For ROS support: <a href=""http://wiki.ros.org/lizi_robot"">http://wiki.ros.org/lizi_robot</a></p>\n</div>\n\n            \n          </div>'"
hokuyo_node,http://rosindex.github.io/r/hokuyo_node/,"hydro,fuerte,electric,groovy,jade,indigo",hokuyo_node,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
concert_scheduling,http://rosindex.github.io/r/concert_scheduling/,"hydro,indigo","concert_resource_pool,concert_scheduler_requests,concert_scheduling,concert_simple_scheduler","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""concert_scheduling"">concert_scheduling</h1>\n\n<p>Scheduler support packages for the <a href=""http://www.robotconcert.org/wiki/Main_Page"">Robotics in\nConcert</a> project.</p>\n\n<p><em>These packages are still in development.</em></p>\n\n<p>Because different systems require different scheduling policies, the\nROCON design allows for multiple scheduler implementations. These ROS\npackages provide some common infrastructure, written in Python, for\nvarious scheduler implementations to use or modify.</p>\n\n<p>It also includes an example scheduler, which uses that infrastructure to\ncreate a simple fixed-priority, first-come-first-served implementation,\nprobably the simplest scheduler one could actually run.</p>\n\n<p>Links to documentation:</p>\n\n<blockquote>\n<ul>\n<li>  <a href=""http://wiki.ros.org/concert_resource_pool"">concert_resource_pool</a>\ninterfaces for handling a pool of scheduler resources</li>\n<li>  <a href=""http://wiki.ros.org/concert_scheduler_requests"">concert_scheduler_requests</a>\ninterfaces for making and handling scheduler requests</li>\n<li>  <a href=""http://wiki.ros.org/concert_simple_scheduler"">concert_simple_scheduler</a>\na simple fixed-priority scheduler</li>\n</ul>\n</blockquote>\n</div>\n\n            \n          </div>'"
razer_hydra,http://rosindex.github.io/r/razer_hydra/,"hydro,groovy,fuerte,indigo",razer_hydra,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""razer_hydra"">razer_hydra</h1>\n\n<p>ROS package for razer hydra motion controller. \nThis is an unofficial driver which does NOT use the official Sixense SDK.</p>\n\n<p>See documentation on the ros wiki: <a href=""http://www.ros.org/wiki/razer_hydra"">http://www.ros.org/wiki/razer_hydra</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""razer-hydra-ros"">razer-hydra-ros</h1>\n\n<p>ROS package for razer hydra motion controller</p>\n</div>\n\n            \n          </div>'"
rviz_fixed_view_controller,http://rosindex.github.io/r/rviz_fixed_view_controller/,"hydro,indigo",rviz_fixed_view_controller,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rviz_fixed_view_controller"">rviz_fixed_view_controller</h1>\n\n<p>A simple view controller that follows a TF frame.</p>\n</div>\n\n            \n          </div>'"
tum_ardrone,http://rosindex.github.io/r/tum_ardrone/,"hydro,groovy,fuerte,indigo",tum_ardrone,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">------------ camera calibration: -----------------------\n- front, old drone: 0.672049, 0.899033, 0.502065, 0.513876, 0.271972\n- front, new drone: 0.771557, 1.368560, 0.552779, 0.444056, 1.156010\n\ncalibrate with ethzasl_ptam.\nto work with colored images, in src/CameraCalibrator.cc change:\n- add #include &lt;cv_bridge/cv_bridge.h&gt;\n- change function imageCallback(...) to\nvoid CameraCalibrator::imageCallback(const sensor_msgs::ImageConstPtr &amp; img)\n{\n    cv_bridge::CvImagePtr cv_ptr = cv_bridge::toCvCopy(img, sensor_msgs::image_encodings::MONO8);\n\n    if(mCurrentImage.size().x != img-&gt;width || mCurrentImage.size().y != img-&gt;height)\n        mCurrentImage.resize(CVD::ImageRef(img-&gt;width, img-&gt;height));\n\n    memcpy(mCurrentImage.data(),cv_ptr-&gt;image.data,img-&gt;width * img-&gt;height);\n\n    mNewImage = true;\n}\n\n\n\n------------ Parameters: c1 to c8 -----------------------------\ncan be estimated easily by \n- recording a flight: rosbag record -O calibFlight.bag /ardrone/image_raw /ardrone/navdata /cmd_vel\n- playing back that flight: rosbag play -l calibFlight.bag\n- starting two stateestimation nodes, one with remapped name and output:\n  - rosrun tum_ardrone drone_stateestimation __name:=drone_stateestimationn2 /ardrone/predictedPose:=/ardrone/predictedPose2\n  - rosrun tum_ardrone drone_stateestimation\n- plotting the respective estimated values\n  - e.g.: rxplot /ardrone/predictedPose/dx,/ardrone/predictedPose2/dx\n- using dynamic reconfigure to \n  - in drone_stateestimation2, use only control gains\n  - in drone_stateestimation, use NO control gains, but instead navdata / speeds / PTAM.\n- setting c_i in drone_stateestimation2 such that graphs match best (play around).\n\n\n\n\n------------ Parameters: PID control -----------------------------\napproximate in ""simulation"" based on c1 to c8:\n- play back any record, to make stateestimation run (dont play /cmd_vel)\n  - rosbag play -l calibFlightZ.bag --topics /ardrone/image_raw /ardrone/navdata\n- run stateestimation, in dynamic reconfigure set only control updates to be used\n- run gui and autopilot, and control\n- plot control / respective pose e.g. with \n  - rxplot /ardrone/predictedPose/yaw /cmd_vel/angular/z\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""package-tum_ardrone"">Package tum_ardrone</h1>\n\n<p>This package contains the implementation corresponding to the following publications:</p>\n\n<ul>\n<li>\n<a href=""https://vision.in.tum.de/_media/spezial/bib/engel14ras.pdf"">Scale-Aware Navigation of a Low-Cost Quadrocopter with a Monocular Camera</a> (J. Engel, J. Sturm, D. Cremers)</li>\n<li>\n<a href=""https://vision.in.tum.de/_media/spezial/bib/engel12iros.pdf"">Camera-Based Navigation of a Low-Cost Quadrocopter</a> (J. Engel, J. Sturm, D. Cremers)</li>\n<li>\n<a href=""https://vision.in.tum.de/_media/spezial/bib/engel12vicomor.pdf"">Accurate Figure Flying with a Quadrocopter Using Onboard Visual and Inertial Sensing</a> (J. Engel, J. Sturm, D. Cremers) </li>\n</ul>\n\n<p>You can find a <a href=""https://www.youtube.com/watch?feature=player_embedded&amp;v=eznMokFQmpc"">video</a> on <em>youtube</em>.\nThis Package builds on the well known monocular SLAM framework PTAM presented by Klein &amp; Murray in their paper at ISMAR07. Please study the original PTAM website and the corresponding paper for more information on this part of the software. Also, be aware of the license that comes with it. </p>\n\n<p>The code works for both the AR.Drone 1.0 and 2.0, the default-parameters however are optimized for the AR.Drone 2.0 by now.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<h3 id=""with-catkin"">with catkin</h3>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash""><span class=""nb"">cd </span>catkin_ws/src\ngit clone https://github.com/tum-vision/tum_ardrone.git -b hydro-devel\n<span class=""nb"">cd</span> ..\nrosdep install tum_ardrone\ncatkin_make\n\n</code></pre></div>\n<h2 id=""quick-start"">Quick start</h2>\n\n<h4 id=""launch-the-nodes"">Launch the nodes</h4>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">roslaunch tum_ardrone ardrone_driver.launch\nroslaunch tum_ardrone tum_ardrone.launch\n\n</code></pre></div>\n<h4 id=""check-status"">Check status</h4>\n\n<p>On the GUI, under Drone Communication Status, you should see:\n- Drone Navdata: XHz (X &gt; 100)\n- Pose Estimates: 33Hz</p>\n\n<h4 id=""keyboard-control"">Keyboard control</h4>\n\n<ul>\n<li>focus drone_gui window</li>\n<li>press ESC to activate KB control</li>\n<li>fly around with KB (see <a href=""#drone_gui"">drone_gui</a> for key assignments)</li>\n</ul>\n\n<h4 id=""joystick-control"">Joystick control</h4>\n\n<ul>\n<li>rosrun joy joy_node</li>\n<li>press PS button on controller to activate it</li>\n<li>fly around (see <a href=""#drone_gui"">drone_gui</a> for key assignments)</li>\n</ul>\n\n<h4 id=""autopilot"">Autopilot</h4>\n\n<ul>\n<li>type command ""autoInit 500 800"" in top-left text-field</li>\n<li>click Clear and Send (maybe click Reset first)\n=&gt; drone will takeoff &amp; init PTAM, then hold position.</li>\n<li>click on video to interactively set target (relative to current position); see <a href=""#drone_stateestimation"">drone_stateestimation</a>\n=&gt; first fly up 1m and then down 1m to facilitate a good scale estimate, dont start e.g. by flying horizontally over uneven terrain (!).</li>\n<li>always have a finger on ESC or on the joystick for emergency-keyboard control :)</li>\n</ul>\n\n<h2 id=""nodes"">Nodes</h2>\n\n<h3 id=""drone_stateestimation"">drone_stateestimation</h3>\n\n<p>Estimates the drone\'s position based on sent navdata, sent control commands and PTAM.</p>\n\n<blockquote>\n<p>IMPORTANT: requires messages to be sent on both /ardrone/navdata (&gt;100Hz) and /ardrone/image_raw (&gt;10Hz), i.e. a connected drone with running ardrone_autonomy node, or a .bag replay of at least those two channels. ardrone_autonomy should be started with:</p>\n</blockquote>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">rosrun ardrone_autonomy ardrone_driver _navdata_demo:<span class=""o"">=</span>0 _loop_rate:<span class=""o"">=</span>500\n\n</code></pre></div>\n<h4 id=""subscribed-topics"">\xc2\xa0Subscribed topics</h4>\n\n<ul>\n<li>/ardrone/navdata</li>\n<li>/ardrone/image_raw</li>\n<li>/cmd_vel</li>\n<li>/tum_ardrone/com</li>\n</ul>\n\n<h4 id=""published-topics"">Published topics</h4>\n\n<ul>\n<li>/ardrone/predictedPose</li>\n<li>/tum_ardrone/com</li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<p>None</p>\n\n<h4 id=""parameters"">\xc2\xa0Parameters</h4>\n\n<ul>\n<li>~publishFreq: frequency, at which the drone\'s estimated position is calculated &amp; published. Default: 30Hz</li>\n<li>~calibFile: camera calibration file. If not set, the defaults are used (camcalib/ardroneX_default.txt).</li>\n<li>UseControlGains: whether to use control gains for EKF prediction.</li>\n<li>UsePTAM: whether to use PTAM pose estimates as EKF update</li>\n<li>\n<p>UseNavdata: whether to use Navdata information for EKF update</p>\n\n<blockquote>\n<p>UsePTAM and UseNavdata are set to false, the EKF is never updated and acts as a pure simulator, prediciting the pose based on the control commands received (on /cmd_vel). Nice for experimenting.</p>\n</blockquote>\n</li>\n<li><p>PTAMMapLock: lock PTAM map (no more KF)</p></li>\n<li><p>PTAMSyncLock: lock PTAM map sync (fix scale and pose offsets etc.)</p></li>\n<li><p>PTAMMaxKF: maximum amount of KF PTAM takes. </p></li>\n<li><p>PTAMMinKFDist: min. distance between two KF (in meters)</p></li>\n<li><p>PTAMMinKFWiggleDist: min. distance between two KF (relative to mean scene depth).</p></li>\n<li>\n<p>PTAMMinKFTimeDiff: min time between two KF.</p>\n\n<blockquote>\n<p>PTAM takes a new KF if (PTAMMinKFTimeDiff AND (PTAMMinKFDist OR PTAMMinKFWiggleDist)), and tracking is good etc.</p>\n</blockquote>\n</li>\n<li><p>RescaleFixOrigin: If the scale of the Map is reestimated, only one point in the mapping PTAM &lt;-&gt; World remains fixed.\nIf RescaleFixOrigin == false, this is the current pos. of the drone (to avoid sudden, large ""jumps""). this however makes the map ""drift"".\nIf RescaleFixOrigin == true, by default this is the initialization point where the second KF has been taken (drone pos. may jump suddenly, but map remains fixed.). The fixpoint may be set by the command ""lockScaleFP"".</p></li>\n<li><p>c1 ... c8: prediction model parameters of the EKF. see ""Camera-Based Navigation of a Low-Cost Quadrocopter""</p></li>\n</ul>\n\n<h4 id=""required-tf-transforms"">\xc2\xa0Required tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""provided-tf-transforms"">\xc2\xa0Provided tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""using-it"">Using it</h4>\n\n<p>To properly estimate PTAM\'s scale, it is best to fly up and down a little bit (e.g. 1m up and 1m down) immediately after initialization.\nThere are two windows, one shows the video and PTAM\'s map points, the other one the map. To issue key commands, focus the respective window and hit a key. This generates a command on /tum_ardrone/com, which in turn is parsed and does something.</p>\n\n<h6 id=""video-window"">Video Window</h6>\n\n<p><img src=""http://wiki.ros.org/tum_ardrone/drone_stateestimation?action=AttachFile&amp;do=get&amp;target=video.png"" alt=""Video window""></p>\n\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>/tum_adrone/com message</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>""p reset""</td>\n<td>resets PTAM</td>\n</tr>\n<tr>\n<td>u</td>\n<td>""p toggleUI""</td>\n<td>changes view</td>\n</tr>\n<tr>\n<td>space</td>\n<td>""p space""</td>\n<td>takes first / second Keyframe for PTAM\'s initialization</td>\n</tr>\n<tr>\n<td>k</td>\n<td>""p keyframe""</td>\n<td>forces PTAM to take a keyframe</td>\n</tr>\n<tr>\n<td>l</td>\n<td>""toggleLog""</td>\n<td>starts / stops extensive logging of all kinds of values to a file</td>\n</tr>\n<tr>\n<td>m</td>\n<td>""p toggleLockMap""</td>\n<td>locks map, equivalent to parameter PTAMMapLock</td>\n</tr>\n<tr>\n<td>n</td>\n<td>""p toggleLockSync""</td>\n<td>locks sync, equivalent to parameter PTAMSyncLock</td>\n</tr>\n</tbody>\n</table>\n\n<p>Clicking on the video window will generate waypoints, which are sent to drone_autopilot (if running):\n- left-click: fly (x,y,0)m relative to the current position. image-center is (0,0), borders are 2m respectively.\n- right-click: fly (0,0,y)m and rotate yaw by x degree. image-center is (0,0), borders are 2m and 90 degree respectively.</p>\n\n<h6 id=""map-window"">Map Window</h6>\n\n<p><img src=""http://wiki.ros.org/tum_ardrone/drone_stateestimation?action=AttachFile&amp;do=get&amp;target=map.png"" alt=""Map window""></p>\n\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>/tum_adrone/com message</th>\n<th>Action</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>""f reset""</td>\n<td>resets EKF and PTAM</td>\n</tr>\n<tr>\n<td>u</td>\n<td>""m toggleUI""</td>\n<td>changes view</td>\n</tr>\n<tr>\n<td>v</td>\n<td>""m resetView""</td>\n<td>resets viewpoint of viewer</td>\n</tr>\n<tr>\n<td>l</td>\n<td>""toggleLog""</td>\n<td>starts / stops extensive logging of all kinds of values to a file</td>\n</tr>\n<tr>\n<td>v</td>\n<td>""m clearTrail""</td>\n<td>clears green drone-trail</td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=""drone_autopilot"">drone_autopilot</h3>\n\n<p>PID controller for the drone. Also includes basic way-point-following and automatic initialization. Requires <a href=""#drone_stateestimation"">drone_stateestimation</a> to be running. The target is set via the /tum_ardrone/com topic.</p>\n\n<h4 id=""subscribed-topics"">\xc2\xa0Subscribed topics</h4>\n\n<ul>\n<li>/ardrone/predictedPose</li>\n</ul>\n\n<h4 id=""published-topics"">Published topics</h4>\n\n<ul>\n<li>/cmd_vel</li>\n<li>/ardrone/land</li>\n<li>/ardrone/takeoff</li>\n<li>/ardrone/reset</li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<p>None</p>\n\n<h4 id=""parameters"">\xc2\xa0Parameters</h4>\n\n<ul>\n<li>~minPublishFreq: usually, a control command is sent for each pose estimate received from drone_stateestimation. However, if no pose estimate is received for more than minPublishFreq milliseconds, a HOVER command is sent, causing the drone to hover if for example drone_stateestimation is shut down suddenly. Default: 110.</li>\n<li>Ki_X, Kd_X, Kp_X: PID controller parameters for roll/pitch, gaz (up/down) and yaw.</li>\n<li>max_X: maximal respective control command sent (ever).</li>\n<li>rise_fac: rise commands are larger than respective drop commands by this factor. This is due to the drone sometimes dropping unpredictably fast for large drop commands, however rising somethimes requires large rise commands.\naggressiveness: multiplied to PI-component of all commands sent. Low values lead to the drone flying ""slower"".</li>\n</ul>\n\n<h4 id=""required-tf-transforms"">\xc2\xa0Required tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""provided-tf-transforms"">\xc2\xa0Provided tf transforms</h4>\n\n<p>TODO</p>\n\n<h4 id=""using-it"">Using it</h4>\n\n<p>The behavior of the autopilot is set by sending commands on /tum_ardrone/com of the form ""c COMMAND"". A Queue of commands is kept, and as soon as one command is finished (for example a way point reached), the next command is popped. The queue can be cleared by sending ""c clearCommands"". Commands can be sent using the <a href=""#drone_gui"">drone_gui</a> node. Some example scripts can be found in /flightPlans/*.txt. Possible commands are:</p>\n\n<ul>\n<li>\n<p>autoInit [int moveTimeMS] [int waitTimeMS] [int riseTimeMs] [float initSpeed]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">takes control, starts drone, initializes PTAM. That is:\n- starts the drone &amp; and waits riseTimeMs, the drone will rise to approx. \n  a height of 1m. \n- initializes PTAM by taking the first KF, flying up (sending initSpeed as control command) for moveTimeMS, \n  waiting waitTimeMS and then taking the second KF. \n  This is done until success (flying up and down respectively).\n- good default values are ""autoInit 500 800 4000 0.5"" \n</code></pre></div>\n</li>\n<li>\n<p>autoTakeover [int moveTimeMS] [int waitTimeMS] [int riseTimeMs] [float initSpeed]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">takes control, initializes PTAM. The same as autoInit ..., \nbut to be used when the drone is already flying (skipps the first step).\n</code></pre></div>\n</li>\n<li>\n<p>takeoff </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">- takes control, starts drone.\n- does not reset map or initialize PTAM\n</code></pre></div>\n</li>\n<li>\n<p>setReference [doube x] [double y] [double z] [double yaw]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sets reference point (used in goto X X X X).\n</code></pre></div>\n</li>\n<li>\n<p>setMaxControl [double cap = 1.0]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">maximal control sent is capped at [cap], causing the drone to fly slower.\n</code></pre></div>\n</li>\n<li>\n<p>setInitialReachDist [double dist = 0.2]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">drone has to come this close to a way point initially\n</code></pre></div>\n</li>\n<li>\n<p>setStayWithinDist [double dist = 0.5]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">drone has to stay this close to a way point for a certain amount of time.\n</code></pre></div>\n</li>\n<li>\n<p>setStayTime [double seconds = 2.0]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">time the drone has to stay within [stayWithinDist] for target to be reached.\n</code></pre></div>\n</li>\n<li>\n<p>clearCommands</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">clears all targets, such that the next command is executed immediately.\n</code></pre></div>\n</li>\n<li>\n<p>goto [doube x] [double y] [double z] [double yaw]</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">flies to position (x,y,z yaw), relative to current reference point.\nblocks until target is reached according to set parameters\n</code></pre></div>\n</li>\n<li>\n<p>moveBy [doube x] [double y] [double z] [double yaw]</p>\n\n<p>moves by (x,y,z,yaw), relative to the current target position\n    blocks until target is reached according to set parameters</p>\n</li>\n<li>\n<p>moveByRel [doube x] [double y] [double z] [double yaw]</p>\n\n<p>moves by (x,y,z,yaw), relative to the current estimated position \n    of the drone\n    blocks until target is reached according to set parameters</p>\n</li>\n<li>\n<p>land</p>\n\n<p>initializes landing (use auto-land of drone)</p>\n</li>\n<li>\n<p>lockScaleFP</p>\n\n<p>sets the one point that does not change when the scale is re-estimated \n    to the current drone position. The scaleFP can only be set when PTAM is \n    good, i.e. this is delayed until PTAM is initialized and good.\n    Need to set useWorldFixpoint in dynammic_reconfigure.</p>\n</li>\n</ul>\n\n<h3 id=""drone_gui"">drone_gui</h3>\n\n<p>This node offers a simple QT GUI to control the <a href=""#drone_autopilot"">drone_autopilot</a> node, the <a href=""#drone_stateestimation"">drone_stateestimation</a> node and fly the drone manually via keyboard or joystick.</p>\n\n<h4 id=""subscribed-topics"">\xc2\xa0Subscribed topics</h4>\n\n<ul>\n<li>/cmd_vel</li>\n<li>/tum_ardrone/com</li>\n<li>/ardrone/takeoff</li>\n<li>/ardrone/land</li>\n<li>/ardrone/reset</li>\n<li>/ardrone/predictedPose</li>\n<li>/ardrone/navdata</li>\n<li>/joy</li>\n</ul>\n\n<h4 id=""published-topics"">Published topics</h4>\n\n<ul>\n<li>/cmd_vel</li>\n<li>/tum_ardrone/com</li>\n<li>/ardrone/takeoff</li>\n<li>/ardrone/land</li>\n<li>/ardrone/reset</li>\n</ul>\n\n<h4 id=""services"">Services</h4>\n\n<ul>\n<li>calls /ardrone/togglecam</li>\n<li>calls /ardrone/flattrim</li>\n</ul>\n\n<h4 id=""parameters"">\xc2\xa0Parameters</h4>\n\n<p>None</p>\n\n<h4 id=""required-tf-transforms"">\xc2\xa0Required tf transforms</h4>\n\n<p>None</p>\n\n<h4 id=""provided-tf-transforms"">\xc2\xa0Provided tf transforms</h4>\n\n<p>None</p>\n\n<h4 id=""using-it"">Using it</h4>\n\n<p><img src=""http://wiki.ros.org/tum_ardrone/drone_gui?action=AttachFile&amp;do=get&amp;target=ui.png"" alt=""Drone GUI""></p>\n\n<h6 id=""monitor-drone-autopilot-and-stateestimation-nodes-top-right-part"">Monitor Drone, Autopilot and Stateestimation Nodes (top-right part).</h6>\n\n<p>On the top-right, the current publish-frequency of important topics is displayed:\n- Drone Navdata: monitors /ardrone/navdata. Should be around 150 to 200Hz with a connected drone, and running (and correctly configured) ardrone_autonomy node.\n- Drone Control: monitors /cmd_vel. This is the frequency of how often control commands are published (and sent to the drone).\n- Pose Estimates: monitors /ardrone/predictedPose. These are the state predictions generated by the drone_stateestimation node. By default, this should be 30Hz.\n- Joy Input: monitors /joy. If you have a connected game-pad and running joy_node, this should be different from 0Hz.\n- Pings (RTT): current wireless LAN latency (RTT in ms) for 500B and 20kB packages. If these are too high, reduce Wlan clutter.</p>\n\n<h6 id=""manual-or-joystick-control-of-the-drone"">Manual or joystick control of the drone.</h6>\n\n<p>The current control source has to be set (i.e. joystick or KB). The autopilot is only allowed to send control commands, if this is set to autopilot.</p>\n\n<ul>\n<li>\n<p>Joystick control requires a connected joystick and running ""rosrun joy joy_node"". We use a PS3 sixaxis controller.\nto make the controller work, a small linux-hack is required (set controller rights).</p>\n\n<ul>\n<li>left joystick is horizontal pos. control; right joystick is height and yaw control.</li>\n<li>L1 to take off, release L1 to land.</li>\n<li>R1 to toggle emergency state.\n=&gt; by moving any of the two joysticks, the Control Source is immediately sent to Joystick.\ncan be used for safety (autopilot does wired stuff -&gt; immediately take over, disabling the autopilot and enabeling manual control).</li>\n</ul>\n</li>\n<li>\n<p>KB control requires the GUI window to have focus, but NOT the upper-left text field.\n=&gt; make the GUI the active window and press ESC to immediately enable KB control and set focus such that KB control works properly.\n can be used for safety (autopilot does wired stuff -&gt; press ESC and immediately take over, disabling the autopilot and enabeling manual control).</p>\n\n<ul>\n<li>q,a: fly up &amp; down.</li>\n<li>i,j,k,l: fly horizontally.</li>\n<li>u,o: rotate yaw.</li>\n<li>F1: toggle emergency</li>\n<li>s: takeoff</li>\n<li>d: land</li>\n</ul>\n</li>\n<li><p>Buttons Land, Takeoff, ToggleCam, Emergency (toggles emergency state).</p></li>\n</ul>\n\n<h6 id=""autopilot-control"">Autopilot Control</h6>\n\n<ul>\n<li>write commands in top-left text field (or load eample from one of the files). You can simply add .txt files to flightplans/.</li>\n<li>click Send to transmit commands to the autopilot\'s command queue (automatically sets Control Source to Autopilot).</li>\n<li>click Clear to clear autopilot command queue and current target.</li>\n<li>click Reset to reset Autopilot, PTAM and EKF.</li>\n</ul>\n\n<h2 id=""troubleshooting"">Troubleshooting</h2>\n\n<ul>\n<li>if drone doesnt start:\n\n<ul>\n<li>battery empty? (drone does not start if battery &lt; ~18%)</li>\n<li>Drone in emergency state? (if so, the four led\'s are red. click Emergency to reset).</li>\n</ul>\n</li>\n<li>cannot control drone:\n\n<ul>\n<li>selected correct control source? maybe re-select.</li>\n</ul>\n</li>\n<li>drone flies unstable using the autopilot:\n\n<ul>\n<li>adjust / reduce control parameters using dynamic_reconfigure (see readme_autopilot).</li>\n</ul>\n</li>\n<li>drone broken: buy a new one.</li>\n</ul>\n\n<h2 id=""known-bugs-amp-issues"">Known Bugs &amp; Issues</h2>\n\n<ul>\n<li>as the software was originally developed for the Ar.Drone 1.0, the pressure sensor and magnetometer are not used.</li>\n<li>drone_stateestimation crashes occasionally when PTAM init fails (crash occurs in PTAM code). \nHappens in oarticular if there is no baseline in between the first two keyframes, hardly ever happens in praxis.</li>\n</ul>\n\n<h2 id=""tips-and-tricks"">Tips and Tricks</h2>\n\n<h4 id=""camera-calibration"">Camera calibration</h4>\n\n<ul>\n<li>front, old drone: 0.672049, 0.899033, 0.502065, 0.513876, 0.271972</li>\n<li>front, new drone: 0.771557, 1.368560, 0.552779, 0.444056, 1.156010</li>\n</ul>\n\n<p>calibrate with ethzasl_ptam.\nto work with colored images, in src/CameraCalibrator.cc change:\n- add #include <cv_bridge>\n- change function imageCallback(...) to</cv_bridge></p>\n<div class=""highlight""><pre><code class=""language-cpp"" data-lang=""cpp""><span class=""kt"">void</span> <span class=""n"">CameraCalibrator</span><span class=""o"">::</span><span class=""n"">imageCallback</span><span class=""p"">(</span><span class=""k"">const</span> <span class=""n"">sensor_msgs</span><span class=""o"">::</span><span class=""n"">ImageConstPtr</span> <span class=""o"">&amp;</span> <span class=""n"">img</span><span class=""p"">)</span>\n<span class=""p"">{</span>\n    <span class=""n"">cv_bridge</span><span class=""o"">::</span><span class=""n"">CvImagePtr</span> <span class=""n"">cv_ptr</span> <span class=""o"">=</span> <span class=""n"">cv_bridge</span><span class=""o"">::</span><span class=""n"">toCvCopy</span><span class=""p"">(</span><span class=""n"">img</span><span class=""p"">,</span> <span class=""n"">sensor_msgs</span><span class=""o"">::</span><span class=""n"">image_encodings</span><span class=""o"">::</span><span class=""n"">MONO8</span><span class=""p"">);</span>\n\n    <span class=""k"">if</span><span class=""p"">(</span><span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">size</span><span class=""p"">().</span><span class=""n"">x</span> <span class=""o"">!=</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">width</span> <span class=""o"">||</span> <span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">size</span><span class=""p"">().</span><span class=""n"">y</span> <span class=""o"">!=</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">height</span><span class=""p"">)</span>\n        <span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">resize</span><span class=""p"">(</span><span class=""n"">CVD</span><span class=""o"">::</span><span class=""n"">ImageRef</span><span class=""p"">(</span><span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">width</span><span class=""p"">,</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">height</span><span class=""p"">));</span>\n\n    <span class=""n"">memcpy</span><span class=""p"">(</span><span class=""n"">mCurrentImage</span><span class=""p"">.</span><span class=""n"">data</span><span class=""p"">(),</span><span class=""n"">cv_ptr</span><span class=""o"">-&gt;</span><span class=""n"">image</span><span class=""p"">.</span><span class=""n"">data</span><span class=""p"">,</span><span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">width</span> <span class=""o"">*</span> <span class=""n"">img</span><span class=""o"">-&gt;</span><span class=""n"">height</span><span class=""p"">);</span>\n\n    <span class=""n"">mNewImage</span> <span class=""o"">=</span> <span class=""nb"">true</span><span class=""p"">;</span>\n<span class=""p"">}</span>\n\n</code></pre></div>\n<h4 id=""parameters-c1-to-c8"">Parameters: c1 to c8</h4>\n\n<p>can be estimated easily by \n- recording a flight: rosbag record -O calibFlight.bag /ardrone/image_raw /ardrone/navdata /cmd_vel\n- playing back that flight: rosbag play -l calibFlight.bag\n- starting two stateestimation nodes, one with remapped name and output:\n  - rosrun tum_ardrone drone_stateestimation _<em>name:=drone_stateestimationn2 /ardrone/predictedPose:=/ardrone/predictedPose2\n  - rosrun tum_ardrone drone_stateestimation\n- plotting the respective estimated values\n  - e.g.: rxplot /ardrone/predictedPose/dx,/ardrone/predictedPose2/dx\n- using dynamic reconfigure to \n  - in drone</em>stateestimation2, use only control gains\n  - in drone_stateestimation, use NO control gains, but instead navdata / speeds / PTAM.\n- setting c_i in drone_stateestimation2 such that graphs match best (play around).</p>\n\n<h4 id=""parameters-pid-control"">Parameters: PID control</h4>\n\n<p>approximate in ""simulation"" based on c1 to c8:\n- play back any record, to make stateestimation run (dont play /cmd_vel)\n  - rosbag play -l calibFlightZ.bag --topics /ardrone/image_raw /ardrone/navdata\n- run stateestimation, in dynamic reconfigure set only control updates to be used\n- run gui and autopilot, and control\n- plot control / respective pose e.g. with \n  - rxplot /ardrone/predictedPose/yaw /cmd_vel/angular/z</p>\n\n<h2 id=""licence"">Licence</h2>\n\n<p>The major part of this software package - that is everything except PTAM - is licensed under the GNU General Public License Version 3 (GPLv3), see <a href=""http://www.gnu.org/licenses/gpl.html"">http://www.gnu.org/licenses/gpl.html</a>. PTAM (comprised of all files in /src/stateestimation/PTAM) has it\'s own licence, see <a href=""http://www.robots.ox.ac.uk/%7Egk/PTAM/download.html"">http://www.robots.ox.ac.uk/~gk/PTAM/download.html</a>. This licence in particular prohibits commercial use of the software.</p>\n</div>\n\n            \n          </div>'"
interaction_cursor_3d,http://rosindex.github.io/r/interaction_cursor_3d/,"hydro,groovy,fuerte,indigo","interaction_cursor_3d,interaction_cursor_demo,interaction_cursor_msgs,interaction_cursor_rviz","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-3d-interaction-cursor"">ros-3d-interaction-cursor</h1>\n\n<p>Message types and rviz plugin for a 3d selection cursor in ROS.</p>\n</div>\n\n            \n          </div>'"
view_controller_msgs,http://rosindex.github.io/r/view_controller_msgs/,"hydro,groovy,indigo",view_controller_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""view_controller_msgs"">view_controller_msgs</h1>\n\n<p>Messages for ROS view controllers.</p>\n</div>\n\n            \n          </div>'"
rviz_animated_view_controller,http://rosindex.github.io/r/rviz_animated_view_controller/,"hydro,groovy,fuerte,indigo",rviz_animated_view_controller,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
crsm_slam,http://rosindex.github.io/r/crsm_slam/,"hydro,indigo",crsm_slam,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""crsm-slam-ros-pkg"">crsm-slam-ros-pkg</h1>\n\n<p>ROS package for the CRSM SLAM (Critical Rays Scan Match Simultaneous Localization And Mapping)</p>\n\n<p>More information : <a href=""http://wiki.ros.org/crsm_slam"">http://wiki.ros.org/crsm_slam</a></p>\n</div>\n\n            \n          </div>'"
object_recognition_msgs,http://rosindex.github.io/r/object_recognition_msgs/,"hydro,groovy,kinetic,jade,indigo",object_recognition_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kurt_navigation,http://rosindex.github.io/r/kurt_navigation/,"hydro,fuerte,electric,groovy,diamondback,indigo","kurt_2dnav,kurt_2dnav_slam,kurt_navigation_config,kurt_navigation_global,kurt_navigation_local,kurt_navigation_slam,kurt_freespace","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
std_capabilities,http://rosindex.github.io/r/std_capabilities/,"hydro,groovy,kinetic,indigo",std_capabilities,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""std_capabilities"">std_capabilities</h1>\n\n<p>Repository of standard capability interfaces.</p>\n</div>\n\n            \n          </div>'"
bfl,http://rosindex.github.io/r/bfl/,"hydro,groovy,kinetic,jade,indigo",bfl,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">$Id: README 28203 2007-05-29 07:58:40Z tdelaet $\n// \n// BFL: BAYESIAN FILTERING LIBRARY\n// \n// \n// Copyright (C) 2002/2003/2004 Klaas Gadeyne &lt;first dot last at gmail dot com&gt;\n//  \n// This library is free software; you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation; either version 2 of the License, or\n// (at your option) any later version.\n//  \n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//  \n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n//  \n\nThis library encoporates ideas from several available software\nlibraries:\n\n- Scene (Andrew Davison).  See\n&lt;http://www.robots.ox.ac.uk/~ajd/Scene/&gt;\n\n- Bayes++ (from ACFR). See\n&lt;http://www.acfr.usyd.edu.au/technology/bayesianfilter/Bayes++.htm&gt; \n\n- The CES programming library (Sebastian Thrun).  See \n&lt;http://www-2.cs.cmu.edu/afs/cs.cmu.edu/user/thrun/public_html/papers/thrun.ces-tr.html&gt;\n\n- Our own research with Bayesian methods for compliant motion problems\n&lt;http://www.mech.kuleuven.be/pma/research/manip/default_en.phtml&gt;\n\nIt\'s most important features are:\n- Released under the GNU LGPL licence\n- Wrapper around matrix and RNG libraries, so you can use your own\n  favourite matrix library.\n  At 2004/03/02 wrappers exist for\n  =================================================\n  * The matrix/RNG wrapper library of LTIlib\n  &lt;http://ltilib.sourceforge.net/doc/homepage/index.shtml&gt;: a library\n  with algorithms and data structures frequently used in image\n  processing and computer vision.\n\n  * NEWMAT &lt;http://www.robertnz.net/nm_intro.htm&gt; Matrix Library\n  =================================================\n  * boost &lt;http://www.boost.org/&gt; RNG\n\n\n- ""Bayesian unifying Design"".  This allows to incorporate any Bayesian\n  filtering algorithm!\n\n  Currently the following filter schemes are implemented.\n  * Standard KF, EKF, IEKF and Non-minimal State KF (See\n  &lt;http://people.mech.kuleuven.ac.be/~tlefebvr/publicaties/BayesStat.ps.gz&gt; \n\n  * Standard Particle filter (arbitrary proposal), BootstrapFilter\n  (Proposal = System Model PDF), Auxiliary Particle filter, Extended\n  Kalman Particle Filter. \n\nFor further details about the design ideas, see the poster about the\nlibrary presented at Valencia 7, a conference about Bayesian\nStatistics, available from\n&lt;http://people.mech.kuleuven.ac.be/~kgadeyne/doctoraat.html&gt;\nAlso have a look at the filtering libraries home page\n&lt;http://www.orocos.org/bfl&gt;\n\nTinne De Laet Contributed a tutorial which can be found on the\nwebsite.\n&lt;http://people.mech.kuleuven.be/~tdelaet/bfl_doc/getting_started_guide/getting_started_guide.html&gt;\nIt discusses how to construct your first filter in bfl. \n\nWim Meeussen and Tinne De Laet contributed a installation guide which can be\nfound on the website.\n&lt;http://people.mech.kuleuven.be/~tdelaet/bfl_doc/installation_guide/installation_guide.html&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
enu,http://rosindex.github.io/r/enu/,"hydro,groovy,fuerte",enu,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This repo is a ROS package providing transformations back and forth between NavSatFix and popular cartesian representations. It is a light ROS wrapper on libswiftnav.\n\nPlease find documentation on the ROS wiki: http://ros.org/wiki/enu\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
clasp,http://rosindex.github.io/r/clasp/,hydro,clasp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">                                clasp-3.x\n              A conflict-driven nogood learning answer set solver \n                     http://www.cs.uni-potsdam.de/clasp/\n                      http://potassco.sourceforge.net/\n\nOVERVIEW\n  clasp is an answer set solver for (extended) normal and disjunctive logic programs. \n  It combines the high-level modeling capacities of answer set programming\n  with state-of-the-art techniques from the area of Boolean constraint solving.\n  The primary clasp algorithm relies on conflict-driven nogood learning, \n  a technique that proved very successful for satisfiability checking (SAT).\n  Starting with version 2.0, clasp supports parallel (multithreaded) solving.\n  Starting with version 3.0, clasp supports\n   - disjunctive logic programs as in claspD-2\n   - domain heuristic modifications as in hclasp via option ""--heuristic=domain""\n   - unsatisfiable-core based optimization as in unclasp via ""--opt-strategy={4,5}""\n\n  clasp is written in (mostly) Standard-C++. It was successfully built and run\n  under Linux (x86-32, x86-64) using gcc/clang and Windows (x86-32, x86-64) using\n  either Microsoft Visual Studio or MinGW. \n\n  Detailed information (including a User\'s manual), source code,\n  and pre-compiled binaries are available at: http://potassco.sourceforge.net/\n\nLICENSE\n  clasp is part of the Potassco project hosted at SourceForge.\n  It is distributed under the GNU Public License. See COPYING for\n  details regarding the license.\n\nPACKAGE CONTENTS\n  COPYING      - GNU Public License\n  CHANGES      - Major changes between versions\n  README       - This file\n  configure.{sh,bat}\n               - Simple script that creates Makefiles for building clasp (library and application) \n  app/         - Source code directory of the command-line interface\n  libclasp/    - Directory of the clasp (static) library (sources, documentation, unit tests)\n  libprogram_opts/\n               - Library for parsing command-line options (needed by app)\n  build_vc/    - Directory containing Visual Studio project files for building clasp\n  tools/       - Some additional files\n\nBUILDING &amp; INSTALLING\n  The preferred way to build clasp is to use make and the provided configure script.\n  You\'ll need to have the GNU Compiler Collection (GCC) version 3 or\n  better installed in order to build clasp. You\'ll also need GNU make 3.80 or better. \n  On Microsoft Windows, we recommend using MinGW available from http://www.mingw.org/ - \n  You may want to visit http://www.mingw.org/wiki/Getting_Started for detailed\n  instructions on installing MinGW. Make sure to also install MinGW-make.\n\n  In the following it is assumed that \'make\' is an alias for the installed GNU make. \n  If this is not the case on your system, replace \'make\' with the name of the GNU make \n  executable (e.g. gmake). Furthermore, on Microsoft Windows use ./configure.bat instead of\n  ./configure.sh.\n\n  clasp\'s multithread support requires the Intel Threading Building Blocks library (version &gt;= 3.x) \n  which is freely available at: http://threadingbuildingblocks.org/ \n  After downloading and installing you may want to set and export the \n  TBB30_INSTALL_DIR environment variable.\n\n  Type \n    ./configure.sh --help \n  to get an overview of all supported build configurations/options.\n\n  To build clasp:\n    ./configure.sh\n    cd build/release\n    make\n\n  To build clasp with multithread support using TBB30_INSTALL_DIR:\n    ./configure.sh --with-mt\n    cd build/release_mt\n    make\n\n  To build clasp with multithread support using custom directory structure:\n    ./configure.sh --with-mt TBB_INCLUDE=&lt;path_to_tbb_include&gt; TBB_LIB=&lt;path_to_tbb_lib&gt;\n    cd build/release_mt\n    make\n\n  To install clasp:\n    make install\n\n  By default, \'make install\' will install clasp in \'/usr/local/bin\'\n  You can specify an installation prefix other than \'/usr/local\' \n  by running the configure-script with the option \'--prefix=PATH\'.\n  Alternatively, use option \'--bindir=PATH\' to directly specify the\n  installation path. \n\n  Finally, you can always skip installation and simply copy the\n  clasp executable to a directory of your choice.\n\nBUILDING WITH Microsoft Visual Studio\n  In the directory build_vc/ we provide Microsoft Visual Studio project files\n  for building clasp. You can download the freely available express edition \n  of Visual C++ from here:\n  http://www.microsoft.com/express/Downloads/\n  Once installed:\n    - open build_vc\\vc9\\clasp\\clasp.sln\n    - select the desired solution configuration (typically release_static) \n    - build the ""app"" project   \n\nUSAGE\n  clasp reads problem instances either from stdin, e.g \n    cat problem | clasp\n  or from a given file, e.g\n    clasp problem\n\n  Beside logic programs in SMODELS-format, clasp also supports SAT-problems in DIMACS-,\n  Max-SAT in (extended) DIMACS-, and PB-problems in OPB and WBO-format.\n\n  Type\n    clasp --help\n  to get an overview of the various options supported by clasp.\n\n  In addition to printing status information, clasp also\n  provides information about the computation via its exit status.\n  The exit status is:\n    10: if the problem was found to be satisfiable\n    20: if the problem was proved to be unsatisfiable\n    0 : if the satisfiability of problem is not known, \n        because search was either interrupted or not started\n    127: if clasp ran out of memory\n    Furthermore, the exit status of 1 indicates an error.\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
segbot_rocon,http://rosindex.github.io/r/segbot_rocon/,hydro,"bwi_guidance_concert,concert_service_segbot_gazebo,segbot_gazebo_concert,segbot_rapps","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""segbot_rocon"">segbot_rocon</h1>\n\n<p>Segbot specific ROS packages used to get the segway robots working with the Robotics in Concert project.</p>\n</div>\n\n            \n          </div>'"
sql_database,http://rosindex.github.io/r/sql_database/,"hydro,groovy,fuerte,indigo","sql_database,database_interface,student_database","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mr_teleoperator,http://rosindex.github.io/r/mr_teleoperator/,hydro,"mr_rqt,mr_teleoperator,mr_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mr_teleoperator"">mr_teleoperator</h1>\n\n<p><strong>Multi-robot teleoperation package collection</strong></p>\n\n<p>A collection  of teleoperation modules utilizing a joystick (Xbox, PS) to control multiple robots.</p>\n\n<p>This collection includes: \n</p>\n<ul> \n  <li>\n    Rqt plugin  for selecting and controling a specific robot.\n  </li>\n   <li>\n   A node that publishes a geometry_msgs/Twist message type.\n   </li>\n</ul> \n\n<p><strong>Example:</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch mr_tools teleoperator.launch\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
android_base_controller,http://rosindex.github.io/r/android_base_controller/,hydro,base_controller,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""base_controller"">base_controller</h1>\n\n<p>This base controller for ROS on Android allows the user to drive the\nKobuki or Create bases from an Android device directly connected to the\ndesired base via USB.</p>\n\n<h2 id=""building"">Building</h2>\n\n<p>To build this package you can just use <code>gradlew</code> from the command line, or\nyou can put the package inside a catkin workspace and built it with\n<code>catkin_make</code>.</p>\n\n<h2 id=""requirements"">Requirements</h2>\n\n<p>In order to use this code to drive a Create or a Kobuki base,\nan Android device with USB On The Go (OTG) is needed. A\n<a href=""http://www.ebay.com/bhp/micro-usb-otg-cable-nexus-7"">usb-otg</a> cable\nis also needed.</p>\n\n<p>We tested this code in:</p>\n\n<ul>\n<li>Nexus 7</li>\n<li>Nexus 7 2013</li>\n<li>Galaxy S4 Google Edition</li>\n</ul>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>These code fragments show how to use this package to create a\nKobuki driver in an ROS Activity. For the Create base you should simple\nreplace Kobuki with Create.</p>\n\n<p>Import the <a href=""https://github.com/mik3y/usb-serial-for-android"">USB library</a>:</p>\n<div class=""highlight""><pre><code class=""language-java"" data-lang=""java""><span class=""kn"">import</span> <span class=""nn"">com.hoho.android.usbserial.driver.UsbSerialDriver</span><span class=""o"">;</span>\n<span class=""kn"">import</span> <span class=""nn"">com.hoho.android.usbserial.driver.UsbSerialProber</span><span class=""o"">;</span>\n\n</code></pre></div>\n<p>Import the ROS nodes and the base drivers:</p>\n<div class=""highlight""><pre><code class=""language-java"" data-lang=""java""><span class=""kn"">import</span> <span class=""nn"">com.github.c77.base_controller.BaseControllerNode</span><span class=""o"">;</span>\n<span class=""kn"">import</span> <span class=""nn"">com.github.c77.base_controller.BaseStatusPublisher</span><span class=""o"">;</span>\n<span class=""kn"">import</span> <span class=""nn"">com.github.c77.base_driver.kobuki.KobukiBaseDevice</span><span class=""o"">;</span>\n\n</code></pre></div>\n<p>You can instantiate the nodes when creating the Main ROS Activity:</p>\n<div class=""highlight""><pre><code class=""language-java"" data-lang=""java""><span class=""kd"">public</span> <span class=""nf"">MainActivity</span><span class=""o"">()</span> <span class=""o"">{</span>\n    <span class=""kd"">super</span><span class=""o"">(</span><span class=""s"">""MainActivity""</span><span class=""o"">,</span> <span class=""s"">""MainActivity""</span><span class=""o"">);</span>\n    <span class=""n"">baseControllerNode</span> <span class=""o"">=</span> <span class=""k"">new</span> <span class=""n"">BaseControllerNode</span><span class=""o"">(</span><span class=""s"">""/cmd_vel""</span><span class=""o"">);</span>\n    <span class=""n"">baseStatusPublisher</span> <span class=""o"">=</span> <span class=""k"">new</span> <span class=""n"">BaseStatusPublisher</span><span class=""o"">();</span>\n<span class=""o"">}</span>\n\n</code></pre></div>\n<p>In the init method of the Node, we use the USB library to find the device and create the base driver.\nAfter creating the base driver, we can set the device to the two nodes.</p>\n<div class=""highlight""><pre><code class=""language-java"" data-lang=""java""><span class=""c1"">// Get UsbManager from Android.</span>\n<span class=""n"">UsbManager</span> <span class=""n"">manager</span> <span class=""o"">=</span> <span class=""o"">(</span><span class=""n"">UsbManager</span><span class=""o"">)</span> <span class=""n"">getSystemService</span><span class=""o"">(</span><span class=""n"">Context</span><span class=""o"">.</span><span class=""na"">USB_SERVICE</span><span class=""o"">);</span>\n<span class=""c1"">// Find the first available driver.</span>\n<span class=""n"">UsbSerialDriver</span> <span class=""n"">driver</span> <span class=""o"">=</span> <span class=""n"">UsbSerialProber</span><span class=""o"">.</span><span class=""na"">findFirstDevice</span><span class=""o"">(</span><span class=""n"">manager</span><span class=""o"">);</span>\n<span class=""c1"">// Create the low level base device.</span>\n<span class=""n"">KobukiBaseDevice</span> <span class=""n"">kobukiBaseDevice</span> <span class=""o"">=</span> <span class=""k"">new</span> <span class=""n"">KobukiBaseDevice</span><span class=""o"">(</span><span class=""n"">driver</span><span class=""o"">);</span>\n<span class=""n"">baseControllerNode</span><span class=""o"">.</span><span class=""na"">setBaseDevice</span><span class=""o"">(</span><span class=""n"">kobukiBaseDevice</span><span class=""o"">);</span>\n<span class=""n"">baseStatusPublisher</span><span class=""o"">.</span><span class=""na"">setBaseDevice</span><span class=""o"">(</span><span class=""n"">kobukiBaseDevice</span><span class=""o"">);</span>\n\n</code></pre></div>\n<p>After this point use the nodeMainExecutor to launch the nodes.</p>\n</div>\n\n            \n          </div>'"
octomap_ros,http://rosindex.github.io/r/octomap_ros/,"hydro,groovy,kinetic,jade,indigo",octomap_ros,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""octomap_ros"">octomap_ros</h1>\n\n<p>ROS package to provide conversion functions between ROS / PCL and OctoMap\'s native types.</p>\n\n<p>This repository continues from the groovy branch imported from SVN: \n<a href=""http://alufr-ros-pkg.googlecode.com/svn/branches/octomap_stacks-groovy-devel/octomap_ros/"">http://alufr-ros-pkg.googlecode.com/svn/branches/octomap_stacks-groovy-devel/octomap_ros/</a> \nSee <a href=""https://code.google.com/p/alufr-ros-pkg/"">https://code.google.com/p/alufr-ros-pkg/</a> for the previous versions.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""octomap_ros"">octomap_ros</h1>\n\n<p>ROS package to provide conversion functions between ROS and OctoMap\'s native types.</p>\n\n<p>This repository continues from the groovy branch imported from SVN: \n<a href=""http://alufr-ros-pkg.googlecode.com/svn/branches/octomap_stacks-groovy-devel/octomap_ros/"">http://alufr-ros-pkg.googlecode.com/svn/branches/octomap_stacks-groovy-devel/octomap_ros/</a> \nSee <a href=""https://code.google.com/p/alufr-ros-pkg/"">https://code.google.com/p/alufr-ros-pkg/</a> for the previous versions.</p>\n</div>\n\n            \n          </div>'"
rtctree,http://rosindex.github.io/r/rtctree/,"jade,kinetic,indigo",rtctree,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">=======\nrtctree\n=======\n\nIntroduction\n============\n\nrtctree is a Python library providing an easy-to-use API for interacting\nwith running RT Components and RTM-based systems running on\nOpenRTM-aist-1.0. It allows developers to manage these systems from\nother programs without needing to learn the CORBA API. Components can be\nstarted, stopped, connected together, have their configuration changed,\nand so on.\n\nThis software is developed at the National Institute of Advanced\nIndustrial Science and Technology. Approval number H23PRO-1229. The\ndevelopment was financially supported by the New Energy and Industrial\nTechnology Development Organisation Project for Strategic Development of\nAdvanced Robotics Elemental Technologies.  This software is licensed\nunder the Eclipse Public License -v 1.0 (EPL). See LICENSE.TXT.\n\n\nRequirements\n============\n\nrtctree requires omniorb-py, including omniidl with the Python backend.\nIf you have installed OpenRTM-python, you will have these installed\nalready. If not, you will need to install them manually.\n\nrtctree uses the new string formatting operations that were introduced\nin Python 2.6. It will not function with an earlier version of Python.\nIt has not been tested with Python 3 and it is likely that several\nchanges will be necessary to make it function using this version of\nPython.\n\nFor Ubuntu users, if you are using a version of Ubuntu prior to 9.04,\nyou will need to install a suitable Python version by hand. You may want\nto consider upgrading to Ubuntu 9.04 or later (10.04 offers LTS).\n\n\nInstallation\n============\n\nThere are several methods of installation available:\n\n 1. Download the source from either the repository (see ""Repository,""\n below) or a source archive, extract it somewhere, and install it into\n your Python distribution:\n\n   a) Extract the source, e.g. to a directory /home/blag/src/rtctree\n\n   b) Run setup.py to install rtctree to your default Python\n   installation::\n\n      $ python setup.py install\n\n   c) If necessary, set environment variables. These should be set by\n   default, but if not you will need to set them yourself. On Windows,\n   you will need to ensure that your Python site-packages directory is\n   in the PYTHONPATH variable and the Python scripts directory is in the\n   PATH variable.  Typically, these will be something like\n   ``C:\\Python26\\Lib\\site-packages\\`` and ``C:\\Python26\\Scripts\\``,\n   respectively (assuming Python 2.6 installed in ``C:\\Python26\\``).\n\n 2. Use the Windows installer. This will perform the same job as running\n setup.py (see #2), but saves opening a command prompt. You may still\n need to add paths to your environment variables (see step c, above).\n\n\nEnvironment variables\n=====================\n\nThe following environment variables are used:\n\n  ``RTCTREE_ORB_ARGS``\n    A list of arguments, separated by semi-colons, to pass to the ORB\n    when creating it. Optional.\n\n  ``RTCTREE_NAMESERVERS``\n    A list of name server addresses, separated by semi-colons, to parse\n    when creating the RTCTree. Each server in the list will be added to\n    the tree. Optional.\n\nThe only variable that should normally be set by the user is\n``RTCTREE_NAMESERVERS``. Set this to a list of name server addresses,\nseparated by semi-colons, that you want rtcshell to interact with. For\nexample, in a Bash shell, you can run the following::\n\n $ export RTCTREE_NAMESERVERS=localhost;192.168.0.1:65346;example.com\n\n\nThe RTC Tree\n============\n\nThe core of the library is the RTC Tree::\n\n  import rtctree.tree\n  tree = rtctree.tree.RTCTree()\n\nThis is a file system-like tree built by parsing name servers to find\ndirectories, components and managers. You can treat it exactly the same\nway as you treat a normal file system. The tree represents the naming\ncontexts, managers and components registered all on known name servers\nin a tree structure::\n\n \\\n |-+localhost\n | |-+naming_context\n | | |--ConsoleIn0.rtc\n | | |--ConsoleOut0.rtc\n | |\n | |--another_naming_context\n | |--Sensor0.rtc\n |\n |-+192.168.0.5\n   |--Motor0.rtc\n   |--Controller0.rtc\n\nEach ``directory`` in the tree represents a naming context, which may be\na normal naming context or the root context of a name server. These are\nrepresented by NameServer and Directory objects.\n\nName servers are treated as directories off the root directory, ``/``.\nBelow them are ``files`` and sub-directories. A sub-directory represents\na naming context below the root naming context of a name server.\n\nFiles are components and managers, represented by the Component and\nManager classes, respectively.\n\nComponent objects store a variety of information about the component\nthey represent. You can access the component\'s ports, configuration\nsets, and so on.  Use these objects to change configuration values,\nconnect ports to each other, start and stop components, etc.\n\nAll nodes in the tree also store the CORBA object reference to the\nobject they represent. By accessing this object, you can call the IDL\nmethods. If something is not currently available in rtctree, calling the\nIDL method on the CORBA object directly will be able to achieve what you\nwant to do.\n\n\nBuilding the tree\n-----------------\n\nThe arguments to the tree factory function determine which name servers\nare parsed to build the tree. See that function\'s documentation for\ndetails. In general, you can pass in a list of server addresses and/or a\nlist of paths (the first component of each path is treated as a name\nserver). The environment variable ``RTCTREE_NAMESERVERS`` will also be\nchecked for any additional name servers to parse. This is a semi-colon\nseparated list of name server addresses.\n\n\nPaths\n-----\n\nNodes in the tree are addressed using paths. A path is a list of\nstrings, each representing a level in the tree one deeper than the\nprevious list item.  Absolute paths are necessary to address into the\ntree object. Addressing from nodes allows relative paths, provided that\nthe path exists below the node.\n\nWhen represented as text, these paths resemble file system paths. The\nroot of the tree is represented by ``/`` (``\\`` on Windows systems). The\nfirst level of entries are name server addresses. Entries below the\nfirst level are components, managers and naming contexts (which are\nrepresented as directories). The utility function parse_path will parse\na text string path into a list of path entries that can be used to\naddress nodes in the tree.\n\nFor example, the path ``/localhost/naming_context/ConsoleIn0.rtc``\nrepresents the component ``ConsoleIn0.rtc``, registered in the\n``naming_context naming`` context on the name server running at\n``localhost``. When used to find the node in the tree representing this\ncomponent, the path should be a Python list::\n\n  [\'/\', \'localhost\', \'naming_context\', \'ConsoleIn0.rtc\']\n\n\nUseful functions\n----------------\n\nUseful member functions of the RTCTree class and node classes that will\nbe of particular interest are shown below. This is not a complete list\nof all available functionality. Users are encouraged to check the full\nAPI documentation for additional functionality, and examine the rtcshell\nsource code for usage examples.\n\n  ``RTCTree.has_path``\n    Checks if a path is present in the tree.  Use this to quickly check\n    if a component exists.\n  ``RTCTree.get_node``\n    Retrieves a node from the tree based on a path. Use this to get\n    components, directories, etc. from the tree.\n  ``RTCTree.is_component``\n    Tests if the given path points to a Component object.  Tree nodes\n    have a property, is_component, that performs the same function\n    directly on a node. is_directory, is_manager and is_nameserver\n    functions and properties are also available.\n  ``RTCTree.iterate()``\n    Use this function to perform an action on every node in the tree, or\n    only those nodes matching a given filter. The return result of each\n    call will be returned from iterate as a list.  This function is\n    particularly useful. See rtcshell\'s rtls command for an example of\n    using iterate().\n\n\n  ``Node.children``\n    This property gives a list of the node\'s children. You can use this,\n    for example, to get all the components in a directory of the tree.\n  ``Node.full_path``\n    The full path of the node from the root of the tree.\n  ``Node.name``\n    The name of this node; i.e. its entry in the tree.\n  ``Node.parent_name``\n    The name of this node\'s parent (if it has one).\n  ``Node.root``\n    Given a node, use this property to get the root node of the tree it\n    is in, on which you can perform nearly all functions you can perform\n    on the tree object.\n\n\n  ``Component.activate_in_ec()``\n    Activate the component in the execution context at the given index.\n    For most components, only one EC is present and so the index should\n    be 0.\n  ``Component.deactivate_in_ec()``\n    Deactivate the component in an execution context.\n  ``Component.reset_in_ec()``\n    Reset the component in an execution context.\n  ``Component.state_in_ec()``\n    Get the state in a specific execution context.\n  ``Component.alive``\n    Test if the component is alive.\n  ``Component.owned_ecs``\n    The list of execution contexts owned by the component.\n  ``Component.participating_ecs``\n    The list of execution contexts the component is participating in.\n  ``Component.state``\n    The overall state of the component, created by merging its state in\n    each execution context.\n  ``Component.state_string``\n    The overall state of the component as a string.\n  ``Component.disconnect_all()``\n    Disconnect all connections from all ports of this component.\n  ``Component.get_port_by_name()``\n    Find a port of this component by name.\n  ``Component.ports``\n    The list of the component\'s ports. Similar lists exist for input,\n    output and service ports.  Component.connected_ports The list of the\n    component\'s ports that are connected. Similar lists exist for\n    connected input, output and service ports.\n  ``Component.object``\n    Get the CORBA LightweightRTObject that this component wraps.\n  ``Component.activate_conf_set``\n    Activate a configuration set by name.\n  ``Component.set_conf_set_value``\n    Set the value of a parameter in a configuration set.\n  ``Component.active_conf_set``\n    The currently-active configuration set.\n  ``Component.active_conf_set_name``\n    The name of the currently-active configuration set.\n  ``Component.conf_sets``\n    The list of configuration sets.\n\n\n  ``Port.connect()``\n    Connect this port to another port.\n  ``Port.disconnect_all()``\n    Disconnect all connections on this port.\n  ``Port.get_connection_by_dest()``\n    Get a connection on this port by the destination port.\n  ``Port.get_connection_by_name()``\n    Get a connection on this port by its name.\n  ``Port.connections``\n    The connections on this port.\n  ``Port.is_connected``\n    Checks if this port is connected or not.\n  ``Port.name``\n    The name of this port.\n  ``Port.object``\n    The CORBA PortService object that this component wraps.\n  ``Port.name``\n    The port\'s owner (usually a Component object).\n  ``Port.porttype``\n    The type of the port (DataInPort, DataOutPort or CorbaPort).\n\n\n  ``Connection.disconnect()``\n    Remove this connection between ports.\n  ``Connection.ports``\n    The list of ports involved in this connection.\n\n  ``ConfigurationSet.has_param()``\n    Checks if a parameter is present in the configuration set.\n  ``ConfigurationSet.set_param()``\n    Sets the value of a parameter in this configuration set.\n\n\n  ``ExecutionContext.activate_component()``\n    Activate a component within this execution context.\n  ``ExecutionContext.deactivate_component()``\n    Deactivate a component within this execution context.\n  ``ExecutionContext.reset_component()``\n    Reset a component within this execution context.\n  ``ExecutionContext.get_component_state()``\n    Get the state of a component within this execution context.\n  ``ExecutionContext.running``\n    Check if this execution context is running or not.\n\n\n  ``Manager.create_component()``\n    Create a new component instance.\n  ``Manager.delete_component()``\n    Destroy a component instance.\n\n\n  ``dict_to_nvlist()``\n    Converts a Python dictionary into a CORBA namevalue list.\n  ``nvlist_to_dict()``\n    Converts a CORBA namevalue list into a Python dictionary.\n\n\nAPI naming conventions\n======================\n\nrtctree follows the standard Python naming conventions as laid out in\nPEP8_.\n\nMost importantly, the private, internal API functions begin with an\nunderscore (``_``). If a function begins with an underscore, it is not\nintended for use outside the class and doing so could lead to undefined\nbehaviour. Only use those API functions that do not begin with an\nunderscore and have a docstring in your programs.\n\n.. _PEP8: http://www.python.org/dev/peps/pep-0008/\n\n\nFurther documentation and examples\n==================================\n\nFor further documentation, see the generated API documentation.\n\nFor examples, see the rtshell set of utilities. These illustrate using\nrtctree to perform most of the actions possible using RTSystemEditor.\n\n\nRepository\n==========\n\nThe latest source is stored in a Git repository at github_.  You can\ndownload it as a zip file or tarball by clicking the ""Download Source""\nlink in the top right of the page.  Alternatively, use Git to clone the\nrepository. This is better if you wish to contribute patches.\n\n::\n\n $ git clone git://github.com/gbiggs/rtctree.git\n\n.. _github: http://github.com/gbiggs/rtctree\n\n\nChangelog\n=========\n\n4.0\n---\n\n - Added complete support for the ExecutionContext interface.\n - Support for the Logger SDO interface.\n - Support for the ComponentObserver SDO interface.\n - Support three-or-more port connections.\n - Deprecated Port.get_connection_by_dest()\n - Added Port.get_connections_by_dest()\n - Added Port.get_connections_by_dests()\n\n3.0.1\n-----\n\n- Compatibility release for rtshell-3.0.1.\n\n3.0\n---\n\n - Do not treat exceptions while parsing managers as fatal\n - Other zombie-catching improvements\n - Detect zombie managers\n - New API calls to get composite component information\n - New API call to get a connection from a port by ID\n - Added API ability to give away the ORB\n - Added path formatter\n - Pretty-print exceptions\n - Other performance improvements (e.g. removed double parsing)\n - Added ability to restrict parsed paths (improves startup speed)\n - Added Zombie node\n - New API call to make a component exit\n - Removed defunct create_rtctree call\n - Exposed remove_node API call\n - Changed node.full_path to return a list, added node.full_path_str\n\n\n2.0\n---\n\n - Parse more information about execution contexts\n - Added the ability to use a provided ORB instead of creating one\n - Exposed the reparse_connections() method\n - New API call to get the ORB used for a node\n - New API call to unbind a name from a context\n - Allow access to more CORBA objects\n - Catch more zombies\n - Handle unknown CORBA object types\n - Handle the case of unknown port owners\n - Added locks to make rtctree objects thread-safe\n - Added API for forcing a re-parse of any object in the tree\n - Cleaned up ``__init__`` functions for proper inheritence handling\n - New API call to get the state of a component in a specific EC\n - New API call to update the state of a component in a specific EC\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
reem_teleop,http://rosindex.github.io/r/reem_teleop/,"hydro,fuerte,electric,groovy,diamondback,indigo","korus_motion_retargeting_controller,motion_adaption,motion_retargeting,motion_retargeting_msgs,moveit_collision_checking,reem_motion_retargeting_controller,reem_teleop,robosem_motion_retargeting_controller,robosem_motions,tree_kinematics,joint_position_controller,reem_teleop_coordinator","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Please check http://www.ros.org/wiki/reem_teleop for more info about this repo in general, installation instructions and example usage.\n\n</code></pre></div></div>\n\n            \n          </div>'"
laser_proc,http://rosindex.github.io/r/laser_proc/,"hydro,jade,groovy,indigo",laser_proc,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""laser_proc"">laser_proc</h1>\n\n<p>Converts representations of sensor_msgs/LaserScan and sensor_msgs/MultiEchoLaserScan</p>\n</div>\n\n            \n          </div>'"
pcl_msgs,http://rosindex.github.io/r/pcl_msgs/,"hydro,fuerte,groovy,kinetic,jade,indigo",pcl_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pcl_msgs"">pcl_msgs</h1>\n\n<p>ROS package containing PCL-related messages </p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
axcli,http://rosindex.github.io/r/axcli/,"jade,kinetic,indigo",axcli,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""axcli"">axcli</h1>\n\n<p>A simple actionlib CLI client</p>\n\n<h2 id=""how-to-use"">How to use</h2>\n\n<p>Add this package in your <code>catkin</code> workspace, don\'t forget to\nsource your <code>devel/setup.bash</code> after running <code>catkin_make</code></p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">axcli <span class=""o"">[</span>--nowait] <span class=""o"">[</span>--timeout TIMEOUT] <span class=""o"">[</span>-v] &lt;action namespace&gt; &lt;goal&gt;\n\n</code></pre></div>\n<p>Bash should provide TAB-completion of available action\nservers and their associated goals.\nBy default <code>axcli</code> will wait for the goal to terminate, and pressing\n<kbd>Ctrl+c</kbd> will send a goal cancel request to the action\nserver.</p>\n\n<p>The following optional arguments are available to change\n<code>axcli</code>\'s behavior:</p>\n\n<ul>\n<li><p><code>--nowait</code> don\'t wait for result, fire and forget.</p></li>\n<li><p><code>--timeout</code> timeout in seconds used to wait for the action server\n           (default: infinite timeout).</p></li>\n<li><p><code>-v, --verbose</code> verbose output.</p></li>\n</ul>\n</div>\n\n            \n          </div>'"
urg_c,http://rosindex.github.io/r/urg_c/,"hydro,jade,groovy,indigo",urg_c,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">URG C Library\n\nAbout this software:\n  This software have been developed to provide a library to use\n  scanning range sensors of Hokuyo Automatic Corporation.  Samples\n  will help to know how to use them.\n\nAuthors:\n  Satofumi Kamimura &lt;satofumi@users.sourceforge.net&gt; Design and implementation of the first version.\n  Katsumi Kimoto\n\nLicense:\n  Simplified BSD License.\n  See COPYRIGHT file.\n\n\nMailing list:\n  urgwidget-users@lists.sourceforge.net\n\n\nLibrary usage:\n\nVisual Studio Solution (Windows)\n\n  urg_library-X.X.X/visual_cpp/urg.sln \xe3\x82\x92\xe3\x83\x93\xe3\x83\xab\xe3\x83\x89\xe3\x81\x97\xe3\x81\xbe\xe3\x81\x99\xe3\x80\x82\n\n  \xe3\x83\x93\xe3\x83\xab\xe3\x83\x89\xe5\xbe\x8c\xe3\x81\xaf\xe3\x80\x81urg.lib \xe3\x81\xae\xe3\x82\xb9\xe3\x82\xbf\xe3\x83\x86\xe3\x82\xa3\xe3\x83\x83\xe3\x82\xaf\xe3\x83\xa9\xe3\x82\xa4\xe3\x83\x96\xe3\x83\xa9\xe3\x83\xaa\xe3\x81\xa8\xe5\x90\x84\xe3\x82\xb5\xe3\x83\xb3\xe3\x83\x97\xe3\x83\xab\xe3\x81\xae\n  \xe5\xae\x9f\xe8\xa1\x8c\xe3\x83\x95\xe3\x82\xa1\xe3\x82\xa4\xe3\x83\xab\xe3\x81\x8c\xe7\x94\x9f\xe6\x88\x90\xe3\x81\x95\xe3\x82\x8c\xe3\x81\xa6\xe3\x81\x84\xe3\x81\xbe\xe3\x81\x99\xe3\x80\x82\n\n\n\nVisual Studio bat compile (Windows)\n\n\xef\xbc\x8a\xe4\xbb\xa5\xe4\xb8\x8b\xe3\x81\xae\xe4\xbd\x9c\xe6\xa5\xad\xe3\x81\xaf\xe3\x82\xb3\xe3\x83\x9e\xe3\x83\xb3\xe3\x83\x89\xe3\x83\x97\xe3\x83\xad\xe3\x83\xb3\xe3\x83\x97\xe3\x83\x88\xe4\xb8\x8a\xe3\x81\xa7\xe8\xa1\x8c\xe3\x81\xa3\xe3\x81\xa6\xe3\x81\x8f\xe3\x81\xa0\xe3\x81\x95\xe3\x81\x84\xef\xbc\x8a\n\n  1. \xe7\x92\xb0\xe5\xa2\x83\xe5\xa4\x89\xe6\x95\xb0\xe3\x82\x92\xe8\xa8\xad\xe5\xae\x9a\xe3\x81\x99\xe3\x82\x8b\xe3\x81\x9f\xe3\x82\x81\xe3\x81\xab Visual Studio \xe3\x81\x8c\xe6\x8f\x90\xe4\xbe\x9b\xe3\x81\x97\xe3\x81\xa6\xe3\x81\x84\xe3\x82\x8b bat \xe3\x83\x95\xe3\x82\xa1\xe3\x82\xa4\xe3\x83\xab\xe3\x82\x92\n     \xe3\x82\xb3\xe3\x83\x94\xe3\x83\xbc\xe3\x81\x97\xe3\x81\xbe\xe3\x81\x99\xe3\x80\x82\n\n  Microsoft Visual Studio 8\\Common7\\Tools\\vsvars32.bat \xe3\x82\x92\n  urgwidget\\current\\windowsexe\xe3\x81\xab\xe3\x82\xb3\xe3\x83\x94\xe3\x83\xbc\xe3\x81\x99\xe3\x82\x8b\xe3\x80\x82\n\n\n  2. \xe7\x92\xb0\xe5\xa2\x83\xe5\xa4\x89\xe6\x95\xb0\xe3\x82\x92\xe8\xa8\xad\xe5\xae\x9a\xe5\xbe\x8c\xe3\x80\x81\xe3\x82\xb3\xe3\x83\xb3\xe3\x83\x91\xe3\x82\xa4\xe3\x83\xab\xe7\x94\xa8\xe3\x81\xaebat\xe3\x83\x95\xe3\x82\xa1\xe3\x82\xa4\xe3\x83\xab\xe3\x82\x92\xe5\xae\x9f\xe8\xa1\x8c\xe3\x81\x99\xe3\x82\x8b\xe3\x80\x82\n\n  urgwidget\\current\\windowsexe\\vsvars32.bat\xe3\x82\x92\xe5\xae\x9f\xe8\xa1\x8c\xe3\x81\x97\n  urgwidget\\current\\windowsexe\\compile.bat\xe3\x82\x92\xe5\xae\x9f\xe8\xa1\x8c\xe3\x81\x99\xe3\x82\x8b\xe3\x80\x82\n\n\n  3. \xe7\x94\x9f\xe6\x88\x90\xe3\x81\x95\xe3\x82\x8c\xe3\x81\x9f\xe3\x82\xb5\xe3\x83\xb3\xe3\x83\x97\xe3\x83\xab\xe3\x81\xae\xe5\xae\x9f\xe8\xa1\x8c\xe3\x83\x95\xe3\x82\xa1\xe3\x82\xa4\xe3\x83\xab\xe3\x82\x92\xe5\x8b\x95\xe3\x81\x8b\xe3\x81\x99\xe3\x80\x82\n\n  urgwidget\\current\\windowsexe\xe3\x81\xab\xe7\x94\x9f\xe6\x88\x90\xe3\x81\x95\xe3\x82\x8c\xe3\x82\x8bexe\xe3\x82\x92\xe5\xae\x9f\xe8\xa1\x8c\xe3\x81\x99\xe3\x82\x8b\xe3\x80\x82\n\n\n  4. \xe7\x94\x9f\xe6\x88\x90\xe3\x81\x95\xe3\x82\x8c\xe3\x81\x9f\xe3\x82\xb5\xe3\x83\xb3\xe3\x83\x97\xe3\x83\xab\xe3\x81\xae\xe5\xae\x9f\xe8\xa1\x8c\xe3\x83\x95\xe3\x82\xa1\xe3\x82\xa4\xe3\x83\xab\xe3\x82\x92\xe5\x89\x8a\xe9\x99\xa4\xe3\x81\x99\xe3\x82\x8b\xe3\x80\x82\n\n  urgwidget\\current\\windowsexe\\cleanobj.bat\xe3\x82\x92\xe5\xae\x9f\xe8\xa1\x8c\xe3\x81\x97\n  \xe7\x94\x9f\xe6\x88\x90\xe3\x81\x95\xe3\x82\x8c\xe3\x81\x9f\xe5\xae\x9f\xe8\xa1\x8c\xe3\x83\x95\xe3\x82\xa1\xe3\x82\xa4\xe3\x83\xab\xe3\x82\x92\xe5\x89\x8a\xe9\x99\xa4\xe3\x81\x99\xe3\x82\x8b\xe3\x80\x82\n\n\ngcc (Linux, MinGW)\n\n  \xe5\xbf\x85\xe8\xa6\x81\xe3\x81\xaa\xe3\x82\x89\xe3\x81\xb0 urg_library-X.X.X/Makefile \xe3\x81\xae PREFIX \xe3\x82\x92\xe7\xb7\xa8\xe9\x9b\x86\xe3\x81\x97\xe3\x81\xa6\n  \xe3\x82\xa4\xe3\x83\xb3\xe3\x82\xb9\xe3\x83\x88\xe3\x83\xbc\xe3\x83\xab\xe5\x85\x88\xe3\x82\x92\xe5\xa4\x89\xe6\x9b\xb4\xe3\x81\x97\xe3\x81\xbe\xe3\x81\x99\xe3\x80\x82\n\n  !!! \xe7\x8f\xbe\xe7\x8a\xb6\xe3\x81\x93\xe3\x81\x86\xe3\x81\xaa\xe3\x81\xa3\xe3\x81\xa6\xe3\x81\x84\xe3\x82\x8b\xe3\x81\xae\xe3\x81\xa7\xe3\x80\x81\xe4\xbb\x96\xe3\x81\xae\xe5\xa0\xb4\xe6\x89\x80\xe3\x81\xab\xe3\x81\x97\xe3\x81\x9f\xe3\x81\x91\xe3\x82\x8c\xe3\x81\xb0\xe3\x80\x81\xe5\xa4\x89\xe6\x9b\xb4\xe3\x81\x97\xe3\x81\xa6\xe4\xb8\x8b\xe3\x81\x95\xe3\x81\x84\xe3\x80\x82\nPREFIX = /usr/local\n#PREFIX = /mingw\n\n  \xe3\x82\xb3\xe3\x83\xb3\xe3\x83\x91\xe3\x82\xa4\xe3\x83\xab\xe3\x81\xa8\xe3\x82\xa4\xe3\x83\xb3\xe3\x82\xb9\xe3\x83\x88\xe3\x83\xbc\xe3\x83\xab\xe3\x82\x92\xe8\xa1\x8c\xe3\x81\x84\xe3\x81\xbe\xe3\x81\x99\xe3\x80\x82\n\n  % make\n  # make install\n\n  \xe3\x83\xa9\xe3\x82\xa4\xe3\x83\x96\xe3\x83\xa9\xe3\x83\xaa\xe3\x81\xae\xe4\xbd\xbf\xe3\x81\x84\xe6\x96\xb9\xe3\x81\xaf\xe3\x80\x81urg-library-X.X.X/samples/ \xe4\xb8\xad\xe3\x81\xae Makefile \xe3\x82\x92\xe3\x81\x94\xe8\xa6\xa7\xe4\xb8\x8b\xe3\x81\x95\xe3\x81\x84\xe3\x80\x82\n\n  !!! \xe3\x83\xa9\xe3\x82\xa4\xe3\x83\x96\xe3\x83\xa9\xe3\x83\xaa\xe3\x81\xae\xe4\xbd\xbf\xe3\x81\x84\xe6\x96\xb9\xe3\x81\xaf\xe3\x80\x81\xe3\x82\x82\xe3\x81\x86\xe5\xb0\x91\xe3\x81\x97\xe3\x81\xa1\xe3\x82\x83\xe3\x82\x93\xe3\x81\xa8\xe6\x9b\xb8\xe3\x81\x8d\xe3\x81\x9f\xe3\x81\x84\xe3\x80\x82\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
orocos_tools,http://rosindex.github.io/r/orocos_tools/,"hydro,electric,groovy,fuerte","rtt_control_msgs,rtt_controller_manager_msgs,oro_action_server,xeno_clock","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
zeroconf_avahi_suite,http://rosindex.github.io/r/zeroconf_avahi_suite/,"hydro,fuerte,groovy,kinetic,indigo","zeroconf_avahi,zeroconf_avahi_demos,zeroconf_avahi_suite","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""zeroconf_avahi_suite"">zeroconf_avahi_suite</h1>\n\n<p>Avahi implementation of zeroconf for ros.</p>\n\n<p>This originated in the zeroconf_implementations stack which was split up to avoid tangling c++ avahi and java dependencies.</p>\n\n<ul>\n<li><a href=""https://github.com/stonier/zeroconf_implementations"">https://github.com/stonier/zeroconf_implementations</a></li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""zeroconf_avahi_suite"">zeroconf_avahi_suite</h1>\n\n<p>Avahi implementation of zeroconf for ros.</p>\n\n<ul>\n<li><a href=""http://wiki.ros.org/zeroconf"">http://wiki.ros.org/zeroconf</a></li>\n<li><a href=""http://wiki.ros.org/zeroconf_avahi_suite"">http://wiki.ros.org/zeroconf_avahi_suite</a></li>\n</ul>\n</div>\n\n            \n          </div>'"
dynamixel_pro_controller,http://rosindex.github.io/r/dynamixel_pro_controller/,hydro,dynamixel_pro_controller,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
media_export,http://rosindex.github.io/r/media_export/,"hydro,jade,kinetic,indigo",media_export,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""media_export"">media_export</h2>\n\n<p>This empty package exists to allow ROS packages to export media paths\nto each other.</p>\n\n<p>The inspiration has been OGRE media paths, but the system could be\nused for any system that needs paths to be exported.</p>\n\n<p>In practice, all one needs to do to <em>export</em> a path is something like this:\n(in rosbuild, put this in the manifest.xml)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;depend package=""media_export""/&gt;\n&lt;export&gt;\n  &lt;media_export ogre_media_path=""${prefix}/Media/materials/scripts:${prefix}/Media/textures""/&gt;\n&lt;/export&gt;\n</code></pre></div>\n<p>In a catkin package, put this in the package.xml:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;run_depend&gt;media_export&lt;/run_depend&gt;\n&lt;export&gt;\n  &lt;media_export ogre_media_path=""${prefix}/Media/materials/scripts:${prefix}/Media/textures""/&gt;\n&lt;/export&gt;\n</code></pre></div>\n<p>Then on the command-line you can do</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rospack plugins --attr=ogre_media_path media_export\n</code></pre></div>\n<p>to see all the ogre_media_paths exported by all packages in your current ROS environment.</p>\n\n<p>The export attribute is named ""ogre_media_path"" instead of just ""path""\nbecause there may be media paths for other software libraries than\nOgre, and it would be a waste to mix them all together.</p>\n\n<p>The first use of media_export is for Ogre meshes which reference Ogre\nmaterial scripts.  These can be loaded both by rviz and by other code\nwhich processes URDF files.</p>\n</div>\n\n            \n          </div>'"
filters,http://rosindex.github.io/r/filters/,"hydro,groovy,kinetic,jade,indigo",filters,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
receive_ublox,http://rosindex.github.io/r/receive_ublox/,"groovy,indigo",receive_ublox,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a ROS driver for U-blox GPS receivers.\n\nWiki page: http://wiki.ros.org/receive_ublox\n\nHow to use:\n\n  (1) Clone this driver from github to a ROS workspace. Go to the cloned folder and use \xe2\x80\x9ccatkin_make\xe2\x80\x9d to build it.\n\n  (2) Set the ""ublox_port"" parameter in the /launch/receive_ublox.launch file, the default is /dev/ttyACM0. Roslaunch using the launch file, the driver will publish sensor_msgs/NavSatFix typed messages named /gps/data.\n\nAdditional notes:\n\n* Your account might require permissions to be able to communicate with the device (through USB)\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
household_objects_database,http://rosindex.github.io/r/household_objects_database/,"hydro,groovy,indigo",household_objects_database,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
scitos_metralabs,http://rosindex.github.io/r/scitos_metralabs/,"hydro,groovy,fuerte","metralabs_msgs,metralabs_ros,scitos_metralabs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""scitos_metralabs"">scitos_metralabs</h1>\n\n<p>ROS packages for the MetraLabs Scitos G5 mobile robot.</p>\n\n<h2 id=""branch-information"">branch information</h2>\n\n<ul>\n<li>master: used until groovy</li>\n<li>hydro-devel: used since hydro</li>\n<li>modded_amtec_library: special branch with specific, local changes</li>\n</ul>\n\n<p>The current official branch (atm. hydro-devel) and modded_amtec_library should both stay consistent except for those specific things. But as development will take place in the latter the official one might not be up to date.</p>\n</div>\n\n            \n          </div>'"
velodyne_utils,http://rosindex.github.io/r/velodyne_utils/,"hydro,electric,groovy,fuerte","velodyne_utils,velodyne_height_map","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>ROS tools and utilities metapackage for Velodyne 3D LIDARs.</p>\n\n<p>This package is <em>deprecated</em>. Catkin stacks should never use it, but\nrosbuild stacks depending on <code>velodyne_utils</code> will still work in Hydro.</p>\n\n<p>In Indigo, all references must use <code>velodyne_height_map</code> directly.</p>\n\n<p>See: <a href=""http://ros.org/wiki/velodyne_height_map"">http://ros.org/wiki/velodyne_height_map</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rFSM,http://rosindex.github.io/r/rFSM/,"hydro,jade,indigo",rfsm,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rfsm-statecharts-v1-0"">rFSM Statecharts (v1.0)</h1>\n\n<h2 id=""what-is-it"">What is it?</h2>\n\n<p>rFSM is a reduced (lightweight) Statechart implementation written in\npure Lua.</p>\n\n<p>For more information checkout the <a href=""http://people.mech.kuleuven.be/%7Emklotzbucher/rfsm/README.html"">rFSM\ndocumentation</a></p>\n\n<p>That page is also available in the git repository:</p>\n\n<ul>\n<li>doc/README.txt</li>\n<li>doc/README.html</li>\n<li>doc/README.org</li>\n</ul>\n\n<p>Information about how to use rFSM using the OROCOS RTT Framework can\nbe found <a href=""http://www.orocos.org/wiki/orocos/toolchain/LuaCookbook"">here</a>.</p>\n</div>\n\n            \n          </div>'"
boost_numpy,http://rosindex.github.io/r/boost_numpy/,hydro,boost_numpy,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Boost.NumPy is an extension for Boost.Python that adds NumPy support.\n\nIt is intended as a replacement for the old numeric support in\nBoost.Python proper, which is now out-of-date and does not support\nC/C++ pointer access to the data.  Because it builds against the NumPy\nheaders and hence has a dependency that Boost.Python does not, it is\nintended to be built as a separate library.  This is also not intended\nto be a high-level C++ array library; it would be more accurate to\nconsider it a C++ NumPy API, with the intent of making the NumPy C-API\navailable in a form that is safer and more convenient for C++ users\n(and particularly those using Boost.Python, of course).\n\nTHIS IS NOT AN OFFICIAL BOOST LIBRARY\n\n...we\'re just calling it Boost.NumPy right now because that clearly\nindicates that it\'s for Boost.Python and NumPy.  We do intend to\npropose it for inclusion in Boost eventually.\n\n\nINSTALLATION\n\nWe have provided three build systems: Boost.Build, SCons, and CMake\nbuild system.  At the moment, we recommend using SCons or CMake on\nLinux and CMake on Windows.\n\nBuilding with SCons should be as simple as running ""scons"" and ""scons\ninstall"", but you may need to use the ""--with-boost*"" options (see\n""scons --help"") to specify where to find Boost.  The Python that is\nused by SCons will be the one built against.\n\nPlease see libs/numpy/doc/cmakeBuild.rst for more information on\nbuilding with CMake.\n\n\nDOCUMENTATION\n\nMore documentation on how to use the library can be found in\nlibs/numpy/doc, but it may be most useful to start with the\nexamples in libs/numpy/examples.  The headers files are also\nwell documented and are intended to serve as a reference.\n\n\nISSUES AND NEW FEATURES\n\nPlease create an issue on the GitHub site at:\n\nhttps://github.com/ndarray/Boost.NumPy/issues\n\n\nCONTACT\n\nPlease send email questions to:\n\nndarray-dev@googlegroups.com\n\n...but I would prefer bug reports and feature requests to go to\nthe GitHub issues list (see above).\n\n\nMULTI-PLATFORM SUPPORT\n\nThe vast majority of development has happened on Linux/g++, and while\nwe have taken some steps to support MacOS/clang, there hasn\'t been\nmuch testing.  There has been no testing on Windows, though we have\nno reason to believe anything we\'ve done won\'t work on Windows.\n\nIn short, we\'d really love to have some testing on additional platforms,\nespecially from people who know their way around SCons, NumPy, or\nBoost.Python.\n\n\nHISTORY/AUTHORS\n\nBoost.NumPy was originally written by Jim Bosch as part of the\n""ndarray"" C++ library, then reorganized into a standalone component,\ncleaned up, and documented as part of a Boost-sponsored\nGoogle Summer of Code by Ankit Daftery, mentored by Stefan Seefeld.\nPhilip Miller contributed the CMake build system.\n\nThe project is hosted both on the Boost Sandbox:\n\nhttps://svn.boost.org/svn/boost/sandbox/numpy\n\nand on GitHub:\n\nhttps://github.com/ndarray/Boost.NumPy\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
youbot_simulation,http://rosindex.github.io/r/youbot_simulation/,"hydro,indigo","youbot_gazebo_control,youbot_gazebo_robot,youbot_gazebo_worlds,youbot_simulation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""youbot_simulation"">youbot_simulation</h1>\n\n<p>Packages to run the KUKA youBot in the Gazebo simulation with ROS</p>\n</div>\n\n            \n          </div>'"
hmi_robin,http://rosindex.github.io/r/hmi_robin/,hydro,"command_matcher,gspeech,hmi_robin,speech_database","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tools_robin,http://rosindex.github.io/r/tools_robin/,hydro,"open_door_detector,robin_people_detection,sensorhand_speed,video_player","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wifi_scan,http://rosindex.github.io/r/wifi_scan/,hydro,wifi_scan,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""install"">Install</h1>\n\n<p>Before building this project using catkin, the Wireless tools development files must be installed:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo apt-get install libiw-dev\n\n</code></pre></div>\n<p>Then, if the project is in <code>catkin/src/wifi_scan</code>, do in the <code>catkin</code> folder:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ catkin_make\n\n</code></pre></div>\n<p>After building it, the executable is available in <code>catking/devel/lib/wifi_scan/</code>, named <code>fingerprint</code>. To create a good fingerprint, the interface must send an RSSI request packet to all visible routers and wait for the responses. To send such a packet, root privileges are necessary. Since ROS is usually not installed in the root environment, we use the s mode bit and set the user and group of the executable to root:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ sudo chown root devel/lib/wifi_scan/fingerprint\n$ sudo chgrp root devel/lib/wifi_scan/fingerprint\n$ sudo chmod ug+s devel/lib/wifi_scan/fingerprint\n\n</code></pre></div>\n<p>To check if all went well try if you get the following or similar output:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ ls -l devel/lib/wifi_scan/fingerprint\n-rwsrwsr-x 1 root root 221926 jul 24 15:22 devel/lib/wifi_scan/fingerprint\n\n</code></pre></div>\n<h1 id=""usage"">Usage</h1>\n\n<p>To start the node, do:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun wifi_scan fingerprint\n\n</code></pre></div>\n<p>The default topic name is <code>/wifi_fp</code>, so you can change this when launching using:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun wifi_scan fingerprint wifi_fp:=new_topic_name\n\n</code></pre></div>\n<p>The message type is a <code>wifi_scan/Fingerprint</code>. More information can be found in the Doxygen documentation. </p>\n\n<h1 id=""code"">Code</h1>\n\n<p>To browse the Doxygen documentation using Firefox as an example browser, do in the wifi_scan folder:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ firefox doc/html/index.html\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
erratic_robot,http://rosindex.github.io/r/erratic_robot/,"hydro,groovy","erratic_description,erratic_gazebo_plugins,erratic_navigation,erratic_navigation_apps,erratic_player,erratic_teleop,player","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""erratic_robot"">erratic_robot</h1>\n\n<p>ROS stack for interfacing with Videre Erratic mobile robot platform.</p>\n</div>\n\n            \n          </div>'"
ethercat_soem,http://rosindex.github.io/r/ethercat_soem/,hydro,ethercat_soem,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cogniteam_models,http://rosindex.github.io/r/cogniteam_models/,hydro,"bobcat_description,cogniteam_models,lizi_description","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_glass_tools,http://rosindex.github.io/r/ros_glass_tools/,hydro,ros_glass_tools,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""summary"">Summary</h1>\n\n<p>ros_glass_tools provides the ros side actions for interacting with the Google\nGlass.  Eaxmple applications include GlassTopicViewer, RobotVoiceControl, and GlassROSMonitor.</p>\n\n<p>Running these scripts allows for information to be sent from\na computer running ros and <a href=""http://www.rosbridge.org/"">RosBridge</a>.</p>\n\n<h1 id=""scripts"">Scripts</h1>\n\n<ul>\n<li><p>list_topics.py - This provides a service to send the glass a list of currently publishing topics</p></li>\n<li><p>glass_monitor.py - Allows a user to specify specific topic message fields to inspect and report\na message if the data examined violates the defined constraint.  </p></li>\n<li><p>voice_command.py - Provides a service that will publish a blank message on a specified field when \nit receives a string message.  </p></li>\n</ul>\n\n<p>For further information please see the ROS wiki <a href=""http://wiki.ros.org/ros_glass_tools"">here</a>.</p>\n</div>\n\n            \n          </div>'"
decision_making_robot_examples,http://rosindex.github.io/r/decision_making_robot_examples/,hydro,"decision_making_robot_examples,dm_lizi","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wheeled_robin,http://rosindex.github.io/r/wheeled_robin/,hydro,"wheeled_robin,wheeled_robin_bringup,wheeled_robin_description,wheeled_robin_driver,wheeled_robin_node","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
microstrain_3dmgx2_imu,http://rosindex.github.io/r/microstrain_3dmgx2_imu/,"hydro,fuerte,electric,groovy,jade,indigo",microstrain_3dmgx2_imu,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
humanoid_msgs,http://rosindex.github.io/r/humanoid_msgs/,"hydro,fuerte,electric,groovy,kinetic,jade,indigo","humanoid_msgs,humanoid_nav_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""humanoid_msgs"">humanoid_msgs</h1>\n\n<p>Messages and services for humanoid robots in ROS</p>\n</div>\n\n            \n          </div>'"
libsegwayrmp,http://rosindex.github.io/r/libsegwayrmp/,"hydro,fuerte,electric,groovy,indigo",libsegwayrmp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><a href=""http://travis-ci.org/segwayrmp/libsegwayrmp""><img src=""https://secure.travis-ci.org/segwayrmp/libsegwayrmp.png?branch=master"" alt=""Build Status""></a></p>\n\n<p><a href=""http://segwayrmp.github.com/libsegwayrmp/"">http://segwayrmp.github.com/libsegwayrmp/</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang=""""># libsegwayrmp\n\n## Documentation\n\nhttp://wjwwood.github.com/libsegwayrmp/0.1-rc2/\n\n## Dependencies\n\n* CMake, for the build system: http://www.cmake.org/\n* Boost, for threading: http://www.boost.org/\n* FTDI D2XX (optional), for ftd2xx based usb support: http://www.ftdichip.com/Drivers/D2XX.htm\n* Serial (optional), for serial based communication: https://github.com/wjwwood/serial\n\n## Installation\n\nGet the source:\n\n    git clone git://github.com/wjwwood/libsegwayrmp.git\n    cd libsegwayrmp\n\nCompile the code:\n\n    make\n\nOr run cmake youself:\n\n    mkdir build &amp;&amp; cd build\n    cmake ..\n    make\n\nInstall the code (UNIX):\n\n    make\n    sudo make install\n\nUninstall the code (UNIX):\n\n    make\n    sudo make uninstall\n\nRun the test (Requires GTest):\n\n    make test\n\nBuild the documentation:\n\n    make doc\n\n## License\n\nThe BSD License\n\nCopyright (c) 2011 William Woodall\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the ""Software""), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
household_objects_database_msgs,http://rosindex.github.io/r/household_objects_database_msgs/,"hydro,jade,groovy,indigo",household_objects_database_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roomba_robin,http://rosindex.github.io/r/roomba_robin/,hydro,"roomba_robin,roomba_robin_bringup,roomba_robin_description","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
scriptable_monitoring,http://rosindex.github.io/r/scriptable_monitoring/,hydro,"scriptable_monitor,scriptable_monitor_rqt,scriptable_monitoring","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""scriptable_monitor"">scriptable_monitor</h1>\n</div>\n\n            \n          </div>'"
roslisp_repl,http://rosindex.github.io/r/roslisp_repl/,"hydro,groovy",roslisp_repl,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
RCPRG_laser_drivers,http://rosindex.github.io/r/RCPRG_laser_drivers/,"hydro,electric,groovy,fuerte","liblms1xx,lms1xx,LMS1xx,libLMS1xx","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""drivers-for-laser-scanners-used-at-rcprg"">Drivers for laser scanners used at RCPRG</h1>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roomba_robin_simulator,http://rosindex.github.io/r/roomba_robin_simulator/,hydro,"roomba_robin_gazebo,roomba_robin_simulator","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roomba_robin_viz,http://rosindex.github.io/r/roomba_robin_viz/,hydro,"roomba_robin_interactive_markers,roomba_robin_rviz_launchers,roomba_robin_viz","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rocon_rqt_plugins,http://rosindex.github.io/r/rocon_rqt_plugins/,"hydro,groovy","rocon_conductor_graph,rocon_gateway_graph,rocon_rqt_plugins","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rocon_rqt_plugins"">rocon_rqt_plugins</h1>\n\n<p>Rqt graphical tools for rocon.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><strong>This repo is being depracated for igloo. The code has been moved to rocon_qt_gui.</strong></p>\n</div>\n\n            \n          </div>'"
wheeled_robin_viz,http://rosindex.github.io/r/wheeled_robin_viz/,hydro,"wheeled_robin_rviz_launchers,wheeled_robin_viz","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wheeled_robin_simulator,http://rosindex.github.io/r/wheeled_robin_simulator/,hydro,"fake_odom,wheeled_robin_simulator","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
declination,http://rosindex.github.io/r/declination/,hydro,declination,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""declination"">declination</h1>\n\n<p>Simple nodes for computing declination from a GPS stream, and applying it to a compass IMU topic.</p>\n</div>\n\n            \n          </div>'"
shape_tools,http://rosindex.github.io/r/shape_tools/,"jade,fuerte,indigo",shape_tools,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""shape_tools"">shape_tools</h1>\n\n<p>Tools for operating on shape messages.</p>\n\n<h2 id=""build-status"">Build Status</h2>\n\n<p>master branch: <a href=""https://travis-ci.org/ros-planning/shape_tools""><img src=""https://travis-ci.org/ros-planning/shape_tools.png?branch=master"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div>'"
ccny_rgbd_tools,http://rosindex.github.io/r/ccny_rgbd_tools/,"hydro,groovy,fuerte","ccny_openni_launch,ccny_rgbd,ccny_rgbd_data,lib_rgbdtools,ccny_g2o","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ccny-rgb-d-tools"">CCNY RGB-D tools </h1>\n\n<p>Ivan Dryanovski<br>\n<a href=""mailto:ivan.dryanovski@gmail.com"">ivan.dryanovski@gmail.com</a></p>\n\n<p>Copyright (C) 2013, City University of New York<br>\nCCNY Robotics Lab<br>\n<a href=""http://robotics.ccny.cuny.edu/"">http://robotics.ccny.cuny.edu/</a></p>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>The stack contains ROS applications for visual odometry and mapping using RGB-D cameras. The applications are built on top of the <a href=""https://gihub.com/ccny-ros-pkg/rgbdtools.git"">rgbdtools</a> library.</p>\n\n<p>This code is at an experimental stage, and licensed under the GPLv3 license.</p>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p>Create a directory where you want the package downloaded (ex. <code>~/ros</code>), \nand make sure it\'s added to your<code>$ROS_PACKAGE_PATH</code>.</p>\n\n<p>If you don\'t have git installed, do so:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Download the stack from our repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/ccny-ros-pkg/ccny_rgbd_tools.git\n</code></pre></div>\n<p>Install any dependencies using rosdep.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install ccny_rgbd_tools\n</code></pre></div>\n<p>Alternatively, you can manually install the dependencies by</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install libsuitesparse-dev\n</code></pre></div>\n<p>Compile the stack:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosmake ccny_rgbd_tools\n</code></pre></div>\n<p>If you get an error compiling <code>ccny_g2o</code>, it might be because of an incompatible <code>g2o</code> installation. Try removing <code>libg2o</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get remove ros-fuerte-libg2o\nsudo apt-get remove ros-groovy-libg2o\n</code></pre></div>\n<h2 id=""quick-usage"">Quick usage</h2>\n\n<p>Connect your RGB-D camera and launch the Openni device. The openni_launch file will \nstart the driver and the processing nodelets.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ccny_openni_launch openni.launch \n</code></pre></div>\n<p>For faster performace, consider using <code>dynamic reconfigure</code> to change the sampling rate of \nthe <code>rgbd_image_proc</code> nodelet. For example, setting it to to 0.5 will downsample the images by a factor of 2.</p>\n\n<p>Next, launch the visual odometry:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ccny_rgbd vo+mapping.launch\n</code></pre></div>\n<p>Finally, launch rviz. </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun rviz rviz\n</code></pre></div>\n<p>For convenience, you can load the <code>ccny_rgbd/launch/rviz.cfg</code> file.</p>\n\n<h2 id=""references"">References</h2>\n\n<p>If you use this system in your reasearch, please cite the following paper:</p>\n\n<p>Ivan Dryanovski, Roberto G. Valenti, Jizhong Xiao. \n<em>Fast Visual Odometry and Mapping from RGB-D Data</em>. \n2013 International Conference on Robotics and Automation (ICRA2013).</p>\n\n<h2 id=""more-info"">More info</h2>\n\n<p>Documentation:</p>\n\n<ul>\n<li>ROS wiki: <a href=""http://ros.org/wiki/ccny_rgbd_tools"">http://ros.org/wiki/ccny_rgbd_tools</a>\n</li>\n<li>API: <a href=""http://ros.org/doc/fuerte/api/ccny_rgbd/html/"">http://ros.org/doc/fuerte/api/ccny_rgbd/html/</a>\n</li>\n</ul>\n\n<p>Videos:\n * Visual odometry &amp; 3D mapping: <a href=""http://youtu.be/YE9eKgek5pI"">http://youtu.be/YE9eKgek5pI</a>\n * Feature viewer: <a href=""http://youtu.be/kNkrPuBu8JA"">http://youtu.be/kNkrPuBu8JA</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ccny-rgb-d-tools"">CCNY RGB-D tools </h1>\n\n<p>Ivan Dryanovski<br>\n<a href=""mailto:ivan.dryanovski@gmail.com"">ivan.dryanovski@gmail.com</a></p>\n\n<p>Copyright (C) 2013, City University of New York<br>\nCCNY Robotics Lab<br>\n<a href=""http://robotics.ccny.cuny.edu/"">http://robotics.ccny.cuny.edu/</a></p>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>The stack contains ROS applications for visual odometry and mapping using RGB-D cameras. \nThe applications are built on top of the <a href=""https://github.com/ccny-ros-pkg/rgbdtools.git"">rgbdtools</a> library.</p>\n\n<p>This code is at an experimental stage, and licensed under the GPLv3 license.</p>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p>Create a directory where you want the package downloaded (ex. <code>~/ros</code>), \nand make sure it\'s added to your<code>$ROS_PACKAGE_PATH</code>.</p>\n\n<p>If you don\'t have git installed, do so:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Download the stack from our repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/ccny-ros-pkg/ccny_rgbd_tools.git\n</code></pre></div>\n<p>Install any dependencies using rosdep.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install ccny_rgbd_tools\n</code></pre></div>\n<p>Alternatively, you can manually install the dependencies by</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install libsuitesparse-dev\n</code></pre></div>\n<p>Compile the stack:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosmake ccny_rgbd_tools\n</code></pre></div>\n<p>If you get an error compiling <code>ccny_g2o</code>, it might be because of an incompatible <code>g2o</code> installation. Try removing <code>libg2o</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get remove ros-fuerte-libg2o\nsudo apt-get remove ros-groovy-libg2o\n</code></pre></div>\n<h2 id=""quick-usage"">Quick usage</h2>\n\n<p>Connect your RGB-D camera and launch the Openni device. The openni_launch file will \nstart the driver and the processing nodelets.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ccny_openni_launch openni.launch \n</code></pre></div>\n<p>For faster performace, consider using <code>dynamic reconfigure</code> to change the sampling rate of \nthe <code>rgbd_image_proc</code> nodelet. For example, setting it to to 0.5 will downsample the images by a factor of 2.</p>\n\n<p>Next, launch the visual odometry:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ccny_rgbd vo+mapping.launch\n</code></pre></div>\n<p>Finally, launch rviz. </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun rviz rviz\n</code></pre></div>\n<p>For convenience, you can load the <code>ccny_rgbd/launch/rviz.cfg</code> file.</p>\n\n<h2 id=""references"">References</h2>\n\n<p>If you use this system in your reasearch, please cite the following paper:</p>\n\n<p>Ivan Dryanovski, Roberto G. Valenti, Jizhong Xiao. \n<em>Fast Visual Odometry and Mapping from RGB-D Data</em>. \n2013 International Conference on Robotics and Automation (ICRA2013).</p>\n\n<h2 id=""more-info"">More info</h2>\n\n<p>Documentation:</p>\n\n<ul>\n<li>ROS wiki: <a href=""http://ros.org/wiki/ccny_rgbd_tools"">http://ros.org/wiki/ccny_rgbd_tools</a>\n</li>\n<li>API: <a href=""http://ros.org/doc/fuerte/api/ccny_rgbd/html/"">http://ros.org/doc/fuerte/api/ccny_rgbd/html/</a>\n</li>\n</ul>\n\n<p>Videos:\n * Visual odometry &amp; 3D mapping: <a href=""http://youtu.be/YE9eKgek5pI"">http://youtu.be/YE9eKgek5pI</a>\n * Feature viewer: <a href=""http://youtu.be/kNkrPuBu8JA"">http://youtu.be/kNkrPuBu8JA</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ccny-rgb-d-tools"">CCNY RGB-D tools </h1>\n\n<p>Ivan Dryanovski<br>\n<a href=""mailto:ivan.dryanovski@gmail.com"">ivan.dryanovski@gmail.com</a></p>\n\n<p>Copyright (C) 2013, City University of New York<br>\nCCNY Robotics Lab<br>\n<a href=""http://robotics.ccny.cuny.edu/"">http://robotics.ccny.cuny.edu/</a></p>\n\n<h2 id=""overview"">Overview</h2>\n\n<p>The stack contains ROS applications for visual odometry and mapping using RGB-D cameras. The applications are built on top of the <a href=""https://github.com/ccny-ros-pkg/rgbdtools.git"">rgbdtools</a> library.</p>\n\n<p>This code is at an experimental stage, and licensed under the GPLv3 license.</p>\n\n<h2 id=""installing"">Installing</h2>\n\n<h3 id=""from-source"">From source</h3>\n\n<p>Create a directory where you want the package downloaded (ex. <code>~/ros</code>), \nand make sure it\'s added to your<code>$ROS_PACKAGE_PATH</code>.</p>\n\n<p>If you don\'t have git installed, do so:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install git-core\n</code></pre></div>\n<p>Download the stack from our repository:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone https://github.com/ccny-ros-pkg/ccny_rgbd_tools.git\n</code></pre></div>\n<p>Install any dependencies using rosdep.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosdep install ccny_rgbd_tools\n</code></pre></div>\n<p>Alternatively, you can manually install the dependencies by</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get install libsuitesparse-dev\n</code></pre></div>\n<p>Compile the stack:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosmake ccny_rgbd_tools\n</code></pre></div>\n<p>If you get an error compiling <code>ccny_g2o</code>, it might be because of an incompatible <code>g2o</code> installation. Try removing <code>libg2o</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo apt-get remove ros-fuerte-libg2o\nsudo apt-get remove ros-groovy-libg2o\n</code></pre></div>\n<h2 id=""quick-usage"">Quick usage</h2>\n\n<p>Connect your RGB-D camera and launch the Openni device. The openni_launch file will \nstart the driver and the processing nodelets.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ccny_openni_launch openni.launch \n</code></pre></div>\n<p>For faster performace, consider using <code>dynamic reconfigure</code> to change the sampling rate of \nthe <code>rgbd_image_proc</code> nodelet. For example, setting it to to 0.5 will downsample the images by a factor of 2.</p>\n\n<p>Next, launch the visual odometry:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch ccny_rgbd vo+mapping.launch\n</code></pre></div>\n<p>Finally, launch rviz. </p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun rviz rviz\n</code></pre></div>\n<p>For convenience, you can load the <code>ccny_rgbd/launch/rviz.cfg</code> file.</p>\n\n<h2 id=""references"">References</h2>\n\n<p>If you use this system in your reasearch, please cite the following paper:</p>\n\n<p>Ivan Dryanovski, Roberto G. Valenti, Jizhong Xiao. \n<em>Fast Visual Odometry and Mapping from RGB-D Data</em>. \n2013 International Conference on Robotics and Automation (ICRA2013).</p>\n\n<h2 id=""more-info"">More info</h2>\n\n<p>Documentation:</p>\n\n<ul>\n<li>ROS wiki: <a href=""http://ros.org/wiki/ccny_rgbd_tools"">http://ros.org/wiki/ccny_rgbd_tools</a>\n</li>\n<li>API: <a href=""http://ros.org/doc/fuerte/api/ccny_rgbd/html/"">http://ros.org/doc/fuerte/api/ccny_rgbd/html/</a>\n</li>\n</ul>\n\n<p>Videos:\n * Visual odometry &amp; 3D mapping: <a href=""http://youtu.be/YE9eKgek5pI"">http://youtu.be/YE9eKgek5pI</a>\n * Feature viewer: <a href=""http://youtu.be/kNkrPuBu8JA"">http://youtu.be/kNkrPuBu8JA</a></p>\n</div>\n\n            \n          </div>'"
rosruby_messages,http://rosindex.github.io/r/rosruby_messages/,hydro,rosruby_messages,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosruby_messages"">rosruby_messages</h1>\n\n<p>Precompiled rosruby messages.\nIf you don\'t want to generate it manually, this is useful.</p>\n\n<p>This package uses <code>rosruby_generate_messages</code> macro.\nThat is defined in rosruby\'s cmake macro.</p>\n</div>\n\n            \n          </div>'"
kingfisher_desktop,http://rosindex.github.io/r/kingfisher_desktop/,hydro,"kingfisher_desktop,kingfisher_viz","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosruby_common,http://rosindex.github.io/r/rosruby_common/,hydro,"rosruby_actionlib,rosruby_common,rosruby_tutorials","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rosruby_common"">rosruby_common</h1>\n\n<p><a href=""https://github.com/OTL/rosruby"">rosruby</a> common libraries (tf/actionlib/tutorial).\nrosruby_tutorials contains samples of rosruby.</p>\n\n<h2 id=""actionlib"">actionlib</h2>\n\n<p><a href=""http://ros.org/wiki/actionlib"">actionlib</a> provides a standardized interface for interfacing with preemptible tasks.</p>\n\n<h3 id=""simple-action-server"">simple action server</h3>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""no"">ROS</span><span class=""o"">::</span><span class=""n"">load_manifest</span><span class=""p"">(</span><span class=""s2"">""rosruby_actionlib""</span><span class=""p"">)</span>\n<span class=""nb"">require</span> <span class=""s1"">\'actionlib/simple_action_server\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'actionlib_tutorials/FibonacciAction\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/test_simple_action_server\'</span><span class=""p"">)</span>\n<span class=""n"">server</span> <span class=""o"">=</span> <span class=""no"">Actionlib</span><span class=""o"">::</span><span class=""no"">SimpleActionServer</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""n"">node</span><span class=""p"">,</span>\n                                           <span class=""s1"">\'/fibonacci\'</span><span class=""p"">,</span>\n                                           <span class=""no"">Actionlib_tutorials</span><span class=""o"">::</span><span class=""no"">FibonacciAction</span><span class=""p"">)</span>\n<span class=""n"">server</span><span class=""p"">.</span><span class=""nf"">start</span> <span class=""k"">do</span> <span class=""o"">|</span><span class=""n"">goal</span><span class=""o"">|</span>\n  <span class=""n"">feedback</span> <span class=""o"">=</span> <span class=""no"">Actionlib_tutorials</span><span class=""o"">::</span><span class=""no"">FibonacciFeedback</span><span class=""p"">.</span><span class=""nf"">new</span>\n  <span class=""n"">feedback</span><span class=""p"">.</span><span class=""nf"">sequence</span> <span class=""o"">=</span> <span class=""p"">[</span><span class=""mi"">0</span><span class=""p"">,</span> <span class=""mi"">1</span><span class=""p"">]</span>\n  <span class=""n"">r</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Rate</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""o"">.</span><span class=""mi"">0</span><span class=""p"">)</span>\n  <span class=""k"">for</span> <span class=""n"">i</span> <span class=""k"">in</span> <span class=""mi"">1</span><span class=""p"">.</span><span class=""nf"">.</span><span class=""n"">goal</span><span class=""p"">.</span><span class=""nf"">order</span>\n    <span class=""n"">feedback</span><span class=""p"">.</span><span class=""nf"">sequence</span><span class=""p"">.</span><span class=""nf"">push</span><span class=""p"">(</span><span class=""n"">feedback</span><span class=""p"">.</span><span class=""nf"">sequence</span><span class=""p"">[</span><span class=""n"">i</span><span class=""p"">]</span> <span class=""o"">+</span> <span class=""n"">feedback</span><span class=""p"">.</span><span class=""nf"">sequence</span><span class=""p"">[</span><span class=""n"">i</span><span class=""o"">-</span><span class=""mi"">1</span><span class=""p"">])</span>\n    <span class=""n"">server</span><span class=""p"">.</span><span class=""nf"">publish_feedback</span><span class=""p"">(</span><span class=""n"">feedback</span><span class=""p"">)</span>\n    <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">loginfo</span><span class=""p"">(</span><span class=""s2"">""feedback = [</span><span class=""si"">#{</span><span class=""n"">feedback</span><span class=""p"">.</span><span class=""nf"">sequence</span><span class=""p"">.</span><span class=""nf"">join</span><span class=""p"">(</span><span class=""s2"">"",""</span><span class=""p"">)</span><span class=""si"">}</span><span class=""s2"">]""</span><span class=""p"">)</span>\n    <span class=""n"">r</span><span class=""p"">.</span><span class=""nf"">sleep</span>\n  <span class=""k"">end</span>\n  <span class=""n"">result</span> <span class=""o"">=</span> <span class=""no"">Actionlib_tutorials</span><span class=""o"">::</span><span class=""no"">FibonacciResult</span><span class=""p"">.</span><span class=""nf"">new</span>\n  <span class=""n"">result</span><span class=""p"">.</span><span class=""nf"">sequence</span> <span class=""o"">=</span> <span class=""n"">feedback</span><span class=""p"">.</span><span class=""nf"">sequence</span>\n  <span class=""n"">server</span><span class=""p"">.</span><span class=""nf"">set_succeeded</span><span class=""p"">(</span><span class=""n"">result</span><span class=""p"">)</span>\n<span class=""k"">end</span>\n\n<span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">spin</span>\n\n</code></pre></div>\n<h3 id=""simple-action-client"">simple action client</h3>\n<div class=""highlight""><pre><code class=""language-ruby"" data-lang=""ruby""><span class=""c1"">#!/usr/bin/env ruby</span>\n\n<span class=""nb"">require</span> <span class=""s1"">\'ros\'</span>\n<span class=""no"">ROS</span><span class=""o"">::</span><span class=""n"">load_manifest</span><span class=""p"">(</span><span class=""s2"">""rosruby_actionlib""</span><span class=""p"">)</span>\n<span class=""nb"">require</span> <span class=""s1"">\'actionlib/simple_action_client\'</span>\n<span class=""nb"">require</span> <span class=""s1"">\'actionlib_tutorials/FibonacciAction\'</span>\n\n<span class=""n"">node</span> <span class=""o"">=</span> <span class=""no"">ROS</span><span class=""o"">::</span><span class=""no"">Node</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""s1"">\'/test_simple_action_client\'</span><span class=""p"">)</span>\n<span class=""n"">client</span> <span class=""o"">=</span> <span class=""no"">Actionlib</span><span class=""o"">::</span><span class=""no"">SimpleActionClient</span><span class=""p"">.</span><span class=""nf"">new</span><span class=""p"">(</span><span class=""n"">node</span><span class=""p"">,</span>\n                                           <span class=""s1"">\'/fibonacci\'</span><span class=""p"">,</span>\n                                           <span class=""no"">Actionlib_tutorials</span><span class=""o"">::</span><span class=""no"">FibonacciAction</span><span class=""p"">)</span>\n<span class=""n"">client</span><span class=""p"">.</span><span class=""nf"">wait_for_server</span><span class=""p"">(</span><span class=""mi"">1</span><span class=""o"">.</span><span class=""mi"">0</span><span class=""p"">)</span>\n\n<span class=""n"">goal</span> <span class=""o"">=</span> <span class=""no"">Actionlib_tutorials</span><span class=""o"">::</span><span class=""no"">FibonacciGoal</span><span class=""p"">.</span><span class=""nf"">new</span>\n<span class=""n"">goal</span><span class=""p"">.</span><span class=""nf"">order</span> <span class=""o"">=</span> <span class=""mi"">5</span>\n<span class=""n"">client</span><span class=""p"">.</span><span class=""nf"">send_goal</span><span class=""p"">(</span><span class=""n"">goal</span><span class=""p"">,</span>\n                 <span class=""ss"">:feedback_callback</span> <span class=""o"">=&gt;</span> <span class=""nb"">proc</span> <span class=""p"">{</span><span class=""o"">|</span><span class=""n"">feedback</span><span class=""o"">|</span>\n                   <span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">loginfo</span><span class=""p"">(</span><span class=""s2"">""feedback = [</span><span class=""si"">#{</span><span class=""n"">feedback</span><span class=""p"">.</span><span class=""nf"">sequence</span><span class=""p"">.</span><span class=""nf"">join</span><span class=""p"">(</span><span class=""s2"">"",""</span><span class=""p"">)</span><span class=""si"">}</span><span class=""s2"">]""</span><span class=""p"">)</span>\n                 <span class=""p"">})</span>\n\n<span class=""n"">result</span> <span class=""o"">=</span> <span class=""n"">client</span><span class=""p"">.</span><span class=""nf"">wait_for_result</span><span class=""p"">(</span><span class=""mi"">10</span><span class=""o"">.</span><span class=""mi"">0</span><span class=""p"">)</span>\n<span class=""n"">node</span><span class=""p"">.</span><span class=""nf"">loginfo</span><span class=""p"">(</span><span class=""s2"">""result = </span><span class=""si"">#{</span><span class=""n"">result</span><span class=""p"">.</span><span class=""nf"">sequence</span><span class=""p"">.</span><span class=""nf"">join</span><span class=""p"">(</span><span class=""s2"">"",""</span><span class=""p"">)</span><span class=""si"">}</span><span class=""s2"">""</span><span class=""p"">)</span>\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
dynamixel_pro_driver,http://rosindex.github.io/r/dynamixel_pro_driver/,hydro,dynamixel_pro_driver,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
velodyne_height_map,http://rosindex.github.io/r/velodyne_height_map/,"hydro,indigo",velodyne_height_map,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""overview"">Overview</h1>\n\n<p><a href=""http://www.ros.org/wiki/velodyne_height_map"">Velodyne_height_map</a> is\na <a href=""http://www.ros.org"">ROS</a> package providing obstacle detection for\nVelodyne 3D point clouds using a height map algorithm.</p>\n\n<p>This package has no released code API.</p>\n\n<p><strong>Warning</strong>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">The master branch normally contains code being tested for the next\nROS release.  It will not always work with all previous releases.\n</code></pre></div>\n<p>The current master works with Hydro. To build for Groovy or Fuerte, use\n<a href=""http://www.ros.org/wiki/velodyne_utils"">velodyne_utils</a> and not this\nrepository.</p>\n</div>\n\n            \n          </div>'"
genrb,http://rosindex.github.io/r/genrb/,hydro,genrb,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-message-generator-for-rosruby"">ROS message generator for rosruby</h1>\n\n<p>message generator for <a href=""http://github.com/OTL/rosruby"">rosruby</a>.</p>\n\n<p>After install this package, ruby messages are automatically generated by\nmechanism of genmsg.</p>\n\n<p>If there are already precompiled message packge,\nand you want to generate .rb file of it, you have to recompile it or\nuse rosruby\'s <code>rosruby_genmsg.py</code> script.</p>\n</div>\n\n            \n          </div>'"
clearpath_base,http://rosindex.github.io/r/clearpath_base/,hydro,clearpath_base,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""clearpath_base"">clearpath_base</h1>\n\n<p>The Clearpath Robotics serial interface used on Husky and first-generation Kingfisher</p>\n</div>\n\n            \n          </div>'"
ax2550,http://rosindex.github.io/r/ax2550/,"hydro,indigo",ax2550,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
husky_teleop,http://rosindex.github.io/r/husky_teleop/,hydro,husky_teleop,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
husky_interactive_markers,http://rosindex.github.io/r/husky_interactive_markers/,hydro,husky_interactive_markers,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
serial_utils,http://rosindex.github.io/r/serial_utils/,"hydro,indigo",serial_utils,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eigen_utils,http://rosindex.github.io/r/eigen_utils/,"hydro,groovy",eigen_utils,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sicktoolbox,http://rosindex.github.io/r/sicktoolbox/,"hydro,fuerte,electric,groovy,jade,indigo",sicktoolbox,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">-------------------------------------------------------------------\n-------------------------------------------------------------------\nThe Sick LIDAR C++ Toolbox\n-------------------------------------------------------------------\n\nThis is the ROS fork of the Sick LIDAR C++ Toolbox.  If you\'re\nlooking for Matlab, please see the original at:\nhttp://sicktoolbox.sourceforge.net/\n\n*** Quick Start\nTo get up and running quickly with the toolbox, be sure to read\nthe quick start guide in the manuals directory. Additionally, to\nenable 500Kbps communication via a USB-COMi-M be sure to see the\nRS-422 tutorial in said directory.\n\n*** Other Files\nPlease see the following documents for additional info:\n\n  COPYING - Information regarding the software license\n  AUTHORS - Information about the authors\n  THANKS  - Acknowledgements\n\n-------------------------------------------------------------------\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dynamixel_motor_experimental,http://rosindex.github.io/r/dynamixel_motor_experimental/,"hydro,groovy","dynamixel_hardware_interface,gearbox","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""dynamixel_motor_experimental"">dynamixel_motor_experimental</h1>\n\n<p>ROS stack for interfacing with Robotis Dynamixel line of servo motors. Might replace current dynamixel_motor stack in the future.</p>\n</div>\n\n            \n          </div>'"
message_runtime,http://rosindex.github.io/r/message_runtime/,"hydro,fuerte,groovy,kinetic,jade,indigo",message_runtime,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dynamixel_pro_arm_description,http://rosindex.github.io/r/dynamixel_pro_arm_description/,hydro,dynamixel_pro_arm_description,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dynamixel_pro_arm_moveit_config,http://rosindex.github.io/r/dynamixel_pro_arm_moveit_config/,hydro,dynamixel_pro_arm_moveit_config,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dynamixel_pro_arm,http://rosindex.github.io/r/dynamixel_pro_arm/,hydro,dynamixel_pro_arm,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sicktoolbox_wrapper,http://rosindex.github.io/r/sicktoolbox_wrapper/,"hydro,fuerte,electric,groovy,jade,indigo",sicktoolbox_wrapper,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dynamixel_pro_moveit_controller,http://rosindex.github.io/r/dynamixel_pro_moveit_controller/,hydro,dynamixel_pro_moveit_controller,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosbag_migration_rule,http://rosindex.github.io/r/rosbag_migration_rule/,"hydro,groovy,kinetic,jade,indigo",rosbag_migration_rule,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
map_store,http://rosindex.github.io/r/map_store/,"hydro,fuerte,electric,groovy,indigo",map_store,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""map_store"">map_store</h1>\n\n<p>Storage manager for OccupancyGrid maps.  Supports naming the most recent map, getting a list of map names, and publishing a specific map.</p>\n\n<hr>\n\n<p>This is the new repository location for map_store.  The old one at <a href=""https://kforge.ros.org/mapstore/hg/"">https://kforge.ros.org/mapstore/hg/</a> should no longer be used.</p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pcl,http://rosindex.github.io/r/pcl/,"hydro,groovy",pcl,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hector_quadrotor_apps,http://rosindex.github.io/r/hector_quadrotor_apps/,"hydro,fuerte,electric,groovy,jade,indigo",hector_quadrotor_demo,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ublox,http://rosindex.github.io/r/ublox/,"hydro,fuerte,electric,groovy,jade,indigo","ublox,ublox_gps,ublox_msgs,ublox_serialization","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wge100_driver,http://rosindex.github.io/r/wge100_driver/,"hydro,groovy,indigo","wge100_camera,wge100_camera_firmware,wge100_driver","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nmea_gps_driver,http://rosindex.github.io/r/nmea_gps_driver/,"hydro,groovy,fuerte",nmea_gps_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""nmea_gps_driver"">nmea_gps_driver</h1>\n\n<p>ROS driver to parse NMEA strings and publish standard ROS GPS message\ntypes. Does not require the GPSD daemon to be running.</p>\n\n<p>This package is deprecated and you should use nmea_navsat_driver going\nforward.</p>\n\n<h2 id=""api"">API</h2>\n\n<p>This package has no released Code API.</p>\n\n<p>The ROS API documentation and other information can be found at\n<a href=""http://ros.org/wiki/nmea_gps_driver"">http://ros.org/wiki/nmea_gps_driver</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iwaki,http://rosindex.github.io/r/iwaki/,"hydro,groovy",iwaki,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""iwaki-ros-pkg"">iwaki-ros-pkg</h1>\n\n<p>A ROS wrapper around Iwaki interaction (and dialogue) manager.</p>\n\n<h2 id=""requirements"">Requirements: </h2>\n\n<ul>\n<li>RE2 library: <a href=""http://code.google.com/p/re2/"">http://code.google.com/p/re2/</a>\n</li>\n<li>ncurses library</li>\n<li>queueio and iwaki libraries: <a href=""https://github.com/maxipesfix/iwaki"">https://github.com/maxipesfix/iwaki</a>\n</li>\n<li>the example iwaki action executor, generator, calls gstreamer\nto play sound files.</li>\n</ul>\n\n<h2 id=""build"">Build:</h2>\n\n<p>In the root of your ROS workspace:\n</p>\n<pre>\ncatkin_make\n</pre>\n\n<h2 id=""nodes"">Nodes:</h2>\n\n<ul>\n<li>iwakishi, the ROS wrapper around Iwaki library.</li>\n<li>console, a sample app that supplies input to iwaki manager: it reads \n       terminal input and sends it as messages to iwakishi.</li>\n<li>generator, a sample app that executes iwaki actions: it plays sound\n         files as directed by the recipes. </li>\n</ul>\n\n<h2 id=""iwakishi"">iwakishi </h2>\n\n<pre>\nrosrun iwaki iwakishi -t 0.1 -d DEBUG2 -l ./log1 -p scripts_directory  -i init_file -x\n</pre>\n\n<p>In this package, the example scripts_directory is PACKAGEROOT/scripts and\nthe example init_file is initialize_im.georgi.xml . These example scripts \nare triggered by time (heartbeat), console input lines ""h"" (recipe how_are_you), ""how"" (recipe how_are_you_and_you). Recipe how_are_you_and_you expects one of the two followups ""y"" or ""n"".</p>\n\n<p>Command line args:<br>\n</p>\n<pre>\n -t period of the main loop in seconds \n -d debug level: ERROR, WARNING, INFO, DEBUG, DEBUG1, DEBUG2, DEBUG3, DEBUG4\n -l location and prefix of the log file \n -p path of the top-level script directory containing init file \n -i name of the init file \n -x\n</pre>\n\n<h2 id=""console"">console</h2>\n\n<pre>\nrosrun console\n</pre>\n\n<h2 id=""generator"">generator</h2>\n\n<pre>\nrosrun generator -s sound_file_directory\n</pre>\n\n<p>In this package, the example sound_file_directory is PACKAGEROOT/sounds .</p>\n\n<p>NOTE: start generator before iwakishi, otherwise first iwakishi action messages\n      may never be received.</p>\n</div>\n\n            \n          </div>'"
manipulation_msgs,http://rosindex.github.io/r/manipulation_msgs/,"hydro,jade,groovy,indigo",manipulation_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ar_kinect,http://rosindex.github.io/r/ar_kinect/,"hydro,electric,groovy,fuerte",ar_kinect,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>This code was originally hosted on <a href=""http://code.google.com/p/albany-ros-pkg/"">http://code.google.com/p/albany-ros-pkg/</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>This is an updated version of ar_kinect, now available for electric, fuerte, groovy, and probably hyrdo.\nThe suggested location to find ar_pose is here: <a href=""https://github.com/IHeartEngineering/ar_tools"">https://github.com/IHeartEngineering/ar_tools</a></p>\n\n<p>This code was originally hosted on <a href=""http://code.google.com/p/albany-ros-pkg/"">http://code.google.com/p/albany-ros-pkg/</a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
map_msgs,http://rosindex.github.io/r/map_msgs/,"hydro,groovy,fuerte,indigo",map_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ackermann_teleop,http://rosindex.github.io/r/ackermann_teleop/,hydro,"ackermann_hks,ackermann_qt","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hector_quadrotor_experimental,http://rosindex.github.io/r/hector_quadrotor_experimental/,"hydro,electric,groovy,fuerte",hector_quadrotor_ptam,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
langs,http://rosindex.github.io/r/langs/,"hydro,groovy,fuerte",langs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
langs-dev,http://rosindex.github.io/r/langs-dev/,"hydro,groovy,fuerte",langs-dev,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rtsprofile,http://rosindex.github.io/r/rtsprofile/,"jade,kinetic,indigo",rtsprofile,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">rtsprofile\n===============================================================================\n\nrtsprofile is a Python library providing an interface to the RT System Profile\nspecification. This specification describes a complete RT system and can be\nused to reconstruct that system at a later time. The library supports both XML\nand YAML formatted files.\n\nThis software is developed at the National Institute of Advanced Industrial\nScience and Technology. Approval number H22PRO-1141. The development was\nfinancially supported by the New Energy and Industrial Technology Development\nOrganisation Project for Strategic Development of Advanced Robotics Elemental\nTechnologies.  This software is licensed under the Eclipse Public License -v\n1.0 (EPL). See LICENSE.txt.\n\n\nRequirements\n------------\n\nrtsprofile uses the new string formatting operations that were introduced in\nPython 2.6. It will not function with an earlier version of Python. It has not\nbeen tested with Python 3 and it is likely that several changes will be\nnecessary to make it function using this version of Python.\n\nFor Ubuntu users, if you are using a version of Ubuntu prior to 9.04, you will\nneed to install a suitable Python version by hand. You may want to consider\nupgrading to Ubuntu 9.04 or later (10.04 offers LTS).\n\n\nInstallation\n------------\n\nThere are several methods of installation available:\n\n1. Download the source from either the repository (see ""Repository,"" below) or\na source archive, extract it somewhere, and install it into your Python\ndistribution:\n\n a. Extract the source, e.g. to a directory /home/blag/src/rtsprofile\n\n b. Run setup.py to install rtsprofile to your default Python installation:\n\n    $ python setup.py install\n\n c. If necessary, set environment variables. These should be set by default,\n    but if not you will need to set them yourself. On Windows, you will need to\n    ensure that your Python site-packages directory is in the PYTHONPATH\n    variable and the Python scripts directory is in the PATH variable.\n    Typically, these will be something like C:\\Python26\\Lib\\site-packages\\ and\n    C:\\Python26\\Scripts\\, respectively (assuming Python 2.6 installed in\n    C:\\Python26\\).\n\n2. Use the Windows installer. This will perform the same job as running\n   setup.py (see #1), but saves opening a command prompt. You may still need to\n   add paths to your environment variables (see step c, above).\n\n\nUsing the library\n-----------------\n\nThe library has one main entry point: the RtsProfle class. Create an instance\nof this class, giving the constructor just one data source. The library will\nparse that source and give you a complete RT System Profile. You can then use\nthe properties (they\'re Python properties, not class methods) to access\ninformation about the RT System. For further details, see the doxygen-generated\ndocumentation.\n\n\nRunning the tests\n----------------------\n\nA pair of test specifications, one in each format, are included with the\nlibrary. You can execute the test on these files as below:\n\n $ python test/test.py ./test/rtsystem.xml\n $ python test/test.py ./test/rtsystem.yaml\n\nBe aware that, depending on your Python paths, the tests may be executed\nagainst an installed copy of rtsprofile rather than the copy in the current\nworking directory.\n\nThese tests are not yet complete coverage.\n\n\nAPI naming conventions\n----------------------\n\nrtsprofile follows the standard Python naming conventions as laid out in PEP8\n(http://www.python.org/dev/peps/pep-0008/).\n\nMost importantly, the private, internal API functions begin with an underscore\n(_). If a function begins with an underscore, it is not intended for use\noutside the class and doing so could lead to undefined behaviour. Only use\nthose API functions that do not begin with an underscore and have a docstring\nin your programs.\n\n\nFurther documentation and examples\n----------------------------------\n\nFor further documentation, see the Doxygen-generated API documentation.\n\nFor examples of using the library, see the ""rtresurrect"" and ""rtcryo"" tools.\n\n\nFuture features\n---------------\n\nThe following features are planned for future releases:\n\n- Complete unit tests.\n\n\nRepository\n----------\n\nThe latest source is stored in a Git repository at github, available at\nhttp://github.com/gbiggs/rtsprofile. You can download it as a zip file or\ntarball by clicking the ""Download Source"" link in the top right of the page.\nAlternatively, use Git to clone the repository. This is better if you wish to\ncontribute patches.\n\n $ git clone git://github.com/gbiggs/rtsprofile.git\n\n\nChangelog\n---------\n\n2.0:\n- Fixed parsing of Message Sending nodes.\n- PrecedingCondition timeout type is now integer.\n- Added YAML support.\n- Added tests.\n- Changed the default string for Preceding conditions to ""SYNC"".\n- Minor bug fixes\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
Corobot,http://rosindex.github.io/r/Corobot/,fuerte,http://svn.code.sf.net/p/roscorobot/code/trunk/Electric/Corobot,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ARL_sphero_command,http://rosindex.github.io/r/ARL_sphero_command/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
DrRobotMotionSensorDriver,http://rosindex.github.io/r/DrRobotMotionSensorDriver/,fuerte,DrRobotMotionSensorDriver,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
UCLA-robomagellan,http://rosindex.github.io/r/UCLA-robomagellan/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
JKU_Robotic_Stack,http://rosindex.github.io/r/JKU_Robotic_Stack/,electric,"CB_TCP_RTAI,Laser_PLS200,JKU_maps,R1_2dnav,R1_Odom,R1_launch,R1_teleop_joy,R1_teleop_key,R1_urdf,joint_state_publisher,joy","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
Janus,http://rosindex.github.io/r/Janus/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
TYROS,http://rosindex.github.io/r/TYROS/,electric,"TIChronos,phippi,phippipublisher,tyros_camera","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\nABOUT\n\nThis is distribution of TYROS - ROS packages of University of Tartu.\nMore details about ROS can be found http://www.ros.org/\nUniversity of Tartu web is http://www.ut.ee/\n\n\nLICENCE\n\nCopyright (c) 2011, T\xc3\xb5nu Samuel\nAll rights reserved.\n\nThis file is part of TYROS.\n\nTYROS is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTYROS is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with TYROS.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
WAMros,http://rosindex.github.io/r/WAMros/,electric,"wam_msgs,wamros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">*** wamros Node Description ***\n\nwamros is a ROS (ros.org) node for controlling the WAM robot\narm. wamros provides the following services:\n\n/wam/active_passive\n/wam/goHome\n/wam/moveToPos\n/wam/moveToCart -- move tool to a cartesian coordinate\n/wam/switchMode -- switches between joint/cartesian control space\n/wam/idle -- idles the robot\n/wam/active -- activates the current control\n\n\nwamros subscribes to the following topics:\n\n/wam/joints_command\n/wam/cartesian_command -- in internal units\n\nwamros produces for the following topics:\n\n/wam/joints_sensed\n/wam/status\n/wam/cartesian_coordinates -- in meters\n/wam/homogeneous_matrix -- different representation of cartesian coordinates\n/wam/hmpos -- internal btclient data\n/wam/hmref -- internal btclient data\n\n*** Getting Started ***\n\nSee start.sh for an example of how to start a wamros node. Note that\nyou are required to set the _wamconf parameter. The _doinit parameter\nis optional and tells wamros to perform a set of test motions at\nstartup in joint and Cartesian space.\n\n*** Build Instructions ***\n\nProvided your ROS_PACKAGE_PATH and all the dependencies are set up\nproperly, building wamros may be as simple as running:\n\nrosmake wamros\n\nThis node requires that xenomai and btclient are already\ninstalled. Please update CMakeLists.txt with the include and lib\ndirectories for both those dependencies.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
adept,http://rosindex.github.io/r/adept/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
actionlib_lua,http://rosindex.github.io/r/actionlib_lua/,electric,actionlib_lua,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nactionlib_lua: ROS actionlib in Lua\n===================================\n\nThis Lua package provides an implementation of actionlib in Lua. It can be\nused with roslua to access and provide actions from and to other ROS nodes.\n\n\nRequirements\n------------\nThe following software packages are needed on your system in order to\nuse actionlib_lua. Requirements marked with (*) have specific information\nfurther down below.\n\n- Lua 5.1           http://www.lua.org\n- roslua 0.4                    http://github.com/timn/roslua\n\nDocumentation\n-------------\nAll public API functions and modules have been documented. The\ndocumentation is generated using LuaDoc by calling ""make doc"" in the\nroslua directory. Pre-generated documentation can be found in the\ndoc/ directory (open doc/index.html in a web browser of your choice).\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
acin-tuwien,http://rosindex.github.io/r/acin-tuwien/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
agas-ros-pkg,http://rosindex.github.io/r/agas-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
aisoy-ros-pkg,http://rosindex.github.io/r/aisoy-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
agentsystem_ros_tutorials,http://rosindex.github.io/r/agentsystem_ros_tutorials/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ais-bonn-ros-pkg,http://rosindex.github.io/r/ais-bonn-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ajh-ros-pkg,http://rosindex.github.io/r/ajh-ros-pkg/,electric,https://svn.code.sf.net/p/ajh-ros-pkg/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
allegro_hand_ros,http://rosindex.github.io/r/allegro_hand_ros/,"groovy,fuerte","allegro_hand_core_grasp,allegro_hand_core_pd,allegro_hand_core_velSat,allegro_hand_description,allegro_hand_keyboard,joint_state_publisher_experimental,urdf_python","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""allegro_hand_ros-beta2"">allegro_hand_ros beta2</h1>\n\n<p>This ROS Stack includes code and tools useful to users of SimLab Co., Ltd.\'s Allegro Hand.<br></p>\n\n<p><strong>Note:</strong> This stack works with Allegro Hands v3.0 and up by befault.\nSee the end of this document for how to use this package with an older Allegro Hand.</p>\n\n<p>For more information visit SimLab\'s <a href=""http://www.simlab.co.kr/AllegroHand/wiki"">Allegro Hand wiki</a>.<br>\nROS specific information can be found on the <a href=""http://www.ros.org/wiki/allegro_hand_ros"">ROS wiki</a>.</p>\n\n<p><strong>Announcement:</strong> The next major release of this stack will include the integration of certain sensor systems</p>\n\n<p><strong>Note:</strong> If controlling multiple allegro hands at once, please see the appropriate section below.</p>\n\n<h2 id=""contents"">Contents</h2>\n\n<ul>\n<li><p><strong>allegro_hand_common:</strong> Contains files common to multiple Allegro Hand controllers like CAN communication code.\n<strong>Note:</strong> libBHand (SimLab/KITECH\'s Allegro Hand Grasping Library) has been moved as a separate library available in SimLab\'s <a href=""http://www.simlab.co.kr/AllegroHand/wiki"">Allegro Hand wiki</a>.</p></li>\n<li>\n<p><strong>allegro_hand_controllers:</strong> Contains example controllers. </p>\n\n<ul>\n<li>PD Joint Space control</li>\n<li>Velocity Saturation Joint Space Control</li>\n<li>Grasping Library Interface</li>\n</ul>\n</li>\n</ul>\n\n<p>Please refer to PD Joint Space control folder for easily testing your own control code.</p>\n\n<p><strong>Note:</strong> The PD and Grasp controllers, along with the Velocity Saturation controller, include two control loop timing examples each. One method uses a timer interrupt while the other loops. Please research the benefits and downfalls of each of these on ROS.org.</p>\n\n<p><strong>Note:</strong> The prefered sampling method is utilizing the Hand\'s own real time clock running @ 333Hz by polling the CAN communication. In fact, ROS\'s inturrupt/sleep combination might cause instability in CAN communication resulting unstable hand motions. The solution is to have the main control loop polling the readDevice(). readDevice() will return when 16 encoder values are availbe in the CAN bus. Allegro Hand automatically writes 16 encoder values in every 1/333 sec. Notice that this polling method provides the stable sampling rate of 333 Hz!!!</p>\n\n<ul>\n<li><p><strong>allegro_hand_keyboard:</strong> Contains code for the keyboard node used to command different grasps. All commands are available when running the allegro_hand_core_grasp and only few commands are available when running allegro_hand_core_pd or running allegro_hand_core_pd controllers.</p></li>\n<li><p><strong>allegro_hand_description:</strong> Contains the robot description URDF for the Allegro Hand. Currently only the right hand is complete.</p></li>\n<li>\n<p><strong>parameters:</strong></p>\n\n<ul>\n<li>\n<strong>gains_pd.yaml:</strong> Contains PD gains used in allegro_hand_core_pd and allegro_hand_core_pd_slp.</li>\n<li>\n<strong>gains_velSat.yaml:</strong> Contains PD gains and velocity limits used in allegro_hand_core_velSat</li>\n<li>\n<strong>initial_position.yaml:</strong> Contains the initial position for the joints to got to when joint space controllers like <em>pd</em>, <em>pd_slp</em> and <em>velSat</em> are used. By default, this is the Allegro Hand <em>Home position</em>.</li>\n<li>\n<strong>zero.yaml:</strong> Offsets and directions for each of the 16 joints (Read in by the CAN communication code) Also includes Allegro Hand info specific to each hand like version number and serial number.\n<strong>Note:</strong> The inclusion of ""which_hand"" (right/left) in this file has been deprecated. This must be specified as an argument when launching any of the allegro_hand* launchers.</li>\n</ul>\n</li>\n</ul>\n\n<p><strong>Note:</strong> If any of the gains files or the initial positions file are missing, the two joint space controllers (<em>pd</em> and <em>velSat</em>) will load default values sepcified in the srespective allegroNode.cpp file. If zero.yaml is not loaded, the Allegro Hand will shut down automatically.</p>\n\n<h2 id=""launchers"">Launchers</h2>\n\n<ul>\n<li>\n<strong>allegro_hand.launch:</strong> Launches Allegro Hand with specified controller (default = grasp). Also launches keyboard controller and rviz visualizer.</li>\n<li>\n<strong>allegro_hand_noRviz.launch:</strong> Launches Allegro Hand with specified controller (default = grasp). Also launches keyboard controller and DOES NOT launch rviz visualizer.<br>\n</li>\n<li>\n<strong>allegro_hand_joint_gui.launch:</strong> Launches Allegro Hand with PD controller by defauly. Also launches a GUI interface for controlling each joint within its limits and rviz visualizer.</li>\n<li>\n<strong>allegro_hand_joint_gui_virtual.launch:</strong> Launches Allegro Hand kinematic model. Also launches a GUI interface for controlling each joint within its limits and rviz visualizer.</li>\n</ul>\n\n<p><strong>Note:</strong> All launch files (including virtual and actual hand) have the following arguments that can be specified:</p>\n\n<ul>\n<li>\n<p><strong>HAND:=</strong> (Used to specify which hand is being controlled)</p>\n\n<ul>\n<li>right</li>\n<li>left</li>\n<li>\n<strong>Note:</strong> There is no default. This arg must be specified.</li>\n</ul>\n</li>\n<li>\n<p><strong>NUM:=</strong> (Used to enumerate the hands when multiple will be controlled at once / Prevents naming and data conflicts)</p>\n\n<ul>\n<li>0 (default)</li>\n<li>Any Integer (1, 2, 3, ... )<br>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>GROOVY:=</strong> (Specify ROS distro)</p>\n\n<ul>\n<li>false (default, used for ROS Fuerte)</li>\n<li>true<br>\n</li>\n</ul>\n</li>\n</ul>\n\n<p><strong>Note:</strong> Also, the following arguments can be specified for actual hardware launch file:</p>\n\n<ul>\n<li>\n<p><strong>CONTROLLER:=</strong> (Specify the controller / Grasp library or simple joint space controller)</p>\n\n<ul>\n<li>grasp (default)</li>\n<li>pd</li>\n<li>velSat</li>\n</ul>\n</li>\n<li>\n<p><strong>pollling:=</strong> (Specify if CAN communication is done by polling)</p>\n\n<ul>\n<li>true (default)</li>\n<li>false</li>\n</ul>\n</li>\n<li>\n<p><strong>ZEROS:=</strong> (Specify the encoder/motor offsets and directions parameter file)</p>\n\n<ul>\n<li>zero.yaml (default)</li>\n<li>path to zero*.yaml file (ex. ""parameters/zero_files/zero_SAH020CR020.yaml"")</li>\n</ul>\n</li>\n<li>\n<p><strong>CAN_CH:=</strong> (Specify the CAN channel to which the hand is connected)</p>\n\n<ul>\n<li>/dev/pcan32 (default)</li>\n<li>another PEAK CAN Channel (see in /dev/*)</li>\n</ul>\n</li>\n</ul>\n\n<p><br>\n<strong>Examples:</strong><br>\n* To launch the default grasp controller w/o polling for the right Allegro Hand using Fuerte you can use either of the following two commands:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch allegro_hand.launch CONTROLLER:=grasp HAND:=right GROOVY:=false polling:=false\n\n</code></pre></div>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch allegro_hand.launch\n\n</code></pre></div>\n<p><br> \n* For the PD controller w/ polling on a right hand using Groovy:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch allegro_hand.launch HAND:=right CONTROLLER:=pd GROOVY:=true polling:=true\n\n</code></pre></div>\n<p><br> \n* Using velocity saturation controller on a left, CAN Channel 1 and the offsets, etc. for Hand SAH020CR020:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch allegro_hand.launch CONTROLLER:=velSat HAND:=left CAN_CH:=1 ZEROS:=parameters/zero_files/zero_SAH020CR020.yaml\n\n</code></pre></div>\n<h2 id=""controlling-more-than-one-hand"">Controlling More Than One Hand</h2>\n\n<p>*When running more than one hand using ROS, you must specify the number of the hand when launching.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  roslaunch allegro_hand.launch HAND:=right ZEROS:=parameters/zero0.yaml NUM:=0 CAN_CH:=/dev/pcan0 \n  roslaunch allegro_hand.launch HAND:=left  ZEROS:=parameters/zero1.yaml NUM:=1 CAN_CH:=/dev/pcan1\n\n</code></pre></div>\n<h2 id=""thanks"">Thanks</h2>\n\n<p>Please be advised, this is the first beta release of the ROS stack for SimLab\'s Allegro Hand platform. There will likely be bugs and there is much room for improvement. </p>\n\n<p>Please share you improvements to the code included in this release. Also, we would love to include the interesting controllers you may create as part of the package. Please keep an open line of contact as we continue to develop this software.</p>\n\n<p>Thanks.</p>\n\n<p>K.C. Chang <a href=""mailto:kcchang@simlab.co.kr"">kcchang@simlab.co.kr</a></p>\n\n<p><br></p>\n\n<p><strong>Note:</strong> As stated above, control loops utilizing both timer callbacks and ROS\' Rate object are included. Generally, the timer callback is more reliable as it will run the control code in a new thread if the previous iteration fails to end within the given crol period. The rate object, aling with a spinOnce() and a sleep, generally does a fine job but some anomolies have been recognized where the loop toaks much too long and remains blocked until finishing. Using the rate/sleep method allows for simpler code. However, due to Allegro Hand\'s own real time clock sampling rate (@333Hz) to write 16 encoder values to the CAN bus, interrupt/rate/sleep can cause conflicts in the CAN communication resulting unstable motions. Finally, we mention our preferred solution one more time. The solution is to have the main control loop polling the CAN-readDevice(). readDevice() will return when 16 encoder values are availbe and read in the CAN bus. Since Allegro Hand automatically writes 16 encoder values in every 1/333 sec, this polling method provides the stable sampling rate of 333 Hz!!! </p>\n\n<p>Loop:\n* writeTorque()\n* readEncoder()\n* userInterface()\n* computeTorque()</p>\n\n<h2 id=""for-allegro-hand-v3-0"">For Allegro Hand v3.0</h2>\n\n<p>TODO\nAdapt to new versions of Ubuntu and ROS. Too many!!! :)</p>\n</div>\n\n            \n          </div>'"
alufr-ros-pkg,http://rosindex.github.io/r/alufr-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
albany-ros-pkg,http://rosindex.github.io/r/albany-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
amigo_simulator,http://rosindex.github.io/r/amigo_simulator/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
amigo_common,http://rosindex.github.io/r/amigo_common/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
amor-ros-pkg,http://rosindex.github.io/r/amor-ros-pkg/,fuerte,http://code.google.com/p/amor-ros-pkg/,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
android_robot_monitor,http://rosindex.github.io/r/android_robot_monitor/,"electric,groovy,fuerte",android_robot_monitor,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
android_sensors_driver,http://rosindex.github.io/r/android_sensors_driver/,"electric,groovy,fuerte",android_sensors_driver,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Authors:\n chadrockey@gmail.com (Chad Rockey)\n axelfurlan@gmail.com (Axel Furlan)\n\nThis is an extension to the first version of the Ros Android Sensors Driver.\nIt extends the driver to camera readings and updates the previous version to the post-gradle shift of the rosjava libs.\nTwo compression methods are currently supported, PNG and JPEG (with selectable compression quality).\nThe topic names are:\n\n /android/imu\n /android/fix (GPS)\n /camera/camera_info\n /camera/image/compressed\n\n\n\n\nCompiling:\n\nTo compile it on you machine, please follow the detailed instructions at:\n\nRosjava:\n http://www.dobots.nl/blog/-/blogs/android-and-rosjava\n\nOnce your environment is set, do the following steps:\n 1) git clone the repo in the android_core folder (the same folder where tutorials are).\n 2) Edit the settings.gradle file in the android_core folder, adding \'android_sensors_driver\' at the end of the include list.\n 3) cd android_sensors_driver; ../gradlew clean debug\n\nFor the whole process of building, packing, installing into the phone and running the app in debug mode, use the buildAll.sh script.\n\n</code></pre></div></div>\n\n            \n          </div>'"
appl,http://rosindex.github.io/r/appl/,"electric,fuerte",appl,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is just a wrapper package. Please refer to the wiki page http://www.ros.org/wiki/appl to find out more details.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
aptima-ros-pkg,http://rosindex.github.io/r/aptima-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ardrone_utd,http://rosindex.github.io/r/ardrone_utd/,electric,ardrone_utd,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
arl_ardrone_examples,http://rosindex.github.io/r/arl_ardrone_examples/,fuerte,arl_ardrone_examples,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1>ROS AR.Drone Examples</h1>\n\n<p>ARLab @ University of Utah</p>\n\n<p>http://arl.cs.utah.edu</p>\n\n<p>http://www.cs.utah.edu/~parcon/</p>\n\n<p>Parker Conroy</p>\n\n<hr>\n\n<p>The ardrone examples package features a variety of nodes to help users get the AR.Drone quadrotor robot flying quickly. This code has been tested on the the AR.Drone 1 and 2. Example code is provided for: taking off, landing, resetting, flying for joystick, and open loop flying. </p>\n\n<p>These nodes rely on the AR.Drone Autonomy package (<a href=""https://github.com/AutonomyLab/ardrone_autonomy"">https://github.com/AutonomyLab/ardrone_autonomy</a>) which act as the drivers for the robot. The drivers accept two types of commands, velocity inputs via twist messages (<a href=""http://www.ros.org/doc/api/geometry_msgs/html/msg/Twist.html"">http://www.ros.org/doc/api/geometry_msgs/html/msg/Twist.html</a>), and mode changes via empty type messages (<a href=""http://ros.org/wiki/std_msgs"">http://ros.org/wiki/std_msgs</a>). These commands can be given from either the command line (rostopic echo) or through a compiled node.</p>\n\n<p>Setup:\ngit the AR.Drone autonomy package and put it in your ROS workspace. Because of the video codecs, it needs to be installed as shown in the readme (<a href=""https://github.com/AutonomyLab/ardrone_autonomy"">https://github.com/AutonomyLab/ardrone_autonomy</a>).\ngit this package and put it in your ROS workspace, no install needed.\nLaunch the drivers and battery monitor using the launch file: \nroslaunch enviroment.launch\nRun the take off node! \nrosrun takeoff</p>\n\n<p>To use the joystick flying node, one must install the ros joy package if it is not already on the system (<a href=""http://www.ros.org/wiki/joy"">http://www.ros.org/wiki/joy</a>). Joystick nodes generally use a joy type message, which the fly_from_joy node expects. Please dig into the source code (.cpp files) to see how it is conducted further.</p>\n\n<p>This package was developed because I found myself (at the time a beginner to ROS) a little overwhelmed when beginning to use the AR.Drone in a linux environment. After talking to other users, I decided to formally release a package of the sample nodes I created for my laboratory. Explicit use of these nodes isn\'t really expected, as they are more of a jumping off point for more functional code. Feel free to contact me through the github page with additions to the package or questions.</p>\n</div>\n\n            \n          </div>'"
arm_navigation_experimental,http://rosindex.github.io/r/arm_navigation_experimental/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
arm_navigation,http://rosindex.github.io/r/arm_navigation/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
art_vehicle,http://rosindex.github.io/r/art_vehicle/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
asctec_drivers,http://rosindex.github.io/r/asctec_drivers/,"electric,fuerte","asctec_autopilot,asctec_mon,asctec_msgs,asctec_proc,ccny_asctec_firmware,ccny_asctec_firmware_2,pelican_urdf","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">cazzo\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">todo\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
articulation,http://rosindex.github.io/r/articulation/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
assimp,http://rosindex.github.io/r/assimp/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
astar-ros-pkg,http://rosindex.github.io/r/astar-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
barrett-ros-pkg,http://rosindex.github.io/r/barrett-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
behavior_engine,http://rosindex.github.io/r/behavior_engine/,electric,example_skills,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nbehavior_engine: Behavior Engine stack for ROS\n==============================================\n\nThis stack provides the Behavior Engine, an environment to develop, execute,\nand monitor robot behavior. It uses Lua to create this environment, an in\nparticular roslua to interact with ROS [1]. It has been ported from the\nFawkes robot software framework [2]. We aim to provide an environment, which\neradicates as many differences from the underlying base system as possible,\nto have a unified development environment for robotic behavior on both\nrobot software systems.\n\nThe behavior engine and its underlying concepts has been described in [3],\nand to a greater detail in [4].\n\n[1] http://www.ros.org\n[2] http://www.fawkesrobotics.org\n[3] ""A Lua-based Behavior Engine for Controlling the Humanoid Robot Nao"",\n    Tim Niemueller, Alexander Ferrein, and Gerhard Lakemeyer\n    In Proc. of the RoboCup Symposium 2009, Graz, Austria (Springer)\n    http://fawkesrobotics.org/publications/2009/rc2009-lua-behavior-engine/\n[4] ""Developing A Behavior Engine for the Fawkes Robot-Control Software and\n    its Adaptation to the Humanoid Platform Nao""\n    Tim Niemueller\n    Master\'s Thesis, RWTH Aachen University, 2009\n\nPackages\n--------\nThe following packages are included in this stack:\n actionlib_lua::\n  This package is used to make actionlib actions available in the Lua\n  environment. Actionlib is the main interaction entity with the underlying\n  base system on ROS.\n\n fawkes_lua::\n  Lua code ported straight from Fawkes, provding general utilities and finite\n  and hybrid state machines.\n\n lua_utils::\n  C++ utility classes to interact with the Lua interpreter context, ported\n  straight from Fawkes.\n\n skiller::\n  The skill execution and runtime environment is the core of the behavior\n  engine. It provides the Lua environment for developing, executing, and\n  monitoring skills, reactive execution entities.\n\n luaagent::\n  The concept of reactive execution of the skiller has been applied to the\n  high-level task description for easy prototyping and testing the skiller\n  interaction with high-level agents. This package provides the run-time\n  environment for such agent programs.\n\n skillgui::\n  A GUI application to instruct and monitor skiller and luaagent. It can\n  display the state machines and execution trace in real-time.\n\n herb_skills::\n  A package containing several skills for HERB, the Home Exploring Robot\n  Butler at Intel Labs Pittsburgh. Although specific to the particular\n  platform and domain, it can still serve as a documenting example.\n\n herb_agents::\n  This package contains high-level agent specifications for HERB at Intel\n  Labs Pittsburgh.\n\nRequirements\n------------\nThe Behavior Engine requires roslua (http://github.com/timn/roslua) to\ninteract with ROS. Please download it separately and make sure that it is\nworking.\n\nThere are several packages required on your local system by the packages\nthat compose this stack. The easiest way to get everything needed is to use\nrosdep, as all dependencies have been properly documented. Make sure you\nhave downloaded the stack before doing this as described below. Execute:\n\nrosdep satisfy behavior_engine\n\nIt will give you a command line that you need to execute as root to get all\nrequired packages.\n\nInstallation\n------------\nDownload the behavior_engine stack and add it to your ROS package path.\ngit clone --recursive git://github.com/timn/ros-behavior_engine.git\n\nEnsure that roslua is working on your system by executing the examples that\ncome with it. Also call rosdep as described above to install the system\ndependencies. Then build the software with ""rosmake behavior_engine"".\n\n\nDocumentation\n-------------\nThe source code of all modules is fully documented (API). Guides and more\ndescriptive is currently work in progress.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
astromech-ros,http://rosindex.github.io/r/astromech-ros/,electric,https://svn.code.sf.net/p/astromech-ros/code/,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
auction_methods_stack,http://rosindex.github.io/r/auction_methods_stack/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
beliefstate,http://rosindex.github.io/r/beliefstate/,groovy,,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""beliefstate"">beliefstate</h1>\n\n<p>The beliefstate package supplies a ROS driven system with recording capabilities on low (sensor messages), and on high (symbolic) data level. Its sole idea is to keep track of the contexts in which a high level plan execution system performs actions, record its parameters, and give a detailed output about what happened during execution.</p>\n\n<p>Due to popular demand, the project was moved to a different repository:</p>\n\n<p><a href=""https://github.com/code-iai/ros-semrec"">https://github.com/code-iai/ros-semrec</a></p>\n\n<p>Please refer to this repository for any current code, documentation, and contributions.</p>\n</div>\n\n            \n          </div>'"
bilibot-ros-pkg,http://rosindex.github.io/r/bilibot-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
biorob_common,http://rosindex.github.io/r/biorob_common/,"hydro,electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
biped_robin,http://rosindex.github.io/r/biped_robin/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
biped_robin_apps,http://rosindex.github.io/r/biped_robin_apps/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bosch-ros-pkg-e,http://rosindex.github.io/r/bosch-ros-pkg-e/,electric,http://svn.code.sf.net/p/bosch-ros-pkg-e/code/trunk/,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bosch-ros-pkg,http://rosindex.github.io/r/bosch-ros-pkg/,electric,http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
biped_robin_viz,http://rosindex.github.io/r/biped_robin_viz/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bosch_common,http://rosindex.github.io/r/bosch_common/,"groovy,fuerte",http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/stacks/bosch_common,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bosch_drivers,http://rosindex.github.io/r/bosch_drivers/,"groovy,fuerte",http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/stacks/bosch_drivers,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bosch_3rdparty,http://rosindex.github.io/r/bosch_3rdparty/,"groovy,fuerte",http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/stacks/bosch_3rdparty,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bosch_image_proc,http://rosindex.github.io/r/bosch_image_proc/,"groovy,fuerte",http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/stacks/bosch_image_proc,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
brown_drivers,http://rosindex.github.io/r/brown_drivers/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bosch_manipulation_utils,http://rosindex.github.io/r/bosch_manipulation_utils/,electric,http://svn.code.sf.net/p/bosch-ros-pkg/code/branches/electric/stacks/bosch_manipulation_utils,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bosch_proximity_sensor,http://rosindex.github.io/r/bosch_proximity_sensor/,fuerte,http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/stacks/bosch_proximity_sensor,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
brown-ros-pkg,http://rosindex.github.io/r/brown-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bosch_web_visualization,http://rosindex.github.io/r/bosch_web_visualization/,fuerte,http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/stacks/bosch_web_visualization,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
brown_perception,http://rosindex.github.io/r/brown_perception/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
camera_drivers,http://rosindex.github.io/r/camera_drivers/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
brown_remotelab,http://rosindex.github.io/r/brown_remotelab/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
bullet,http://rosindex.github.io/r/bullet/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
can_communication,http://rosindex.github.io/r/can_communication/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
camera_pose,http://rosindex.github.io/r/camera_pose/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cart_pushing,http://rosindex.github.io/r/cart_pushing/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
clearpath_common,http://rosindex.github.io/r/clearpath_common/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ccny_vision,http://rosindex.github.io/r/ccny_vision/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
clearpath-ros-pkg,http://rosindex.github.io/r/clearpath-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
chair_grasping,http://rosindex.github.io/r/chair_grasping/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
clearpath_kinect,http://rosindex.github.io/r/clearpath_kinect/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
clearpath_kingfisher,http://rosindex.github.io/r/clearpath_kingfisher/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
clearpath_turtlebot,http://rosindex.github.io/r/clearpath_turtlebot/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
client_rosjava_jni,http://rosindex.github.io/r/client_rosjava_jni/,groovy,"rosjava_jni,test_rosjava_jni,tfjava","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
clearpath_husky,http://rosindex.github.io/r/clearpath_husky/,groovy,"husky_bringup,husky_description,husky_interactive_markers,husky_localization,husky_navigation","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""clearpath_husky"">clearpath_husky</h1>\n\n<p>Legacy rosbuild packages for Husky. Please use ROS Hydro; packages are on the new Husky org:</p>\n\n<p><a href=""https://github.com/husky"">https://github.com/husky</a></p>\n\n<p>As always, the most up-to-date information may be found on the ROS wiki:</p>\n\n<p><a href=""http://wiki.ros.org/Robots/Husky"">http://wiki.ros.org/Robots/Husky</a></p>\n</div>\n\n            \n          </div>'"
cn-roscs-ros-pkg,http://rosindex.github.io/r/cn-roscs-ros-pkg/,,,b''
cmu-ros-pkg,http://rosindex.github.io/r/cmu-ros-pkg/,electric,https://svn.code.sf.net/p/cmu-ros-pkg/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cn-util-ros-pkg,http://rosindex.github.io/r/cn-util-ros-pkg/,,,b''
cn-alica-ros-pkg,http://rosindex.github.io/r/cn-alica-ros-pkg/,,,b''
common,http://rosindex.github.io/r/common/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
common_rosdeps,http://rosindex.github.io/r/common_rosdeps/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
colbot-ros-pkg,http://rosindex.github.io/r/colbot-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
control,http://rosindex.github.io/r/control/,"electric,fuerte",control_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
continuous_ops,http://rosindex.github.io/r/continuous_ops/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cram_physics,http://rosindex.github.io/r/cram_physics/,"electric,groovy,fuerte","bullet_reasoning,bullet_reasoning_designators,cl_bullet,cl_bullet_vis,cl_glx,cl_opengl,cram_environment_representation,cram_physics,cram_pr2_knowledge,pr2_description_lowres,pr2_projection_process_modules,spatial_relations_costmap,bullet_reasoning_demo,cl_urdf,kdl_arm_kinematics,robot_mask,triangulate_point_cloud","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cram_pr2,http://rosindex.github.io/r/cram_pr2/,"electric,groovy","cram_pr2,point_head_process_module,pr2_manipulation_knowledge,pr2_manipulation_process_module,pr2_navigation_process_module,pr2_reachability_costmap","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cram_pr2"">cram_pr2</h1>\n\n<p>CRAM packages related to the PR2, e.g. process modules, or costmaps.</p>\n</div>\n\n            \n          </div>'"
cornell-ros-pkg,http://rosindex.github.io/r/cornell-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cram_highlevel,http://rosindex.github.io/r/cram_highlevel/,"electric,groovy,fuerte","cffi_ros_utils,cl_semantic_map_utils,continuous_interaction,cram_highlevel,cram_manipulation_knowledge,cram_physics_utils,cram_plan_actionserver,cram_plan_failures,cram_plan_knowledge,cram_plan_library,cram_roslisp_common,cram_task_knowledge,designators_ros,execution_trace_server,fake_process_module,location_costmap,location_designator_projection,map_annotation,object_location_designators,occupancy_grid_costmap,semantic_map_cache,semantic_map_collision_environment,semantic_map_costmap,cl_json_pl_client,cl_json_pl_server,cljlo,cljlo_utils,cram_feature_constraints,fake_process_modules,perception_process_module,trivial_gray_streams,visibility_costmap,yason","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cram_rosie,http://rosindex.github.io/r/cram_rosie/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cyphy_elas_ros,http://rosindex.github.io/r/cyphy_elas_ros/,fuerte,https://code.google.com/p/cyphy-elas-ros/,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cyphy_people_mapping,http://rosindex.github.io/r/cyphy_people_mapping/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cu-ros-pkg,http://rosindex.github.io/r/cu-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cri,http://rosindex.github.io/r/cri/,electric,cri,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""cri"">cri</h1>\n\n<p>A customizable robot interface</p>\n</div>\n\n            \n          </div>'"
cyphy_ros_pkg,http://rosindex.github.io/r/cyphy_ros_pkg/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
cyphy_vis_slam,http://rosindex.github.io/r/cyphy_vis_slam/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
coverage_3d,http://rosindex.github.io/r/coverage_3d/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
darm_dashboard,http://rosindex.github.io/r/darm_dashboard/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
darwin_robot,http://rosindex.github.io/r/darwin_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
darpa_arm_msgs,http://rosindex.github.io/r/darpa_arm_msgs/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
darpa_arm_sim_servers,http://rosindex.github.io/r/darpa_arm_sim_servers/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dfki-sks-ros-pkg,http://rosindex.github.io/r/dfki-sks-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
differential_drive,http://rosindex.github.io/r/differential_drive/,"electric,groovy,fuerte",https://code.google.com/p/differential-drive,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
demo_lidar,http://rosindex.github.io/r/demo_lidar/,"hydro,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
diagnostics_monitors,http://rosindex.github.io/r/diagnostics_monitors/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
demo_rgbd,http://rosindex.github.io/r/demo_rgbd/,"hydro,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
drh-robotics-ros,http://rosindex.github.io/r/drh-robotics-ros/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dmp,http://rosindex.github.io/r/dmp/,"groovy,fuerte",dmp,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Documentation for dmp\nPackage maintained by Scott Niekum\nsniekum@willowgarage.com\nsniekum@cs.umass.edu\n****************************************\n\n\nOVERVIEW\n---------\n\nThis package is a general, robot-agnostic implementation of dynamic movement primitives (DMPs).  A good reference on DMPs can be found at: http://www-clmc.usc.edu/publications/P/pastor-ICRA2009.pdf\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
documentation,http://rosindex.github.io/r/documentation/,"electric,groovy,fuerte",rosdoc,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dlut-ros-pkg,http://rosindex.github.io/r/dlut-ros-pkg/,fuerte,"dlut_place_recognition,camera_laser_calibration,dlut_vision,laser_points_colouration,sick_laser,dlut_motor_hokuyo,dlut_move_base,dlut_pc_odom","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""></div>\n\n            \n          </div>'"
drrobot_jaguar4x4_player,http://rosindex.github.io/r/drrobot_jaguar4x4_player/,fuerte,drrobot_jaguar4x4_player,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""drrobot_jaguar4x4_player"">drrobot_jaguar4x4_player</h1>\n\n<p>The project is for Jaguar 4x4 robot before 2014. This project need DrRobotMotionSensorDriver project. Please fork or copy these 2 project to your catkin working space under ROS.</p>\n</div>\n\n            \n          </div>'"
dynamic_door_manipulation,http://rosindex.github.io/r/dynamic_door_manipulation/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dri-ros-pkg,http://rosindex.github.io/r/dri-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eddiebot_head_tracking,http://rosindex.github.io/r/eddiebot_head_tracking/,"electric,groovy,fuerte",eddiebot_head_tracking,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eddiebot,http://rosindex.github.io/r/eddiebot/,"electric,groovy,fuerte","eddiebot_bringup,eddiebot_description,eddiebot_driver,eddiebot_node","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eddiebot_follower,http://rosindex.github.io/r/eddiebot_follower/,"electric,groovy,fuerte",eddiebot_follower,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
dynamic_voronoi,http://rosindex.github.io/r/dynamic_voronoi/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
elektron_gui,http://rosindex.github.io/r/elektron_gui/,"groovy,fuerte",elektron_dashboard,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eigen,http://rosindex.github.io/r/eigen/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
elektron_kinectbot,http://rosindex.github.io/r/elektron_kinectbot/,"groovy,fuerte","elektron_calibration,elektron_navigation,elektron_teleop,laser_avoid,pcl_to_scan","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eddiebot_line_follower,http://rosindex.github.io/r/eddiebot_line_follower/,"electric,groovy,fuerte",eddiebot_line_follower,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eddiebot_teleop,http://rosindex.github.io/r/eddiebot_teleop/,"electric,groovy,fuerte",eddiebot_teleop,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
elektron_robot,http://rosindex.github.io/r/elektron_robot/,"groovy,fuerte","elektron_base,elektron_bringup,elektron_defs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eml,http://rosindex.github.io/r/eml/,"hydro,indigo",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
element,http://rosindex.github.io/r/element/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
eohan,http://rosindex.github.io/r/eohan/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ethzasl_aseba,http://rosindex.github.io/r/ethzasl_aseba/,"diamondback,electric,groovy,fuerte","aseba,asebaros,dashel,thymio_navigation_driver","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>This <a href=""http://www.ros.org"">ROS</a> stack is a bridge to access an <a href=""http://aseba.wikidot.com"">Aseba</a> network from <a href=""http://www.ros.org"">ROS</a>.\nFor compilation instructions, see the README.md in the <code>asebaros</code> directory.</p>\n</div>\n\n            \n          </div>'"
estirabot_robot,http://rosindex.github.io/r/estirabot_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ethzasl_message_transport,http://rosindex.github.io/r/ethzasl_message_transport/,"electric,groovy,fuerte","build_all_transport_pkg,bz2_transport,compressed_imagem_transport,imagem_transport,message_transport_common,pointcloud_transport,sharedmem_transport,string_transport,templated_transports,theora_imagem_transport,throttled_transport,udpmulti_transport","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ethzasl_drivers,http://rosindex.github.io/r/ethzasl_drivers/,"groovy,fuerte","canon_vbc50i,panasonic_blc111,vicon_bridge","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>This stack provides ROS drivers for various hardware.</p>\n</div>\n\n            \n          </div>'"
ethzasl_sensor_fusion,http://rosindex.github.io/r/ethzasl_sensor_fusion/,"electric,groovy,fuerte","ethzasl_sensor_fusion,sensor_fusion_comm,ssf_core,ssf_updates","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ethzasl_sensor_fusion"">ethzasl_sensor_fusion</h1>\n\n<p>time delay compensated single and multi sensor fusion framework based on an EKF</p>\n</div>\n\n            \n          </div>'"
euRobotics_orocos_ws,http://rosindex.github.io/r/euRobotics_orocos_ws/,electric,"calculateDistanceToWall,extendedKalmanFilterComponentRobot,remote_simulation,youbot_controller,youbot_simulator,youbot_supervisor,youbot_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">OROCOS demo application - euRobotics Forum April 7th, 2011\n\nSee https://github.com/bellenss/euRobotics_orocos_ws/wiki\nfor documentation.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
ethzasl_ptam,http://rosindex.github.io/r/ethzasl_ptam/,"electric,groovy,fuerte","ethzasl_ptam,ptam,ptam_com,rqt_ptam","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ethzasl_ptam"">ethzasl_ptam</h1>\n\n<p>Modified version of Parallel Tracking and Mapping (PTAM) by George Klein. See <a href=""http://wiki.ros.org/ethzasl_ptam"">http://wiki.ros.org/ethzasl_ptam</a> for a detailed overview.</p>\n\n<p><a href=""http://129.132.38.183:8080/job/ethzasl_ptam/""><img src=""http://129.132.38.183:8080/job/ethzasl_ptam/badge/icon"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
euslisp,http://rosindex.github.io/r/euslisp/,,,b''
executive_teer,http://rosindex.github.io/r/executive_teer/,"diamondback,electric,groovy,fuerte","teer_example_turtle,teer_ros","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
executive_rgoap,http://rosindex.github.io/r/executive_rgoap/,groovy,"rgoap,rgoap_ros,rgoap_smach","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""executive_rgoap"">executive_rgoap</h1>\n\n<p>RGOAP is a robotic planning system based on the concept of goal oriented action planning</p>\n</div>\n\n            \n          </div>'"
evapi_ros,http://rosindex.github.io/r/evapi_ros/,,,b''
exploration,http://rosindex.github.io/r/exploration/,"groovy,fuerte",http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/stacks/exploration,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
fawkes_lua,http://rosindex.github.io/r/fawkes_lua/,electric,fawkes_lua,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nfawkes_lua: Fawkes Lua code for ROS\n===================================\n\nThis package provides the Lua utility classes taken from the Fawkes source\ntree. The goal of this package is to allow for a free flow of this Lua code\nbetween Fawkes and ROS without the need for platform-specific changes on\ncode transfer. Keep this in mind when changing these files.\n\nRequirements\n------------\nThe package contains rather generic Lua code and has no specific requirements.\n\nDocumentation\n-------------\nDocumentation has been generated using luadoc and is available in the doc\nsubdirectory.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
falkor_ardrone,http://rosindex.github.io/r/falkor_ardrone/,fuerte,falkor_ardrone,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""falkor_ardrone-a-ros-package-to-control-an-ar-drone-autonomously"">falkor_ardrone: A ROS package to control an AR.Drone autonomously</h1>\n\n<h2 id=""introduction"">Introduction</h2>\n\n<p>""falkor_ardrone"" is a <a href=""http://ros.org/"" title=""Robot Operating System"">ROS</a> package which uses the ""ardrone_autonomy"" package (originally from brown, now from AutonomyLab) to implement autonomous control functionality on an AR.Drone. This was originally a part of the <a href=""http://github.org/FalkorSystems/ardrone_autonomy"">fork from ""ardrone_autonomy""</a>, but now it has been seperated out. The old forked repository still exists for history purposes but it is stale.</p>\n\n<h3 id=""updates"">Updates</h3>\n\n<ul>\n<li>\n<em>March 20, 2013</em>: Release related to company launch/Wired article</li>\n<li>\n<em>October 23, 2012</em>: Create this seperate package</li>\n</ul>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>Once the AR.Drone is connected to your computer via WiFi, run</p>\n<div class=""highlight""><pre><code class=""language-bash"" data-lang=""bash"">     <span class=""nv"">$ </span>roslaunch falkor_ardrone track.launch\n\n</code></pre></div>\n<p>This launches the <code>ardrone_driver</code> from <code>ardrone_autonomy</code> to communicate with the AR.Drone, as well as the nodes needed for the AR.Drone to track the target. The cascade files used for detection are in the directory <code>cascade/</code>. Edit the <code>cascadefile</code> parameter in roslaunch to change which cascade file to use.</p>\n\n<p>Once everything is up and running you should see a window with the front camera from the AR.Drone and a square yellow box around the detected object. The PS3 controller has the following </p>\n\n<h3 id=""right-gamepad"">Right gamepad</h3>\n\n<ul>\n<li>Triangle: Takeoff</li>\n<li>Circle: Reset</li>\n<li>Cross: Land</li>\n<li>Square: Start/Stop following</li>\n</ul>\n\n<h3 id=""left-gamepad"">Left gamepad</h3>\n\n<ul>\n<li>Up: Bring AR.Drone closer (increase goal size of the target)</li>\n<li>Down: Move AR.Drone further away (decrease goal size of the </li>\n</ul>\n\n<h3 id=""joysticks-mode-1"">Joysticks (Mode 1)</h3>\n\n<ul>\n<li>Left Joystick: Pitch and Roll</li>\n<li>Right Joystick: Altitude and Yaw</li>\n</ul>\n\n<h3 id=""more-buttons"">More Buttons</h3>\n\n<ul>\n<li>Center PS3 Button: Toggle recording to USB stick</li>\n</ul>\n\n<h2 id=""license"">License</h2>\n\n<p>Copyright (c) 2012, Falkor Systems, Inc.\nAll rights reserved.</p>\n\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n\n<p>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n            \n          </div>'"
extremum_seeking,http://rosindex.github.io/r/extremum_seeking/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
fkie-ros-pkg,http://rosindex.github.io/r/fkie-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
flirtlib_features,http://rosindex.github.io/r/flirtlib_features/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
fcl_ros,http://rosindex.github.io/r/fcl_ros/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
foote-nxt,http://rosindex.github.io/r/foote-nxt/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
foote-phidget,http://rosindex.github.io/r/foote-phidget/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
freiburg_tools,http://rosindex.github.io/r/freiburg_tools/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
flyatar,http://rosindex.github.io/r/flyatar/,electric,"stage,stage_action_server,stage_message_interface,flyatar_calibration,flyatar_action_client,flyatar_avatar,flyatar_experiments,flyatar_manual,save_data,image_gui,pythonmodules,joystick_commands,track_image_contours,camera1394v2,camera_firewire,joystick_ps3,flysim,flysim_teleop,flysim_tf,plate_tf","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang=""""># Install Ubuntu:\n# http://www.ubuntu.com/desktop/get-ubuntu/download\n# ubuntu-10.04.1-desktop-amd64\n# Create user flyatar-admin\n\n# Install Ubuntu packages\nsudo apt-get install build-essential python-yaml cmake subversion wget git-core git-gui git-doc\n\n# ROS Installation:\nsudo sh -c \'echo ""deb http://code.ros.org/packages/ros/ubuntu lucid main"" &gt; /etc/apt/sources.list.d/ros-latest.list\'\nwget http://code.ros.org/packages/ros.key -O - | sudo apt-key add -\nsudo apt-get update\necho ""hddtemp hddtemp/daemon boolean false"" | sudo debconf-set-selections\nsudo apt-get install ros-cturtle-pr2all\n\n# Make new user flyatar-user\nsudo adduser flyatar-user\n\n# Login as flyatar-user and setup local bin directory\nmkdir ~/bin\nexport PATH=~/bin:$PATH\n\n# Create Local Flyatar Git Repository:\ngit clone git://github.com/peterpolidoro/Flyatar.git ~/git/Flyatar\ncp ~/git/Flyatar/ros/rosinstall ~/bin/\nsource /opt/ros/cturtle/setup.sh\nrosinstall -o ~/ros/Flyatar ~/git/Flyatar/ros/flyatar.local.rosinstall\necho ""source ~/ros/Flyatar/setup.sh"" &gt;&gt; ~/.bashrc\n. ~/.bashrc\n\n# Setting Groups and Permissions:\nsudo adduser $USER disk\nsudo groupadd usb\nsudo adduser $USER usb\nsudo cp ~/git/Flyatar/ros/udevrules/99*.rules /etc/udev/rules.d/\n# restart computer\n\n# Compiling:\nrosmake flyatar_experiments\n\n# Running Wait Experiment:\nroslaunch flyatar_experiments wait_experiment.launch\n\n# Updating Flyatar Code to get the latest git repository on github:\ncd ~/git/Flyatar\ngit pull origin master\nrosinstall -u ~/ros/Flyatar\n\n# Updating Flyatar Code to get local git repository changes:\nrosinstall -u ~/ros/Flyatar\n\n# Example Local Repository Code Modification:\n# Change in-bounds radius from 60mm to 90mm for wait experiment\ncd ~/git/Flyatar/ros/control/flyatar_experiments/launch\n# Open wait_experiment.launch in your favorite editor\n# Change this line: &lt;param name=""in_bounds_radius"" type=""double"" value=""60""/&gt;\n# To this: &lt;param name=""in_bounds_radius"" type=""double"" value=""90""/&gt;\n# Change this line: &lt;param name=""move_distance"" type=""double"" value=""65""/&gt;\n# To this: &lt;param name=""move_distance"" type=""double"" value=""95""/&gt;\n# Save wait_experiment.launch\ngit commit -a -m ""Modified in-bounds radius from 60mm to 90mm""\nrosinstall -u ~/ros/Flyatar\n\n# Converting bag files to directories of images and videos:\n# Create ~/FlyatarData/bag_file_play_list\n# Each line of the file bag_file_play list should contain the name of a single bag file\n# The bag files should be in the directory ~/FlyatarData/*_Bags/\n# Example bag_file_play_list:\n# 2010_12_14_14_46_07.bag\n# 2010_12_14_14_46_17.bag\n# 2010_12_14_14_46_23.bag\n# \n# These bag files should be located in ~/FlyatarData/2010_12_14_Bags/\n# Then run roslaunch file to save images and videos to ~/Videos/\nrosmake save_data\nroslaunch save_data play_bags_save_video_nocat.launch\n\n# Calibration:\n# Todo: Simplify calibration, change calibration data location, save all data automatically\nsudo mkdir /cameras\nsudo chgrp disk cameras/\nsudo chmod g+rwx cameras/\nroslaunch camera1394v2 flyatar_camera_cal_a.launch\n# open new terminal\nrosmake image_view\nrosrun image_view image_view image:=camera/image_raw\n# open new terminal\nrosrun dynamic_reconfigure reconfigure_gui camera1394v2_node\n# adjust camera and brightness, exposure, gain, and shutter values\n# record in Flyatar/ros/calibration/flyatar_calibration/calibration_data/basler_a622f_cal_b.yaml\n# record in Flyatar/ros/calibration/flyatar_calibration/calibration_data/basler_a622f_cal_c.yaml\n# ctrl-c to shutdown flyatar_camera_cal_a.launch\nroslaunch camera1394v2 flyatar_camera_cal_b.launch\n# open new terminal\nrosdep install camera_calibration\nrosmake camera_calibration\n# print out ~/git/Flyatar/ros/calibration/flyatar_calibration/patterns/camera_calibration_pattern_30mm.pdf in 1:1 scale\n# measure each checker to make sure it is 30mm, then tape pattern to something flat\n# unmount camera from rig if necessary to give calibration pattern plenty of room to move\nrosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.030 image:=/camera/image_raw camera:=/camera\n# wave 30mm checkerboard pattern in front of camera until calibrate button activates\n# click calibrate button\n# click commit button\nmv /tmp/calibration_00305300013c2f28.yaml /cameras/basler_a622f_calibration.yaml\ncp /cameras/basler_a622f_calibration.yaml /cameras/basler_a622f_rect_calibration.yaml\n# ctrl-c to shutdown flyatar_camera_cal_b.launch\nrosmake image_proc\nroslaunch camera1394v2 flyatar_camera_cal_c.launch\n# open new terminal\nrosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.030 image:=/camera/image_rect camera:=/camera\n# wave 30 mm checkerboard in front of camera until calibrate button activates\n# click calibrate button\n# click commit button\n# ctrl-c to shutdown flyatar_camera_cal_c.launch\n# transfer camera calibration info from /cameras/basler_a622f_calibration.yaml \n#  and /cameras/basler_a622f_rect_calibration.yaml into \n#  $(find flyatar_calibration)/calibration_data/camera_calibration_data.launch by hand\n# mount camera on flyatar rig, position so that the arena is roughly centered in image\nroslaunch flyatar_calibration CameraPlate.launch\n# use left joystick to move green circle until centered on plate\n# use right joystick to change green circle radius until on edges of plate\n# record mask radius and camera_plate_origin info into camera_plateimage_calibration_data.launch\n# print out ~/git/Flyatar/ros/calibration/flyatar_calibration/patterns/camera_plate_calibration_pattern.pdf in 1:1 scale\n# measure each checker to make sure it is 15mm, then use scissors to cut along circular line surrounding pattern\n# place cicular paper containing the checkerboard pattern on plate\n# record rvec and tvec info into camera_plate_calibration_data.launch, the values appear on the image if the calibration is successful\n# ctrl-c to shutdown CameraPlate.launch\nrm /cameras/background.png\n# remove all objects from plate, next step acquires a background image\nroslaunch track_image_contours track_image_contours_view_images.launch\n# place magnet on plate, check to see if contour is found properly\n# ctrl-c to shutdown track_image_contours_view_images.launch\n# reset power on Atmel motorcontroller, wait for motors to home\nrosmake flyatar_manual\nroslaunch flyatar_manual joystick_control.launch\n# test to make sure joystick moves stage\n# ctrl-c to shutdown joystick_control.launch\nroslaunch flyatar_calibration StagePlate.launch\n# drive magnet around randomly all over plate until calibration values seem to converge\n# record robot_min_ecc, robot_max_ecc, robot_min_area, robot_max_area in robotimage_calibration_data.launch\n# record translation vector and quaternion info in stage_plate_calibration_data.launch\n# ctrl-c to shutdown StagePlate.launch\n\n# Run in Avatar Mode:\nroslaunch flyatar_avatar avatar.launch\n\n# Compiling Stage USB Device Firmware:\n# Todo: Upgrade to new libusb-1.0, PyUSB, and newest LUFA release, implement acceleration variable, fix homing bug\nmkdir ~/LUFA\ncd ~/LUFA\nwget http://lufa-lib.googlecode.com/files/LUFA-090605.zip\nunzip LUFA-090605.zip\nmv LUFA\\ 090605/ LUFA090605\necho ""export LUFA090605=~/LUFA/LUFA090605"" &gt;&gt; ~/.bashrc\n. ~/.bashrc\nsudo apt-get install gcc-avr avr-libc\nmkdir ~/TEENSY\ncd ~/TEENSY\nwget http://www.pjrc.com/teensy/teensy.gz\ngzip -d teensy.gz\nchmod 755 teensy\nsudo cp ~/git/Flyatar/ros/udevrules/49-teensy.rules /etc/udev/rules.d/\ncd ~/ros/Flyatar/Flyatar/ros/actuation/stage/usb_device/\nmake clean\nmake\n~/TEENSY/teensy &amp;\n# Press button on teensy board\n# Select hex file in ~/ros/Flyatar/Flyatar/ros/actuation/stage/usb_device/\n# Press \'Program\' button on Teensy GUI \n# Press \'Reboot\' button on Teensy GUI \n\n# Setup URL for remote login:\n# Static preferred, but DynamicDNS can be used for dynamic IP addresses\n# https://help.ubuntu.com/community/DynamicDNS\n\n# Controlling Just the Stage:\nroslaunch stage_message_interface stage_message_interface.launch\n# Open new terminal&gt;\nrosmsg show stage/StageCommands\n# Example: Goto position 125,125 (mm in Stage coordinates) at 50 mm/s\nrostopic pub -1 /Stage/Commands stage/StageCommands -- [125] [125] [] [] [50]\n# Example: Set velocity -6,8 (mm/s in Stage coordinates)\nrostopic pub -1 /Stage/Commands stage/StageCommands -- [] [] [-6] [8] []\n# Example: Set velocity -6,8 (mm/s in Stage coordinates), equivalent to setting velocity to -3,4 with velocity magitude set to 10\nrostopic pub -1 /Stage/Commands stage/StageCommands -- [] [] [-3] [4] [10]\n# Example: Set velocity -6,8 (mm/s in Stage coordinates), equivalent to setting velocity to -0.6,0.8 with velocity magitude set to 10\nrostopic pub -1 /Stage/Commands stage/StageCommands -- [] [] [-0.6] [0.8] [10]\n# Example: Set velocity 5,5 (mm/s in Stage coordinates) for 160 ms (16 ms for every item in list, not counting last item) then stop (0 mm/s)\nrostopic pub -1 /Stage/Commands stage/StageCommands -- [] [] [5,5,5,5,5,5,5,5,5,5,0] [5,5,5,5,5,5,5,5,5,5,0] []\n# Example: Move in a square pattern at 50 mm/s\nrostopic pub -1 /Stage/Commands stage/StageCommands -- [100,150,150,100,100] [100,100,150,150,100] [] [] [50]\n# Example: Move in a square pattern at varying velocities, each velocity value sets the velocity of the move to reach the cooresponding x,y position\nrostopic pub -1 /Stage/Commands stage/StageCommands -- [100,150,150,100,100] [100,100,150,150,100] [] [] [50,10,70,30,50]\n\n# Flyatar Computer BIOS Settings:\n# On Startup, press delete to enter BIOS setup.\nExtreme Tweaker:\n   CPU Level Up -&gt; crazy-4.00G\n   DRAM Freq -&gt; DDR3-1066MHz\n\nMain:\n   Storage Configuration:\n       Configure SATA as -&gt; AHCI\n   System Info:\n       System Memory Usable Size (Make sure it says ~24000MB)\n\nAdvanced:\n   Onboard Devices Configuration:\n       Onboard SATA6 Controller -&gt; AHCI Mode\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
fmrp,http://rosindex.github.io/r/fmrp/,electric,http://sourceforge.net/p/fmrp/code,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
geometry_visualization,http://rosindex.github.io/r/geometry_visualization/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
gperftools_21,http://rosindex.github.io/r/gperftools_21/,,,b''
gnss,http://rosindex.github.io/r/gnss/,"groovy,fuerte","rtklib,rtkrcv","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gnss"">gnss</h1>\n\n<p>GNSS stack for ROS</p>\n\n<p>Tools for working with Global Navigation Satellite Systems.</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p>The node <code>enu_to_pose</code> in <code>nodes/enu_to_pose.py</code> needs a network connection to\na rtklib instance. rtklib is built in this package with the Makefile (use\n<code>rosmake</code>). rtklib then should supply the solution output on the network\nconnection configured in the <code>enu_to_pose</code>-node. Examples for rtklib with\nsolution output on the default network port and input of data from another\nstream are included as examples.</p>\n\n<p>The launch file <code>rtklib.launch</code> starts an rtklib instance as well as the\n<code>enu_to_pose</code>-node. For testing purposes it is helpful to start rtklib\nmanually with the rtknavi-GUI or manually with the simple shell wrapper script\n<code>start_rtklib.sh</code>.</p>\n\n<p>Example step-by-step instructions:</p>\n\n<ul>\n<li>Add package to your ROS workspace with <code>rosinstall</code>\n</li>\n<li>Build rtklib with <code>rosmake</code>\n</li>\n<li>Supply a pre-recorded skytraq measurements file to the port specified in\n<code>enu_single.conf</code>, e.g. <code>cat &lt;skytraq_measurements_file&gt; | nc -l -p 10000</code>\n</li>\n<li>Start rtklib and <code>enu_to_pose</code>-node with <code>roslaunch rtklib.launch</code>\n</li>\n<li>Now, the rostopic <code>/enu</code> should show ENU pose informations. If the quality\nof the provided GNSS signal is sufficient, coordinate transforms are\npublished to the ROS system</li>\n</ul>\n\n<p>Advanced example procedure for debugging including intermediate testing steps:</p>\n\n<ul>\n<li>Provide GNSS measurements (see above)</li>\n<li>Start rtklib with <code>./start_rtklib.sh enu_single.conf</code> using these\nmeasurements</li>\n<li>Test rtklib solution by connecting to the output port manually and checking\nthe solution for a valid position <code>nc localhost 3333</code>\n</li>\n<li>Ensure a roscore process is running: Call <code>roscore</code>\n</li>\n<li>Start the node with <code>rosrun rtklib enu_to_pose.py</code>\n</li>\n</ul>\n\n<h2 id=""example-output"">Example output</h2>\n\n<p>rtklib processes the GNSS measurements into position solutions in the ENU\ncoordinate system and provides these informations along with quality\ninformation and other data on an output port, if configured, as can be seen in\nthe example configuration files. Each line should look like the following\nexample:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">2012/08/23 12:49:30.402    863028.7989   4720911.2174  -2194093.2995   5   9 3.0176   5.8136   3.4867   2.6834   3.1125   1.7950   0.00    0.0\n</code></pre></div>\n<p>The <code>enu_to_pose</code> node provides coordinate transforms and prints log messages\nto the console. The position from rtklib is provided in the rostopic <code>/enu</code>\nand looks like this:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">header:\n  seq: 565\n  stamp:\n    secs: 1376397269\n    nsecs: 369039058\n  frame_id: /map\npose:\n  position:\n    x: 863027.3836\n    y: 4720911.2261\n    z: -2194086.6277\n  orientation:\n    x: 0.0\n    y: 0.0\n    z: 0.0\n    w: 0.0\n</code></pre></div>\n</div>\n\n            \n          </div>'"
geometry_experimental,http://rosindex.github.io/r/geometry_experimental/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
gps_drivers,http://rosindex.github.io/r/gps_drivers/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
grasping_oru,http://rosindex.github.io/r/grasping_oru/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
graph_mapping,http://rosindex.github.io/r/graph_mapping/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
graspit_simulator,http://rosindex.github.io/r/graspit_simulator/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
gspeech,http://rosindex.github.io/r/gspeech/,electric,gspeech,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""gspeech"">gspeech</h1>\n\n<p>ROS package for speech recognition based on Google Speech API</p>\n\n<p>NOTE: This package needs a key to use the google speech to text API, each key can be used\n      for 50 times (you can make 50 request per key to the google server), and each\n      request is accepted if the audio duration is less than 15 seconds.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  For key generation see: http://www.chromium.org/developers/how-tos/api-keys\n  Dont forget to add your key before using the gspeech node. \n</code></pre></div>\n<p>NOTE: This package does not work now, seems that Google changed their APIs/policies or authentication  methods</p>\n\n<p>UPD: Fixed, now working with API v2, you need an API Key from  Google Developer Console</p>\n\n<h2 id=""usage"">Usage</h2>\n\n<p><code>rosrun gspeech gspeech.py &lt;API_KEY&gt;</code></p>\n</div>\n\n            \n          </div>'"
gt-ros-pkg.humans,http://rosindex.github.io/r/gt-ros-pkg.humans/,,,b''
gt-ros-pkg.cpl,http://rosindex.github.io/r/gt-ros-pkg.cpl/,,,b''
hector_common,http://rosindex.github.io/r/hector_common/,"electric,groovy,fuerte","bfl_boost,bfl_eigen","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hacdc-ros-pkg,http://rosindex.github.io/r/hacdc-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
haptic_event_detector,http://rosindex.github.io/r/haptic_event_detector/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
haikalpribadi-ros-pkg,http://rosindex.github.io/r/haikalpribadi-ros-pkg/,electric,"object_tracker,parallax_eddie_robot,speech_interface,user_tracker","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n#parallax_eddie_robot\n##Parallax Eddie Robot ROS Driver (BETA)\n###This is a generic driver for Parallax Eddie Robot ( http://www.parallax.com/eddie ). The package publishes sensor data on several topics, as well as providing services to call functions to the serial board. The package also includes a controller to navigate the robot with linear/angular velocity. At the moment, this package is considered a beta release. Development is still in progress. (development in progress)\n\n#speech_interface\n##Natural Speech Interface (BETA)\n###A natural speech interface package that is able to extract predefined commands from recognized (natural) speeches, perform text-to-speech functionality, as well as providing a console for text-to-speech input. (development in progress)\n\n#user_tracker\n##User Tracker using Kinect (UNDER DEVELOPMENT)\n###User tracking using the skeletal tracker from openni_tracker ROS package. It returns the coordinates of specific [requested] joints of the user relative within the sight of the camera. It also contains a node to manipulate the tilt angle of the Kinect camera manually and automatically. (development in progress)\n\n\nBy Haikal Pribadi (haikal.pribadi@gmail.com)\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
guardian-ros-pkg,http://rosindex.github.io/r/guardian-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
herb_agents,http://rosindex.github.io/r/herb_agents/,electric,herb_agents,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nherb_agents: HERB-specific high-level agents\n============================================\n\nThis package provides the set of agents initially available for HERB, the\nHome Exploring Robot Butler at Intel Labs Pittsburgh.\n\nAlthough the set of skills might not be immediately useful for other robots,\nbecause if addresses the specific HERB components, it might still serve as a\nuseful example if you are new to the behavior engine.\n\nThe agents must be executed in the environment created by luaagent.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
hector_turtlebot,http://rosindex.github.io/r/hector_turtlebot/,"hydro,electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hector_ugv_common,http://rosindex.github.io/r/hector_ugv_common/,"hydro,electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hekateros,http://rosindex.github.io/r/hekateros/,groovy,"hekateros,hekateros_control,hekateros_desc,hekateros_launch,hekateros_moveit,hekateros_rosbridge","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""hekateros-ros-packages"">Hekateros - <strong>ROS</strong> Packages</h1>\n\n<p><img src=""http://www.roadnarrows.com/r-and-d/Hekateros/img/hek_git.png"" alt=""Hekateros 5DOF Manipulator""></p>\n\n<p>Here you will find a collection of <a href=""http://ros.org"">ROS</a> packages for the\nHekateros family of robotic manipulators, with examples including simulations\nand real-world applications. Hekateros manipulators are available in 4DOF and\n5DOF configurations, plus an additional degree of freedom provided by the\ndefault <a href=""http://www.roadnarrows-store.com/roadnarrows-graboid-series-d.html"">Graboid Gripper</a>. </p>\n\n<h2 id=""documentation"">Documentation</h2>\n\n<p>To get up and running with a new Hekateros, check out the documentation in the Hekateros ROS Wiki:\n* <a href=""https://github.com/roadnarrows-robotics/hekateros/wiki""><strong>Hekateros ROS Wiki - Home</strong></a></p>\n\n<h2 id=""store"">Store</h2>\n\n<p>Visit the RoadNarrows store to purchase your very own!\n* <a href=""http://www.roadnarrows-store.com/hekateros-arm.html""><strong>RoadNarrows Store</strong></a></p>\n</div>\n\n            \n          </div>'"
herb_skills,http://rosindex.github.io/r/herb_skills/,electric,herb_skills,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nherb_skills: HERB-specific skill set\n====================================\n\nThis package provides the set of skills initially available for HERB, the\nHome Exploring Robot Butler at Intel Labs Pittsburgh.\n\nAlthough the set of skills might not be immediately useful for other robots,\nbecause if addresses the specific HERB components, it might still serve as a\nuseful example if you are new to the behavior engine.\n\nSome notes about the particular features demonstrated:\n armskill.lua::\n  An auto-generator for a common class of skills, which order instruction of\n  different actions on the same entity, therefore resulting in a uniform\n  appearance of all such skills.\n grab.lua and noop.lua::\n  Before implementing armskill.lua, the skill was implemented ""by hand"". This\n  file contains such a skill and serves as an example of a ""regular"" skill.\n grab_object.lua::\n  This higher order skill employs several simpler skills to form a more\n  complex behavior. In particular in our environment during action execution\n  updates must be prevented to be added to the model. This is done by locking\n  it. Therefore this skill roughly implements the sequence of detect the\n  object, lock the environment, verify that the object has not been removed\n  in the time between seeing the object and locking the environment, grab the\n  object, pick it up, i.e. lift the arm into a safe carrying position, and\n  finally unlock the environment. Of course in case of an error the skill\n  diverts from that strict linear sequence.\n place.lua and put.lua::\n  Higher order skills similar to grab_object, but for placing an object on\n  a surface or putting it into a bin.\n init.lua::\n  Definition of the skill space, i.e. registering and triggering\n  auto-generation of all available skills.\n say.lua::\n  Simple skill calling a particular action using actionlib, but where there\n  are not multiple skills of a similar pattern justifying an auto-generator.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
hlugv_common,http://rosindex.github.io/r/hlugv_common/,"hydro,electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hrl,http://rosindex.github.io/r/hrl/,,,b''
hrl-assistive,http://rosindex.github.io/r/hrl-assistive/,,,b''
hrl-haptic-manip,http://rosindex.github.io/r/hrl-haptic-manip/,,,b''
hrl-kdl,http://rosindex.github.io/r/hrl-kdl/,,,b''
hrl-lib,http://rosindex.github.io/r/hrl-lib/,,,b''
humanoid_walk,http://rosindex.github.io/r/humanoid_walk/,"electric,groovy,fuerte","halfsteps_pattern_generator,walk_interfaces,walk_msgs,walk_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""humanoid-walking-stack-for-ros"">Humanoid walking stack for ROS</h1>\n\n<p>This repository provides humanoid walking interfaces, messages and\nalgorithms for <a href=""http://www.ros.org"">ROS</a>. This package contains a Git submodule. To\nclone it, run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone --recursive git://github.com/laas/humanoid_walk.git\n</code></pre></div>\n</div>\n\n            \n          </div>'"
husky_apps,http://rosindex.github.io/r/husky_apps/,"groovy,fuerte",husky_android_teleop,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Apps for Husky.</p>\n</div>\n\n            \n          </div>'"
hrl-pr2,http://rosindex.github.io/r/hrl-pr2/,,,b''
hrl-sensor-utils,http://rosindex.github.io/r/hrl-sensor-utils/,,,b''
hrl-pr2-behaviors,http://rosindex.github.io/r/hrl-pr2-behaviors/,,,b''
ic2020,http://rosindex.github.io/r/ic2020/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
hwu-osl-ros-pkg,http://rosindex.github.io/r/hwu-osl-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ias_perception,http://rosindex.github.io/r/ias_perception/,groovy,"ann,cognitive_perception,contracting_curve_density_algorithm,cop_collision_interface,cop_ros_plugins,cop_sr4_plugins,jlo,lo,zbar,zbar_barcode_reader_node,zbar_qt_ros","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ias_perception"">ias_perception</h1>\n\n<p>Perception modules developed in the IAS group at TUM</p>\n</div>\n\n            \n          </div>'"
husky_metapackages,http://rosindex.github.io/r/husky_metapackages/,hydro,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ias_common,http://rosindex.github.io/r/ias_common/,groovy,"annotation_srvs,cogman_msgs,ias_common,ias_table_msgs,navp_action,triangle_mesh_msgs,vision_msgs,vision_srvs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ias_common"">ias_common</h1>\n\n<p>IAS common messages</p>\n\n<p>See also <a href=""http://www.ros.org/wiki/ias_common"">http://www.ros.org/wiki/ias_common</a></p>\n</div>\n\n            \n          </div>'"
imu_drivers,http://rosindex.github.io/r/imu_drivers/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iheart-ros-pkg,http://rosindex.github.io/r/iheart-ros-pkg/,electric,"primes_testbench,random_testbench,testbench,topic_testbench,turtlebot_button,turtlebot_metric_description,turtlebot_xtion_top_description,urdf_compose,ihr_demo_bags,ihr_opencv,rind,zeroconf,rovio_common,rovio_controller,rovio_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is the I Heart Robotics ROS Repository\nhttp://www.iheartrobotics.com\n\nROS documentation \n---\nhttp://www.ros.org/wiki/iheart-ros-pkg\n\nTo download using git\n----\ngit clone git://github.com/IHeartRobotics/iheart-ros-pkg.git\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
imu_filter,http://rosindex.github.io/r/imu_filter/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
industrial,http://rosindex.github.io/r/industrial/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
infinisoleil,http://rosindex.github.io/r/infinisoleil/,groovy,infinisoleil,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""infinisoleil"">infinisoleil</h1>\n\n<p>This package provides a ROS driver for Infinisoleil sensors.</p>\n\n<p>Wiki <a href=""http://ros.org/wiki/infinisoleil"">http://ros.org/wiki/infinisoleil</a><br>\nIssues <a href=""http://github.com/ncs-3d-sensing/infinisoleil/issues"">http://github.com/ncs-3d-sensing/infinisoleil/issues</a></p>\n</div>\n\n            \n          </div>'"
industrial_experimental,http://rosindex.github.io/r/industrial_experimental/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
interactive-spaces,http://rosindex.github.io/r/interactive-spaces/,electric,https://code.google.com/p/interactive-spaces,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_common_drivers,http://rosindex.github.io/r/iri_common_drivers/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ipa_canopen_tutorials,http://rosindex.github.io/r/ipa_canopen_tutorials/,"electric,groovy,fuerte",ipa_canopen_tutorials,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ipa_canopen_tutorials"">ipa_canopen_tutorials</h1>\n\n<p>Contains tutorials for ipa_canopen.</p>\n</div>\n\n            \n          </div>'"
introlab-ros-pkg,http://rosindex.github.io/r/introlab-ros-pkg/,"electric,fuerte","manyears,manyears_ros,x264_image_transport","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Public ROS packages\n\nVisit our github page for more information :\n\nhttp://introlab.github.com/introlab-ros-pkg\n\n\nIntRoLab\nhttp://introlab.gel.usherbrooke.ca\nUniversit\xc3\xa9 de Sherbrooke, Qu\xc3\xa9bec, Canada\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Public ROS packages\n\nVisit our github page for more information :\n\nhttp://introlab.github.com/introlab-ros-pkg\n\n\nIntRoLab - Intelligent / Interactive / Integrated / Interdisciplinary Robot Lab \nhttp://introlab.3it.usherbrooke.ca\nUniversit\xc3\xa9 de Sherbrooke, Qu\xc3\xa9bec, Canada\n\n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
ir_comm,http://rosindex.github.io/r/ir_comm/,groovy,ir_comm,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-phidgets-ir"">ros-phidgets-ir</h1>\n\n<p>Send/receive ir data with a phidgets ir board</p>\n\n<h1 id=""installation"">Installation</h1>\n\n<ul>\n<li>Dependencies\n\n<ul>\n<li>Phidgets Library\n\n<ul>\n<li>Download and unpack the <a href=""http://www.phidgets.com/downloads/libraries/libphidget.tar.gz"">Phidgets Library for Linux</a>\n</li>\n<li>cd into the newly created <code>libphidget-[whatever]</code> directory.</li>\n<li>Compile and install: <code>./configure; make; sudo make install</code>\n</li>\n<li>Install the udev rule: <code>cp udev/99-phidgets.rules /etc/udev/rules.d</code>\n</li>\n</ul>\n</li>\n<li>Python\n\n<ul>\n<li>Download the <a href=""http://www.phidgets.com/downloads/libraries/PhidgetsPython.zip"">Python Phidgets Module</a>\n</li>\n<li>Unpack the archive, cd into the <code>PhidgetsPython</code> directory</li>\n<li>Run <code>sudo python setup.py install</code>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ROS Package\n\n<ul>\n<li>Clone this repository into as <code>ir_comm</code> and add it to your <code>ROS_PACKAGE_PATH</code>\n</li>\n</ul>\n</li>\n</ul>\n\n<h1 id=""usage"">Usage</h1>\n\n<h2 id=""learning-codes"">Learning Codes</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">python nodes/learn.py [output file].pkl\n</code></pre></div>\n<p>Point the original remote at the the phidgets device and press the desired button until you see the message <code>Wrote code to [output file].pkl</code>. If it isn\'t working, move the remote closer or farther from the phidgets device.</p>\n\n<h2 id=""testing-codes"">Testing Codes</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">python nodes/transmit_one.py [code file]\n</code></pre></div>\n</div>\n\n            \n          </div>'"
iri_core,http://rosindex.github.io/r/iri_core/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_odometry_publisher,http://rosindex.github.io/r/iri_odometry_publisher/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_darwin,http://rosindex.github.io/r/iri_darwin/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_navigation,http://rosindex.github.io/r/iri_navigation/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_learning,http://rosindex.github.io/r/iri_learning/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_perception_filters,http://rosindex.github.io/r/iri_perception_filters/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_planning,http://rosindex.github.io/r/iri_planning/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_perception,http://rosindex.github.io/r/iri_perception/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_segway_rmp,http://rosindex.github.io/r/iri_segway_rmp/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_smach,http://rosindex.github.io/r/iri_smach/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_visual_servo,http://rosindex.github.io/r/iri_visual_servo/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
iri_wam,http://rosindex.github.io/r/iri_wam/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ivs-ros-pkg,http://rosindex.github.io/r/ivs-ros-pkg/,electric,http://svn.code.sf.net/p/ivs-ros-pkg/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jaco,http://rosindex.github.io/r/jaco/,fuerte,"jaco_demo,jaco_driver,jaco_model,jaco_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""jaco-ros"">JACO-ROS</h1>\n\n<p>The <code>jaco-ros</code> module provides a ROS interface for the Kinova Robotics JACO, JACO2 (see limitations) and MICO robotic manipulator arms. This module exposes the Kinova C++ hardware API through ROS. This documentation will usually refer to the JACO arm, but the instructions work with both the JACO and the MICO unless otherwise noted.</p>\n\n<h2 id=""january-2016-what-39-s-new"">January 2016 - What\'s new</h2>\n\n<p>Significant Moveit! performance improvement using TRACLabs Inc. Inverse Kinematics solver TRAC-IK: <a href=""http://www.ros.org/news/2015/11/introducing-a-better-inverse-kinematics-package.html"">http://www.ros.org/news/2015/11/introducing-a-better-inverse-kinematics-package.html</a></p>\n\n<h2 id=""january-2015-release-what-39-s-new"">January 2015 Release - What\'s new</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">- New URDF model of the MICO, and various fixes to the JACO.\n- Optional URDF-based TF publication (see documentation on launch files).\n- Publication of joint velocities, see note in limitations section if the\nvalues seem wrong.\n- Access to force control of arms with torque sensors (start, stop and\n  parameters).\n</code></pre></div>\n<h2 id=""overview"">Overview</h2>\n\n<p>The JACO API is exposed to ROS using a combination of actionlib (for sending trajectory commands to the arm), services (for instant control such as homing the arm or e-stop) and published topics (joint feedback).  The Arm may be commanded using either angular commands or Cartesian co-ordinates.</p>\n\n<p>In addition, two techniques are available to visualize the model in your ROS\nenvironment.\nThe custom transform publisher of previous releases is still available, along\nwith a URDF-based approach using the JointStates output and robot_state_publisher.</p>\n\n<p>There are three actionlib modules available: <code>arm_pose/arm_pose</code>, <code>joint_angles/arm_joint_angles</code>, and <code>fingers/finger_position</code>.  These server modules accept coordinates which are passed on to the Kinova JACO API for controlling the arm.</p>\n\n<p>The services available are: <code>in/home_arm</code>, <code>in/stop</code>, and <code>in/start</code>.  These services require no input goals, and are intended for quick control of basic arm functions.  When called, home_arm will halt all other movement and return the arm to its ""home"" position.  The stop service is a software e-stop, which instantly stops the arm and prevents any further movement until the start service is called.</p>\n\n<p>Published topics are: <code>out/cartesian_velocity, out/joint_velocity, out/finger_position, out/joint_angles, out/joint_state</code>, <code>out/tool_position</code>, and <code>out/tool_wrench</code> for robots with torque sensors.  The <code>cartesian_velocity</code> and <code>joint_velocity</code> are both subscribers which may be used to set the joint velocity of the arm.  The <code>finger_position</code> and <code>joint_angles</code> topics publish the raw angular position of the fingers and joints, respectively, in degrees.  The <code>joint_state</code> topic publishes via <code>sensor_msgs</code> the transformed joint angles in radians.  The <code>tool_position</code> topic publishes the Cartesian co-ordinates of the arm and end effector via <code>geometry_msgs</code>.</p>\n\n<h2 id=""jaco-ros-module-architecture"">JACO-ROS Module Architecture</h2>\n\n<p>The <code>jaco_arm_driver</code> node acts as an interface between the Kinova JACO C++ API and the various actionservers, message services and topics used to interface with the arm.</p>\n\n<p>The <code>jaco_tf_updater</code> node subscribes to the jaco_arm_driver node to obtain current joint angle information from the node.  It then publishes a transform which may be used in visualization programs such as rviz.\nThis node is now optional and kept for compatibility issues. The URDF-based\napproach is now preferred.</p>\n\n<h3 id=""cartesian-control"">Cartesian Control</h3>\n\n<p>Cartesian control is accomplished via actionserver.  The Cartesian co-ordinates are published as a separate topic. The arm has a maximum reach of about 0.9m (90cm), so the ""position"" range is about +/-0.9 for all three dimensions.  The three wrist joints are capable of continuous rotation, and therefore capable of being commanded up to +/-174.5 rad. You may want to limit to +/-6.28 rad in software to prevent the joints from rotating excessively.</p>\n\n<h4 id=""cartesian-control-actionserver-topic-command-and-parameters"">Cartesian Control Actionserver Topic, Command, and Parameters</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/jaco_arm_driver/arm_pose/arm_pose\n\nMessage format:\nfloat64 position.x \xe2\x80\x93 end effector distance from the base in meters (left-right relative to base)\nfloat64 position.y \xe2\x80\x93 end effector distance from the base in meters (forward-back relative to base) \nfloat64 position.z \xe2\x80\x93 end effector distance from the base in meters (up-down relative to base) \nfloat64 orientation.x \xe2\x80\x93 end effector quaternion orientation \nfloat64 orientation.y \xe2\x80\x93 end effector quaternion orientation\nfloat64 orientation.z \xe2\x80\x93 end effector quaternion orientation\nfloat64 orientation.w \xe2\x80\x93 end effector quaternion orientation\n\nParameters on the parameter server (can be set in the launch file):\n/jaco_arm_driver/arm_pose/tf_prefix \xe2\x80\x93 prefix for the tf tree (needed for distinct tf \n    trees with multiple arms)\n/jaco_arm_driver/arm_pose/stall_interval_seconds \xe2\x80\x93 duration over which the stall condition is tested\n/jaco_arm_driver/arm_pose/stall_threshold \xe2\x80\x93 threshold over which the stall condition is tested \n    (e.g., if there is less than stall_threshold change in measurement over stall_interval_seconds, \n    the action will aborted due to a stall condition)\n/jaco_arm_driver/arm_pose/rate_hz \xe2\x80\x93 rate at which the action is tested for completion, stall, or \n    other termination condition\n/jaco_arm_driver/arm_pose/tolerance \xe2\x80\x93 tolerance between the measured position and the goal position \n    to complete the action\n</code></pre></div>\n<h4 id=""published-topic-for-cartesian-position"">Published Topic for Cartesian Position</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/jaco_arm_driver/out/tool_position\n\nMessage format:\nfloat64 position.x \xe2\x80\x93 end effector distance from the base in meters (left-right relative to base) \nfloat64 position.y \xe2\x80\x93 end effector distance from the base in meters (forward-back relative to base) \nfloat64 position.z \xe2\x80\x93 end effector distance from the base in meters (up-down relative to base) \nfloat64 orientation.x \xe2\x80\x93 end effector quaternion orientation\nfloat64 orientation.y \xe2\x80\x93 end effector quaternion orientation \nfloat64 orientation.z \xe2\x80\x93 end effector quaternion orientation\nfloat64 orientation.w \xe2\x80\x93 end effector quaternion orientation\n</code></pre></div>\n<h3 id=""angular-control"">Angular Control</h3>\n\n<p>Angular control is accomplished via actionserver.  The joint angles are published as two separate topics.</p>\n\n<p>All the joints have a range limit.  Joints 1, 4, 5 and 6 have a range of -10,000 to +10,000 degrees.  Joint 2 has a range of +42 to +318 degrees.  Joint 3 has a range of +17 to +343 degrees.  Sending a command past these limits will cause the arm to move to its hard-wired limit, then stop.</p>\n\n<h4 id=""angular-control-actionserver-topic-command-and-parameters"">Angular Control Actionserver Topic, Command, and Parameters</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/jaco_arm_driver/joint_angles/arm_joint_angles\n\nMessage format:\nfloat32 joint1 \xe2\x80\x93 \xe2\x80\x9cbase\xe2\x80\x9d joint angle in radians \nfloat32 joint2 \xe2\x80\x93 \xe2\x80\x9cshoulder\xe2\x80\x9d joint angle in radians \nfloat32 joint3 \xe2\x80\x93 \xe2\x80\x9celbow\xe2\x80\x9d joint angle in radians \nfloat32 joint4 \xe2\x80\x93 first \xe2\x80\x9cwrist\xe2\x80\x9d joint angle in radians \nfloat32 joint5 \xe2\x80\x93 second \xe2\x80\x9cwrist\xe2\x80\x9d joint angle in radians \nfloat32 joint6 \xe2\x80\x93 \xe2\x80\x9chand\xe2\x80\x9d joint angle in radians \n\nParameters on the parameter server (can be set in the launch file):\n/jaco_arm_driver/joint_angles/stall_interval_seconds \xe2\x80\x93 duration over which the stall condition is tested\n/jaco_arm_driver/joint_angles/stall_threshold \xe2\x80\x93 threshold over which the stall condition is tested \n    (e.g., if there is less than stall_threshold change in measurement over stall_interval_seconds, \n    the action will aborted due to a stall condition)\n/jaco_arm_driver/joint_angles/rate_hz \xe2\x80\x93 rate at which the action is tested for completion, stall, or \n    other termination condition\n/jaco_arm_driver/joint_angles/tolerance \xe2\x80\x93 tolerance between the measured position and the goal position \n    to complete the action\n</code></pre></div>\n<h4 id=""published-topics-for-angular-position-in-degrees"">Published Topics for Angular Position in Degrees</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/jaco_arm_driver/out/joint_angles \n\nMessage format:\nfloat32 joint1 \xe2\x80\x93 \xe2\x80\x9cbase\xe2\x80\x9d joint angle in degrees \nfloat32 joint2 \xe2\x80\x93 \xe2\x80\x9cshoulder\xe2\x80\x9d joint angle in degrees\nfloat32 joint3 \xe2\x80\x93 \xe2\x80\x9celbow\xe2\x80\x9d joint angle in degrees \nfloat32 joint4 \xe2\x80\x93 first \xe2\x80\x9cwrist\xe2\x80\x9d joint angle in degrees\nfloat32 joint5 \xe2\x80\x93 second \xe2\x80\x9cwrist\xe2\x80\x9d joint angle in degrees\nfloat32 joint6 \xe2\x80\x93 \xe2\x80\x9chand\xe2\x80\x9d joint angle in degrees \n</code></pre></div>\n<h4 id=""published-topics-for-angular-position-in-radians"">Published Topics for Angular Position in Radians</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/jaco_arm_driver/out/joint_state \n\nMessage format:\nstring name \xe2\x80\x93 array containing the names of the joints \nfloat64[] position \xe2\x80\x93 array containing joint positions, in transformed radians, of the joints \nfloat64[] velocity \xe2\x80\x93 array containing the joint velocities (placeholder, contains no data) \nfloat64[] effort \xe2\x80\x93 array containing the joint forces in newtons (placeholder, contains no data) \n</code></pre></div>\n<h3 id=""finger-control"">Finger Control</h3>\n\n<p>Finger control is accomplished via actionserver.  The finger angles are published as a separate topic. The range of input for all three fingers on the JACO is approximately 0 (fully open) to 60 (fully closed). The two fingers on the MICO have a range of approximately 0 to 6400.</p>\n\n<h4 id=""finger-control-actionserver-topic-command-and-parameters"">Finger Control Actionserver Topic, Command, and Parameters</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/jaco_arm_driver/fingers/finger_positions\n\nMessage format:\nfloat32 finger1 \xe2\x80\x93 position of finger 1 in degrees \nfloat32 finger2 \xe2\x80\x93 position of finger 2 in degrees \nfloat32 finger3 \xe2\x80\x93 position of finger 3 in degrees \n\nParameters on the parameter server (can be set in the launch file):\n/jaco_arm_driver/fingers/stall_interval_seconds \xe2\x80\x93 duration over which the stall condition is tested\n/jaco_arm_driver/fingers/stall_threshold \xe2\x80\x93 threshold over which the stall condition is tested \n    (e.g., if there is less than stall_threshold change in measurement over stall_interval_seconds, \n    the action will aborted due to a stall condition). This value typically needs to be changed between\n    a MICO and a JACO arm.\n/jaco_arm_driver/fingers/rate_hz \xe2\x80\x93 rate at which the action is tested for completion, stall, or \n    other termination condition\n/jaco_arm_driver/fingers/tolerance \xe2\x80\x93 tolerance between the measured position and the goal position \n    to complete the action. This value typically needs to be changed between\n    a MICO and a JACO arm (see the example launch files).\n</code></pre></div>\n<h4 id=""published-topic-for-finger-position"">Published Topic for Finger Position</h4>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">/jaco_arm_driver/out/finger_position \n\nMessage format:\nfloat32 finger1 \xe2\x80\x93 position of finger 1 in degrees\nfloat32 finger2 \xe2\x80\x93 position of finger 2 in degrees\nfloat32 finger3 \xe2\x80\x93 position of finger 3 in degrees (0 when using the two-fingered MICO)\n\nThe position state of the fingers is also available in the out/joint_state\ntopic.\n</code></pre></div>\n<h3 id=""services"">Services</h3>\n\n<p>These services may be called at any time to enact basic functions on the arm.  They will override any other actions being carried out by the arm.</p>\n\n<h4 id=""homing-the-arm"">Homing the Arm</h4>\n\n<p>When called, this service will return the arm to its pre-programmed \xe2\x80\x9chome\xe2\x80\x9d position.  It is the equivalent of holding down the \xe2\x80\x9chome\xe2\x80\x9d button on the pendant controller. The service requires no input parameters, and simply reports when the arm has returned home.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Service Topic:  /jaco_arm_driver/in/home_arm\nResult:  string homearm_result \xe2\x80\x93 a string containing the results of the home_arm service\n</code></pre></div>\n<h4 id=""emergency-stop"">Emergency Stop</h4>\n\n<p>When called, this service will immediately stop the arm if it is moving, erase any trajectories still residing in the JACO arm\xe2\x80\x99s FIFO, and enable a software e-stop flag.  This flag will prevent any further movement of the arm, including homing.  Joint angle feedback will continue to function.  The service requires no input parameters.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Topic:  /jaco_arm_driver/in/stop \nResult:  string stop_result \xe2\x80\x93 a string containing the results of the stop service \n</code></pre></div>\n<h4 id=""start"">Start</h4>\n\n<p>When called, this service will disable the software e-stop flag, and restore control of the arm.  The service requires no input parameters.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Topic:  /jaco_arm_driver/in/start   \nResult:  string start_result \xe2\x80\x93 a string containing the results of the start service \n</code></pre></div>\n<h4 id=""start-and-stop-force-control"">Start and Stop Force Control</h4>\n\n<p>When called, these services will enable/disable cartesian force control of arms\nwith torque sensors.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Topics: /jaco_arm_driver/in/start_force_control\nResult: Enable (or disable) force control for robots with torque sensors.\n</code></pre></div>\n<h4 id=""setting-force-control-parameters"">Setting Force Control Parameters</h4>\n\n<p>When called, parameters of the cartesian force control algorithm will be changed\ninstantly.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Topic:  /jaco_arm_driver/in/set_force_control_params\nResult: Instantly change force control parameters. See the Jaco API\ndocumentation for details on the meaning of these parameters.\n</code></pre></div>\n<h3 id=""joint-velocity-subscriber"">Joint Velocity Subscriber</h3>\n\n<p>Publishing messages to this topic allows for the arm to be controlled using joint velocity commands. For example, the following command will cause the arm to spin the sixth joint:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic pub -r 10 /jaco_arm_driver/in/joint_velocity jaco_msgs/JointVelocity \n""{joint1: 0.0, joint2: 0.0, joint3: 0.0, joint4: 0.0, joint5: 0.0, joint6: 10.0}"" \n</code></pre></div>\n<p>Note, using tab-completion to create this message will make sure that the command follows the correct syntax and format. If you just copy-and-paste this command into a terminal, it may not work.</p>\n\n<h3 id=""cartesian-velocity-subscriber"">Cartesian Velocity Subscriber</h3>\n\n<p>Publishing messages to this topic allows for the arm to be controlled using Cartesian velocity commands. For example, the following command will cause the arm to move in the positive z-direction (up).</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic pub -r 10 /jaco_arm_driver/in/cartesian_velocity geometry_msgs/TwistStamped \n""{header: {seq: 0, stamp: {secs: 0, nsecs: 0}, frame_id: \'\'}, \ntwist: {linear: {x: 0.0, y: 0.0, z: 0.1}, angular: {x: 0.0, y: 0.0, z: 0.0}}}"" \n</code></pre></div>\n<p>Note, using tab-completion to create this message will make sure that the command follows the correct syntax and format. If you just copy-and-paste this command into a terminal, it may not work.</p>\n\n<h2 id=""launch-files"">Launch files</h2>\n\n<p>The jaco_driver package provides two launch files, depending on which robot you want to control.\nThe jaco_arm.launch and mico_arm.launch files should be run prior to using the JACO (or MICO) arm.  It launches the main driver node, <code>jaco_arm_driver</code>, and <code>jaco_tf_updater</code> in classic, non-URDF mode (see next section).  These nodes then perform a number of operations that prepare the arm for use.</p>\n\n<p>On launch, the <code>jaco_arm_driver</code> announces all of the configurations stored in the arm\xe2\x80\x99s permanent memory.  These are settings that, currently, are most easily set using the Windows-only Kinova GUI.  The fingers may move during initialization, but the arm is not automatically homed. If the arm does not respond after initialization, it may need to be homed.</p>\n\n<h2 id=""urdf-mode"">URDF mode</h2>\n\n<p>To enable URDF-based transform publication, set the ""use_urdf"" launch file\nparameter to \'true\'.\nThis can be done from the command line:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch jaco_arm_driver [jaco|mico]_arm.launch use_urdf:=true\n</code></pre></div>\n<p>NOTE: The URDF model for the JACO2 arm will be available soon.</p>\n\n<h2 id=""custom-transform-publisher-classic-and-default-mode"">Custom transform publisher (classic and default) mode</h2>\n\n<p>The <code>jaco_tf_updater</code> begins publishing transform data as soon as it becomes available from the <code>jaco_arm_driver node</code>.</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>To make ros-jaco part of your workspace, follow these steps (assuming your workspace is setup following the standard conventions):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\ngit clone https://github.com/Kinovarobotics/jaco-ros.git jaco-ros\ncd ~/catkin\ncatkin_make\n</code></pre></div>\n<p>To access the arm via usb copy the udev rule file <code>99-jaco-arm.rules</code> from <code>&lt;your_workspace&gt;/ros-jaco-arm/jaco_driver/udev</code> to <code>/etc/udev/rules.d/</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">sudo cp jaco_driver/udev/99-jaco-arm.rules /etc/udev/rules.d/\n</code></pre></div>\n<p>If you would like the <code>jaco_arm_driver</code> and <code>jaco_tf_updater nodes</code> to launch automatically when ROS is started, copy the <code>jaco_arm.launch</code> file contained in the <code>/launch</code> folder into the relevant <code>/core.d</code> folder.</p>\n\n<h3 id=""using-multiple-arms"">Using Multiple Arms</h3>\n\n<p>This version of <code>jaco-ros</code> supports multiple arms. In order to use multiple arms you must set the the <code>serial_number</code> parameter for that arm and a <code>tf_prefix</code> for both the <code>arm_driver</code> node and the <code>tf_updater</code> node. For example, include the following lines in the launch file between <code>&lt;node pkg=""jaco_driver"" type=""jaco_arm_driver"" ...&gt;</code> and <code>&lt;/node&gt;</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;param name=""serial_number"" value=""PJ00123456789012345"" /&gt;\n&lt;param name=""arm_pose/tf_prefix"" value=""jaco_"" /&gt;\n</code></pre></div>\n<p>And the following line in the launch file between <code>&lt;node pkg=""jaco_driver"" type=""jaco_tf_updater"" ...&gt;</code> and <code>&lt;/node&gt;</code>:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">&lt;param name=""tf_prefix"" value=""jaco_"" /&gt;\n</code></pre></div>\n<p>If no serial number parameter is set, the node will simply try to connect to the JACO or MICO arm that is present. In some cases the serial number may not be set in the arm; simply set the serial number parameter to ""0.""</p>\n\n<h2 id=""execution"">Execution</h2>\n\n<p>This package has been tested in Ubuntu 12.04 LTS with ROS Hydro. The 5.01.01 driver/API is included in the package; however, you should ensure that the firmware on the arm is up-to-date. Using old versions of the firmware may result in unexpected behavior.</p>\n\n<h3 id=""basics"">Basics</h3>\n\n<p>To \xe2\x80\x9chome\xe2\x80\x9d the arm</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /jaco_arm_driver/in/home_arm\n</code></pre></div>\n<p>To activate the e-stop (emergency stop) function</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /jaco_arm_driver/in/stop\n</code></pre></div>\n<p>To restore control of the arm</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /jaco_arm_driver/in/start \n</code></pre></div>\n<h3 id=""joint-sensors"">Joint Sensors</h3>\n\n<p>To obtain the raw joint angles in degrees</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic echo jaco/joint_angles \n</code></pre></div>\n<p>To obtain the \xe2\x80\x9ctransformed\xe2\x80\x9d joint angles in radians in a standard <code>sensor_msgs</code> format</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic echo jaco/joint_state \n</code></pre></div>\n<p>To obtain the finger angles in degrees</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic echo jaco/finger_position\n</code></pre></div>\n<p>To obtain the arm\xe2\x80\x99s position in Cartesian units in a standard <code>geometry_msgs</code> format</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic echo jaco/tool_position \n</code></pre></div>\n<h3 id=""arm-control"">Arm Control</h3>\n\n<p>Several sample python script action clients are available for manually controlling the arm. These scripts are located in the <code>jaco_demo</code> package.</p>\n\n<p>To set the joint angles using DH \xe2\x80\x9ctransformed\xe2\x80\x9d angles in radians, use <code>joint_angle_workout.py</code></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun jaco_demo joint_angle_workout.py node_name random num        - randomly generate num joint angle sets\nrosrun jaco_demo joint_angle_workout.py node_name file_path         - use poses from file\nrosrun jaco_demo joint_angle_workout.py node_name j1 j2 j3 j4 j5 j6 - use these specific angles\ne.g., rosrun jaco_demo joint_angle_workout.py jaco random 10\n</code></pre></div>\n<p>To set the arm position using Cartesian co-ordinates, use <code>cartesian_workout.py</code></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun jaco_demo cartesian_workout.py node_name random num          - randomly generate num poses\nrosrun jaco_demo cartesian_workout.py node_name file_path           - use poses from file\nrosrun jaco_demo cartesian_workout.py node_name x y z qx qy qz qw   - use that specific pose\ne.g., rosrun jaco_demo cartesian_workout.py jaco -0.314 -0.339 0.600 -0.591 -0.519 0.324 0.525 \n</code></pre></div>\n<p>To set the finger positions, use <code>grip_workout.py</code></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun jaco_demo grip_workout.py node_name random num   - randomly generate num poses\nrosrun jaco_demo grip_workout.py jaco f1 f2 f3          - use that specific pose\nrosrun jaco_demo grip_workout.py mico f1 f2             - use that specific pose\ne.g., rosrun jaco_demo grip_workout.py jaco random 10\n</code></pre></div>\n<h2 id=""known-limitations"">Known Limitations</h2>\n\n<ol>\n<li><p>Partial support of the JACO2 arm. Control and raw state is available, but the\nwill be available later this month.\nFor now, the default ""jaco_arm.launch"" file can be used, but the visualization\nor arm (or forward kinematics in URDF mode) will not be valid.</p></li>\n<li><p>The <code>joint_state</code> topic currently reports only the arm position and\nvelocity. Effort is a placeholder for future compatibility. Depending on your\nfirmware version velocity values can be wrong. The behavior of the angle\nvelocity conversion can be changed with the ""convert_joint_velocities"" parameter\nof jaco_arm_driver.</p></li>\n<li><p>When updating the firmware on the arm (e.g., using Jacosoft) the serial number will be set to ""Not set"" which will cause multiple arms to be unusable. The solution is to make sure that the serial number is reset after updating the arm firmware.</p></li>\n<li><p>After using angular control, the arm may not respond to Cartesian commands (e.g., arm_pose or figer_position) until the arm has been homed.</p></li>\n<li><p>Some virtualization software products are known to work well with this package, while others do not.  The issue appears to be related to proper handover of access to the USB port to the API.  Parallels and VMWare are able to do this properly, while VirtualBox causes the API to fail with a ""1015"" error.</p></li>\n<li><p>With the latest firmware, the JACO arm will sag slightly when gripper commands are sent. This behavior has not been observed with the MICO arm.</p></li>\n<li><p>Previously, files under <code>jaco-ros/jaco_driver/lib/i386-linux-gnu</code> had a bug which required uses 32-bit systems to manually copy them into devel or install to work. This package has not been tested with 32-bit systems and this workaround may still be required. 64-bit versions seem to be unaffected.</p></li>\n<li><p>In certain cases, while commanding the MICO arm using angular commands, the force limits may be exceeded and the arm will stop.  If this occurs, consider increasing the force limits of your arm using JacoSoft, or use shorter movements that put less stress on the arm joints.</p></li>\n</ol>\n\n<h2 id=""additional-resources"">Additional Resources</h2>\n\n<p>The transformation equations used to convert from the \xe2\x80\x9cDH Parameters\xe2\x80\x9d to physical angles are listed in the jaco_kinematics.pdf document, included as part of this package.</p>\n\n<p>The Kinova JACO website: <a href=""http://kinovarobotics.com/products/jaco-research-edition/"">http://kinovarobotics.com/products/jaco-research-edition/</a></p>\n\n<h2 id=""report-a-bug"">Report a Bug</h2>\n\n<p>Any bugs, issues or suggestions may be sent to <a href=""mailto:ros@kinovarobotics.com"">ros@kinovarobotics.com</a>.</p>\n</div>\n\n            \n          </div>'"
irvs-ros-pkg,http://rosindex.github.io/r/irvs-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
isi-ros-pkg,http://rosindex.github.io/r/isi-ros-pkg/,electric,"c3_hlac,c3_hlac_core,color_voxel_recognition","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This repository provides a ROS package developed at ISI lab.\n\nFor more information, please read the directions at [http://www.ros.org/wiki/isi-ros-pkg](http://www.ros.org/wiki/isi-ros-pkg).\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
katana_manipulation,http://rosindex.github.io/r/katana_manipulation/,"diamondback,groovy,fuerte","katana_manipulation_tutorials,katana_object_manipulation_launch,katana_simple_grasp_planner,katana_tabletop_manipulation_launch,katana_arm_navigation,katana_interpolated_ik_motion_planner,katana_kinematics_constraint_aware,katana_object_manipulator,katana_openloop_grasping,katana_openrave_grasp_planner,katana_openrave_test,katana_tabletop_collision_map_processing","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jrl-ros-pkg,http://rosindex.github.io/r/jrl-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kinematics,http://rosindex.github.io/r/kinematics/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
jsk-ros-pkg,http://rosindex.github.io/r/jsk-ros-pkg/,"electric,fuerte",https://svn.code.sf.net/p/jsk-ros-pkg/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
joystick_drivers_tutorials,http://rosindex.github.io/r/joystick_drivers_tutorials/,"groovy,fuerte",turtle_teleop,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
kinton_robot,http://rosindex.github.io/r/kinton_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
komodo,http://rosindex.github.io/r/komodo/,fuerte,"komodo_arm,komodo_batteries_monitor,komodo_launch,komodo_rover,komodo_sensors,komodo_urdf","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""komodo"">komodo</h1>\n\n<p>Komodo Repository</p>\n</div>\n\n            \n          </div>'"
kingfisher_apps,http://rosindex.github.io/r/kingfisher_apps/,"groovy,fuerte",kingfisher_teleop,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p>Apps for Kingfisher.</p>\n</div>\n\n            \n          </div>'"
kurtana_robot,http://rosindex.github.io/r/kurtana_robot/,"diamondback,groovy,fuerte","kurtana_arm_navigation,kurtana_bringup,kurtana_description,kurtana_gazebo,kurtana_moveit_config,kurtana_pole_joint_commander,kurtana_tabletop_manipulation_launch","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
laser_drivers,http://rosindex.github.io/r/laser_drivers/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lejos,http://rosindex.github.io/r/lejos/,electric,https://svn.code.sf.net/p/lejos/code/trunk/ros/examples,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lejos-ros-pkg,http://rosindex.github.io/r/lejos-ros-pkg/,electric,https://svn.code.sf.net/p/lejos/code/trunk/ros,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lfd,http://rosindex.github.io/r/lfd/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
libg2o,http://rosindex.github.io/r/libg2o/,,,b''
lightningros,http://rosindex.github.io/r/lightningros/,electric,http://svn.code.sf.net/p/lightningros/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
literate_pr2,http://rosindex.github.io/r/literate_pr2/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
loam_back_and_forth,http://rosindex.github.io/r/loam_back_and_forth/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_arduino,http://rosindex.github.io/r/lse_arduino/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lrm_camera_drivers,http://rosindex.github.io/r/lrm_camera_drivers/,groovy,lrm_camera_drivers,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""lrm_camera_drivers"">lrm_camera_drivers</h1>\n\n<p>Firewire drivers for Point Grey cameras (BB2, XB3, Ladybug)</p>\n</div>\n\n            \n          </div>'"
loam_continuous,http://rosindex.github.io/r/loam_continuous/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_anemometer_drivers,http://rosindex.github.io/r/lse_anemometer_drivers/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_battery_drivers,http://rosindex.github.io/r/lse_battery_drivers/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_communication,http://rosindex.github.io/r/lse_communication/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_climber_robots,http://rosindex.github.io/r/lse_climber_robots/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_imu_drivers,http://rosindex.github.io/r/lse_imu_drivers/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_experiments,http://rosindex.github.io/r/lse_experiments/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_messages,http://rosindex.github.io/r/lse_messages/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_resources,http://rosindex.github.io/r/lse_resources/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_roomba_toolbox,http://rosindex.github.io/r/lse_roomba_toolbox/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_miniq_robot,http://rosindex.github.io/r/lse_miniq_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lse_sensor_network,http://rosindex.github.io/r/lse_sensor_network/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lua_utils,http://rosindex.github.io/r/lua_utils/,electric,lua_utils,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nlua_utils: Utility classes for Lua in C++\n=========================================\n\nThis package provides utility classes to interact with a Lua interpreter from\nC++. They taken from the Fawkes source tree. The goal of this package is to\nallow for a free flow of this code between Fawkes and ROS without the need\nfor platform-specific changes on code transfer (though there are specific\nregions in the code guarded with macros). Keep this in mind when changing\nthese files.\n\nRequirements\n------------\nThe following system packages are required to compile and use this packaeg:\n\n- Lua 5.1.4     http://www.lua.org\n- tolua++ 1.0.93    http://www.codenix.com/~tolua/\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
luaagent,http://rosindex.github.io/r/luaagent/,electric,luaagent,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nluaagent: Lua-based Agent Environment\n=====================================\n\nThe behavior engine assumes a three layer separation of the robot behavior\ncontrol software. This package provides an environment to formulate high-level\nagent programs using hybrid state machines in Lua.\n\nEssentially this environment lifts the approach of the skiller to the higher\nlevel program. It communicates with the skiller and uses it as the sole way of\nexecuting actions with the robot hardware.\n\nRequirements\n------------\nIt builds on utility packages from the behavior_engine stack. Additionally,\nit uses actionlib via actionlib_lua to instruct and monitor the skiller.\n\nDocumentation\n-------------\nGuides and howtos are currently work in progress. For now we would like to\nrefer to the example set of agents provided in the herb_agents package.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
lwr_arm_navigation,http://rosindex.github.io/r/lwr_arm_navigation/,"groovy,fuerte",lwr_arm_navigation,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
lwr_kinematics,http://rosindex.github.io/r/lwr_kinematics/,"groovy,fuerte",lwr_kinematics,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
manus_arm,http://rosindex.github.io/r/manus_arm/,fuerte,"arm,burst_calc,dish_viz,neuro_recv,time_server,volt_distr","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">================================================================================\n\nmanus_arm\n\nA ROS implementation of Manus ARM control via spiking neural networks.\n\nCopyright 2013 University of Massachusetts Lowell\nAuthors: Jonathan Hasenzahl, Abraham Shultz\nLast updated: 02/07/13\n\n================================================================================\n\nTable of Contents\n    I.    Introduction\n    II.   System requirements\n    III   Running the stack\n    IV.   Parameters\n    V.    Stack structure\n    VI.   Package: arm\n    VII.  Package: burst_calc\n    VIII. Package: dish_viz\n    IX.   Package: neuro_recv\n    X.    Package: time_server\n    XI.   Package: volt_distr\n    XII.  License\n\n================================================================================\n\nI. Introduction\n\nThe ROS stack manus_arm allows a Manus ARM to be controlled by activity from a\nspiking neural network. Dish simulation and pre-recorded playback is currently\nsupported, with a live link connection planned.\n\nIf you are only interested in code to control the Manus ARM, that can be found\nin the ""arm"" package.\n\n================================================================================\n\nII. System requirements\n\nTo run anything, the system must have ROS installed and configured. For anything\nmore than recording voltage distributions, the system must have a Manus ARM\nconnected and configured properly. To use the Brian simulator nodes, the system\nmust have Python and Brian installed.\n\n================================================================================\n\nIII. Running the stack\n\nThere are several launch files located in the arm node:\n\n    1. csv.launch:\n\n        Uses CSV playback to control the ARM. All parameters are loaded from\n        csv.yaml in the launch folder.\n\n    2. brian_csv.launch\n\n        Uses CSV playback recorded from a Brian simulation to control the ARM.\n        All parameters are loaded from brian_csv.yaml in the launch folder.\n\n    3. brian_sim.launch\n\n        Uses the Brian simulator to control the ARM. All parameters are loaded\n        from brian_sim.yaml in the launch folder.\n\n    4. volt_only_csv.launch\n\n        Creates and records voltage distributions from a CSV file, skipping ARM\n        movement. All parameters are loaded from volt_only_csv.launch in the\n        launch folder.\n\n    5. volt_only_brian_csv.launch\n\n        Creates and records voltage distributions from a CSV file from a Brian\n        simulation, skipping ARM movement. All parameters are loaded from \n        volt_only_brian_csv.launch in the launch folder.\n\n    6. volt_only_brian_sim.launch\n\n        Creates and records voltage distributions from the Brian simulator,\n        skipping ARM movement. All parameters are loaded from \n        volt_only_brian_sim.launch in the launch folder.\n\n================================================================================\n\nIV. Parameters\n\nThe following parameters are used by the arm_project stack. Not all parameters\nare used by every launch configuration. If a parameter is missing, some will \nhave default values, but others will cause the node to fail.\n\n    do_volt_distr (bool)\n        Whether or not to record voltage distributions. Default is Yes.\n\n    do_burst_calc (bool)\n        Whether or not to run burst calculation, which results in ARM movement.\n        Default is Yes.\n\n    arm_speed (int)\n        Relative speed of all of the ARM\'s joints. Can be 0 to 4. Default is 2. \n\n    arm_safe_range (float)\n        Safe maxiumum range of the ARM\'s X/Y motion in any direction from the\n        start position, in 0.022mm units. Default is 20000.0.\n\n    max_range_from_midpoint (float)\n        Maximum range of how far a CAs value will move on an X/Y grid from the\n        midpoint (4.5/4.5). See arm/src/teleop_arm_dish.cpp for more info. \n        Default is 1.0.\n\n    loop_rate (int)\n        How many times per second a dish_state is published. A value too large/\n        too fast may cause segfaults and other horrible things. Default is 200.\n\n    buffer_size (int)\n        How many dish states will be used to calculate baseline and threshold.\n        Default is 1000.\n\n    stdev_mult (float)\n        Multiplier of standard deviation to calculate spike threshold. A value\n        too large may result in no spikes being detected. Default is 3.0.\n\n    burst_window (int)\n        The window size of dish states when checking for bursts. Default is \n        1000.\n\n    volt_distr_log_path (string)\n        File path of the voltage distribution CSV log. Leaving this blank will\n        result in the log not being saved. No default.\n\n    volt_distr_img_path (string)\n        File path of the voltage distribution image. Leaving this blank will\n        result in the image not being saved. No default.\n\n    do_truncate_volts (bool)\n        Whether or not to truncate volts to 4 digits after the decimal. Useful \n        for Brian simulations where unmodified voltages will result in thousands \n        of unique values with a frequency of 1. Default is No.\n\n    cat_log_path (string)\n        The path of the CSV file which will log all of this session\'s CATs and \n        bursts. Leaving this blank will result in the log not being saved. No\n        default.\n\n    csv_file_path (string)\n        The path of the CSV file containing recorded dish state activity. Only\n        required if you are using the CSV receiver node. Leaving this blank will \n        result in the node failing. No default.\n\n    csv_skip_lines (int)\n        Number of lines to skip in the CSV file to account for headers and junk\n        data. Default is 1.\n\n    brian_connections_file_path (string)\n        The path of the Brian connections pickle file. This file is generated\n        by running SeedMea.py. Only required if you are using the Brian receiver\n        node. Leaving this blank will result in the node failing. No default.\n\n    brian_pad_neuron_map_file_path (string)\n        The path of the Brian pad neuron map pickle file. This file is\n        generated by running SeedMea.py. Only required if you are using the\n        Brian receiver node. Leaving this blank will result in the node failing. \n        No default.\n\n    brian_running_time (float)\n        How long to run the Brian simulation, in seconds. Only required if you \n        are using the Brian receiver node. Note that high values will have you\n        waiting forever as it takes longer than what is specified to actually\n        run the simulation. Default is 30.0.\n\n================================================================================\n\nV. Stack structure\n\n    Stack: arm_project\n\n        Package: arm\n            Node: arm_control\n            Node: teleop_arm_dish\n            Node: teleop_arm_key\n            Message: cartesian_move\n            Message: cartesian_moves\n            Message: constant_move\n            Message: constant_move_time\n\n        Package: burst_calc\n            Node: burst_creator\n            Node: cat_creator\n            Message: burst\n            Message: ca\n            Message: cat\n            Message: ranges\n\n        Package: dish_viz\n            Node: dish_viz\n\n        Package: neuro_recv\n            Node: csv_recv\n            Node: brian_recv.py\n            Node: brian_to_csv.py\n            Node: SeedMea.py\n            Message: dish_state\n\n        Package: time_server\n            Node: time_server\n            Service: time_srv\n\n        Package: volt_distr\n            Node: volt_distr\n\n================================================================================\n\nVI. Package: arm\n\nThis package controls the ARM and creates movement commands.\n\n    A. Node: arm_control\n\n    The interface to the ARM. Movement commands are sent to this node from the\n    teleop nodes. Movement is interruptible; a new command will override \n    any current movement in progress.\n\n    B. Node: teleop_arm_dish\n\n    This node receives cat messages and uses that information to generate\n    cartesian_move messages. Those messages are then sent to arm_control.\n\n    C. Node: teleop_arm_key\n\n    This node generates constant_move messages from keyboard input. This node\n    cannot be launched from a launch file; it must be run manually in its own\n    terminal window. Most keys have a toggle functionality: press to start\n    movement and press again to stop movement. A list of all of the keyboard\n    commands can be found in include/arm/key_codes.h.\n\n    D. Message: cartesian_move\n\n    A cartesian move command will move the ARM to a certain position and then \n    stop. The cartesian_move message contains an array of 7 floats representing\n    positions of each ARM joint, and an integer representing movement speed. The\n    file include/arm/movement_definitions.h defines each index in the array.\n    Units are in increments of 0.022mm. More information about position units\n    can be found in include/arm/ManusArm.cpp. Movement speed can be 5 values\n    ranging from 0 to 4.\n\n    E: Message: cartesian_moves\n\n    This message contains a vector of cartesian_move messages, allowing an\n    entire sequence of cartesian_moves to be published at once. It also has\n    a starting timestamp in its header, and an ending timestamp allowing for\n    timed movement sequences.\n\n    F. Message: constant_move\n\n    A constant move command will move all of the ARM joints in specified\n    directions constantly until a new command is issued. The constant_move\n    message contains an array of 9 integers representing movement states of each\n    ARM joint, the lift unit, and movement speed. The file \n    include/arm/movement_definitions.h defines each index in the array. All\n    values except for movement speed can either be 1 (positive movement), 0 (no\n    movement), or -1 (negative movement). Movement speed can be 5 values ranging\n    from 0 to 4.\n\n    G. Message: contant_move_time\n\n    This message contains a constant move, a starting timestamp in its header,\n    and an ending timestamp. This allows for timed constant moves.\n\n================================================================================\n\nVII. Package: burst_calc\n\nThis package is where the magic happens. All the dish states generated from a \nreceiver node are sent here for spike and burst detection. \n\n    A. Node: burst_creator\n\n    This node creates burst sequence messages and publishes them to the\n    cat_creator node. It also seeds the dish_viz node and tells it when to\n    start running.\n\n    B. Node: cat_creator\n\n    This node generates CAT (center of activity trajectory) messages from burst\n    sequences that it receives, and sends those messages to the teleop_arm_dish\n    node.\n\n    C. Message: burst\n\n    This message contains a vector of ints containing the indexes of each\n    channel bursting in the sequence, and a vector of all the dish_states in the \n    sequence. The header has a timestamp marking the beginning of the sequence,\n    and there is a time object marking the end of the sequence.\n\n    D. Message: ca\n\n    This message has two floats containing the X and Y values of a CA (center of\n    activity). The timestamp in the header is the same time as the dish state\n    that the CA was derived from.\n\n    E. Message: cat\n\n    This message is very similar to the burst message. It contains a vector of \n    all the CA messages in the CAT. The timestamp in the header, the end time \n    object, and the vector of ints are all the same as the burst message that \n    the CAT was derived from. \n\n    F. Message: ranges\n\n    This message is used to seed the dish_viz node. It has three arrays of 60\n    floats each: one for the baseline voltages of each channel, one for the\n    minimum voltages of each channel, and one for the maximum voltages of each\n    channel.\n\n================================================================================\n\nVIII. Package: dish_viz\n\nThis package provides a visual representation of dish states.\n\n    A. Node: dish_viz\n\n    This node provides a visual representation of dish states. It starts\n    automatically after the first burst is created in the burst_creator node. It\n    runs in sync with the movement of the ARM to visualize the dish activity \n    that is causing movement. Red circles indicate below-threshold activity,\n    while blue circles show spikes.\n\n================================================================================\n\nIX. Package: neuro_recv\n\nThis package is responsible for generating dish states from various sources.\n\n    A. Node: csv_recv\n\n    This node generates and publishes dish states from a CSV file.\n\n    B. Node: brian_recv.py\n\n    This node generates and publishes dish states from a Brian simulation.\n\n    C. Node: brian_to_csv.py\n\n    This node generates dish states and writes them to a CSV file for use later.\n    It is meant to be run alone, and not with any other nodes or as part of a\n    launch file.\n\n    D. Node: SeedMea.py\n\n    This node generates the connections and\n    pad neuron map pickle files used by the brian_recv.py and brian_to_csv \n    nodes. It is meant to be run alone, and not with any other nodes or as part\n    of a launch file.\n\n    E. Message: dish_state\n\n    The dish_state message contains an array of 60 floats representing the \n    voltage of each channel in the dish at a certain point in time. The header\n    of the message contains a timestamp that represents when the dish state\n    occurred relative to the beginning of playback.\n\n================================================================================\n\nX. Package: time_server\n\nThis package helps keep nodes in sync by providing a global clock and a time\nrequest service.\n\n    A. Node: time_server\n\n    This node contains a clock which starts at zero and is initialized \n    immediately after the burst_creator node has finished buffering. The time\n    request service time_srv allows other nodes to request the clock time so \n    that they can stay in sync.\n\n    B. Service: time_srv\n\n    The request of this service is a time object that the requesting node wants\n    to compare to the time_server time. The response is a time object containing\n    time_server time and a duration object containing the difference between\n    time_server time and the requested time.\n\n================================================================================\n\nXI. Package: volt_distr\n\nThis package records voltage distributions for each channel.\n\n    A. Node: volt_distr\n\n    This node receives a copy of every non-buffer dish state from the receiver\n    node and creates voltage distributions for each channel. After the last dish\n    has been published, a CSV log of the distributions is saved. In addition,\n    an SVG image showing a color-coded grid of all of the channels is created \n    and saved. A blue channel indicates a majority of positive voltages, and\n    red indicates a majority of negative voltages.\n\n================================================================================\n\nXII. License\n\nCopyright 2013 University of Massachusetts Lowell\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met: \n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer. \n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution. \n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those\nof the authors and should not be interpreted as representing official policies, \neither expressed or implied, of the FreeBSD Project.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
lwr_gui,http://rosindex.github.io/r/lwr_gui/,"groovy,fuerte","diag_sim,lwr_dashboard,lwr_markers","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
map_manager_app,http://rosindex.github.io/r/map_manager_app/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mapir-ros-pkg,http://rosindex.github.io/r/mapir-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mapping,http://rosindex.github.io/r/mapping/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mav_tools,http://rosindex.github.io/r/mav_tools/,fuerte,"ab_filter,city_flyer_launch,flyer_interface,laser_height_estimation,mav_common,mav_ctrl_interface,mav_msgs,mav_odom_interface,mav_srvs,quad_joy_teleop","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
mavlink-ros-pkg,http://rosindex.github.io/r/mavlink-ros-pkg/,electric,"lcm_mavlink_ros,mav_status,mavconn_asctec","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">IMPORTANT NOTE: PLEASE READ THE INDIVIDUAL README FILES IN THE SUBFOLDERS FOR INSTALLATION INSTRUCTIONS\n\n\n\nIf rosmake is run from this directory, it will attempt to compile ALL packages. This might however FAIL if you don\'t have all dependencies installed. It is therefore recommended to install from within individual subfolders\n\nserial_mavlink_ros      ROS node that directly interfaces a serial port and communicates with a MAVLINK\n                        compatible device (i.e. APM / ACM / UDB / pxIMU) or with a radio modem (e.g. XBee)\n                        and a ground control station (e.g. QGroundControl or APM Planner).\n\n\nlcm_mavlink_ros     ROS node that communicates with the MAVCONN aerial robotics middleware\n            (http://github.com/pixhawk/mavconn). MAVCONN provides computer-vision\n            specific interfaces and algorithms and is very lightweight.\n\n\nmavconn_asctec      ROS node that interfaces the MAVCONN middleware to an Ascending Technologies\n            multi-rotor via their Asctec-ROS interface\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
mcgill-mrl-ros-pkg,http://rosindex.github.io/r/mcgill-mrl-ros-pkg/,fuerte,,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""mcgill-mrl-ros-pkg"">mcgill-mrl-ros-pkg</h1>\n\n<p>McGill Mobile Robotics Lab central ROS repository</p>\n\n<p>This is a parent repository for various ROS packages maintained by McGill MRL.\nEach individual ROS package is maintained as a submodule within this repository.\nFor more information, please check out the ROS wiki and code documentation for\nindividual packages.</p>\n</div>\n\n            \n          </div>'"
megatree,http://rosindex.github.io/r/megatree/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
megatree_pcl,http://rosindex.github.io/r/megatree_pcl/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
meka-ros,http://rosindex.github.io/r/meka-ros/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
miabot,http://rosindex.github.io/r/miabot/,electric,miabot,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
mini_max,http://rosindex.github.io/r/mini_max/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mit-ros-pkg,http://rosindex.github.io/r/mit-ros-pkg/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mk-ros-pkg,http://rosindex.github.io/r/mk-ros-pkg/,electric,ssc32py,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a repository for ROS packages by Mark Kalmes. \n\nPackages:\nSSC32py - a port of Robotis that supports the SSC32 controller\n\nEverything in this repository is BSD licensed.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
mongodb_log,http://rosindex.github.io/r/mongodb_log/,electric,mongodb_log,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Generic MongoDB Logging for ROS\n===============================\n\nAutonomous mobile robots produce an astonishing amount of run-time\ndata during their operation. Data is acquired from sensors and\nactuator feedback, processed to extract information, and further\nrefined as the basis for decision making or parameter estimation. In\ntoday\'s robot systems, this data is typically volatile. It is\ngenerated, used, and disposed right away. However, some of this data\nmight be useful later, for example to analyze faults or evaluate the\nrobot\'s performance. A system is required to store this data as well\nas enable efficient and flexible querying mechanisms.\n\nThis package contains the relevant pieces to setup this generic\nlogging for ROS. It features a generic logger written in Python\ncapable of logging any topic, and loggers written in C++ written for\nspecific message types which are known to be large in size or to be\ntransmitted at a high frequency. This is to cope with Python inherent\noverhead and processing limits. You might find that for certain\nadditional topics you need to write custom fast loggers following a\ntemplate of the existing loggers. If you do this for publicly\navailable message types we\'d like to hear about it and maybe include\nit in a later release. We are also investigating the possibility to\nhave generic message introspection in C++ for ROS, which would remedy\nthis problem.\nAdditionally, this package includes tools to monitor the logging\nprocess and MongoDB and generate graphs using RRDtool.\n\nFor the conceptual background please refer to the paper ""A Generic\nRobot Database and its Application in Fault Analysis and Performance\nEvaluation"" by Niemueller et al. [1].\nFor technical information please refer to the project\'s website [2].\nThe ROS wiki page gives more details on how to get started on ROS [3].\n\n[1] http://www.fawkesrobotics.org/publications/2012/robodb-iros2012/\n[2] http://www.fawkesrobotics.org/projects/mongodb-log/\n[3] http://www.ros.org/wiki/mongodb_log\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
mocap_optitrack,http://rosindex.github.io/r/mocap_optitrack/,"groovy,fuerte",mocap_optitrack,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mongo_cxx_driver,http://rosindex.github.io/r/mongo_cxx_driver/,,,b''
motion_analysis_mocap,http://rosindex.github.io/r/motion_analysis_mocap/,"diamondback,electric,groovy,fuerte",evart-client,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""motion-analysis-motion-capture-bridge-for-ros"">Motion Analysis motion capture bridge for ROS</h1>\n\n<p>This repository provides a bridge with the Cortex motion capture\nsoftware for <a href=""http://www.ros.org"">ROS</a>. Cortex is the software for the <a href=""http://www.motionanalysis.com/"">Motion\nAnalysis</a> motion capture systems.</p>\n\n<p>This package contains a Git submodule. To clone it, run:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">git clone --recursive git://github.com/laas/motion_analysis_mocap.git\n</code></pre></div>\n</div>\n\n            \n          </div>'"
motion_planners,http://rosindex.github.io/r/motion_planners/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
motld_freiburg,http://rosindex.github.io/r/motld_freiburg/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mpi,http://rosindex.github.io/r/mpi/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mrpt-ros-pkg,http://rosindex.github.io/r/mrpt-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mrl_robots,http://rosindex.github.io/r/mrl_robots/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
mtconnect,http://rosindex.github.io/r/mtconnect/,fuerte,"mtconnect_msgs,mtconnect_ros_bridge,mtconnect_cnc_robot_example,mtconnect_example_gui,mtconnect_example_launch,mtconnect_example_msgs,mtconnect_grasp_action,mtconnect_irb2400_arm_navigation,mtconnect_m16ib20_arm_navigation,mtconnect_state_machine,mtconnect_task_parser","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""python-adapter-for-mtconnect-c-agent"">Python Adapter for MTConnect C++ Agent</h2>\n\n<p>This is a simple adapter library written in Python to support the ROS\nrobotics integration project. The adapter supports multiple connections,\nheartbeats and the following MTConnect data item types:</p>\n\n<ul>\n<li><p>Event  - A simple data item that usually contains with either a controlled\n       vocabulary like ControllerMode or Execution, or text like Program.</p></li>\n<li><p>Sample - A numeric valued data item for values that are continuously changing\n       like position, angle, or temperatures</p></li>\n<li><p>ThreeDSample - A sample that represents a three dimensional position like\n        a path position. The path is represented by a three space list or\n        tuple: (1.0, 2.0, 3.0)</p></li>\n<li><p>Condition - A condition is a data item that describes the current normal, fault, or\n        warning state of a component for a certain type of problem. A warning is\n        a situation that may self correct, whereas a fault needs manual intervention.\n        Conditions assume a sweep of a set of error codes where the errors will be\n        checked each time the adapter polls. This is usually how most PLCs operate\n        and there is no specific message to say when an alarm becomes active or\n        clears. If there is an alarm messaging mechanism, use the SimpleCondition.\n        Conditions rely on a native code to distinguish themselves. Other systems\n        can be used, but this is the current assumption of the agent for its\n        condition management.</p></li>\n<li><p>SimpleCondition - Similar to Condition, except that when the alarm is cleared, use\n        the remove method with the code.</p></li>\n</ul>\n\n<h2 id=""adapter-creation"">Adapter Creation</h2>\n\n<p>To create an adapter, import the Adapter from the mtconnect_adapter and add\ndata items. You need to tell it what host and port it should bind to. The default\nport is 7878:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">adapter = Adapter((\'0.0.0.0\', 7878))\ndi = Event(\'event_1\')\nadapter.add_data_item(di)\nadapter.start()\n</code></pre></div>\n<p>This creates an adapter, adds an Event and then starts the adapter. To change\nvalues of the data item, you need to begin gathering data and then complete the\ndata gathering process to send all the data.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">adapter.begin_gather()\ndi.set_value(\'hello\')\nadapter.complete_gather()\n</code></pre></div>\n<p>Working with conditions are very similar to the events:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">c1 = SimpleCondition(\'c1\')\nadapter.add_data_item(c1)\n\n...\n</code></pre></div>\n<p>Add a fault</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">adapter.begin_gather()\nc1.add(\'fault\', \'A fault\', \'123\')\nadapter.complete_gather()\n</code></pre></div>\n<p>And to clear the condition:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">adapter.begin_gather()\nc1.remove(\'123\')\nadapter.complete_gather()\n</code></pre></div>\n<p>There are two additional arguments that are options, qualifier and severity.\nThe qualifier represents extra information like HIGH or LOW and the severity\nis a native severity if available.</p>\n\n<p>There are more examples in the simple_adapter.py.</p>\n\n<h2 id=""ros-example"">ROS Example</h2>\n\n<p>There is an example for the ROS turtlesim tutorial that subscribes to the ROS\nposes and then sends them to the MTConnect agent as PATH_POSITION data items. \nTo run the demo, install the turtlesim and then run the adapter: (this assumes\nthe python_adapter is cloned under ~/)</p>\n\n<p>Install the turtle sim -- see ros wiki...</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roscore&amp;\nrosrun turtlesim turtlesim_node\n</code></pre></div>\n<p>There is an example for the ROS turtlesim tutorial that subscribes to the ROS\nposes and then sends them to the MTConnect agent as PATH_POSITION data items. \nTo run the demo, install the turtlesim and then run the adapter: (this assumes\nthe python_adapter is cloned under ~/)</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/python_adapter/examples\npython ros_adapter.py\n</code></pre></div>\n<p>Next, install the MTConnect agent in another directory:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~\ngit clone http://github.com/mtconnect/cppagent.git\nmkdir agent_build\ncd agent_build\ncmake ../cppagent\nmake\n</code></pre></div>\n<p>Run the agent:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/python_adapter/examples\n~/agent_build/agent/agent debug\n</code></pre></div>\n<p>Now your done, test the agent:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">curl http://localhost:5000/current\n</code></pre></div>\n<p>You should see an MTConnect streams document with Availabity AVAILABLE and a PathPosition for the Path.</p>\n\n<h2 id=""simulator"">Simulator</h2>\n\n<p>The simulator directory contains a ruby script to simulate the functionality of a \ncnc with minimal information only required for the Robot control. The simulator\nwill process the steps required by the CNC assuming there is a robot that can accept\nmaterial related requests. The states will be similar to the states in the \nBar Feeder project but adapted for to mimic a CNC cell. This technique can be \nused to simulate other MTConnect related devices as well.</p>\n\n<p>The simulator acts as both an agent and an adapter monitoring an external device and\ntaking actions based on the state and commands. A commandline is also provided to \nallow for actions to be sent that are not initiated by an external device.</p>\n\n<h2 id=""running-cnc-simulator"">Running CNC Simulator</h2>\n\n<p>The CNC simulator requires ruby 1.9.x and the statemachine gem. Install\nruby and the type</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">gem install statemachine\n</code></pre></div>\n<p>Once you have installed the ruby gem you can use a pre-compiled agent with\nthe agent.cfg file and the BothDevices.xml to represent a CNC and a robot.\nThere is a robot response file which just goes through a series of pre-canned\nactions and will drive some states on the simulator.</p>\n\n<p>To run the CNC simulator, cd to the simulator directory and start the agent\n(assuming it is in the same simulator directory):</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">./agent debug\n</code></pre></div>\n<p>Next start the CNC simulator:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ruby cnc_simulator.rb\n</code></pre></div>\n<p>You will need to type the following commands to enable the cnc, the first puts\nit in automatic mode and the second enables the link:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">auto\nenable\n</code></pre></div>\n<p>Next you will need to start the robot sim:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">ruby robot.rb\n</code></pre></div>\n<p>Within five seconds give the following command to the CNC:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">run\n</code></pre></div>\n<p>This process will be made simplier as the CNC becomes more complete. This is the\nfirst step to a fully functioning sim.</p>\n\n<h2 id=""license"">License</h2>\n\n<p>Copyright 2012, System Insights, Inc.\nAll rights reserved.</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the ""License"");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p><a href=""http://www.apache.org/licenses/LICENSE-2.0"">http://www.apache.org/licenses/LICENSE-2.0</a></p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an ""AS IS"" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n\n<h2 id=""external-licenses"">External Licenses</h2>\n\n<p>We have included the scanner.py module Copyright (c) 2011, Mark Watkinson.\nAdditional licensing and copyright information are in the file: src/scanner.py.</p>\n</div>\n\n            \n          </div>'"
multi_robot_collision_avoidance,http://rosindex.github.io/r/multi_robot_collision_avoidance/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
multimaster-ros-pkg,http://rosindex.github.io/r/multimaster-ros-pkg/,electric,"pybonjour,rosmaster_sd","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This repository contains the necessary packages for running and\nsyncronizing multiple ROS master nodes across a network using service\ndiscovery (via Bonjour or Avahi\'s Bonjour compatibility layer).\n\n</code></pre></div></div>\n\n            \n          </div>'"
multimaster,http://rosindex.github.io/r/multimaster/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
multimaster_experimental,http://rosindex.github.io/r/multimaster_experimental/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nao_rail,http://rosindex.github.io/r/nao_rail/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nao_sensors,http://rosindex.github.io/r/nao_sensors/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
netft,http://rosindex.github.io/r/netft/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
naoqi_libqicore,http://rosindex.github.io/r/naoqi_libqicore/,,,b''
naoqi_libqi,http://rosindex.github.io/r/naoqi_libqi/,,,b''
node_monitoring,http://rosindex.github.io/r/node_monitoring/,electric,"nodemon_cpp,nodemon_lua,nodemon_msgs,nodemon_py,nodemon_tui,nodemon_webview","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nxt,http://rosindex.github.io/r/nxt/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nxt_apps,http://rosindex.github.io/r/nxt_apps/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
nxt_robots,http://rosindex.github.io/r/nxt_robots/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
object_manipulation,http://rosindex.github.io/r/object_manipulation/,groovy,"interactive_marker_helpers,object_manipulation_msgs,object_manipulator,point_cloud_server,rviz_interaction_tools","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""object_manipulation"">object_manipulation</h1>\n\n<p>Robot-independent functionality related to object pickup and placing.</p>\n</div>\n\n            \n          </div>'"
occupancy_grid_utils,http://rosindex.github.io/r/occupancy_grid_utils/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
obj_rec_surf,http://rosindex.github.io/r/obj_rec_surf/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
odor_search,http://rosindex.github.io/r/odor_search/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
openrtm_aist,http://rosindex.github.io/r/openrtm_aist/,"jade,kinetic",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ompl,http://rosindex.github.io/r/ompl/,electric,,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Visit http://ompl.kavrakilab.org/core/installation.html for\ndetailed installation instructions.\n\nOMPL has the following required dependencies:\n * Boost (version 1.42 or higher)\n * CMake (version 2.8.2 or higher)\n\nThe following dependencies are optional:\n * ODE (needed to compile support for planning using ODE)\n * Google-test (needed to run the test programs)\n * Py++ (needed to generate Python bindings)\n * Doxygen (needed to create a local copy of the documentation at\n   http://ompl.kavrakilab.org/core)\n\nOnce dependencies are installed, you can build OMPL on Linux and OS X.\nGo to the top-level directory of OMPL and type the following commands:\n   mkdir -p build/Release\n   cd build/Release\n   cmake -DCMAKE_BUILD_TYPE=Release ../..\n   make update_bindings  # if you want Python bindings and have Py++ installed\n   make -j 4 # replace ""4"" with the number of cores on your machine\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
odor_tools,http://rosindex.github.io/r/odor_tools/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
openni_kinect,http://rosindex.github.io/r/openni_kinect/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
openrtm_aist_core,http://rosindex.github.io/r/openrtm_aist_core/,groovy,"openrtm_aist,openrtm_aist_core,openrtm_aist_python","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""openrtm_aist_core"">openrtm_aist_core  <a href=""https://travis-ci.org/start-jsk/openrtm_aist_core""><img src=""https://travis-ci.org/start-jsk/openrtm_aist_core.png"" alt=""Build Status""></a>\n</h2>\n\n<p>Metapackage that contains commonly used RT-Middleware-based modules. Althogh each of these packages by themselves are ROS-agnostic, you can use them over ROS together with the packages in rtmros_common.</p>\n\n<h2 id=""test-status"">Test Status</h2>\n\n<p><a href=""http://jenkins.ros.org/job/devel-hydro-openrtm_aist_core/"">Hydro</a> <a href=""http://jenkins.ros.org/job/devel-hydro-openrtm_aist_core/""><img src=""http://jenkins.ros.org/job/devel-hydro-openrtm_aist_core/badge/icon"" alt=""Build Status""></a></p>\n\n<p><a href=""http://jenkins.ros.org/job/devel-hydro-openrtm_aist_core/""><img src=""http://jenkins.ros.org/job/devel-hydro-openrtm_aist_core/test/trend"" alt=""Hydro Test Satus""></a></p>\n\n<p><a href=""http://jenkins.ros.org/job/devel-groovy-openrtm_aist_core/"">Groovy</a> <a href=""http://jenkins.ros.org/job/devel-groovy-openrtm_aist_core/""><img src=""http://jenkins.ros.org/job/devel-groovy-openrtm_aist_core/badge/icon"" alt=""Build Status""></a></p>\n\n<p><a href=""http://jenkins.ros.org/job/devel-groovy-openrtm_aist_core/""><img src=""http://jenkins.ros.org/job/devel-groovy-openrtm_aist_core/test/trend"" alt=""Groovy Test Satus""></a></p>\n</div>\n\n            \n          </div>'"
openrtm_aist_python,http://rosindex.github.io/r/openrtm_aist_python/,"jade,kinetic,indigo",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pal_image_processing,http://rosindex.github.io/r/pal_image_processing/,"electric,groovy,fuerte",pal_vision_segmentation,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
osx_joystick,http://rosindex.github.io/r/osx_joystick/,"electric,fuerte",osx_joystick,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros-package-osx-joystick"">ROS Package: OSX Joystick</h1>\n\n<p><strong>Author:</strong> Kevin Walchko</p>\n\n<p><strong>License:</strong> BSD</p>\n\n<p><strong>Language:</strong> C++</p>\n\n<p><strong>Website:</strong> <a href=""http://github.com/walchko/osx_joystick"">http://github.com/walchko/osx_joystick</a></p>\n\n<p>The standard <a href=""http://ros.org/wiki/joystick_drivers"">Linux PS3 joystick</a> drivers do not \nwork on OSX. This package leverages <a href=""http://www.glfw.org"">GLFW</a> to read joysticks under \nOS X. I currently have only tested it with the \n<a href=""http://en.wikipedia.org/wiki/DualShock_3#DualShock_3"">PS3 DualShock3</a> controller.</p>\n\n<p>To my knowledge, there is no way to use GLFW to read the gyros and accelerometers \nin the controller. However, I will keep looking. Also, this doesn\'t seem to work with \nNintendo\'s <a href=""http://en.wikipedia.org/wiki/Wiimote"">Wiimote</a> either.</p>\n\n<h2 id=""setup"">Setup</h2>\n\n<h3 id=""homebrew-dependencies"">Homebrew Dependencies</h3>\n\n<p>Follow the <a href=""http://ros.org/doc/api/rosdep2/html/contributing_rules.html"">instructions</a> to\nsetup rosdep correctly. If you don\'t want to do that, then uncomment rosdep glfw in \nmanifest.xml. Then just add the homebrew library as normal.</p>\n\n<p>The required <a href=""http://mxcl.github.com/homebrew/"">Homebrew</a> formula for OSX can be \ninstalled using:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">brew update\nbrew install glfw\n</code></pre></div>\n<h3 id=""bluetooth-ps3-controller-setup"">Bluetooth PS3 Controller Setup</h3>\n\n<p>These instructions are a modification of those found at <a href=""http://thp.io/2010/psmove/"">here</a></p>\n\n<ol>\n<li>Turn Bluetooth ON and press the PS button. A window will pop up asking for a PIN, \nignore it and open the bluetooth preferences. Write down the Bluetooth address, \nmine is: e0-ae-5e-0e-1c-eb.</li>\n<li>Turn Bluetooth OFF and copy the file /Library/Preferences/com.apple.Bluetooth.plist \nto somewhere else (e.g. your $HOME)</li>\n<li>Open the plist with XCode and add your controller\'s address to the HIDDevices key \n(press the little plus). So I now have <strong>Item 0</strong> String with an address that was \nalready there and a new <strong>Item 1</strong> String with my controller\'s address e0-ae-5e-0e-1c-eb \n(all lower case).</li>\n<li>Now copy the file back to /Library/Preferences and make sure it\'s owned by root, group \nwheel (you can do this using chown root:wheel com.apple.Bluetooth.plist)</li>\n<li>Switch on Bluetooth, and press the PS button on the controller - it should now pair \nwithout asking for a PIN</li>\n</ol>\n\n<p><img src=""http://i1268.photobucket.com/albums/jj568/mars_university/bluetoothplist.png"" alt=""plist editor""></p>\n\n<p>Now if you don\'t have XCode installed for some strange reason or need to do this all on\nthe command line, substitute these for the appropriate steps (<strong>Note I have not checked\nto see if these work</strong>):</p>\n\n<ul>\n<li>Convert it to XML format using: plutil -convert xml1 com.apple.Bluetooth.plist</li>\n<li>Open the file with your favorite text editor like pico, and edit as above.</li>\n<li>Convert it back to binary Plist format using: plutil -convert binary1 \ncom.apple.Bluetooth.plist</li>\n</ul>\n\n<h2 id=""joystick"">Joystick</h2>\n\n<h3 id=""command-line"">Command Line</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun osx_joystick joystick --num --hz --help\n</code></pre></div>\n<ul>\n<li>help Prints the help message </li>\n<li>num The number of the joystick to connect too</li>\n<li>hz The refresh rate to poll the joystick at (default: 30 Hz)</li>\n</ul>\n\n<h3 id=""example"">Example:</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun osx_joystick joystick --num 3 --hz 50\n</code></pre></div>\n<p>This grabs the 4th joystick (remember n-1) and the node sends joy messages at 50 Hz\non the topic joy3.</p>\n\n<h3 id=""published-topics"">Published Topics:</h3>\n\n<p><strong>joy[0-15]:</strong> </p>\n\n<p>The node publishes a standard <a href=""http://www.ros.org/doc/api/sensor_msgs/html/msg/Joy.html"">joystick message</a></p>\n\n<h3 id=""buttons"">Buttons</h3>\n\n<p><img src=""http://i1268.photobucket.com/albums/jj568/mars_university/ps3_buttons.jpg"" alt=""buttons""></p>\n\n<p><img src=""http://i1268.photobucket.com/albums/jj568/mars_university/ps3_buttons_front.jpg"" alt=""buttons""></p>\n\n<h3 id=""axes"">Axes</h3>\n\n<p><img src=""http://i1268.photobucket.com/albums/jj568/mars_university/ps3_axes.jpg"" alt=""axes""></p>\n\n<p><strong>Note:</strong> The signs of the 0 and 2 axes are backwards, meaning positive is really \nnegative for those two axes.</p>\n\n<h2 id=""twist-joystick"">Twist Joystick</h2>\n\n<p>The twist joystick is just a simple node that directly produces twist messages to make\nit easier to drive a robot (i.e., teleop) with little effort. The left axes (0 and 1)\nsend the linear part of the message. The right axes (2 and 3) handle the twist (i.e.,\nheading) of the robot. The buttons do nothing. For a more involved controller, you should\nwrite your own robot specific node.</p>\n\n<h3 id=""command-line"">Command Line</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun osx_joystick twist_js --num --hz --help\n</code></pre></div>\n<ul>\n<li>help Prints the help message </li>\n<li>num The number of the joystick to connect too</li>\n<li>hz The refresh rate to poll the joystick at (default: 30 Hz)</li>\n</ul>\n\n<h3 id=""example"">Example:</h3>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosrun osx_joystick twist_js --num 3 --hz 50\n</code></pre></div>\n<p>This grabs the 4th joystick (remember n-1) and the node sends twist messages at 50 Hz\non the topic cmd3.</p>\n\n<h3 id=""published-topics"">Published Topics:</h3>\n\n<p><strong>cmd[0-15]:</strong> </p>\n\n<p>The node publishes a standard <a href=""http://ros.org/doc/api/geometry_msgs/html/msg/Twist.html"">twist message</a></p>\n</div>\n\n            \n          </div>'"
pandora-auth-ros-pkg,http://rosindex.github.io/r/pandora-auth-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pcl16,http://rosindex.github.io/r/pcl16/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
parsec,http://rosindex.github.io/r/parsec/,electric,https://code.google.com/p/parsec,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
patrol,http://rosindex.github.io/r/patrol/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
perception_pcl_fuerte_unstable,http://rosindex.github.io/r/perception_pcl_fuerte_unstable/,fuerte,"cminpack,flann,pcl16,pcl16_ros,python_msg_conversions","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
penn-ros-pkg,http://rosindex.github.io/r/penn-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
penn_lightweight_teleop,http://rosindex.github.io/r/penn_lightweight_teleop/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
perception_pcl_addons,http://rosindex.github.io/r/perception_pcl_addons/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pi-robot-ros-pkg,http://rosindex.github.io/r/pi-robot-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
phidget_ik,http://rosindex.github.io/r/phidget_ik/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
physics_ode,http://rosindex.github.io/r/physics_ode/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pgr_camera,http://rosindex.github.io/r/pgr_camera/,electric,pgr_camera,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pi_robot_description,http://rosindex.github.io/r/pi_robot_description/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pi_tutorials,http://rosindex.github.io/r/pi_tutorials/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pi_vision,http://rosindex.github.io/r/pi_vision/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pkganeshpk,http://rosindex.github.io/r/pkganeshpk/,electric,"erratic_navigation,erratic_navigation_apps,phspline_generator,phspline_goal_passer,phspline_pose_follower","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""phspline_trajectory_planner-stack"">phspline_trajectory_planner stack</h1>\n\n<p>Ganesh P Kumar</p>\n\n<p>Contact: <a href=""mailto:gpkumar@asu.edu"">gpkumar@asu.edu</a> (Ganesh P Kumar)</p>\n\n<hr>\n\n<p>0.Copy this folder to your ROS_PACKAGE_PATH. Make each of the phspline_goal_passer, phspline_pose_follower and phspline_generator dirs. Move phspline_simple_navigation_goals_tutorial to ros_tutorials and make it too.</p>\n\n<p>To run the demos:</p>\n\n<ol>\n<li><p>Copy the launch_files/erratic_navigation* to your erratic_robot stack.Copy launch_files/control_points.txt to /tmp/control_points.txt. Move phspline_simple_navigation_goals_tutorial to ros_tutorials. </p></li>\n<li><p>Without PH Splines: Launch demo_2dnav_empty_map_no_phspline.launch from your erratic_navigation_apps/gazebo folder. Then in a separate terminal run \nshell$ cd phspline_simple_navigation_goals_tutorial ; simple_navigation_goals input.txt</p></li>\n<li>\n<p>With PH splines:  Launch demo_2dnav_empty_map_phspline.launch from the gazebo folder in (2) above. As above, run simple_navigation_goals on input.txt. Note that these are <em>dummy</em> goals only.\nNote: When matlab window opens up , you may need to navigate to the matlab folder within phspline_goal_passer and run </p>\n\n<blockquote>\n<blockquote>\n<p>main_wrapper</p>\n</blockquote>\n</blockquote>\n</li>\n</ol>\n</div>\n\n            \n          </div>'"
pmd_camcube_3_ros_pkg,http://rosindex.github.io/r/pmd_camcube_3_ros_pkg/,electric,pmd_camcube_3_ros_pkg,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
point_cloud_filtering,http://rosindex.github.io/r/point_cloud_filtering/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
portrait_bot,http://rosindex.github.io/r/portrait_bot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
point_cloud_perception,http://rosindex.github.io/r/point_cloud_perception/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pose_ekf_slam,http://rosindex.github.io/r/pose_ekf_slam/,fuerte,pose_ekf_slam,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_assisted_teleop_app,http://rosindex.github.io/r/pr2_assisted_teleop_app/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_arm_navigation,http://rosindex.github.io/r/pr2_arm_navigation/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_arm_navigation_tests,http://rosindex.github.io/r/pr2_arm_navigation_tests/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_common_alpha,http://rosindex.github.io/r/pr2_common_alpha/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_doors,http://rosindex.github.io/r/pr2_doors/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_cockpit,http://rosindex.github.io/r/pr2_cockpit/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_dremel,http://rosindex.github.io/r/pr2_dremel/,electric,http://svn.code.sf.net/p/bosch-ros-pkg/code/branches/electric/stacks/pr2_dremel,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_exploration,http://rosindex.github.io/r/pr2_exploration/,"groovy,fuerte",http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/stacks/pr2_exploration,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_led_kinect_calib,http://rosindex.github.io/r/pr2_led_kinect_calib/,"electric,groovy",pr2_led_kinect_calib,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_mannequin_mode_app,http://rosindex.github.io/r/pr2_mannequin_mode_app/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_gui,http://rosindex.github.io/r/pr2_gui/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_object_manipulation,http://rosindex.github.io/r/pr2_object_manipulation/,"groovy,fuerte","manipulation_worlds,pr2_create_object_model,pr2_interactive_manipulation,pr2_interactive_manipulation_frontend,pr2_interactive_object_detection,pr2_interactive_object_detection_frontend,pr2_pick_and_place_demos,pr2_tabletop_manipulation_launch,tf_throttle,pr2_gripper_grasp_controller,pr2_gripper_grasp_planner_cluster,pr2_gripper_reactive_approach,pr2_gripper_sensor_action,pr2_gripper_sensor_controller,pr2_gripper_sensor_msgs,pr2_interactive_gripper_pose_action,pr2_manipulation_controllers,pr2_marker_control,pr2_object_manipulation_launch,pr2_object_manipulation_msgs,pr2_wrappers,rgbd_assembler,segmented_clutter_grasp_planner,pr2_navigation_controllers,interactive_perception_msgs,object_recognition_gui,robot_self_filter_color,tabletop_collision_map_processing,tabletop_object_detector,active_realtime_segmentation,object_segmentation_gui","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""pr2_object_manipulation"">pr2_object_manipulation</h1>\n\n<p>PR2-specific functionality related to pickup and place tasks.</p>\n</div>\n\n            \n          </div>'"
pr2_otl_teleop_app,http://rosindex.github.io/r/pr2_otl_teleop_app/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_photoshoot,http://rosindex.github.io/r/pr2_photoshoot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_rubiks_solver,http://rosindex.github.io/r/pr2_rubiks_solver/,electric,"rubiks_graph,rubiks_inspect,rubiks_solver","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
pr2_symbolic_planning,http://rosindex.github.io/r/pr2_symbolic_planning/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_teleop_imitation,http://rosindex.github.io/r/pr2_teleop_imitation/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
pr2_web_apps,http://rosindex.github.io/r/pr2_web_apps/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
prairiedog,http://rosindex.github.io/r/prairiedog/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
presenter,http://rosindex.github.io/r/presenter/,electric,presenter,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\npresenter: ROS Node for Slide Presentations\n===========================================\n\nThis ROS package provides a node that can display PDF slides using Xpdf. It\ncan show and hide a fullscreen presentation window, jump to specific slides\nor simply go forward and backward.\n\nIt\'s a very simple version at the moment and unsafe! There are no check\nwhatsoever performed on the files which should be opened. So do not expose\nthis on an network that is not trustworthy, especially remember the security\ntrack record of Xpdf.\n\nPatches which add some sort of security precautions are gladly accepted. As\nare patches which add other any other useful kind of presentation media. If\nyou want to work on that, please let me know to avoid double work.\nIdeas are:\n- Add GStreamer support for video/pictures/sound\n- Use poppler als alternative to Xpdf\n\nRequirements\n------------\nThe following software packages are needed on your system in order to\nuse actionlib_lua. Requirements marked with (*) have specific information\nfurther down below.\n\n- ROS 1.1           http://www.ros.org\n- Xpdf 3.02         http://www.foolabs.com/xpdf/\n\nUsage\n-----\nFirst, you need to run the ROS node by executing bin/presenter.\nThen presenter can be instructed like this:\n\n Show PDF (opens window, file must exist on machineros presenter is running):\n  rosservice /presenter/load some_file.pdf\n\n Goto next slide:\n  rosservice /presenter/page/next\n\n Goto previous slide:\n  rosservice /presenter/page/prev\n\n Goto slide N:\n  rosservice /presenter/page/goto N\n\n Hide window:\n  rosservice /presenter/hide\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
procrob_functional,http://rosindex.github.io/r/procrob_functional/,electric,face_recognition,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h3 id=""copyright-2012-2014-pouyan-ziafati-university-of-luxembourg"">Copyright 2012-2014 Pouyan Ziafati, University of Luxembourg</h3>\n\n<blockquote>\n<ul>\n<li>All image processing and face recognition functionalities are provided by utilizing the Shervin Emami\'s c++ source code for face recognition (<a href=""http://www.shervinemami.info/faceRecognition.html"">http://www.shervinemami.info/faceRecognition.html</a>).\n\n<ul>\n<li>License: Attribution-NonCommercial 3.0 Unported (<a href=""http://creativecommons.org/licenses/by-nc/3.0/"">http://creativecommons.org/licenses/by-nc/3.0/</a>) </li>\n</ul>\n</li>\n</ul>\n</blockquote>\n\n<h2 id=""welcome-to-face_recognition-package-for-ros"">Welcome to face_recognition package for ROS</h2>\n\n<p>The <strong>face_recognition</strong> ROS package provides an simple actionlib server interface for performing different face recognition functionalities in video stream.</p>\n\n<h2 id=""instalation"">Instalation</h2>\n\n<p>This instalation process is for <strong>catkin</strong> (ROS Groovy or newer version)\nAssuming that your catkin workspace is under <strong>~/catkin_ws</strong>, if not replace <strong>~/catkin_ws</strong> with appropriate location. It also assumes you\'re running Bash shell, if you\'re running Zsh, source appropriate <strong>setup.zsh</strong> file.</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">cd ~/catkin_ws/src\ngit clone https://github.com/procrob/procrob_functional.git --branch catkin\ncd ~/catkin_ws\ncatkin_make\nsource ~/catkin_ws/devel/setup.bash\n\n</code></pre></div>\n<h3 id=""facerecognitiongoal"">FaceRecognitionGoal</h3>\n\n<p>This message includes 2 fields: </p>\n\n<ul>\n<li>\n<em>int</em> <strong>order_id</strong>\n</li>\n<li>\n<em>string</em> <strong>order_argument</strong>\n</li>\n</ul>\n\n<h3 id=""the-face-recognition-actionlib-server-accepts-4-different-goals"">The face recognition actionlib server accepts 4 different goals:</h3>\n\n<ul>\n<li>\n<p><strong>order_id</strong> = <strong>0</strong></p>\n\n<ul>\n<li>\n<strong>(Recognize Once)</strong> Goal is to acknowledge the first face recognized in the video stream. When the first face is recognized with a confidence value higher than the desirable confidence threshold, the name of the person and the confidence value are sent back to the client as result.</li>\n</ul>\n</li>\n<li>\n<p><strong>order_id</strong> = <strong>1</strong></p>\n\n<ul>\n<li>\n<strong>(Recognize Continuously)</strong> Goal is to continuously recognize faces in the video stream. Every face recognized with confidence value higher than the desirable confidence threshold and its confidence value are sent back to the client as feedback. This goal is persuaded for infinite time until it is canceled or preempted by another goal.</li>\n</ul>\n</li>\n<li>\n<p><strong>order_id</strong> = <strong>2</strong> <strong>and</strong> <strong>order_argument</strong> = <strong>person_name</strong></p>\n\n<ul>\n<li>\n<strong>(Add face images)</strong> Goal is to acquire training images for a NEW person. The video stream is processed for detecting a face which is saved and used as a training image  for the new person. This process is continued until the desired number of training images for the new person is acquired. The name of the new person is provided as ""order_argument""</li>\n</ul>\n</li>\n<li>\n<p><strong>order_id = 3</strong></p>\n\n<ul>\n<li>\n<strong>(Train)</strong> The database is (re)trained from the training images</li>\n</ul>\n</li>\n<li>\n<p><strong>order_id = 4</strong></p>\n\n<ul>\n<li>\n<strong>(Exit)</strong> The program exits.</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=""subscribed-topic"">Subscribed Topic:</h3>\n\n<ul>\n<li>\n<strong>/camera/image_raw</strong>  -  video stream (standard ROS image transport)</li>\n</ul>\n\n<h2 id=""parameters"">Parameters:</h2>\n\n<ul>\n<li>\n<p><strong>confidence_value</strong> (<em>double</em>, default = 0.88) </p>\n\n<ul>\n<li>a face recognized with confidence value higher than the <strong>confidence_value</strong> threshold is accepted as valid.</li>\n</ul>\n</li>\n<li>\n<p><strong>show_screen_flag</strong> (<em>boolean</em>, default = true)</p>\n\n<ul>\n<li>if output screen is shown</li>\n</ul>\n</li>\n<li>\n<p><strong>add_face_number</strong> (int, default = 25)</p>\n\n<ul>\n<li>a parameter for the <strong>add_face_images</strong> goal which determines the number of training images for a new person to be acquired from the video stream </li>\n</ul>\n</li>\n</ul>\n\n<h2 id=""how-the-face-recognition-works"">How The Face Recognition Works:</h2>\n\n<p>Details in <a href=""http://www.shervinemami.info/faceRecognition.html"">http://www.shervinemami.info/faceRecognition.html</a></p>\n\n<p>The name of persons and the images of their faces to train from are stored in the <strong>train.txt</strong> file.\nThis file should be in the same directory as where you execute the program. See the example train.txt file for the desirable format of the <strong>train.txt</strong> (Note: the person numbers start from 1, spaces or special characters are not allowed in persons\' names). \nThe program trains from the <strong>train.txt</strong> file and stores the eigenfaces data in <strong>facedata.xml</strong> file.</p>\n\n<p>When the <strong>face_recognition</strong> actionlib server is executed (Fserver), the program first tries to load data from the <strong>facedata.xml</strong> file if exists, if not it will try to learn from training images stored in <strong>train.txt</strong> if any. You can always add training data directly from the video stream using the <strong>add_face_images</strong> goal (<strong>order_id</strong> = 2).\nNote: when program retrains (<strong>order_id</strong> = 3), the content of facedata.xml is disregarded and the program trains only based on the train.txt file.</p>\n\n<h2 id=""tutorial"">Tutorial:</h2>\n\n<p>For demonstration purposes an actionlib client example for the face_recognition simple actionlib server has been provided. \nThe client subscribes to <strong>face_recognition/FRClientGoal</strong> messages. Each FRClientGoal message contains an <strong>order_id</strong> and an <strong>order_argument</strong> which specify a goal to be executed by the <strong>face_recognition</strong> server. After receiving a message, the client sends the corresponding goal to the server. By registering relevant call back functions, the client receives feedback and result information from the execution of goals in the server and prints such information on the terminal. </p>\n\n<ul>\n<li>Launch terminal\n\n<ul>\n<li>run <code>roscore</code>\n</li>\n<li>In separate terminal publish a video stream on topic <strong>/camera/image_raw</strong>.\n\n<ul>\n<li>For example you can use <strong>usb_cam</strong> to publish images from your web cam as follows:</li>\n<li>Install <a href=""http://wiki.ros.org/usb_cam"">usb_cam</a> package</li>\n<li>Run <code>rosrun usb_cam usb_cam_node usb_cam_node/image_raw:=camera/image_raw _image_height:=&lt;usb_cam_height&gt; _image_width:=&lt;usb_cam_width&gt;</code>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>In separate terminals run the face recognition server and client as follows:\n\n<ul>\n<li><code>rosrun face_recognition Fserver</code></li>\n<li><code>rosrun face_recognition Fclient</code></li>\n</ul>\n</li>\n<li>In another terminal publish messages on topic <strong>/fr_order</strong> to test different face recognition functionalities as follows: (notice the info which are printed on the client terminal after each command) \n\n<ul>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 2 ""your_name""</code>\n\n<ul>\n<li>to acquire training images for your face: you should try to appear in the video stream!</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 3 ""none""</code>\n\n<ul>\n<li>to retrain and update the database, so that you can be recognized </li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 1 ""none""</code>\n\n<ul>\n<li>to recognize faces continuously. This would not stop until you preempt or cancel the goal. So lets preempt it by sending the next goal.</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 2 ""your\\_friend\'s\\_name""</code><br>\n\n<ul>\n<li>add training images for a new person</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 0 ""none""</code>\n\n<ul>\n<li>recognize once</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 1 ""none""</code>\n\n<ul>\n<li>recognize continuous</li>\n</ul>\n</li>\n<li>\n<code>rostopic pub -1 /fr_order face_recognition/FRClientGoal -- 4 ""none""</code><br>\n\n<ul>\n<li>exit</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
projected_interface_builder,http://rosindex.github.io/r/projected_interface_builder/,groovy,projected_interface_builder,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""projected-interface-builder"">projected-interface-builder</h1>\n</div>\n\n            \n          </div>'"
protobuf,http://rosindex.github.io/r/protobuf/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
px-ros-pkg,http://rosindex.github.io/r/px-ros-pkg/,electric,"mavlink_serial_client,px4flow,px_comm","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""px-ros-pkg"">px-ros-pkg</h2>\n\n<p>A repository for PIXHAWK open source code running on ROS.</p>\n\n<p>Notes:</p>\n\n<ol>\n<li>The master branch uses catkin. If you wish to use rosbuild, please use the rosbuild branch.</li>\n</ol>\n</div>\n\n            \n          </div>'"
pyros_setup,http://rosindex.github.io/r/pyros_setup/,,,b''
rail_cv_project,http://rosindex.github.io/r/rail_cv_project/,fuerte,rail_cv_project,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Author: Russell Toris -- russell.toris@gmail.com\nAuthor: David Kent -- dekent@gatech.edu\nAuthor: Adrian\xe2\x80\x8e Boteanu -- aboteanu@wpi.edu\n\nFor full documentation, see: http://www.ros.org/wiki/rail_cv_project\n\nVideos available at: \n * https://www.youtube.com/watch?v=0Gw8YbK4WMw\n * https://www.youtube.com/watch?v=ORF0lFgczsk\n * https://www.youtube.com/watch?v=35rbeE1c-D4\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rail_youbot,http://rosindex.github.io/r/rail_youbot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rail_gazebo,http://rosindex.github.io/r/rail_gazebo/,,,b''
ratslam_ros,http://rosindex.github.io/r/ratslam_ros/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rcommander_core,http://rosindex.github.io/r/rcommander_core/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
re2logger,http://rosindex.github.io/r/re2logger/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rcommander_pr2,http://rosindex.github.io/r/rcommander_pr2/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
realtime_urdf_filter,http://rosindex.github.io/r/realtime_urdf_filter/,"electric,groovy",realtime_urdf_filter,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""realtime_urdf_filter"">realtime_urdf_filter</h1>\n\n<p>This package provides OpenGL-accelerated, shader-based filtering for\ndepth images. Scene geometry is defined in URDF models, along with\nparameters defining the camera\'s location and filtering parameters. Both\nstatic environment models and articulated robot models are working\nbeautifully, as long as TF latency is not too high.</p>\n\n<p>Incoming Kinect frames are transferred to the GPU as textures, and the\nscene is rendered from the same point of view. As a result, we can\naccess the measured as well as the virtual depth map in the shader,\nwhere we can define efficient comparision operations.</p>\n\n<p>Example of robot self filtering to proprocess for human skeleton\ntracking:</p>\n\n<p><img src=""https://raw.githubusercontent.com//blodow/realtime_urdf_filter/master//images/tracker.png"" alt=""image"">{width=""320px""}</p>\n\n<p>Robot self filtering for object manipulation:</p>\n\n<p><img src=""https://raw.githubusercontent.com//blodow/realtime_urdf_filter/master//images/grasping.png"" alt=""image"">{width=""320px""}</p>\n\n<p><img src=""https://raw.githubusercontent.com//blodow/realtime_urdf_filter/master//images/rviz.png"" alt=""image"">{width=""320px""}</p>\n\n<h2 id=""dependencies"">Dependencies</h2>\n\n<p>This has been verified to run on Ubuntu 12.04 with ROS Fuerte.</p>\n\n<p>This package requires the following: 3rd party libraries</p>\n\n<p>:   -   GLSL (GL Shader Language) version 1.40 support or greater\n    -   GLEW (GL Extension Wrangler) version 1.6</p>\n\n<p>NOTE: Trying to use thie package with GLEW 1.5 wil result in a\nsegmentation fault.</p>\n\n<h2 id=""ros-interface"">ROS Interface</h2>\n\n<p>There are two ROS nodes that can be used out of the box:</p>\n\n<ul>\n<li>\n<p>realtime_urdf_filter</p>\n\n<p>This is a node that subscribes to a depth map topic, and outputs the\nfiltered depth map on <code>/output</code>.</p>\n</li>\n<li>\n<p>urdf_filtered_tracker</p>\n\n<p>This node is basically the openni tracker with additional\nfunctionality to pre-filter the depth image before it\'s sent to the\nskeleton tracker.</p>\n\n<p><code>urdf_filtered_tracker</code> accesses the Kinect directly through OpenNI,\nand hooks itself in between the depth image generator node and the\nskeleton tracker node, so any ""known"" geometry that could\npotentially confuse the skeleton tracker (e.g. robot arms, people in\nbackground, static furniture) can be deleted.</p>\n\n<p>This has been used at Automatica 2012, where an operator was tracked\nto allow control of the robot arms using gesture recognition. Two\nrobot arms needed to be filtered to allow stable skeleton tracking\nalso for hand over tasks. Additionally, the camera was pointed\ntowards a busy walkway intersection, so two virtual walls were added\nthat filtered passing visitors from the depth data.</p>\n</li>\n</ul>\n\n<h2 id=""adapting-it-to-different-scenarios"">Adapting it to different scenarios</h2>\n\n<p>There are two example launch files provided that show basic usage and\nparametrization and are a good starting point.</p>\n\n<p>The following <code>rosparam</code> parameters are supported:</p>\n\n<ul>\n<li>  <code>fixed_frame</code> is used to specify the ""fixed"" TF link (e.g. <code>/map</code>,\n<code>/world</code>, etc.). This is useful to decouple tf lookups with\ndifferent publising frequencies, e.g. robot and static publishers.</li>\n<li>  <code>camera_frame</code> specifies the camera TF frame (e.g.\n<code>/camera_rgb_optical_frame</code>)</li>\n<li>  <code>camera_offset</code> lets you specify additional offsets to the\ncamera link. It has two components: <code>translation</code> (e.g.\n<code>[0.0, 0.0, 0.0]</code>) and <code>rotation</code> (e.g. <code>[0.0, 0.0, 0.0, 1.0]</code>).</li>\n<li>  <code>models</code> contains a list of URDF models that are supposed to be\nfiltered. For each, <code>model</code> defines the rosparam key that contains\nthe URDF model, and <code>tf_prefix</code> contains, well, the tf prefix.</li>\n<li>  <code>depth_distance_threshold</code> pixels with a depth difference of less\nthan this value get filtered.</li>\n<li>  <code>filter_replace_value</code> (for <code>urdf_filtered_tracker</code>) defines the new\nvalue that will be written to the filtered pixel depth values.\nInterestingly, setting <code>0</code> creates beautiful silhouettes, but the\nOpenNI tracker needs ""background"" (more distant) pixels\naround people. Weird. That\'s why we set this value to 5 meters.</li>\n<li>  <code>show_gui</code> specifies whether a visualization window should pop up.</li>\n</ul>\n\n<p>Also, the shaders in <code>include/shaders/</code> can easily be adapted. The\nvertex shader is basically just a pass through, so the fragment shader\nis more interesting for adding features. The shader as of now has access\nto 4 color attachments, and the red channel of gl_FragData[1] is used\nto return the filtered image. The other attachments can be used for\nvisualization (see <code>show_gui</code>).</p>\n\n<h2 id=""note-starting-remotely"">Note: starting remotely</h2>\n\n<p>While this package uses offscreen rendering, it does need to connect to\na X11 server to get a valid OpenGL context (even with <code>show_gui</code> set to\n<code>false</code>). When launching one of the nodes in this package remotely via\nroslaunch or similar mechanisms, it will be necessary to set a DISPLAY\nvariable and possible turn off access control for the X server. In this\ncase, a bash script like the following can be launched from remote:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang=""""><span class=""c"">#!/bin/bash</span>\n<span class=""nv"">DISPLAY</span><span class=""o"">=</span>:0\nxhost +\nroslaunch realtime_urdf_filter tracker.launch\n</code></pre></div>\n<h2 id=""troubleshooting"">Troubleshooting</h2>\n\n<p>Every once in a while, assimp fails when importing STL files. If the\nfirst 5 bytes are ""solid"", it treats it as ASCII, however there are\nseveral binary STL files around that start with ""solid"". You\'ll get an\nerror message along the lines of:</p>\n\n<blockquote>\n<p>[ERROR] [1360339850.748534073]: Could not load resource\n[package://pr2_description/meshes/sensors/kinect_prosilica_v0/115x100_swept_back--coarse.STL]:\nSTL: ASCII file is empty or invalid; no data loaded</p>\n</blockquote>\n\n<p>You can double check with e.g.:</p>\n\n<blockquote>\n<p>hexdump -C bad_stl_file.STL | head</p>\n</blockquote>\n\n<p>In that case, a simple work around (read: ""hack"") is to replace the\n""solid"" with ""rolid"", and assimp loads it as a binary file.</p>\n\n<blockquote>\n<p>printf \'r\' | dd of=bad_stl_file.STL bs=1 seek=0 count=1 conv=notrunc</p>\n</blockquote>\n\n<p>I\'m not exactly sure why RViz does not seem to have this problem.</p>\n\n<h2 id=""license"">License</h2>\n\n<p>The code is licensed under the BSD License, see the LICENSE file in the\nproject root dir.</p>\n</div>\n\n            \n          </div>'"
reconfigure_gui,http://rosindex.github.io/r/reconfigure_gui/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
reactive_grasping,http://rosindex.github.io/r/reactive_grasping/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
reem_arm_navigation,http://rosindex.github.io/r/reem_arm_navigation/,"diamondback,electric,fuerte","reem_arm_navigation,reem_3dnav,reem_arm_navigation_actions,reem_arm_navigation_config,reem_arm_navigation_filtering,reem_arm_navigation_perception,reem_arm_navigation_planning","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
reem_kinematics,http://rosindex.github.io/r/reem_kinematics/,"electric,fuerte",reem_kinematics_constraint_aware,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
reem_common,http://rosindex.github.io/r/reem_common/,"diamondback,electric,groovy,fuerte","reem_description,reem_machine","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
reem_msgs,http://rosindex.github.io/r/reem_msgs/,"electric,fuerte",reem_msgs,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
reem_controllers,http://rosindex.github.io/r/reem_controllers/,"diamondback,electric,fuerte","joint_group_position_controller,reem_head_action","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
reem_plugins,http://rosindex.github.io/r/reem_plugins/,"electric,fuerte","bumper_gazebo_plugin,range_gazebo_plugin,reem_diffdrive_plugin,reem_controller_plugin","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rgbdslam,http://rosindex.github.io/r/rgbdslam/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
remote_lab,http://rosindex.github.io/r/remote_lab/,"groovy,fuerte",http://svn.code.sf.net/p/bosch-ros-pkg/code/trunk/stacks/remote_lab,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rgbdslam_freiburg,http://rosindex.github.io/r/rgbdslam_freiburg/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rice-ros-pkg,http://rosindex.github.io/r/rice-ros-pkg/,electric,http://svn.code.sf.net/p/rice-ros-pkg/code/,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
riq_hand,http://rosindex.github.io/r/riq_hand/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rl-texplore-ros-pkg,http://rosindex.github.io/r/rl-texplore-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rms_pr2_gazebo_environment,http://rosindex.github.io/r/rms_pr2_gazebo_environment/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roar_stack,http://rosindex.github.io/r/roar_stack/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rms_youbot_gazebo_environment,http://rosindex.github.io/r/rms_youbot_gazebo_environment/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rms_rovio_environment,http://rosindex.github.io/r/rms_rovio_environment/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roblab-whge-ros-pkg,http://rosindex.github.io/r/roblab-whge-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roboframenet,http://rosindex.github.io/r/roboframenet/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robchair_robot,http://rosindex.github.io/r/robchair_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roboearth,http://rosindex.github.io/r/roboearth/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robot_capsule_urdf,http://rosindex.github.io/r/robot_capsule_urdf/,"electric,groovy,fuerte",robot_capsule_urdf,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_capsule_urdf"">robot_capsule_urdf</h1>\n\n<p>Generation of capsule collision models urdf files.</p>\n\n<h2 id=""quickstart"">Quickstart:</h2>\n\n<ul>\n<li><p>Compile robot_capsule_urdf by usual ros commands.</p></li>\n<li>\n<p>Given a robot description package in the form\n robot_name_description, and given a capsule parameters file in\n robot_name_description/etc/robot_name_capasule_param you can run\n the following command to generate a new urdf file for your robot:</p>\n\n<p>rosrun robot_capsule_urdf robot_capsule_urdf robot_name &gt; robot_name_capsule.urdf</p>\n</li>\n<li>\n<p>If you want to generate automatically the capsule urdf when\nbuilding robot_name_descrition, you can include the following in\nCmakeLists.txt:</p>\n\n<p>rosbuild_find_ros_package(robot_capsule_urdf)\nset(<em>robot_capsule_urdf ${robot_capsule_urdf</em>PACKAGE_PATH}/bin/robot_capsule_urdf)</p>\n\n<p>macro(generate_capsule_urdf robot_name)\n  execute_process(\n  COMMAND ${<em>robot_capsule_urdf} ${robot_name}\n  OUTPUT_VARIABLE _capsule_output)\n  file(WRITE ${CMAKE</em>SOURCE_DIR}/urdf/${robot_name}<em>capsule.urdf ${_capsule</em>output})\nendmacro()</p>\n\n<p>generate_capsule_urdf(robot_name)</p>\n</li>\n</ul>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_capsule_urdf"">robot_capsule_urdf</h1>\n\n<p>Generation of capsule collision models urdf files.</p>\n\n<h2 id=""quickstart"">Quickstart</h2>\n\n<ol>\n<li><p>Compile <code>robot_capsule_urdf</code> by usual ros commands.</p></li>\n<li><p>Given a robot description package in the form\n <code>robot_name_description</code>, and given a capsule parameters file in\n robot_name_description/etc/robot_name_capasule_param you can run\n the following command to generate a new urdf file for your robot:</p></li>\n</ol>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">     rosrun robot_capsule_urdf robot_capsule_urdf robot_name &gt; robot_name_capsule.urdf\n\n</code></pre></div>\n<ol>\n<li>If you want to generate automatically the capsule urdf when\nbuilding robot_name_descrition, you can include the following in\n<code>CmakeLists.txt</code>:</li>\n</ol>\n<div class=""highlight""><pre><code class=""language-sh"" data-lang=""sh"">    rosbuild_find_ros_package<span class=""o"">(</span>robot_capsule_urdf<span class=""o"">)</span>\n    <span class=""nb"">set</span><span class=""o"">(</span>_robot_capsule_urdf <span class=""k"">${</span><span class=""nv"">robot_capsule_urdf_PACKAGE_PATH</span><span class=""k"">}</span>/bin/robot_capsule_urdf<span class=""o"">)</span>\n\n    macro<span class=""o"">(</span>generate_capsule_urdf robot_name<span class=""o"">)</span>\n      execute_process<span class=""o"">(</span>\n      COMMAND <span class=""k"">${</span><span class=""nv"">_robot_capsule_urdf</span><span class=""k"">}</span> <span class=""k"">${</span><span class=""nv"">robot_name</span><span class=""k"">}</span>\n      OUTPUT_VARIABLE _capsule_output<span class=""o"">)</span>\n      file<span class=""o"">(</span>WRITE <span class=""k"">${</span><span class=""nv"">CMAKE_SOURCE_DIR</span><span class=""k"">}</span>/urdf/<span class=""k"">${</span><span class=""nv"">robot_name</span><span class=""k"">}</span>_capsule.urdf <span class=""k"">${</span><span class=""nv"">_capsule_output</span><span class=""k"">}</span><span class=""o"">)</span>\n    endmacro<span class=""o"">()</span>\n\n    generate_capsule_urdf<span class=""o"">(</span>robot_name<span class=""o"">)</span>\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
robot_contact_point,http://rosindex.github.io/r/robot_contact_point/,"electric,groovy,fuerte","rcpdf,rcpdf_interface","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robot_face,http://rosindex.github.io/r/robot_face/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robot_model_visualization,http://rosindex.github.io/r/robot_model_visualization/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robot_model_py,http://rosindex.github.io/r/robot_model_py/,"electric,groovy,fuerte","urdf_parser_py,xml_reflection","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_model_py"">robot_model_py</h1>\n\n<h2 id=""authors"">Authors</h2>\n\n<ul>\n<li>  Thomas Moulard - <code>urdfpy</code> implementation, integration</li>\n<li>  David Lu - <code>urdf_python</code> implementation, integration</li>\n<li>  Kelsey Hawkins - <code>urdf_parser_python</code> implementation, integration</li>\n<li>  Antonio El Khoury - bugfixes</li>\n<li>  Eric Cousineau - reflection (serialization?) changes</li>\n</ul>\n\n<h2 id=""description"">Description</h2>\n\n<p>A simple URDF parser for Python.</p>\n\n<h2 id=""reflection-or-just-serialization"">Reflection (or just Serialization?)</h2>\n\n<p>This an attempt to generalize the structure of the URDF via reflection to make it easier to extend. This concept is taken from Gazebo\'s SDF structure, and was done with SDF in mind to a) make an SDF parser and b) make a simple converter between URDF and SDF.</p>\n\n<h3 id=""changes"">Changes</h3>\n\n<ul>\n<li>  Features:\n\n<ul>\n<li>  Transmission and basic Gazebo nodes.</li>\n<li>  General aggregate type, for preserving the order of aggregate types (i.e., the URDF robot model, and for the future, SDF models, links with multiple visuals / collisions, etc).  This allows for basic checks to see if ""scalar"" elements are defined multiple times. (We were affected by this at one point with a pose defined twice with different values, screwing up the loading / saving of a model with this API).</li>\n<li>  Dumping to YAML, used for printing to string.\n\n<ul>\n<li>  Doesn\'t preserve ordering because of it, but someone posted an issue about this on pyyaml\'s issue tracker, and I think a few solutions were posted (including one from the author)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>  XML Parsing: minidom has been swapped out with lxml.etree, but it should not be hard to change that back. Maybe Sax could be used for event-driven parsing.</li>\n<li>  API:\n\n<ul>\n<li>  Loading methods rely primarily on instance methods rather than static methods, mirroring Gazebo\'s SDF construct-then-load method</li>\n<li>  Renamed static <code>parse_xml()</code> to <code>from_xml()</code>, and renamed <code>load_*</code> methods to <code>from_*</code> if they are static</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=""todo"">Todo</h3>\n\n<ol>\n<li> Develop a Python SDF API in a <code>sdf</code> module.\n\n<ul>\n<li>  Maybe make the package itself be <code>robot_model_py</code> so that the respective modules would be <code>robot_model_py.urdf_parser</code> and <code>robot_model_py.sdf_parser</code>?</li>\n<li>  Parse Gazebo\'s SDF definition files at some point? For speed\'s sake, parse it and have it generate code to use?</li>\n</ul>\n</li>\n<li> Make a direct, two-way URDF &lt;-&gt; SDF converter.\n\n<ul>\n<li>  Gazebo has the ability to load URDFs and save SDFs, but it lumps everything together and (I think) adds some ""noise"" from OpenDE for positions.</li>\n</ul>\n</li>\n<li> Make the names a little clearer, especially the fact that <code>from_xml</code> and <code>to_xml</code> write to a node, but do not create a new one.</li>\n<li> Figure out good policy for handling default methods. If saving to XML, write out default values, or leave them out for brevity (and to leave it open for change)? Might be best to add that as an option.</li>\n</ol>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""robot_model_py"">robot_model_py</h1>\n\n<p>Starting from Hydro, <code>robot_model_py</code> is now part of\n<a href=""https://github.com/ros/urdfdom"">urdfdom</a>. Please install urdfdom on your machine and update your\ndependencies.</p>\n\n<p>For older releases, please checkout the other branches of this\nrepository.</p>\n</div>\n\n            \n          </div>'"
robot_model_tutorials,http://rosindex.github.io/r/robot_model_tutorials/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
robotino-ros-pkg,http://rosindex.github.io/r/robotino-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roll,http://rosindex.github.io/r/roll/,"electric,fuerte","cl_libsvm,cl_port,clmd5,clsql,uffi,robot_learning_language","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
romeo,http://rosindex.github.io/r/romeo/,"electric,groovy,fuerte",romeo_description,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roomba_robot,http://rosindex.github.io/r/roomba_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros-engagement,http://rosindex.github.io/r/ros-engagement/,electric,http://svn.code.sf.net/p/ros-engagement/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_applications,http://rosindex.github.io/r/ros_applications/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_dds_proxies,http://rosindex.github.io/r/ros_dds_proxies/,groovy,"proxyJoy,proxyPoseStamped,proxyPoseWithCovarianceStamped,proxy_common","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""ros_dds_proxies"">ros_dds_proxies</h1>\n\n<p>ROS / DDS proxies</p>\n</div>\n\n            \n          </div>'"
ros_release,http://rosindex.github.io/r/ros_release/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roscopter,http://rosindex.github.io/r/roscopter/,electric,https://code.google.com/p/roscopter/,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ros_rocket,http://rosindex.github.io/r/ros_rocket/,electric,"rocket_driver,rocket_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">ros_rocket:\n\nA ROS driver for the dream cheeky style USB nerf turrets.\n\n\nSince these USB turrets only have encoders for position feedback (and sometimes even those don\'t work very well), the position of the turret is determined entirely based on timing. The driver determines the timing parameters for your turret by running it back and forth between the end-stops 10 times at startup. The driver also keeps an estimate of the accumulated positioning error based on the standard deviation between the calibration runs; it resets the error metric whenever it reaches on of the end-stops.\n\nThe driver can be run with \'rosrun rocket_driver rocket_driver.py\'\n\nTopics:\nrocket_command:\n   type: rocket_msgs/RocketCommand\n      alpha: yaw angle\n      beta:  pitch angle\n   The driver takes commands on the rocket_command topic\n\nrocket_position:\n   type: rocket_msgs/RocketPosition\n      alpha:     estimated yaw angle\n      beta:      estimated pitch angle\n      alpha_var: accumulated error in alpha\n      beta_var:  accumulated error in beta\n   The driver publishes the current position estimate and the estimated error on the rocket_position topic\n\nServices:\nrocket_fire:\n   type: std_srvs/Empty\n   Fire a single rocket\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
ros_http_video_streamer,http://rosindex.github.io/r/ros_http_video_streamer/,"groovy,fuerte",ros_http_video_streamer,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosfawkes,http://rosindex.github.io/r/rosfawkes/,electric,rosfawkes,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roscorobot,http://rosindex.github.io/r/roscorobot/,electric,http://svn.code.sf.net/p/roscorobot/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosdep,http://rosindex.github.io/r/rosdep/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosjava_tools,http://rosindex.github.io/r/rosjava_tools/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roshpit,http://rosindex.github.io/r/roshpit/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roslua,http://rosindex.github.io/r/roslua/,electric,roslua,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nroslua: ROS client library for Lua\n==================================\n\nThis module constitutes a client library which allows to write ROS\nnodes in the Lua programming language. It allows to publish and\nsubscribe to topics, to provide and use services, interact with ROS\nmasters, slaves and param servers, and provides general utilities for\ntime and duration handling, and logging.\n\nIt does most likely not contain all the features roscpp and rospy can\noffer. It does /not/ aim to replace any of these, rather it provides\nan option for situations where Lua might be more suitable or more\ndesirable, e.g. on constrained systems or for behavior description and\nprogramming.\n\nThe implementation is written purely in Lua, with some functionality\ncoming from external Lua modules written in Lua and C\n(close-to-operating-system functionality like network transmissions\nand unpacking of data of the TCPROS protocol, XML parsing, HTTP web\nserver etc.).\n\nThe original client library roslua has been written during an\ninternship at Intel Labs Pittsburgh by Tim Niemueller. It continues to\nbe used and developed at Intel Labs Pittsburgh. Current development is\nsponsored by SRI International.\n\nNotable differences\n-------------------\nThere are some differences from client libraries written in and for\nother languages that are noteworthy.\n\nNo offline code generation is necessary for message and service\ndescription files, i.e. the message and service code generation steps\nof the build system will not produce any output for Lua. roslua\ndirectly reads the definition files at run-time and creates the\nappropriate representations at run-time. Since these specifications\nare read only once on startup when the topics or services are\nregistered, the overhead is negligible and only occurs during\ninitialization of the node.\n\nLua is inherently single-threaded. There is only so-called cooperative\nmulti-threading in the form of coroutines, which is not used for this\nimplementation. The most notable drawback is that long message\nprocessing steps influence the whole program, including processing\nincoming messages and XML-RPC requests. This can pose a problem to\ncertain programs and node writers should be aware of this. It also\nallows for the simplicity and briefness of the code, since many\nconstructs like locking are unnecessary.\n\n\nRequirements\n------------\nThe following software packages are needed on your system in order to\nuse roslua. Requirements marked with (*) have specific information\nfurther down below, modules marked with (i) are included in the roslua\nmodule. Versions only denote tested minimum version, since several\npatches have been contributed upstream, earlier version will most\nlikely not work.\n\n- Lua 5.1           http://www.lua.org\n- Lua POSIX 5.1.7 (i)(*)    http://luaforge.net/projects/luaposix/\n- Xavante 2.2.0 (*)     http://keplerproject.github.com/xavante/\n- WSAPI 1.3.4           http://keplerproject.github.com/wsapi/\n- Lua XML-RPC 1.2.0     http://keplerproject.github.com/lua-xmlrpc/\n- Lua struct lib (i)(*)     http://www.inf.puc-rio.br/~roberto/struct/\n- Lua MD5 1.1.2         http://www.keplerproject.org/md5/\n- Lua Signal 1.0.0      http://luaforge.net/projects/luasignal/\n\nroslua comes with a rosdep file with the requirements that can be\nprovided by the operating system (Ubuntu and Fedora in particular).\n\n\nAdditional notes\n----------------\nXavante:\n  Nothing needs to be done for Fedora 13 and later.\n\n  If using 2.2.0 on Ubuntu 10.04 a small patch is needed allow for using\n  an ephemeral port. To get this either install from git, or clone the\n  repository and replace the httpd.lua file of your local Xavante\n  installation. The latter way is much easier and recommended if you\n  have Xavante 2.2.0 installed (and not an older version). I cannot\n  tell for other distributions, but these steps work for Ubuntu:\n  git clone git://github.com/keplerproject/xavante.git\n  cp xavante/src/xavante/httpd.lua /usr/share/lua/5.1/xavante\nLua POSIX:\n  A patched version currently comes with roslua. Patches to extend\n  the functionality have been accepted upstream. Once the new version\n  arrives downstream in the distros the module will be removed.\nLua struct lib:\n  The library is usually not available as a distribution package,\n  therefore it has been bundled with roslua. It has been patched to\n  extend functionality (and actually provide functionality promised\n  in the documentation).\n\n\nDocumentation\n-------------\nAll public API functions and modules have been documented. The\ndocumentation is generated using LuaDoc by calling ""make doc"" in the\nroslua directory. Pre-generated documentation can be found in the\ndoc/ directory (open doc/index.html in a web browser of your choice).\n\n\nStarting roslua\n---------------\nTo start a node written using roslua, you need to set an appropriate\npackage path and run the script. To setup the package path set the\nLUA_PATH variable. It must include the roslua src directory (see\nexample below). If you write or use other Lua-based ROS modules you do\nnot need to add them to your package path, as long as the module\'s\ndirectory can be found by roslua (see below about extension modules).\nLikewise C modules are found automatically by roslua.\nExample (no spaces before backslash!).\n export LUA_PATH=""$HOME/ros/local/roslua/src/?/init.lua;""\\\n""$HOME/ros/local/roslua/src/?.lua;""\\\n""/usr/share/lua/5.1/?/init.lua;/usr/share/lua/5.1/?.lua"" export\n\nNote that Lua modules bundled with roslua and written in C have an\nextension of "".luaso"" as to avoid confusion of ROS tools which\notherwise would crash.\n\nOnce the paths are set you can simply call Lua to run your script.\nSee src/examples for example scripts. To run for instance the\nsubscriber and publisher examples, which resemble talker and listener\nfrom the roscpp and rospy tutorials, just call ""lua subscriber.lua""\nand ""lua publisher.lua"" respectively (assuming you have set LUA_PATH\nas adviced above).\n\n\nWriting Extension Modules using roslua\n--------------------------------------\nA natural concern is to write Lua modules based on roslua, providing\nextended functionality, for example actionlib_lua to provide actionlib\nfacilities from Lua. roslua comes with some utility support to make\nthis easier, in particular it adds a module loader that searches for\nLua modules in the ROS universe without having to extend the LUA_PATH\nand LUA_CPATH environment variables for new modules.\n\nWhen a module is loaded, and the regular Lua loaders cannot find the\nmodule, i.e. the module cannot be found by looking at LUA_PATH and\nLUA_CPATH, roslua loaders kick in to look for Lua and C modules. Some\nconstraints apply on how these can be named for the automatic process\nto work. These are as follows.\n\nModules written in plain Lua must reside in a ROS package with the\nname of the Lua package with an optional ""_lua"" suffix. For example\nthe Lua module actionlib is in a ROS package named\nactionlib_lua. Within the ROS package, the files must reside in the\nsrc/ sub-directory with appropriate path names. In the case of\nactionlib for instance, the main module resides in the file\nactionlib_lua/src/actionlib/init.lua. Modules may have the pattern\n?.lua or ?/init.lua, where ? is replaced by the module name (cf. Lua\ndocumentation). C modules must reside in the lib subdirectory the ROS\npackage, have a suffix of .luaso (instead of .so) and may not have the\n""lib"" prefix. To achieve this take the following CMakeLists.txt lines\nas an example:\nset(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)\nset(CMAKE_SHARED_LIBRARY_PREFIX """")\nset(CMAKE_SHARED_LIBRARY_SUFFIX "".luaso"")\nrosbuild_add_library(posix src/lua_modules/lposix.c)\n\nWith this C module residing in the roslua ROS package it can be used\nin Lua with require(""roslua.posix"").  Lua C module names are mapped to\nfile names like the following: Either it is simply the ROS package\nname, in that case a similarly named Lua C module file is searched in\nthe lib sub-directory. Or it is a name separated with a dot, where the\nfirst part is again the ROS package name with an optional _lua\nsuffix. The part after the dot is converted to a filename by replacing\nthe dots with underscores and the file must exist in the lib\nsubdirectory. The luaopen function within the C file must be suffixed\nby the same converted name. It is recommended of using only one\nsub-level, i.e. only one dot in C module names.\n\n\nPerformance comparison\n----------------------\nSome simple performance comparisons have been made using\nactionlib_lua and actionlib_benchmark modules (to be released\nseparately).\n\n# ./cpp_roundtrip_client 100\nSEND   Average: 0.000400    Deviation: 0.000035\nRECV   Average: 0.000311    Deviation: 0.000094\nTOTAL  Average: 0.000711    Deviation: 0.000099\n\n# ./python_roundtrip_client 100\nSEND   Average: 0.000589    Deviation: 0.000043\nRECV   Average: 0.002129    Deviation: 0.000661\nTOTAL  Average: 0.002718    Deviation: 0.000661\n\n# ./lua_roundtrip_client 100\nSEND   Average: 0.000447    Deviation: 0.000116\nRECV   Average: 0.002326    Deviation: 0.001108\nTOTAL  Average: 0.002774    Deviation: 0.001152\n\n\n# ./cpp_roundtrip_client 1000\nSEND   Average: 0.000393    Deviation: 0.000036\nRECV   Average: 0.000269    Deviation: 0.000025\nTOTAL  Average: 0.000662    Deviation: 0.000054\n\n# ./python_roundtrip_client 1000\nSEND   Average: 0.000653    Deviation: 0.000041\nRECV   Average: 0.002178    Deviation: 0.000927\nTOTAL  Average: 0.002831    Deviation: 0.000934\n\n# ./lua_roundtrip_client 1000\nSEND   Average: 0.000517    Deviation: 0.000090\nRECV   Average: 0.003955    Deviation: 0.001797\nTOTAL  Average: 0.004471    Deviation: 0.001814\n\nThe roundtrip client issues a goal with a timestamp initialized on\nsending. The server will set a timestamp in the result message and\nimmediately send the result as soon as possible. The client can then\ncompare the start time, the time it was received by the server and the\ntime it was received by itself to get information about the time spans\nfor sending to the server, receiving from the server, and the total\ntime. The performance data shown above is for sending 100 goals with a\n50ms offset between goals. Since the goal server accumulates goal\nstatus information in the actionlib_msgs/GoalStatusArray message over\ntime the time to process these messages increases linearly over time\nuntil saturation is reached (goals expire at the rate they are sent\nafter the initial timeout has been reached).  For the given scenario\nof 100 concurrent goals (which we consider to be more than required at\nthe moment, given that actions are usually used for macroscopic\nevents), the Lua implementation reaches about the average performance\nof the Python implementation. As the larger deviation shows, the\nmessage processing time increases with an increased number of\nconcurrent goals. At 1000 goals it peaks at about 4.5 ms (C++ 0.7 ms,\nPython 2.8 ms). This is due to crossing the C/Lua boundary for\nunpacking the struct often, and the GoalStatusArray message being\nparticularly bad for performance because it includes strings, and an\narray of another message type, requiring conditional deserialization.\nResults have been produced on an Intel Xeon 3.6 GHz machine with 2 GB\nof RAM against a C++ action server (performance against Python server\nis much worse, Lua server not yet written).\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rosorg,http://rosindex.github.io/r/rosorg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
roslisp_support,http://rosindex.github.io/r/roslisp_support/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rospkg,http://rosindex.github.io/r/rospkg/,fuerte,rospkg,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h2 id=""rospkg"">rospkg</h2>\n\n<p>Standalone Python library for the ROS package system.</p>\n\n<p><a href=""http://docs.ros.org/independent/api/rospkg/html/"">ROS Packages Users/Developers Guide</a></p>\n</div>\n\n            \n          </div>'"
rosserial_java,http://rosindex.github.io/r/rosserial_java/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosserial_android,http://rosindex.github.io/r/rosserial_android/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rostop_gui,http://rosindex.github.io/r/rostop_gui/,groovy,rostop_gui,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rostop_gui"">rostop_gui</h1>\n\n<p>ROS rqt_gui plugin to display ROS process information</p>\n\n<p>This has been moved to <a href=""https://github.com/ros-visualization/rqt_common_plugins"">ros-visualization/rqt_common_plugins</a> under the name rqt_top.</p>\n</div>\n\n            \n          </div>'"
rosspawn,http://rosindex.github.io/r/rosspawn/,electric,rosspawn,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nrosspawn: ROS On-the-fly Node Launcher\n======================================\n\nThis ROS package provides a node that can start and stop other nodes. It is\nintended to be instructed from another node to launch specific nodes.\n\nrosspawn does not try to be another roslaunch. Rather it is meant to provide\ntools for a different use case. During development, nodes are started and\nstopped frequently while people are working on the node. With roslaunch, this\noften means either starting and stopping larger ensembles, or getting a hold\non the controlling machine\'s terminal for a specific node. rosspawn launches\nthe nodes by itself, usually instructed by its companion application\nrosspawn_gui from any of the developer\'s machine. It resembles the way Fawkes\nplugins are loaded and unloaded. While nodes are running, they are monitored\nby rosspawn and status changed are announced. Other developers see if a node\nhas been stopped by someone else.\n\nrosspawn is mostly a proof of concept at this stage. It lacks some important\nfeatures in comparison to roslaunch:\n- It makes the assumption of a static configuration, i.e. parameters cannot\n  be set and must be set by other means at least once until the parameter\n  server is restarted\n- It requireds node binaries with user readable names, currently no\n  description can be provided\n- The code is POSIX (and possibly Linux) specific. It most likely will not\n  work on other operating systems.\n- Nodes are currently not automatically respawn if they die in error.\n\nSince the number of binaries grows big very fast, rosspawn allows to create a\nmodule file which contains the names of the modules which should be announced\nby rosspawn.\n\nThis is a proof of concept implementation and probably not useful in its\ncurrent state. Comments and patches welcome.\n\nRequirements\n------------\nThe following software packages are needed on your system in order to\nuse actionlib_lua. Requirements marked with (*) have specific information\nfurther down below.\n\n- ROS 1.1           http://www.ros.org\n\nUsage\n-----\nRun bin/rosspawn. Then run rosspawn_gui and click on any node name to get it\nstarted or stopped. Usually no modifications are necessary to the nodes.\nNodes which are started without using rosspawn are currently not recognized.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rosworldwind,http://rosindex.github.io/r/rosworldwind/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rtai_integration,http://rosindex.github.io/r/rtai_integration/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rosspawn_gui,http://rosindex.github.io/r/rosspawn_gui/,electric,rosspawn_gui,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nrosspawn_gui: GUI to instruct rosspawn\n======================================\n\nThis ROS package provides a GUI application to instruct and monitor rosspawn.\nIt allows to start and stop nodes by the click of a button, and will\nautomatically update if the state of a node changes, e.g. if someone else\nstarts or stops a node.\n\nThis GUI is based on Fawkes\' plugin GUI. See the rosspawn documentation of\nsome assumptions made and the limits of the current version. This is a proof\nof concept implementation and probably not useful in its current state.\nComments and patches welcome.\n\nRequirements\n------------\nThe following software packages are needed on your system in order to\nuse actionlib_lua. Requirements marked with (*) have specific information\nfurther down below.\n\n- ROS 1.1           http://www.ros.org\n- rosspawn          http://github.com/timn/rosspawn\n\nUsage\n-----\nRun bin/rosspawn. Then run rosspawn_gui and click on any node name to get it\nstarted or stopped. Usually no modifications are necessary to the nodes.\nNodes which are started without using rosspawn are currently not recognized.\nOn initial startup rosspawn_gui gets the list of available nodes. The list\nis not currently updated at run-time.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
rtc-us-ros-pkg-branches,http://rosindex.github.io/r/rtc-us-ros-pkg-branches/,electric,https://svn.code.sf.net/p/rtc-us-ros-pkg/code/branches,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rtc-us-ros-pkg-trunk,http://rosindex.github.io/r/rtc-us-ros-pkg-trunk/,electric,https://svn.code.sf.net/p/rtc-us-ros-pkg/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rtt_common_msgs,http://rosindex.github.io/r/rtt_common_msgs/,"electric,groovy,fuerte","rtt_actionlib_msgs,rtt_diagnostic_msgs,rtt_geometry_msgs,rtt_nav_msgs,rtt_sensor_msgs,rtt_shape_msgs,rtt_stereo_msgs,rtt_trajectory_msgs,rtt_visualization_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rtshell_core,http://rosindex.github.io/r/rtshell_core/,groovy,"rtctree,rtshell,rtshell_core,rtsprofile","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""rtshell_core"">rtshell_core  <a href=""https://travis-ci.org/start-jsk/rtshell_core""><img src=""https://travis-ci.org/start-jsk/rtshell_core.png"" alt=""Build Status""></a>\n</h1>\n\n<p>Metapackage that contains commonly used toolset for RT-Middleware-based modules (namely openrtm_aist_core). Although each of these packages by themselves are ROS-agnostic, you can use them over ROS together with the packages in rtmros_common.</p>\n\n<h1 id=""test-status"">Test Status</h1>\n\n<p><a href=""http://jenkins.ros.org/job/devel-hydro-rtshell_core/"">Hydro</a> <a href=""http://jenkins.ros.org/job/devel-hydro-rtshell_core/""><img src=""http://jenkins.ros.org/job/devel-hydro-rtshell_core/badge/icon"" alt=""Build Status""></a></p>\n\n<p><a href=""http://jenkins.ros.org/job/devel-hydro-rtshell_core/""><img src=""http://jenkins.ros.org/job/devel-hydro-rtshell_core/test/trend"" alt=""Hydro Test Satus""></a></p>\n\n<p><a href=""http://jenkins.ros.org/job/devel-groovy-rtshell_core/"">Groovy</a> <a href=""http://jenkins.ros.org/job/devel-groovy-rtshell_core/""><img src=""http://jenkins.ros.org/job/devel-groovy-rtshell_core/badge/icon"" alt=""Build Status""></a></p>\n\n<p><a href=""http://jenkins.ros.org/job/devel-groovy-rtshell_core/""><img src=""http://jenkins.ros.org/job/devel-groovy-rtshell_core/test/trend"" alt=""Groovy Test Satus""></a></p>\n\n<h1 id=""usage"">Usage</h1>\n\n<h2 id=""get-the-list-of-running-rt-components"">Get the list of running RT components</h2>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun rtshell rtls %HOST_ROBOT%:15005/\n\n</code></pre></div>\n<p>Note that the trailing backslash is required.\n<code>%HOST_ROBOT%</code> is where <code>omniNames</code> and your <code>OpenRTM</code>-based components are running. For example if <code>nextage</code> is where your RT components are running:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun rtshell rtls nextage:15005/\n\n</code></pre></div>\n</div>\n\n            \n          </div>'"
rtt_ros_comm,http://rosindex.github.io/r/rtt_ros_comm/,"electric,groovy,fuerte","rtt_rosgraph_msgs,rtt_std_msgs","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rx,http://rosindex.github.io/r/rx/,"electric,groovy,fuerte","rx,rxbag,rxgraph,rxtools,wxpython_swig_interface,xdot,wxPython_swig_interface,rxdeps,test_rxdeps,test_rxplot,wxswig","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rxdeveloper-ros-pkg,http://rosindex.github.io/r/rxdeveloper-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
rutgers-ros-pkg,http://rosindex.github.io/r/rutgers-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
saliency_detection,http://rosindex.github.io/r/saliency_detection/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sbpl_door_planning,http://rosindex.github.io/r/sbpl_door_planning/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sbpl_arm_planning,http://rosindex.github.io/r/sbpl_arm_planning/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sbpl_dynamic_env,http://rosindex.github.io/r/sbpl_dynamic_env/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
scene_labelling_rgbd,http://rosindex.github.io/r/scene_labelling_rgbd/,electric,"message_sampler,polar_scene,scene_generic,semantic_label_3d","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">code is divided into 2 main folders at top level\n\n\n1) svm-python-v204/\n2) semantic_label_3d/\n\n1 contains the modules for running SVMStruct inference and learning. Please check the README files inside that folder for more details\n\n2 is a ROS package which contains modules for processing pointclouds eg segmentation, stitching, feature generation, live classification. For now, we only support live classification. Check the RAEDME inside that folder for instructions on running live classifier.\n\n\nINSTALLATION\n\n1) our code has many dependencies.  We have provided scripts to install many of them on 64 bit machines running Ubuntu. Run install_dependencies.sh in current folder. Also run semantic_label_3d/installDependencies.sh to install dependencies for our ROS package .(only tested with Diamondback)\n2) Then run make in svm-python-v204/ and semantic_label_3d/.\n\n\nWe have tested our code only on 64 bit machines running Ubuntu and on diamondback release of ROS.\nIt has some issues with the latest electric distribution(which is due to change in pcd format ... PCD files written by diamondback version cannot be read by electric version)\n\n\nIf you face difficulties, contact ""hema"" or ""aa755"" at cs.cornell.edu\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
seabee3-ros-pkg,http://rosindex.github.io/r/seabee3-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
segway-rmp-ros-pkg,http://rosindex.github.io/r/segway-rmp-ros-pkg/,"electric,groovy,fuerte","segway_rmp,joy2twist_segway_rmp,libftd2xx,libsegwayrmp,segway_rmpX,segway_rmp_demos,serial_segway_rmp","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<p><a href=""https://travis-ci.org/segwayrmp/segway-rmp-ros-pkg""><img src=""https://travis-ci.org/segwayrmp/segway-rmp-ros-pkg.png?branch=master"" alt=""Build Status""></a></p>\n</div>\n\n            \n          </div><div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
scout_robot,http://rosindex.github.io/r/scout_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
serial_communication,http://rosindex.github.io/r/serial_communication/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
sicks300,http://rosindex.github.io/r/sicks300/,groovy,sicks300,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""sicks300"">sicks300</h1>\n\n<p>ROS package for reading continuous data output of the SICK S300 Professional laser scanner via RS-422. Note that it supports both the old (v.1.02) and the new (v.1.03) protocol.</p>\n\n<p>Please note that this is an extension of the original ""fuerte"" driver that was developed by the Autonomous Intelligent Systems Department at Bonn University.</p>\n\n<h1 id=""getting-started"">Getting started</h1>\n\n<p>Make sure that all dependencies are satisfied:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosmake sicks300 sicks300\n</code></pre></div>\n<p>Run the node:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">$ rosrun sicks300 sick300_driver\n</code></pre></div>\n<h1 id=""messages"">Messages</h1>\n\n<h2 id=""published-topics"">Published Topics</h2>\n\n<ul>\n<li>\n<p><code>/laserscan (sensor_msgs/LaserScan)</code></p>\n\n<p>Scan data </p>\n</li>\n</ul>\n\n<h2 id=""parameters"">Parameters</h2>\n\n<ul>\n<li>\n<p><code>~frame (String, default: ""base_laser_link"")</code></p>\n\n<p>Laser frame </p>\n</li>\n<li>\n<p><code>~send_transform (int, default: 1)</code></p>\n\n<p>Send Transform from base_link to base_laser_link. </p>\n</li>\n<li>\n<p><code>~tf_x (double, default: 0.115)</code></p>\n\n<p>Transformation along x-axis </p>\n</li>\n<li>\n<p><code>~tf_y (double, default: 0.0)</code></p>\n\n<p>Transformation along y-axis </p>\n</li>\n<li>\n<p><code>~tf_z (double, default: 0.21)</code></p>\n\n<p>Transformation along z-axis </p>\n</li>\n<li>\n<p><code>~field_of_view (int, default: 270)</code></p>\n\n<p>The field of view to publish. The maximum view angle is 270 degrees, setting this to a value lower than 270 will remove the left and right sides of the field of view. </p>\n</li>\n<li>\n<p><code>~devicename (String, default: ""/dev/sick300"")</code></p>\n\n<p>Port connected to laser. </p>\n</li>\n<li>\n<p><code>~baudrate (int, default: 500000)</code></p>\n\n<p>Sets the baud rate</p>\n</li>\n</ul>\n</div>\n\n            \n          </div>'"
serializer,http://rosindex.github.io/r/serializer/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
simple_arms,http://rosindex.github.io/r/simple_arms/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
shared_autonomy,http://rosindex.github.io/r/shared_autonomy/,electric,http://svn.code.sf.net/p/bosch-ros-pkg/code/branches/electric/stacks/shared_autonomy,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
simulator_plumesim,http://rosindex.github.io/r/simulator_plumesim/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
simple_object_capture,http://rosindex.github.io/r/simple_object_capture/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
simple_navigation,http://rosindex.github.io/r/simple_navigation/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
simulator_stage,http://rosindex.github.io/r/simulator_stage/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
siue-ros-pkg,http://rosindex.github.io/r/siue-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
skiller,http://rosindex.github.io/r/skiller/,electric,skiller,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nskiller: Skill Execution and Run-Time environment for ROS\n=========================================================\n\nThis package forms the heart of the behavior engine. It includes a node that,\nwhen run, creates the Lua environment for skill development, execution, and\nmonitoring. It implements a reactive behavior layer, in which arbitrary\nexecution schemes can be implemented. It provides specific tool support to\nemploy the approach of extended hybrid state machines.\n\nRequirements\n------------\nIt builds on utility packages from the behavior_engine stack. Additionally,\nit uses actionlib via actionlib_lua to make use of functionality provided\nby the base system and other ROS nodes.\n\nDocumentation\n-------------\nGuides and howtos are currently work in progress. For now we would like to\nrefer to the example set of skills provided in the herb_skills package.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
smart-robotics-ros-pkg,http://rosindex.github.io/r/smart-robotics-ros-pkg/,electric,"carry_launch,carry_model,carry_navigation,common_smart_ai,common_smart_dashboard,common_smart_drivers,common_smart_nav,common_smart_simulators,eurobot_obstacles,ballista_ai,ballista_arm,ballista_nav,ballista_serial,ballista_vision,celoxia_nav,celoxia_serial,eurobot2013_models,eurobot2014_gros_ai,eurobot2014_gros_arm,eurobot2014_gros_nav,eurobot2014_models,eurobot2014_petit_ai,eurobot2014_petit_nav,eurobot2014_serial,eurobot2014_simulators,gros_moveit_config,eurobot2015_gros_nav,eurobot2015_launch,eurobot2015_models,eurobot2015_petit_ai,eurobot2015_petit_nav,beacon2016,indomptable_ai,indomptable_arm,indomptable_arm_navigation,indomptable_model,indomptable_nav,indomptable_vision,maximus_2dnav,maximus_goals,maximus_nav,maximus_position,maximus_sensors,maximus_setup_tf,neato_teleop_joy,neato_xv11_lds,nestor_arm,nestor_command,nestor_launch,nestor_model,nestor_navigation,odroid_u3,temeraire,my_opencv_tests,test_pcl","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">ROS packages repository of the association SMART (autonomouS Multi Application Robot Team) \n\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
skillgui,http://rosindex.github.io/r/skillgui/,electric,skillgui,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\nskillgui: GUI to instruct and monitor skiller and luaagent\n==========================================================\n\nThis package provides a GUI application to instruct execution of skills, and\nmonitor skills and agents executed using skiller and luaagent. Graphs are\nrendered at run-time using the Graphviz library.\n\nThe SkillGUI is fully functional, but some features are not available, because\nthey have not been reimplemented after porting the SkillGUI from Fawkes.\n\nRequirements\n------------\nIt builds on utility packages from the behavior_engine stack. Additionally,\nit uses actionlib via actionlib_lua to instruct the skiller.\n\nDocumentation\n-------------\nAfter starting the GUI, it will immediately connect to the ROS master. If\na skiller or luaagent instance is registered with the master, it will connect\nautomatically. As new graphs are issued they are displayed in the SkillGUI.\nUse the buttons labeled ""Agent"" and ""Skiller"" to switch between the two.\n\nOn initial connect, the graph view might stay empty if no update is issued by\nskiller or luaagent. Press the rightmost button twice. This will set the graph\nto uncolored and then colored output again and trigger updates to be issued.\n\nIn the entry box at the bottom skill strings can be typed and executed in the\nskiller. Attention, ROS does not prevent multiple writers from ordering\ncommands. So if you order commands and have a luaagent running at the same\ntime erratic behavior might result, potentially harming the robot.\n\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
sound_drivers,http://rosindex.github.io/r/sound_drivers/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
socrob-ros-pkg,http://rosindex.github.io/r/socrob-ros-pkg/,fuerte,"camera_pose_aruco,laser_height,message_pub_tf,quad_motors,quad_position_pixels,quad_save_image,quad_urdf,quad_height,quad_position,imu_parser,quad_OF,quad_PX4,quad_can_driver,quad_esc,quad_fp,quad_link,quad_status,telemetry_settings,quad_launch,socrob_multicast","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""socrob-ros-pkg"">socrob-ros-pkg</h1>\n\n<p>ROS stacks for the SocRob team (Institute for Systems and Robotics, Instituto Superior Tecnico, Portugal)\nURL: <a href=""http://socrob.isr.ist.utl.pt"">http://socrob.isr.ist.utl.pt</a></p>\n\n<p>This repository is divided into three stacks:\n- soccer-msl: soccer robots of the RoboCup middle size league\n- raposa: tracked wheel platform for search and rescue operations, involved in RoboCup robot rescue league\n- quads: quadrotors platform</p>\n\n<p>--\nMaintainers:\n  Rodrigo Ventura <a href=""mailto:rodrigo.ventura@isr.ist.utl.pt"">rodrigo.ventura@isr.ist.utl.pt</a>\n  Jo\xc3\xa3o Reis <a href=""mailto:joaocgreis@gmail.com"">joaocgreis@gmail.com</a>\n  Filipe Jesus <a href=""mailto:filipemoj@gmail.com"">filipemoj@gmail.com</a>\n  Henrique Silva</p>\n</div>\n\n            \n          </div>'"
sphero_ros,http://rosindex.github.io/r/sphero_ros/,groovy,"sphero_bringup,sphero_description,sphero_driver,sphero_node","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""sphero_ros"">sphero_ros</h1>\n\n<p>checkout the <a href=""http://mmwise.github.com/sphero_ros"">docs</a></p>\n\n<p>=======</p>\n\n<h2 id=""installation"">Installation</h2>\n\n<p>Installation is now based on catkin:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">  cd &lt;ws&gt;/src\n  git clone https://github.com/mmwise/sphero_ros\n  cd &lt;ws&gt;\n  catkin_make\n  catkin_make install\n  source &lt;ws&gt;/install/setup.bash\n  ...\n</code></pre></div>\n</div>\n\n            \n          </div>'"
srs_common,http://rosindex.github.io/r/srs_common/,"electric,fuerte",srs_object_database_msgs,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">\n\n</code></pre></div></div>\n\n            \n          </div>'"
starmac-ros-pkg,http://rosindex.github.io/r/starmac-ros-pkg/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
stereo_webcam,http://rosindex.github.io/r/stereo_webcam/,electric,stereo_webcam,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">Interesting Links\n=================\n\n - http://sszymczy.rootnode.net/index.php?menu=projects&amp;submenu=webcamsync2&amp;subsub=PS3Eye[Original VSYNC Hack]: Modification instructions for the original hardware revision.\n - http://www.instructables.com/id/The-EyeWriter-20/step9/Hacking-the-PS-Eye-camera-VSync/[Updated VSYNC Hack]: Includes instructions for both the original and second hardware revisions.\n - http://nuigroup.com/forums/viewthread/2953/[Original Teardown]: Teardown and IR filter removal for the original hardware revision.\n - http://codelaboratories.com/research/view/ps3-eye-disassembly[Updated Teardown]: Teardown and IR filter removal for the second hardware revision.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
stanford-ros-pkg,http://rosindex.github.io/r/stanford-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
srs_public,http://rosindex.github.io/r/srs_public/,"electric,groovy,fuerte","cob_spacenav_teleop,srs_arm_navigation_tests,srs_assisted_arm_navigation,srs_assisted_arm_navigation_msgs,srs_assisted_arm_navigation_ui,srs_assisted_detection,srs_assisted_grasping,srs_assisted_grasping_msgs,srs_assisted_grasping_ui,srs_body_detector,srs_decision_making,srs_decision_making_interface,srs_env_model,srs_env_model_msgs,srs_env_model_percp,srs_env_model_ui,srs_env_model_utils,srs_environments,srs_grasping,srs_human_sensing,srs_interaction_primitives,srs_knowledge,srs_leg_detector,srs_likelihood_calculation,srs_msgs,srs_object_verification,srs_pellet,srs_people_tracking_filter,srs_scenarios,srs_states,srs_symbolic_grounding,srs_training,srs_ui_but,srs_user_tests","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is a repository for SRS software.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
summit-xl-ros-stack,http://rosindex.github.io/r/summit-xl-ros-stack/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
structure_coloring_fkie,http://rosindex.github.io/r/structure_coloring_fkie/,fuerte,structure_coloring_fkie,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
surveyor,http://rosindex.github.io/r/surveyor/,electric,surveyor,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
summit-ros-pkg,http://rosindex.github.io/r/summit-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
swri-ros-pkg,http://rosindex.github.io/r/swri-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tekniker_telepresence,http://rosindex.github.io/r/tekniker_telepresence/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tedusar_ros_pkg,http://rosindex.github.io/r/tedusar_ros_pkg/,groovy,"tedusar_daf_path_follower,tedusar_nav_msgs","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""tedusar_ros_pkg"">tedusar_ros_pkg</h1>\n</div>\n\n            \n          </div>'"
symbolic_planning,http://rosindex.github.io/r/symbolic_planning/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_common,http://rosindex.github.io/r/telekyb_common/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_algo,http://rosindex.github.io/r/telekyb_algo/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_deps,http://rosindex.github.io/r/telekyb_deps/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_behaviors,http://rosindex.github.io/r/telekyb_behaviors/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_haptics,http://rosindex.github.io/r/telekyb_haptics/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_exp,http://rosindex.github.io/r/telekyb_exp/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_drivers,http://rosindex.github.io/r/telekyb_drivers/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_main,http://rosindex.github.io/r/telekyb_main/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_sensors,http://rosindex.github.io/r/telekyb_sensors/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_swarm,http://rosindex.github.io/r/telekyb_swarm/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
teo_robot,http://rosindex.github.io/r/teo_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
telekyb_utils,http://rosindex.github.io/r/telekyb_utils/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
text_locator,http://rosindex.github.io/r/text_locator/,groovy,text_locator,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""text_locator"">text_locator</h1>\n\n<p>text_locator is a ROS package that can detect and recognize text in images from the MS kinect / Asus Xtion sensors. Also, it can give you spatial information about the text, ie. where the text is in the 3D space, with respect to the sensor.</p>\n\n<h2 id=""usage"">usage</h2>\n\n<p>Install the package from this repo by downloading it to your workspace and running catkin_make.</p>\n\n<p>Then download the CCV library from <a href=""http://libccv.org/doc/doc-swt/"">here</a> and compile it. The result will be a static library file, libccv.a. Copy this file to the /lib folder of the package.</p>\n\n<p>To compile CCV, extract the tarball, cd to [extractedCCV]/lib folder and run ./configure followed by make. When configuring, the \'swscale\' is the only component that is needed. The other compilation options (enable SSE2, use openmp etc..) are optional.</p>\n\n<p>Launch the node by running</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roslaunch text_locator text_locator.launch\n</code></pre></div>\n<p>Note that before using, you need to install and set up Tesseract OCR, which should be available from your package manager.</p>\n\n<h2 id=""output"">output</h2>\n\n<p>The output of the node is advertised on text_locator_topic. The message contains the following information:</p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">Header\nCoordinates of the upper left corner of detected text region in the 3D space\nCoordinates of the lower right corner of detected text region in the 3D space\nRecognized text\n</code></pre></div>\n<h2 id=""settings"">settings</h2>\n\n<p>The launchfile contains some parameters you may want to change:</p>\n\n<p>enable_pcl - \nEnables the spatial information. If disabled, you will only get the recognized text. True by default.</p>\n\n<p>enable_param_debug - \nIf enabled, the node will write an image with the detection result to your home directory. You can use it to fine-tune the parameters of the detector or just observe the results. Currently, changing the detection parameters is only available from the sources. False by default. Note that normally the node does not write any images to your drive.</p>\n\n<p>lang - \nLanguage for tesseract to expect. This is always a three-character code.Tesseract supports a number of <a href=""https://code.google.com/p/tesseract-ocr/downloads/list"">languages</a>. Set to ""eng"" by default.</p>\n\n<p>page_mode - \nTesseract page mode. Tells tesseract whether to expect a character, a word, a whole line, etc. Defined <a href=""https://code.google.com/p/tesseract-ocr/source/browse/trunk/ccstruct/publictypes.h#151"">here</a>. Set to ""PSM_SINGLE_LINE"" by default.</p>\n\n<h2 id=""general-information"">general information</h2>\n\n<p>When used out of the box, the detection algorithm uses its default parameters and the recognition works best for words consisting of large characters (about 4 cm in height) which are positioned horizontally, facing the sensor and up to about 3 m from it (when using VGA resolution). Keep in mind that the depth sensor has limited range and the spatial information will contain NaNs if the object is too close. Use standard fonts. The text published in the message is the raw output from Tesseract OCR and it may look like a completely random character sequence. There is no preprocessing of the image.</p>\n\n<h2 id=""acknowledgements"">acknowledgements</h2>\n\n<p>The code builds upon:</p>\n\n<p><a href=""http://libccv.org/"">CCV</a> computer vision library for text detection.</p>\n\n<p><a href=""https://code.google.com/p/tesseract-ocr/"">Tesseract OCR</a> for text recognition.</p>\n</div>\n\n            \n          </div>'"
thermalvis-ros-pkg,http://rosindex.github.io/r/thermalvis-ros-pkg/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tibi_dabo_robot,http://rosindex.github.io/r/tibi_dabo_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tidyup_robot,http://rosindex.github.io/r/tidyup_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
trajectory_filters,http://rosindex.github.io/r/trajectory_filters/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
topological_navigation,http://rosindex.github.io/r/topological_navigation/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
transflective_perception,http://rosindex.github.io/r/transflective_perception/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tuc-ros-pkg,http://rosindex.github.io/r/tuc-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tue_utils,http://rosindex.github.io/r/tue_utils/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tum-ros-pkg,http://rosindex.github.io/r/tum-ros-pkg/,"electric,groovy",https://svn.code.sf.net/p/tum-ros-pkg/code,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tulip_simulator,http://rosindex.github.io/r/tulip_simulator/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
tug_ist_model_based_diagnosis,http://rosindex.github.io/r/tug_ist_model_based_diagnosis/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
turbo-ros-pkg,http://rosindex.github.io/r/turbo-ros-pkg/,electric,selected_points_publisher,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""turbo-ros-pkg"">turbo-ros-pkg</h1>\n\n<p>ROS software repository, Robotics &amp; Biology Laboratory, TU Berlin</p>\n</div>\n\n            \n          </div>'"
two_lwr_robot,http://rosindex.github.io/r/two_lwr_robot/,"groovy,fuerte","velma_bringup,velma_description,velma_machine","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ubc-ros-pkg,http://rosindex.github.io/r/ubc-ros-pkg/,electric,https://svn.code.sf.net/p/ubc-ros-pkg/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ua-ros-pkg,http://rosindex.github.io/r/ua-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
uc3m-socialrobots,http://rosindex.github.io/r/uc3m-socialrobots/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ucsb-ros-pkg,http://rosindex.github.io/r/ucsb-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
ueyecamera,http://rosindex.github.io/r/ueyecamera/,electric,ueyecamera,"b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">A ROS node for the uEye USB camera from IDS Imaging Development Systems\n=======================================================================\n\nYogesh Girdhar &lt;yogesh@cim.mcgill.ca&gt;\nWilliam J Beksi &lt;beksi@cs.umn.edu&gt;\n\nSource:\nhg clone https://bitbucket.org/yogeshgirdhar/ueyecamera\n\nThe following parameters are supported:\n- cameraid: Sets the camera ID, 0 means the first available camera \n  (default = 0).\n- width: Width of the image (default = 640).\n- height: Height of the image (default = 480).\n- rate: Camera image publishing rate (default = 5 Hz).\n- left: If the image width is less than the max_width supported by the sensor, \n  then this parameter sets the left position of the image. If not set, then the \n  image is automatically positioned at the center of the sensor.\n- top: If the image height is less than the max_height supported by the sensor, \n  then this parameter sets the top position of the image. If not set, then image \n  is automatically positioned at the center of the sensor.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
uji-ros-pkg,http://rosindex.github.io/r/uji-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
uncertain_tf,http://rosindex.github.io/r/uncertain_tf/,"electric,groovy",uncertain_tf,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
unizar-rt-wmp-ros-pkg,http://rosindex.github.io/r/unizar-rt-wmp-ros-pkg/,"electric,groovy,fuerte","ros_rt_wmp,ros_rt_wmp_msgs,ros_rt_wmp_sniffer","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">All the software provided is supplied \'as is\' and all use is at your own\nrisk. We disclaims all warranties of any kind, either express or implied as\nto the software. Neither this agreement nor any documentation furnished under\nit is intended to express or imply any warranty that the operation of the\nsoftware will be uninterrupted, timely, or error\xe2\x80\x90free.\n\n</code></pre></div></div>\n\n            \n          </div>'"
uos-camera_umd,http://rosindex.github.io/r/uos-camera_umd/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
usc-clmc-ros-pkg,http://rosindex.github.io/r/usc-clmc-ros-pkg/,"diamondback,electric,groovy,fuerte","dmp_behavior_actions,dmp_behaviors,dmp_launch,dynamic_movement_primitive,dynamic_movement_primitive_controller_test,dynamic_movement_primitive_gui,dynamic_movement_primitive_utilities,locally_weighted_regression,skill_library,task_msgs,lwpr_lib,lwpr_old,shogun,task_event_detector,task_label_gui,task_monitor,task_monitor_gui,task_recorder,task_recorder2,task_recorder2_file_io,task_recorder2_msgs,task_recorder2_utilities,task_signal_processor,alsa_audio,fmod_audio,constrained_inverse_kinematics,distance_field,learnable_cost_function,qp_spline_smoother,stomp,stomp_ros_interface,grasp_template,grasp_template_planning,tabletop_segmenter,policy_improvement,policy_improvement_loop,policy_improvement_loop_test,policy_learning_tools,policy_library,policy_msgs,task_manager,pr2_dmp_data,pr2_recorder_data,pr2_dynamic_movement_primitive_controller,pr2_dynamic_movement_primitive_gui,pr2_launch,pr2_task_recorder,pr2_task_recorder2,pr2_template_based_grasping,bspline,conversions,gui_utilities,inverse_kinematics,jacobian_utilities,quadprog,robot_info,usc_utilities,visualization_utilities,lwpr,stomp_motion_planner,allocators,lockfree,rosatomic,rosrt,splines,qpOASES","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This repository contains packages developed by the Computational Learning and Motor Control Lab at the University of Southern California.\n\nhttp://www-clmc.usc.edu/\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
usc-ros-pkg,http://rosindex.github.io/r/usc-ros-pkg/,electric,https://svn.code.sf.net/p/usc-ros-pkg/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
utexas-art-ros-pkg,http://rosindex.github.io/r/utexas-art-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
utexas,http://rosindex.github.io/r/utexas/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
uuisrc-ros-pkg,http://rosindex.github.io/r/uuisrc-ros-pkg/,electric,"arm_track,dynamic_window,potential_fields,schunk_gui,schunk_kinematics,velocity_safety,person_grabber,pointcloud_compress,empty_pointcloud,move_arm_goal,schunk_arm_kinematics_constraint_aware,schunk_planning,arm_hand_splitter,joint_fusion,metralabs_ros,player_camera,player_interface,laser_to_pointcloud,pcl_tests,surf,libvicon,vicon_nodes","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">This is the GIT repositoroy of the University of Ulster Intelligent Systems Research Centre ROS Stack.\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
uuisrc-pr2-pkgs,http://rosindex.github.io/r/uuisrc-pr2-pkgs/,electric,"good_pr2_local_nav,learn_actions,pr2_control_gui,pr2_control_utilities,pr2_trajectory_markers,tabletop_actions","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown""><div class=""highlight""><pre><code class=""language-"" data-lang="""">ROS packages for the PR2 of the University of Ulster, Intelligent Systems Research Centre, Cognitive Robotics Team.\n\nAuthors: Lorenzo Riano &lt;lorenzo.riano@berkeley.edu&gt;\nYiannis Gatsoulis &lt;i.gatsoulis@ulster.ac.uk&gt;\n\nhttp://isrc.ulster.ac.uk/Cognitive-Robotics-Team/Home.html\n\n\n</code></pre></div></div>\n\n            \n          </div>'"
v4lstack,http://rosindex.github.io/r/v4lstack/,electric,http://git.code.sf.net/p/v4lstack/code,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
vanadium-ros-pkg,http://rosindex.github.io/r/vanadium-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
vanderbilt_ros,http://rosindex.github.io/r/vanderbilt_ros/,groovy,"gui_command,p2os_enableMotor,p2os_master_launch,tcp_command","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""vanderbit-ros-pkg"">Vanderbit-ROS-pkg</h1>\n\n<p>The Vanderbilt University ROS package repository.\nMaintained by: Hunter Allen <a href=""mailto:Hunter.Allen@Vanderbilt.Edu"">Hunter.Allen@Vanderbilt.Edu</a></p>\n\n<h1 id=""gui_command"">gui_command</h1>\n\n<p>A utility to control the pioneer robots and view their locations. </p>\n\n<h1 id=""p2os"">p2os</h1>\n\n<p>Modified to work with ROS groovy. The stack has a <a href=""https://github.com/allenh1/p2os"">home</a> of its own.</p>\n\n<h1 id=""tcp_command"">tcp_command</h1>\n\n<p>Listens to tcp for commands to the robot for people who don\'t know c++.</p>\n</div>\n\n            \n          </div>'"
v4r,http://rosindex.github.io/r/v4r/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
vcstools,http://rosindex.github.io/r/vcstools/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
viaflo_pipette,http://rosindex.github.io/r/viaflo_pipette/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
veltrop-ros-pkg,http://rosindex.github.io/r/veltrop-ros-pkg/,electric,https://svn.code.sf.net/p/veltrop-ros-pkg/code/trunk/veltrop-ros-pkg,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
visp,http://rosindex.github.io/r/visp/,,,b''
visualization,http://rosindex.github.io/r/visualization/,"groovy,fuerte","visualization,interactive_markers,rviz,rxbag_plugins","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
visualization_common,http://rosindex.github.io/r/visualization_common/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
visualization_engine,http://rosindex.github.io/r/visualization_engine/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
visualization_experimental,http://rosindex.github.io/r/visualization_experimental/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
web_interface,http://rosindex.github.io/r/web_interface/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
vslam,http://rosindex.github.io/r/vslam/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
vrmagic_camera,http://rosindex.github.io/r/vrmagic_camera/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
webmap,http://rosindex.github.io/r/webmap/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wg_common,http://rosindex.github.io/r/wg_common/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
webots-ros-pkg,http://rosindex.github.io/r/webots-ros-pkg/,electric,http://svn.code.sf.net/p/webots-ros-pkg/code/,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
websocket_gui,http://rosindex.github.io/r/websocket_gui/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wg_hardware_test,http://rosindex.github.io/r/wg_hardware_test/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wg_robots_gazebo,http://rosindex.github.io/r/wg_robots_gazebo/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wg_pr2_apps,http://rosindex.github.io/r/wg_pr2_apps/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
whole_body_control,http://rosindex.github.io/r/whole_body_control/,electric,"wbc_core,wbc_m3_ctrl,wbc_msgs,wbc_pr2_ctrl,wbc_urdf,wbc_uta_opspace","b'<div class=""panel-body"">\n            \n              \n<div class=""rendered-markdown"">\n<h1 id=""whole-body-control-ros-stack"">Whole-Body Control ROS Stack</h1>\n\n<p>The Whole-Body Control framework developed at the <a href=""http://cs.stanford.edu/groups/manips/"">Stanford Robotics\nand AI Lab</a> provides advanced control for human-centered\nrobotics and mobile manipulation.  This project provides a framework\nfor developing robot behaviors that use operational-space hierarchical\ntask decompositions, based on the work of many contributors over many\nyears, under the guidance of and in collaboration with <a href=""http://cs.stanford.edu/groups/manips/people/oussama-khatib"">Oussama\nKhatib</a>: most notably <a href=""http://plaza4.snu.ac.kr/%7Epark73/wiki/index.php5/People"">Jaeheung Park</a>, K. C. Chang, Diego Ruspini,\n<a href=""http://users.cecs.anu.edu.au/%7Eroy/"">Roy Featherstone</a>, Bob Holmberg, <a href=""http://cs.stanford.edu/groups/manips/people/francois-conti"">Francois Conti</a>, <a href=""http://cs.stanford.edu/groups/manips/people/roland-philippsen"">Roland\nPhilippsen</a> and <a href=""http://www.me.utexas.edu/directory/faculty/sentis/luis/"">Luis Sentis</a>.</p>\n\n<p>The integration of Stanford-WBC as a PR2-specific plugin in ROS\nstarted in late 2009, as part of a project at the <a href=""http://cs.stanford.edu/groups/manips/"">Stanford Robotics\nand AI Lab</a> which was supported by <a href=""http://www.willowgarage.com/"">Willow Garage</a>. The\naim of this project was to perform whole-body control in <a href=""http://www.willowgarage.com/pages/pr2/overview"">PR2</a>: in\nlate 2010 we finalized a first release on PR2 that enables compliant\ncontrol of operational tasks in the end effectors while controlling\ncompliant postures in the null-space of the task. In early 2011 we\nachieved first results with heuristics to take into account motor\ntorque limitations, integrate motion of the mobile base, and other\nPR2-specific characteristics.</p>\n\n<p>In the meantime, we have added support for the <a href=""http://mekabot.com/"">Meka Robot</a> at\nthe <a href=""http://www.me.utexas.edu/%7Ehcrl/"">Human-Centered Robotics Group (HCRL)</a> of the University of\nTexas at Austin. The long term objective of HCRL\'s developments within\nROS is to provide an easy to reuse framework for creating new\ncompliant whole-body behavior by composing existing ones and adding\nnew custom tasks, for any mobile manipulator that can be used with\ntorque control.</p>\n\n<h1 id=""installation"">Installation</h1>\n\n<ol>\n<li><p>install <a href=""http://www.ros.org/wiki/ROS/Installation"">ROS</a>\n(you will need PR2-specific stacks, including PR2 simulator)</p></li>\n<li>\n<p>clone the stack repos into your <code>ROS_PACKAGE_PATH</code>, e.g. in <code>~/ros/stacks</code></p>\n\n<ul>\n<li>cd ~/ros/stacks</li>\n<li>git clone git://github.com/poftwaresatent/whole_body_control.git</li>\n</ul>\n</li>\n<li>\n<p>build it using <code>rosmake</code></p>\n\n<ul>\n<li>rosmake</li>\n</ul>\n</li>\n</ol>\n\n<h2 id=""stack-contents"">Stack Contents</h2>\n\n<ul>\n<li><p><code>wbc_msgs</code> provides ROS <a href=""http://www.ros.org/wiki/msg"">message</a> and <a href=""http://www.ros.org/wiki/srv"">service</a> types.  It\nhas very few dependencies, and thus helps with keeping other\npackages decoupled from each other.</p></li>\n<li><p><code>wbc_core</code> is a ROS wrapper around the core <a href=""https://github.com/poftwaresatent/stanford_wbc"">stanford_wbc</a>\nlibrary. This core is based on earlier work at Stanford University,\nmost notably the TAO dynamics engine, and is kept entirely\nindependent of ROS.</p></li>\n<li><p><code>wbc_uta_opspace</code> is a ROS wrapper around the operational space\nextensions, developed at UT Austin, to the core Stanford_WBC\noperational space library. It is taken from the ROS-independent code\nbase in the <a href=""https://github.com/poftwaresatent/utaustin-wbc"">UT Austin Whole-Body Control project</a>.</p></li>\n<li><p><code>wbc_urdf</code> contains code for converting rigid body dynamic models\nfrom <a href=""http://www.ros.org/wiki/urdf"">URDF</a> descriptions to the representation used by\nstanford_wbc, along with a few other utilities.</p></li>\n<li><p><code>wbc_pr2_ctrl</code> implements <a href=""http://www.ros.org/wiki/pr2_controller_interface"">pr2_controller_interface</a> plugins\nand related utilities to actually control PR2 (or any other robot\nthat uses the pr2_controller_interface approach).</p></li>\n<li><p><code>wbc_m3_ctrl</code> uses the torque-shared-memory mode provided by Meka to\ncontrol their M3 arm. It implements an <a href=""http://www.rtai.org/"">RTAI</a> executable and ROS\nbindings in the form of messages and service.</p></li>\n</ul>\n\n<h1 id=""run-the-pr2-task-nullspace-posture-example-in-gazebo"">Run the PR2 Task / Nullspace-Posture Example in Gazebo</h1>\n\n<p>After successfully installing ROS and building the\n<code>whole_body_control</code> stack, in particular the <code>wbc_pr2_ctrl</code> package,\nyou can run the following example of whole-body operational space\ncontrol. It is a ""minimal"" example in the sense that it contains two\ntasks (a Cartesian end-effector position and a joint-space posture)\nand that their interaction is hardcoded (you cannot easily change the\ntask hierarchy at runtime). Nevertheless, this is a complete example\nof <strong>dynamically consistent nullspace projection</strong> techniques, which are\nthe foundations for the power and expressiveness of the whole-body\ncontroller.</p>\n\n<p>This example is implemented in the\n<code>wbc_pr2_ctrl/src/opspace_servo.cpp</code> file. You can also use that as-is\nfor real-time execution on the physical PR2. The <code>opspace_servo</code> uses\nthe freshly designed and implemented <strong>runtime configuration and\nparameter reflection</strong> capabilities of the UT Austin opspace library,\nwhich allows changing the tasks and skills at startup time using a\nYAML file, and lets us modify goals, gains, and other parameters while\nthe controller is running. These are all quite nifty features which we\nare excited to share with the community.</p>\n\n<p><strong>1. Launch PR2 in Gazebo</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roscd wbc_pr2_ctrl/launch\nroslaunch pr2_gazebo.launch\n</code></pre></div>\n<p><strong>2. Launch the WBC pump plugin</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roscd wbc_pr2_ctrl/launch\nroslaunch pr2_pump_plugin.launch\n</code></pre></div>\n<p><strong>3. Launch the WBC opspace controller</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">roscd wbc_pr2_ctrl/launch\nroslaunch pr2_opspace.launch\n</code></pre></div>\n<p><strong>4. List services and messages</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rostopic list | fgrep opspace\nrosservice list | fgrep opspace\n</code></pre></div>\n<p><strong>5. Get and set end-effector trajectory goal using service</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /opspace_servo/get_param \'{ com_type: task, com_name: eepos, param_name: trjgoal }\'\nrosservice call /opspace_servo/set_param \'{ com_type: task, com_name: eepos, param: { name: trjgoal, type: 4, realval: [0.6, 0.1, 1.0] } }\'\nrosservice call /opspace_servo/set_param \'{ com_type: task, com_name: eepos, param: { name: trjgoal, type: 4, realval: [0.7, -0.1, 0.8] } }\'\n</code></pre></div>\n<p><strong>6. Set end-effector trajectory goal using message (param channel)</strong></p>\n<div class=""highlight""><pre><code class=""language-"" data-lang="""">rosservice call /opspace_servo/open_channel \'{ com_type: task, com_name: eepos, param_name: trjgoal }\'\n(note the channel_id in the reply, it will probably be 0)\nrostopic pub -1 /opspace_servo/vector_channel wbc_msgs/VectorChannel \'{ channel_id: 0, value: [0.5, -0.1, 0.8] }\'\nrostopic pub -1 /opspace_servo/vector_channel wbc_msgs/VectorChannel \'{ channel_id: 0, value: [0.5, 0.1, 0.8] }\'\n</code></pre></div>\n</div>\n\n            \n          </div>'"
warehousewg,http://rosindex.github.io/r/warehousewg/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wifi_drivers,http://rosindex.github.io/r/wifi_drivers/,"electric,groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wifibot,http://rosindex.github.io/r/wifibot/,electric,https://svn.code.sf.net/p/roswifibot/code/trunk,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wifi_tools,http://rosindex.github.io/r/wifi_tools/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wire,http://rosindex.github.io/r/wire/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wpdros,http://rosindex.github.io/r/wpdros/,electric,"arm_navigation_tutorials,simple_armstack_goals,wpd_arm_nav,wpdps1,wpdtb","b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wpi-rail-ros-pkg,http://rosindex.github.io/r/wpi-rail-ros-pkg/,electric,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
worldmodel,http://rosindex.github.io/r/worldmodel/,"electric,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
wu-ros-pkg,http://rosindex.github.io/r/wu-ros-pkg/,electric,https://svn.code.sf.net/p/wu-ros-pkg/code/externals/wu-ros-pkg,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
x52_joyext,http://rosindex.github.io/r/x52_joyext/,,,b''
xsens_reader,http://rosindex.github.io/r/xsens_reader/,,,b''
zeroconf_android,http://rosindex.github.io/r/zeroconf_android/,"groovy,fuerte",,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
youbot_oodl,http://rosindex.github.io/r/youbot_oodl/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
youbot_overhead_cameras,http://rosindex.github.io/r/youbot_overhead_cameras/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
zyonz_robot,http://rosindex.github.io/r/zyonz_robot/,fuerte,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
youbot_teleop,http://rosindex.github.io/r/youbot_teleop/,groovy,,"b'<div class=""panel-body"">\n            \n              <em>No README found.</em>\n            \n          </div>'"
